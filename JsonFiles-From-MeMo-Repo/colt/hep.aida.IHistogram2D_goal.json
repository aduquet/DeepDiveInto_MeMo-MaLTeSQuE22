[
  {
    "signature": "binEntries(int indexX, int indexY)",
    "name": "binEntries",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "binEntries(int indexX, int indexY)",
      "comment": "The number of entries (ie the number of times fill was called for this bin).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binEntriesX(int indexX)",
    "name": "binEntriesX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      }
    ],
    "equivalence": {
      "member": "binEntriesX(int indexX)",
      "comment": "Equivalent to projectionX().binEntries(indexX).",
      "kind": "FreeText",
      "condition": "methodResultID==(receiverObjectClone.projectionX().binEntries(args[0]))"
    }
  },
  {
    "signature": "binEntriesY(int indexY)",
    "name": "binEntriesY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "binEntriesY(int indexY)",
      "comment": "Equivalent to projectionY().binEntries(indexY).",
      "kind": "FreeText",
      "condition": "methodResultID==(receiverObjectClone.projectionY().binEntries(args[0]))"
    }
  },
  {
    "signature": "binError(int indexX, int indexY)",
    "name": "binError",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "binError(int indexX, int indexY)",
      "comment": "The error on this bin.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binHeight(int indexX, int indexY)",
    "name": "binHeight",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "binHeight(int indexX, int indexY)",
      "comment": "Total height of the corresponding bin (ie the sum of the weights in this bin).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binHeightX(int indexX)",
    "name": "binHeightX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      }
    ],
    "equivalence": {
      "member": "binHeightX(int indexX)",
      "comment": "Equivalent to projectionX().binHeight(indexX).",
      "kind": "FreeText",
      "condition": "methodResultID==(receiverObjectClone.projectionX().binHeight(args[0]))"
    }
  },
  {
    "signature": "binHeightY(int indexY)",
    "name": "binHeightY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "binHeightY(int indexY)",
      "comment": "Equivalent to projectionY().binHeight(indexY).",
      "kind": "FreeText",
      "condition": "methodResultID==(receiverObjectClone.projectionY().binHeight(args[0]))"
    }
  },
  {
    "signature": "fill(double x, double y)",
    "name": "fill",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      }
    ],
    "equivalence": {
      "member": "fill(double x, double y)",
      "comment": "Fill the histogram with weight 1.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "fill(double x, double y, double weight)",
    "name": "fill",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "weight"
      }
    ],
    "equivalence": {
      "member": "fill(double x, double y, double weight)",
      "comment": "Fill the histogram with specified weight.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "meanX()",
    "name": "meanX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "meanX()",
      "comment": "Returns the mean of the histogram, as calculated on filling-time projected on the X axis.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "meanY()",
    "name": "meanY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "meanY()",
      "comment": "Returns the mean of the histogram, as calculated on filling-time projected on the Y axis.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "minMaxBins()",
    "name": "minMaxBins",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [],
    "equivalence": {
      "member": "minMaxBins()",
      "comment": "Indexes of the in-range bins containing the smallest and largest binHeight(), respectively.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "projectionX()",
    "name": "projectionX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "projectionX()",
      "comment": "Create a projection parallel to the X axis. Equivalent to sliceX(UNDERFLOW,OVERFLOW).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "projectionY()",
    "name": "projectionY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "projectionY()",
      "comment": "Create a projection parallel to the Y axis. Equivalent to sliceY(UNDERFLOW,OVERFLOW).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rmsX()",
    "name": "rmsX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "rmsX()",
      "comment": "Returns the rms of the histogram as calculated on filling-time projected on the X axis.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rmsY()",
    "name": "rmsY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "rmsY()",
      "comment": "Returns the rms of the histogram as calculated on filling-time projected on the Y axis.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sliceX(int indexY)",
    "name": "sliceX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY"
      }
    ],
    "equivalence": {
      "member": "sliceX(int indexY)",
      "comment": "Slice parallel to the Y axis at bin indexY and one bin wide. Equivalent to sliceX(indexY,indexY).",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.sliceX(args[0],args[0]))"
    }
  },
  {
    "signature": "sliceX(int indexY1, int indexY2)",
    "name": "sliceX",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY1"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexY2"
      }
    ],
    "equivalence": {
      "member": "sliceX(int indexY1, int indexY2)",
      "comment": "Create a slice parallel to the axis X axis, between \"indexY1\" and \"indexY2\" (inclusive). The returned IHistogram1D represents an instantaneous snapshot of the histogram at the time the slice was created.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "sliceY(int indexX)",
    "name": "sliceY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX"
      }
    ],
    "equivalence": {
      "member": "sliceY(int indexX)",
      "comment": "Slice parallel to the X axis at bin indexX and one bin wide. Equivalent to sliceY(indexX,indexX).",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.sliceY(args[0],args[0]))"
    }
  },
  {
    "signature": "sliceY(int indexX1, int indexX2)",
    "name": "sliceY",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IHistogram1D",
      "name": "hep.aida.IHistogram1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX1"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "indexX2"
      }
    ],
    "equivalence": {
      "member": "sliceY(int indexX1, int indexX2)",
      "comment": "Create a slice parallel to the axis Y axis, between \"indexX1\" and \"indexX2\" (inclusive) The returned IHistogram1D represents an instantaneous snapshot of the histogram at the time the slice was created.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "xAxis()",
    "name": "xAxis",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IAxis",
      "name": "hep.aida.IAxis",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "xAxis()",
      "comment": "Return the X axis.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "yAxis()",
    "name": "yAxis",
    "containingClass": {
      "qualifiedName": "hep.aida.IHistogram2D",
      "name": "IHistogram2D",
      "isArray": false
    },
    "targetClass": "hep.aida.IHistogram2D",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "hep.aida.IAxis",
      "name": "hep.aida.IAxis",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "yAxis()",
      "comment": "Return the Y axis.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]