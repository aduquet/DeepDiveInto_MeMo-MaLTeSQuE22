[
  {
    "signature": "cern.jet.stat.Probability()",
    "name": "cern.jet.stat.Probability",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "member": "cern.jet.stat.Probability()",
      "comment": "Makes this class non instantiable, but still let's others inherit from it.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "beta(double a, double b, double x)",
    "name": "beta",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "beta(double a, double b, double x)",
      "comment": "Returns the area from zero to x under the beta density function.  x - - | (a+b) | | a-1 b-1 P(x) = ---------- | t (1-t) dt - - | | | (a) | (b) - 0  This function is identical to the incomplete beta integral function Gamma.incompleteBeta(a, b, x). The complemented function is 1 - P(1-x) = Gamma.incompleteBeta( b, a, x );",
      "kind": "FreeText",
      "condition": "methodResultID==Gamma.incompleteBeta(args[0], args[1], args[2])"
    }
  },
  {
    "signature": "betaComplemented(double a, double b, double x)",
    "name": "betaComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "betaComplemented(double a, double b, double x)",
      "comment": "Returns the area under the right hand tail (from x to infinity) of the beta density function. This function is identical to the incomplete beta integral function Gamma.incompleteBeta(b, a, x).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binomial(int k, int n, double p)",
    "name": "binomial",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "equivalence": {
      "member": "binomial(int k, int n, double p)",
      "comment": "Returns the sum of the terms 0 through k of the Binomial probability density.  k -- ( n ) j n-j > ( ) p (1-p) -- ( j ) j=0  The terms are not summed directly; instead the incomplete beta integral is employed, according to the formula  y = binomial( k, n, p ) = Gamma.incompleteBeta( n-k, k+1, 1-p ).  All arguments must be positive,",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "binomialComplemented(int k, int n, double p)",
    "name": "binomialComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "equivalence": {
      "member": "binomialComplemented(int k, int n, double p)",
      "comment": "Returns the sum of the terms k+1 through n of the Binomial probability density.  n -- ( n ) j n-j > ( ) p (1-p) -- ( j ) j=k+1  The terms are not summed directly; instead the incomplete beta integral is employed, according to the formula  y = binomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n-k, p ).  All arguments must be positive,",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "chiSquare(double v, double x)",
    "name": "chiSquare",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "v"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "chiSquare(double v, double x)",
      "comment": "Returns the area under the left hand tail (from 0 to x) of the Chi square probability density function with v degrees of freedom.  inf. - 1 | | v/2-1 -t/2 P( x | v ) = ----------- | t e dt v/2 - | | 2 | (v/2) - x  where x is the Chi-square variable.  The incomplete gamma integral is used, according to the formula  y = chiSquare( v, x ) = incompleteGamma( v/2.0, x/2.0 ).  The arguments must both be positive.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "chiSquareComplemented(double v, double x)",
    "name": "chiSquareComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "v"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "chiSquareComplemented(double v, double x)",
      "comment": "Returns the area under the right hand tail (from x to infinity) of the Chi square probability density function with v degrees of freedom.  inf. - 1 | | v/2-1 -t/2 P( x | v ) = ----------- | t e dt v/2 - | | 2 | (v/2) - x  where x is the Chi-square variable. The incomplete gamma integral is used, according to the formula y = chiSquareComplemented( v, x ) = incompleteGammaComplement( v/2.0, x/2.0 ). The arguments must both be positive.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "errorFunction(double x)",
    "name": "errorFunction",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "errorFunction(double x)",
      "comment": "Returns the error function of the normal distribution; formerly named erf. The integral is  x - 2 | | 2 erf(x) = -------- | exp( - t ) dt. sqrt(pi) | | - 0  Implementation: For 0 <= |x| < 1, erf(x) = x * P4(x**2)/Q5(x**2); otherwise erf(x) = 1 - erfc(x).  Code adapted from the Java 2D Graph Package 2.4, which in turn is a port from the Cephes 2.2 Math Library (C).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "errorFunctionComplemented(double a)",
    "name": "errorFunctionComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "equivalence": {
      "member": "errorFunctionComplemented(double a)",
      "comment": "Returns the complementary Error function of the normal distribution; formerly named erfc.  1 - erf(x) = inf. - 2 | | 2 erfc(x) = -------- | exp( - t ) dt sqrt(pi) | | - x  Implementation: For small x, erfc(x) = 1 - erf(x); otherwise rational approximations are computed.  Code adapted from the Java 2D Graph Package 2.4, which in turn is a port from the Cephes 2.2 Math Library (C).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "gamma(double a, double b, double x)",
    "name": "gamma",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "gamma(double a, double b, double x)",
      "comment": "Returns the integral from zero to x of the gamma probability density function.  x b - a | | b-1 -at y = ----- | t e dt - | | | (b) - 0  The incomplete gamma integral is used, according to the relation y = Gamma.incompleteGamma( b, a*x ).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "gammaComplemented(double a, double b, double x)",
    "name": "gammaComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "gammaComplemented(double a, double b, double x)",
      "comment": "Returns the integral from x to infinity of the gamma probability density function:  inf. b - a | | b-1 -at y = ----- | t e dt - | | | (b) - x  The incomplete gamma integral is used, according to the relation  y = Gamma.incompleteGammaComplement( b, a*x ).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "negativeBinomial(int k, int n, double p)",
    "name": "negativeBinomial",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "equivalence": {
      "member": "negativeBinomial(int k, int n, double p)",
      "comment": "Returns the sum of the terms 0 through k of the Negative Binomial Distribution.  k -- ( n+j-1 ) n j > ( ) p (1-p) -- ( j ) j=0  In a sequence of Bernoulli trials, this is the probability that k or fewer failures precede the n-th success.  The terms are not computed individually; instead the incomplete beta integral is employed, according to the formula  y = negativeBinomial( k, n, p ) = Gamma.incompleteBeta( n, k+1, p ). All arguments must be positive,",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "negativeBinomialComplemented(int k, int n, double p)",
    "name": "negativeBinomialComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "equivalence": {
      "member": "negativeBinomialComplemented(int k, int n, double p)",
      "comment": "Returns the sum of the terms k+1 to infinity of the Negative Binomial distribution.  inf -- ( n+j-1 ) n j > ( ) p (1-p) -- ( j ) j=k+1  The terms are not computed individually; instead the incomplete beta integral is employed, according to the formula  y = negativeBinomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n, 1-p ). All arguments must be positive,",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normal(double a)",
    "name": "normal",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "equivalence": {
      "member": "normal(double a)",
      "comment": "Returns the area under the Normal (Gaussian) probability density function, integrated from minus infinity to x (assumes mean is zero, variance is one).  x - 1 | | 2 normal(x) = --------- | exp( - t /2 ) dt sqrt(2pi) | | - -inf. = ( 1 + erf(z) ) / 2 = erfc(z) / 2  where z = x/sqrt(2). Computation is via the functions errorFunction and errorFunctionComplement.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normal(double mean, double variance, double x)",
    "name": "normal",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "mean"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "variance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "equivalence": {
      "member": "normal(double mean, double variance, double x)",
      "comment": "Returns the area under the Normal (Gaussian) probability density function, integrated from minus infinity to x.  x - 1 | | 2 normal(x) = --------- | exp( - (t-mean) / 2v ) dt sqrt(2pi*v)| | - -inf.  where v = variance. Computation is via the functions errorFunction.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normalInverse(double y0)",
    "name": "normalInverse",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "y0"
      }
    ],
    "equivalence": {
      "member": "normalInverse(double y0)",
      "comment": "Returns the value, x, for which the area under the Normal (Gaussian) probability density function (integrated from minus infinity to x) is equal to the argument y (assumes mean is zero, variance is one); formerly named ndtri.  For small arguments 0 < y < exp(-2), the program computes z = sqrt( -2.0 * log(y) ); then the approximation is x = z - log(z)/z - (1/z) P(1/z) / Q(1/z). There are two rational functions P/Q, one for 0 < y < exp(-32) and the other for y up to exp(-2). For larger arguments, w = y - 0.5, and x/sqrt(2pi) = w + w**3 R(w**2)/S(w**2)).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poisson(int k, double mean)",
    "name": "poisson",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "mean"
      }
    ],
    "equivalence": {
      "member": "poisson(int k, double mean)",
      "comment": "Returns the sum of the first k terms of the Poisson distribution.  k j -- -m m > e -- -- j! j=0  The terms are not summed directly; instead the incomplete gamma integral is employed, according to the relation  y = poisson( k, m ) = Gamma.incompleteGammaComplement( k+1, m ). The arguments must both be positive.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "poissonComplemented(int k, double mean)",
    "name": "poissonComplemented",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "mean"
      }
    ],
    "equivalence": {
      "member": "poissonComplemented(int k, double mean)",
      "comment": "Returns the sum of the terms k+1 to Infinity of the Poisson distribution.  inf. j -- -m m > e -- -- j! j=k+1  The terms are not summed directly; instead the incomplete gamma integral is employed, according to the formula  y = poissonComplemented( k, m ) = Gamma.incompleteGamma( k+1, m ). The arguments must both be positive.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "studentT(double k, double t)",
    "name": "studentT",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "k"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "equivalence": {
      "member": "studentT(double k, double t)",
      "comment": "Returns the integral from minus infinity to t of the Student-t distribution with k > 0 degrees of freedom.  t - | | - | 2 -(k+1)/2 | ( (k+1)/2 ) | ( x ) ---------------------- | ( 1 + --- ) dx - | ( k ) sqrt( k pi ) | ( k/2 ) | | | - -inf.  Relation to incomplete beta integral:  1 - studentT(k,t) = 0.5 * Gamma.incompleteBeta( k/2, 1/2, z ) where z = k/(k + t**2).  Since the function is symmetric about t=0, the area under the right tail of the density is found by calling the function with -t instead of t.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "studentTInverse(double alpha, int size)",
    "name": "studentTInverse",
    "containingClass": {
      "qualifiedName": "cern.jet.stat.Probability",
      "name": "Probability",
      "isArray": false
    },
    "targetClass": "cern.jet.stat.Probability",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "alpha"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "equivalence": {
      "member": "studentTInverse(double alpha, int size)",
      "comment": "Returns the value, t, for which the area under the Student-t probability density function (integrated from minus infinity to t) is equal to 1-alpha/2. The value returned corresponds to usual Student t-distribution lookup table for t<sub>alpha[size]</sub>.  The function uses the studentT function to determine the return value iteratively.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]