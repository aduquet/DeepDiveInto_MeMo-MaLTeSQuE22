[
  {
    "signature": "org.hibernate.criterion.Example(java.lang.Object exampleEntity, org.hibernate.criterion.Example$PropertySelector selector)",
    "name": "org.hibernate.criterion.Example",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "exampleEntity"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.Example$PropertySelector",
          "name": "PropertySelector",
          "isArray": false
        },
        "name": "selector"
      }
    ],
    "equivalence": {
      "member": "org.hibernate.criterion.Example(java.lang.Object exampleEntity, org.hibernate.criterion.Example$PropertySelector selector)",
      "comment": "Allow subclasses to instantiate as needed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create(java.lang.Object exampleEntity)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "exampleEntity"
      }
    ],
    "equivalence": {
      "member": "create(java.lang.Object exampleEntity)",
      "comment": "Create a new Example criterion instance, which includes all non-null properties by default",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEscapeCharacter(java.lang.Character escapeCharacter)",
    "name": "setEscapeCharacter",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Character",
          "name": "Character",
          "isArray": false
        },
        "name": "escapeCharacter"
      }
    ],
    "equivalence": {
      "member": "setEscapeCharacter(java.lang.Character escapeCharacter)",
      "comment": "Set escape character for \"like\" clause if like matching was enabled",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "enableLike()",
    "name": "enableLike",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "enableLike()",
      "comment": "Use the \"like\" operator for all string-valued properties. This form implicitly uses MatchMode#EXACT",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "enableLike(org.hibernate.criterion.MatchMode matchMode)",
    "name": "enableLike",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.MatchMode",
          "name": "MatchMode",
          "isArray": false
        },
        "name": "matchMode"
      }
    ],
    "equivalence": {
      "member": "enableLike(org.hibernate.criterion.MatchMode matchMode)",
      "comment": "Use the \"like\" operator for all string-valued properties",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "ignoreCase()",
    "name": "ignoreCase",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "ignoreCase()",
      "comment": "Ignore case for all string-valued properties",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setPropertySelector(org.hibernate.criterion.Example$PropertySelector selector)",
    "name": "setPropertySelector",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.Example$PropertySelector",
          "name": "PropertySelector",
          "isArray": false
        },
        "name": "selector"
      }
    ],
    "equivalence": {
      "member": "setPropertySelector(org.hibernate.criterion.Example$PropertySelector selector)",
      "comment": "Set the property selector to use. The property selector operates separate from excluding a property.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "excludeZeroes()",
    "name": "excludeZeroes",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "excludeZeroes()",
      "comment": "Exclude zero-valued properties. Equivalent to calling #setPropertySelector passing in NotNullOrZeroPropertySelector#INSTANCE",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "excludeNone()",
    "name": "excludeNone",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "excludeNone()",
      "comment": "Include all properties. Equivalent to calling #setPropertySelector passing in AllPropertySelector#INSTANCE",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "excludeProperty(java.lang.String name)",
    "name": "excludeProperty",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "org.hibernate.criterion.Example",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "equivalence": {
      "member": "excludeProperty(java.lang.String name)",
      "comment": "Exclude a particular property by name.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSqlString(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
    "name": "toSqlString",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.hibernate.Criteria",
          "name": "Criteria",
          "isArray": false
        },
        "name": "criteria"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.CriteriaQuery",
          "name": "CriteriaQuery",
          "isArray": false
        },
        "name": "criteriaQuery"
      }
    ],
    "equivalence": {
      "member": "toSqlString(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTypedValues(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
    "name": "getTypedValues",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.engine.spi.TypedValue[]",
      "name": "org.hibernate.engine.spi.TypedValue[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.hibernate.Criteria",
          "name": "Criteria",
          "isArray": false
        },
        "name": "criteria"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.CriteriaQuery",
          "name": "CriteriaQuery",
          "isArray": false
        },
        "name": "criteriaQuery"
      }
    ],
    "equivalence": {
      "member": "getTypedValues(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addPropertyTypedValue(java.lang.Object value, org.hibernate.type.Type type, java.util.List<org.hibernate.engine.spi.TypedValue> list)",
    "name": "addPropertyTypedValue",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.type.Type",
          "name": "Type",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "list"
      }
    ],
    "equivalence": {
      "member": "addPropertyTypedValue(java.lang.Object value, org.hibernate.type.Type type, java.util.List<org.hibernate.engine.spi.TypedValue> list)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addComponentTypedValues(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, java.util.List<org.hibernate.engine.spi.TypedValue> list, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
    "name": "addComponentTypedValues",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "path"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "component"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.type.CompositeType",
          "name": "CompositeType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "list"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.Criteria",
          "name": "Criteria",
          "isArray": false
        },
        "name": "criteria"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.CriteriaQuery",
          "name": "CriteriaQuery",
          "isArray": false
        },
        "name": "criteriaQuery"
      }
    ],
    "equivalence": {
      "member": "addComponentTypedValues(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, java.util.List<org.hibernate.engine.spi.TypedValue> list, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "appendPropertyCondition(java.lang.String propertyName, java.lang.Object propertyValue, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery cq, java.lang.StringBuilder buf)",
    "name": "appendPropertyCondition",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "propertyValue"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.Criteria",
          "name": "Criteria",
          "isArray": false
        },
        "name": "criteria"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.CriteriaQuery",
          "name": "CriteriaQuery",
          "isArray": false
        },
        "name": "cq"
      },
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "buf"
      }
    ],
    "equivalence": {
      "member": "appendPropertyCondition(java.lang.String propertyName, java.lang.Object propertyValue, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery cq, java.lang.StringBuilder buf)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "appendComponentCondition(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery, java.lang.StringBuilder buf)",
    "name": "appendComponentCondition",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "path"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "component"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.type.CompositeType",
          "name": "CompositeType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.Criteria",
          "name": "Criteria",
          "isArray": false
        },
        "name": "criteria"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.criterion.CriteriaQuery",
          "name": "CriteriaQuery",
          "isArray": false
        },
        "name": "criteriaQuery"
      },
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "buf"
      }
    ],
    "equivalence": {
      "member": "appendComponentCondition(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery, java.lang.StringBuilder buf)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.hibernate.criterion.Example",
      "name": "Example",
      "isArray": false
    },
    "targetClass": "org.hibernate.criterion.Example",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]