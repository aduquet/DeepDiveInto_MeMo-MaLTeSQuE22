[
  {
    "signature": "org.hibernate.engine.spi.SubselectFetch(java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",
    "name": "org.hibernate.engine.spi.SubselectFetch",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "alias"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.persister.entity.Loadable",
          "name": "Loadable",
          "isArray": false
        },
        "name": "loadable"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.engine.spi.QueryParameters",
          "name": "QueryParameters",
          "isArray": false
        },
        "name": "queryParameters"
      },
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "resultingEntityKeys"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "namedParameterLocMap"
      }
    ],
    "equivalence": {
      "member": "org.hibernate.engine.spi.SubselectFetch(java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",
      "comment": "Construct a SubselectFetch instance. The subselect fetch query fragment is generated by #createSubselectFetchQueryFragment. If the same value for queryParameters is to be used when constructing multiple SubselectFetch objects, then it is preferable to generate the subselect fetch query fragment using #createSubselectFetchQueryFragment, and pass the result as an argument to constructor #SubselectFetch(String, String, Loadable, QueryParameters, Set, Map).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.hibernate.engine.spi.SubselectFetch(java.lang.String subselectFetchQueryFragment, java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",
    "name": "org.hibernate.engine.spi.SubselectFetch",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "subselectFetchQueryFragment"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "alias"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.persister.entity.Loadable",
          "name": "Loadable",
          "isArray": false
        },
        "name": "loadable"
      },
      {
        "type": {
          "qualifiedName": "org.hibernate.engine.spi.QueryParameters",
          "name": "QueryParameters",
          "isArray": false
        },
        "name": "queryParameters"
      },
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "resultingEntityKeys"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "namedParameterLocMap"
      }
    ],
    "equivalence": {
      "member": "org.hibernate.engine.spi.SubselectFetch(java.lang.String subselectFetchQueryFragment, java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",
      "comment": "Construct a SubselectFetch instance using the provided subselect fetch query fragment, subselectFetchQueryFragment. It is assumed that subselectFetchQueryFragment is the result of calling #createSubselectFetchQueryFragment with the same value provided for queryParameters.",
      "kind": "FreeText",
      "condition": "methodResultID.equals(org.hibernate.engine.spi.SubselectFetch.createSubselectFetchQueryFragment(args[3]))"
    }
  },
  {
    "signature": "createSubselectFetchQueryFragment(org.hibernate.engine.spi.QueryParameters queryParameters)",
    "name": "createSubselectFetchQueryFragment",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.hibernate.engine.spi.QueryParameters",
          "name": "QueryParameters",
          "isArray": false
        },
        "name": "queryParameters"
      }
    ],
    "equivalence": {
      "member": "createSubselectFetchQueryFragment(org.hibernate.engine.spi.QueryParameters queryParameters)",
      "comment": "Create the subselect fetch query fragment for the provided QueryParameters with SELECT and ORDER BY clauses removed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getQueryParameters()",
    "name": "getQueryParameters",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.hibernate.engine.spi.QueryParameters",
      "name": "org.hibernate.engine.spi.QueryParameters",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "getQueryParameters()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getResult()",
    "name": "getResult",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set",
      "name": "java.util.Set",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "getResult()",
      "comment": "Get the Set of EntityKeys",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toSubselectString(java.lang.String ukname)",
    "name": "toSubselectString",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "ukname"
      }
    ],
    "equivalence": {
      "member": "toSubselectString(java.lang.String ukname)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNamedParameterLocMap()",
    "name": "getNamedParameterLocMap",
    "containingClass": {
      "qualifiedName": "org.hibernate.engine.spi.SubselectFetch",
      "name": "SubselectFetch",
      "isArray": false
    },
    "targetClass": "org.hibernate.engine.spi.SubselectFetch",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map",
      "name": "java.util.Map",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "getNamedParameterLocMap()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]