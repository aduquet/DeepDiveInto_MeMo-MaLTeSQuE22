[
  {
    "signature": "isDefaultContext()",
    "name": "isDefaultContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns true if the current context is the default context.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putTransient(java.lang.String key, java.lang.Object value)",
    "name": "putTransient",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "equivalence": {
      "comment": "Puts a transient header object into this context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.common.util.concurrent.ThreadContext(org.elasticsearch.common.settings.Settings settings)",
    "name": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.settings.Settings",
          "name": "Settings",
          "isArray": false
        },
        "name": "settings"
      }
    ],
    "equivalence": {
      "comment": "Creates a new ThreadContext instance",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeTo(org.elasticsearch.common.io.stream.StreamOutput out)",
    "name": "writeTo",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.io.stream.StreamOutput",
          "name": "StreamOutput",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "wrapRestorable(org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext storedContext)",
    "name": "wrapRestorable",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.function.Supplier<org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext>",
      "name": "java.util.function.Supplier<org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
          "name": "StoredContext",
          "isArray": false
        },
        "name": "storedContext"
      }
    ],
    "equivalence": {
      "comment": "Same as #newRestorableContext(boolean) but wraps an existing context to restore.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addResponseHeader(java.lang.String key, java.lang.String value, java.util.function.Function<java.lang.String, java.lang.String> uniqueValue)",
    "name": "addResponseHeader",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "java.util.function.Function",
          "name": "Function",
          "isArray": false
        },
        "name": "uniqueValue"
      }
    ],
    "equivalence": {
      "comment": "Add the value for the specified key with the specified uniqueValue used for de-duplication. Any duplicate value after applying uniqueValue is ignored.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getHeaders()",
    "name": "getHeaders",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.String, java.lang.String>",
      "name": "java.util.Map<java.lang.String, java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns all of the request contexts headers",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "markAsSystemContext()",
    "name": "markAsSystemContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Marks this thread context as an internal system context. This signals that actions in this context are issued by the system itself rather than by a user action.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isSystemContext()",
    "name": "isSystemContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns true iff this context is a system context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getTransient(java.lang.String key)",
    "name": "getTransient",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "equivalence": {
      "comment": "Returns a transient header object or null if there is no header for the given key",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stashContext()",
    "name": "stashContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "name": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Removes the current context and resets a default context. The removed context can be restored when closing the returned StoredContext",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getResponseHeaders()",
    "name": "getResponseHeaders",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.String, java.util.List<java.lang.String>>",
      "name": "java.util.Map<java.lang.String, java.util.List<java.lang.String>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Get a copy of all response headers.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putHeader(java.lang.String key, java.lang.String value)",
    "name": "putHeader",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "equivalence": {
      "comment": "Puts a header into the context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "stashAndMergeHeaders(java.util.Map<java.lang.String, java.lang.String> headers)",
    "name": "stashAndMergeHeaders",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "name": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "equivalence": {
      "comment": "Removes the current context and resets a new context that contains a merge of the current headers and the given headers. The removed context can be restored when closing the returned StoredContext. The merge strategy is that headers that are already existing are preserved unless they are defaults.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "newStoredContext(boolean preserveResponseHeaders)",
    "name": "newStoredContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "name": "org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "preserveResponseHeaders"
      }
    ],
    "equivalence": {
      "comment": "Just like #stashContext() but no default context is set.",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.stashContext())"
    }
  },
  {
    "signature": "getHeader(java.lang.String key)",
    "name": "getHeader",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "equivalence": {
      "comment": "Returns the header for the given key or null if not present",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putHeader(java.util.Map<java.lang.String, java.lang.String> header)",
    "name": "putHeader",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "header"
      }
    ],
    "equivalence": {
      "comment": "Puts all of the given headers into this context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isClosed()",
    "name": "isClosed",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns true if the context is closed, otherwise true",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "newRestorableContext(boolean preserveResponseHeaders)",
    "name": "newRestorableContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.function.Supplier<org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext>",
      "name": "java.util.function.Supplier<org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "preserveResponseHeaders"
      }
    ],
    "equivalence": {
      "comment": "Returns a supplier that gathers a #newStoredContext(boolean) and restores it once the returned supplier is invoked. The context returned from the supplier is a stored version of the suppliers callers context that should be restored once the originally gathered context is not needed anymore. For instance this method should be used like this:  Supplier<ThreadContext.StoredContext> restorable = context.newRestorableContext(true); new Thread() { public void run() { try (ThreadContext.StoredContext ctx = restorable.get()) { // execute with the parents context and restore the threads context afterwards } } }.start();",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "readHeaders(org.elasticsearch.common.io.stream.StreamInput in)",
    "name": "readHeaders",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.elasticsearch.common.io.stream.StreamInput",
          "name": "StreamInput",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "equivalence": {
      "comment": "Reads the headers from the stream into the current context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyHeaders(java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.lang.String>> headers)",
    "name": "copyHeaders",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "equivalence": {
      "comment": "Copies all header key, value pairs into the current context",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addResponseHeader(java.lang.String key, java.lang.String value)",
    "name": "addResponseHeader",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "equivalence": {
      "comment": "Add the value for the specified key Any duplicate value is ignored.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "preserveContext(java.lang.Runnable command)",
    "name": "preserveContext",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Runnable",
      "name": "java.lang.Runnable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "command"
      }
    ],
    "equivalence": {
      "comment": "Saves the current thread context and wraps command in a Runnable that restores that context before running command. If command has already been passed through this method then it is returned unaltered rather than wrapped twice.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "unwrap(java.lang.Runnable command)",
    "name": "unwrap",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.util.concurrent.ThreadContext",
      "name": "ThreadContext",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.util.concurrent.ThreadContext",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Runnable",
      "name": "java.lang.Runnable",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Runnable",
          "name": "Runnable",
          "isArray": false
        },
        "name": "command"
      }
    ],
    "equivalence": {
      "comment": "Unwraps a command that was previously wrapped by #preserveContext(Runnable).",
      "kind": "FreeText",
      "condition": ""
    }
  }
]