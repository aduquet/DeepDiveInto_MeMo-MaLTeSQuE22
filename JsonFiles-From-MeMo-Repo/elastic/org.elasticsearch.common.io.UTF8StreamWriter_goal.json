[
  {
    "signature": "org.elasticsearch.common.io.UTF8StreamWriter()",
    "name": "org.elasticsearch.common.io.UTF8StreamWriter",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "comment": "Creates a UTF-8 writer having a byte buffer of moderate capacity (2048).",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(char[] cbuf, int off, int len)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "cbuf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "equivalence": {
      "comment": "Writes a portion of an array of characters.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Flushes the stream. If the stream has saved any characters from the various write() methods in a buffer, write them immediately to their intended destination. Then, if that destination is another character or byte stream, flush it. Thus one flush() invocation will flush all the buffers in a chain of Writers and OutputStreams.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(java.lang.String str, int off, int len)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "equivalence": {
      "comment": "Writes a portion of a string.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(java.lang.CharSequence csq)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "csq"
      }
    ],
    "equivalence": {
      "comment": "Writes the specified character sequence.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Closes and #reset resets this writer for reuse.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.elasticsearch.common.io.UTF8StreamWriter(int capacity)",
    "name": "org.elasticsearch.common.io.UTF8StreamWriter",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      }
    ],
    "equivalence": {
      "comment": "Creates a UTF-8 writer having a byte buffer of specified capacity.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "write(char c)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "equivalence": {
      "comment": "Writes a single character. This method supports 16-bits character surrogates.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOutput(java.io.OutputStream out)",
    "name": "setOutput",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "org.elasticsearch.common.io.UTF8StreamWriter",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "equivalence": {
      "comment": "Sets the output stream to use for writing until this writer is closed. For example:[code] Writer writer = new UTF8StreamWriter().setOutputStream(out); [/code] is equivalent but writes faster than [code] Writer writer = new java.io.OutputStreamWriter(out, \"UTF-8\"); [/code]",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "reset()",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setOutputStream(java.io.OutputStream out)",
    "name": "setOutputStream",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "org.elasticsearch.common.io.UTF8StreamWriter",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "equivalence": {
      "comment": "@deprecated Replaced by #setOutput(OutputStream)",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectID.equalssetOutput(args[0]))"
    }
  },
  {
    "signature": "write(int code)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.elasticsearch.common.io.UTF8StreamWriter",
      "name": "UTF8StreamWriter",
      "isArray": false
    },
    "targetClass": "org.elasticsearch.common.io.UTF8StreamWriter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "code"
      }
    ],
    "equivalence": {
      "comment": "Writes a character given its 31-bits Unicode.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]