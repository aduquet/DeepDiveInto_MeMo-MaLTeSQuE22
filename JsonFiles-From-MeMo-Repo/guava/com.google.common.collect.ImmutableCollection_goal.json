[
  {
    "signature": "toArray(T[] other)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "other"
      }
    ],
    "equivalence": {
      "member": "toArray(T[] other)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.ImmutableCollection()",
    "name": "com.google.common.collect.ImmutableCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "member": "com.google.common.collect.ImmutableCollection()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAll(java.util.Collection<?> oldElements)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "oldElements"
      }
    ],
    "equivalence": {
      "member": "removeAll(java.util.Collection<?> oldElements)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addAll(java.util.Collection<? extends E> newElements)",
    "name": "addAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "newElements"
      }
    ],
    "equivalence": {
      "member": "addAll(java.util.Collection<? extends E> newElements)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object object)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "equivalence": {
      "member": "remove(java.lang.Object object)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "clear()",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "asList()",
    "name": "asList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<E>",
      "name": "com.google.common.collect.ImmutableList<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "asList()",
      "comment": "Returns an ImmutableList containing the same elements, in the same order, as this collection. Performance note: in most cases this method can return quickly without actually copying anything. The exact circumstances under which the copy is performed are undefined and subject to change.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object object)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "contains(java.lang.Object object)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E e)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e"
      }
    ],
    "equivalence": {
      "member": "add(E e)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "retainAll(java.util.Collection<?> elementsToKeep)",
    "name": "retainAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "elementsToKeep"
      }
    ],
    "equivalence": {
      "member": "retainAll(java.util.Collection<?> elementsToKeep)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isPartialView()",
    "name": "isPartialView",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "isPartialView()",
      "comment": "Returns true if this immutable collection's implementation contains references to user-created objects that aren't accessible via this collection's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.UnmodifiableIterator<E>",
      "name": "com.google.common.collect.UnmodifiableIterator<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "iterator()",
      "comment": "Returns an unmodifiable iterator across the elements in this collection.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyIntoArray(java.lang.Object[] dst, int offset)",
    "name": "copyIntoArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "dst"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "equivalence": {
      "member": "copyIntoArray(java.lang.Object[] dst, int offset)",
      "comment": "Copies the contents of this immutable collection into the specified array at the specified offset. Returns offset + size().",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeReplace()",
    "name": "writeReplace",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "writeReplace()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toArray()",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "java.lang.Object[]",
      "isArray": true
    },
    "parameters": [],
    "equivalence": {
      "member": "toArray()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createAsList()",
    "name": "createAsList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableCollection",
      "name": "ImmutableCollection",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableCollection",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<E>",
      "name": "com.google.common.collect.ImmutableList<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createAsList()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]