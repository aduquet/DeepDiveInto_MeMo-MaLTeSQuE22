[
  {
    "signature": "createUnmodifiableEmptyCollection()",
    "name": "createUnmodifiableEmptyCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createUnmodifiableEmptyCollection()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "entries()",
    "name": "entries",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<java.util.Map$Entry<K, V>>",
      "name": "java.util.Set<java.util.Map$Entry<K, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "entries()",
      "comment": "{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createCollection()",
    "name": "createCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createCollection()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAll(java.lang.Object key)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "removeAll(java.lang.Object key)",
      "comment": "{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "put(K key, V value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "put(K key, V value)",
      "comment": "Stores a key-value pair in the multimap.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(K key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "get(K key)",
      "comment": "{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "equals(java.lang.Object object)",
      "comment": "Compares the specified object to this multimap for equality. Two SetMultimap instances are equal if, for each key, they contain the same values. Equality does not depend on the ordering of keys or values.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.AbstractSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",
    "name": "com.google.common.collect.AbstractSetMultimap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "equivalence": {
      "member": "com.google.common.collect.AbstractSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",
      "comment": "Creates a new multimap that uses the provided map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "asMap()",
    "name": "asMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<K, java.util.Collection<V>>",
      "name": "java.util.Map<K, java.util.Collection<V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "asMap()",
      "comment": "{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has Set values.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
    "name": "replaceValues",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractSetMultimap",
      "name": "AbstractSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<V>",
      "name": "java.util.Set<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "equivalence": {
      "member": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
      "comment": "{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]