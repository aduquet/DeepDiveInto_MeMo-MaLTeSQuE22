[
  {
    "signature": "of(K k1, V v1, K k2, V v2, K k3, V v3)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v3"
      }
    ],
    "equivalence": {
      "member": "of(K k1, V v1, K k2, V v2, K k3, V v3)",
      "comment": "Returns an immutable multimap containing the given entries, in order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "builder()",
    "name": "builder",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap$Builder<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap$Builder<K, V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "builder()",
      "comment": "Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(K k1, V v1)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v1"
      }
    ],
    "equivalence": {
      "member": "of(K k1, V v1)",
      "comment": "Returns an immutable multimap containing a single entry.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k4"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v4"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k5"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v5"
      }
    ],
    "equivalence": {
      "member": "of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",
      "comment": "Returns an immutable multimap containing the given entries, in order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",
    "name": "copyOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Multimap",
          "name": "Multimap",
          "isArray": false
        },
        "name": "multimap"
      }
    ],
    "equivalence": {
      "member": "copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",
      "comment": "Returns an immutable multimap containing the same mappings as multimap. The generated multimap's key and value orderings correspond to the iteration ordering of the multimap.asMap() view. Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
    "name": "replaceValues",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<V>",
      "name": "com.google.common.collect.ImmutableList<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "equivalence": {
      "member": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
      "comment": "Guaranteed to throw an exception and leave the multimap unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.ImmutableListMultimap(com.google.common.collect.ImmutableMap<K, com.google.common.collect.ImmutableList<V>> map, int size)",
    "name": "com.google.common.collect.ImmutableListMultimap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.ImmutableMap",
          "name": "ImmutableMap",
          "isArray": false
        },
        "name": "map"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "equivalence": {
      "member": "com.google.common.collect.ImmutableListMultimap(com.google.common.collect.ImmutableMap<K, com.google.common.collect.ImmutableList<V>> map, int size)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(K key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<V>",
      "name": "com.google.common.collect.ImmutableList<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "get(K key)",
      "comment": "Returns an immutable list of the values for the given key. If no mappings in the multimap have the provided key, an empty immutable list is returned. The values are in the same order as the parameters used to build this multimap.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",
    "name": "copyOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "entries"
      }
    ],
    "equivalence": {
      "member": "copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",
      "comment": "Returns an immutable multimap containing the specified entries. The returned multimap iterates over keys in the order they were first encountered in the input, and the values for each key are iterated in the order they were encountered.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k4"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v4"
      }
    ],
    "equivalence": {
      "member": "of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",
      "comment": "Returns an immutable multimap containing the given entries, in order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(K k1, V v1, K k2, V v2)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "k2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v2"
      }
    ],
    "equivalence": {
      "member": "of(K k1, V v1, K k2, V v2)",
      "comment": "Returns an immutable multimap containing the given entries, in order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of()",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "name": "com.google.common.collect.ImmutableListMultimap<K, V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "of()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAll(java.lang.Object key)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<V>",
      "name": "com.google.common.collect.ImmutableList<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "equivalence": {
      "member": "removeAll(java.lang.Object key)",
      "comment": "Guaranteed to throw an exception and leave the multimap unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "inverse()",
    "name": "inverse",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap",
      "name": "ImmutableListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableListMultimap<V, K>",
      "name": "com.google.common.collect.ImmutableListMultimap<V, K>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "inverse()",
      "comment": "{@inheritDoc} Because an inverse of a list multimap can contain multiple pairs with the same key and value, this method returns an ImmutableListMultimap rather than the ImmutableMultimap specified in the ImmutableMultimap class.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]