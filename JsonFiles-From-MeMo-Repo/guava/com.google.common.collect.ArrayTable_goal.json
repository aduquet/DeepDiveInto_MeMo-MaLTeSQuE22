[
  {
    "signature": "column(C columnKey)",
    "name": "column",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<R, V>",
      "name": "java.util.Map<R, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "equivalence": {
      "comment": "Returns a view of all mappings that have the given column key. If the column key isn't in columnKeySet(), an empty immutable map is returned. <p>Otherwise, for each row key in rowKeySet(), the returned map associates the row key with the corresponding value in the table. Changes to the returned map will update the underlying table, and vice versa.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "Returns true if the provided keys are among the keys provided when the table was constructed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "put(R rowKey, C columnKey, V value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "{@inheritDoc}.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cellSet()",
    "name": "cellSet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<com.google.common.collect.Table$Cell<R, C, V>>",
      "name": "java.util.Set<com.google.common.collect.Table$Cell<R, C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns an unmodifiable set of all row key / column key / value triplets. Changes to the table will update the returned set. <p>The returned set's iterator traverses the mappings with the first row key, the mappings with the second row key, and so on. <p>The value in the returned cells may change if the table subsequently changes.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create(com.google.common.collect.Table<R, C, V> table)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ArrayTable<R, C, V>",
      "name": "com.google.common.collect.ArrayTable<R, C, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Table",
          "name": "Table",
          "isArray": false
        },
        "name": "table"
      }
    ],
    "equivalence": {
      "comment": "Creates an ArrayTable with the mappings in the provided table. <p>If table includes a mapping with row key r and a separate mapping with column key c, the returned table contains a mapping with row key r and column key c. If that row key / column key pair in not in table, the pair maps to null in the generated table. <p>The returned table allows subsequent put calls with the row keys in table.rowKeySet() and the column keys in table.columnKeySet(). Calling put with other keys leads to an IllegalArgumentException. <p>The ordering of table.rowKeySet() and table.columnKeySet() determines the row and column iteration ordering of the returned table.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "at(int rowIndex, int columnIndex)",
    "name": "at",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnIndex"
      }
    ],
    "equivalence": {
      "comment": "Returns the value corresponding to the specified row and column indices. The same value is returned by get(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex)), but this method runs more quickly.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rowKeyList()",
    "name": "rowKeyList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<R>",
      "name": "com.google.common.collect.ImmutableList<R>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns, as an immutable list, the row keys provided when the table was constructed, including those that are mapped to null values only.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "set(int rowIndex, int columnIndex, V value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnIndex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "Associates value with the specified row and column indices. The logic put(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex), value) has the same behavior, but this method runs more quickly.",
      "kind": "FreeText",
      "condition": "methodResultID.equals[receiverObjectClone.put(receiverObjectClone.rowKeyList().get(args[0]), receiverObjectClone.columnKeyList().get(args[1]), args[2]);]"
    }
  },
  {
    "signature": "rowKeySet()",
    "name": "rowKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableSet<R>",
      "name": "com.google.common.collect.ImmutableSet<R>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns an immutable set of the valid row keys, including those that are associated with null values only.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "create(java.lang.Iterable<? extends R> rowKeys, java.lang.Iterable<? extends C> columnKeys)",
    "name": "create",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ArrayTable<R, C, V>",
      "name": "com.google.common.collect.ArrayTable<R, C, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "rowKeys"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "columnKeys"
      }
    ],
    "equivalence": {
      "comment": "Creates an empty ArrayTable.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "eraseAll()",
    "name": "eraseAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Associates the value null with every pair of allowed row and column keys.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Not supported. Use eraseAll instead.",
      "kind": "FreeText",
      "condition": "receiverObjectClone.eraseAll();receiverObjectClone.equals(receiverObjectID)"
    }
  },
  {
    "signature": "toArray(java.lang.Class<V> valueClass)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V[][]",
      "name": "V[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "valueClass"
      }
    ],
    "equivalence": {
      "comment": "Returns a two-dimensional array with the table contents. The row and column indices correspond to the positions of the row and column in the iterables provided during table construction. If the table lacks a mapping for a given row and column, the corresponding array element is null. <p>Subsequent table changes will not modify the array, and vice versa.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsRow(java.lang.Object rowKey)",
    "name": "containsRow",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "Returns true if the provided row key is among the row keys provided when the table was constructed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "row(R rowKey)",
    "name": "row",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<C, V>",
      "name": "java.util.Map<C, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      }
    ],
    "equivalence": {
      "comment": "Returns a view of all mappings that have the given row key. If the row key isn't in rowKeySet(), an empty immutable map is returned. <p>Otherwise, for each column key in columnKeySet(), the returned map associates the column key with the corresponding value in the table. Changes to the returned map will update the underlying table, and vice versa.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cellIterator()",
    "name": "cellIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<com.google.common.collect.Table$Cell<R, C, V>>",
      "name": "java.util.Iterator<com.google.common.collect.Table$Cell<R, C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsColumn(java.lang.Object columnKey)",
    "name": "containsColumn",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "Returns true if the provided column key is among the column keys provided when the table was constructed.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "erase(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "erase",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": "Associates the value null with the specified keys, assuming both keys are valid. If either key is null or isn't among the keys provided during construction, this method has no effect. <p>This method is equivalent to put(rowKey, columnKey, null) when both provided keys are valid.",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.put(args[0],args[1],null))"
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Always returns false.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "columnKeyList()",
    "name": "columnKeyList",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableList<C>",
      "name": "com.google.common.collect.ImmutableList<C>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns, as an immutable list, the column keys provided when the table was constructed, including those that are mapped to null values only.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rowMap()",
    "name": "rowMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<R, java.util.Map<C, V>>",
      "name": "java.util.Map<R, java.util.Map<C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsValue(java.lang.Object value)",
    "name": "containsValue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "equivalence": {
      "comment": "Not supported. Use erase instead.",
      "kind": "FreeText",
      "condition": "methodResultID.equals(receiverObjectClone.erase(args[0],args[1]))"
    }
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<V>",
      "name": "java.util.Collection<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns an unmodifiable collection of all values, which may contain duplicates. Changes to the table will update the returned collection. <p>The returned collection's iterator traverses the values of the first row key, the values of the second row key, and so on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",
    "name": "putAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.common.collect.Table",
          "name": "Table",
          "isArray": false
        },
        "name": "table"
      }
    ],
    "equivalence": {
      "comment": "{@inheritDoc} <p>If table is an ArrayTable, its null values will be stored in this table, possibly replacing values that were previously non-null.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "columnMap()",
    "name": "columnMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<C, java.util.Map<R, V>>",
      "name": "java.util.Map<C, java.util.Map<R, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": ".",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "columnKeySet()",
    "name": "columnKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ArrayTable",
      "name": "ArrayTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ArrayTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableSet<C>",
      "name": "com.google.common.collect.ImmutableSet<C>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns an immutable set of the valid column keys, including those that are associated with null values only.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]