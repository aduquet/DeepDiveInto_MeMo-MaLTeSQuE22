[
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "size()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "clear()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsColumn(java.lang.Object columnKey)",
    "name": "containsColumn",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "containsColumn(java.lang.Object columnKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsValue(java.lang.Object value)",
    "name": "containsValue",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "containsValue(java.lang.Object value)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rowMap()",
    "name": "rowMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<R, java.util.Map<C, V>>",
      "name": "java.util.Map<R, java.util.Map<C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "rowMap()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "remove(java.lang.Object rowKey, java.lang.Object columnKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "put(R rowKey, C columnKey, V value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "equivalence": {
      "member": "put(R rowKey, C columnKey, V value)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cellSet()",
    "name": "cellSet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<com.google.common.collect.Table$Cell<R, C, V>>",
      "name": "java.util.Set<com.google.common.collect.Table$Cell<R, C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "cellSet()",
      "comment": "{@inheritDoc} The set's iterator traverses the mappings for the first row, the mappings for the second row, and so on. Each cell is an immutable snapshot of a row key / column key / value mapping, taken at the time the cell is returned by a method call to the set or its iterator.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "values()",
    "name": "values",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<V>",
      "name": "java.util.Collection<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "values()",
      "comment": "{@inheritDoc} The collection's iterator traverses the values for the first row, the values for the second row, and so on.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "rowKeySet()",
    "name": "rowKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<R>",
      "name": "java.util.Set<R>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "rowKeySet()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "V",
      "name": "V",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "get(java.lang.Object rowKey, java.lang.Object columnKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "isEmpty()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createRowMap()",
    "name": "createRowMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<R, java.util.Map<C, V>>",
      "name": "java.util.Map<R, java.util.Map<C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createRowMap()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createColumnKeyIterator()",
    "name": "createColumnKeyIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<C>",
      "name": "java.util.Iterator<C>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createColumnKeyIterator()",
      "comment": "Creates an iterator that returns each column value with duplicates omitted.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object rowKey, java.lang.Object columnKey)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "contains(java.lang.Object rowKey, java.lang.Object columnKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "row(R rowKey)",
    "name": "row",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<C, V>",
      "name": "java.util.Map<C, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey"
      }
    ],
    "equivalence": {
      "member": "row(R rowKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "containsRow(java.lang.Object rowKey)",
    "name": "containsRow",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rowKey",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "containsRow(java.lang.Object rowKey)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "columnMap()",
    "name": "columnMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<C, java.util.Map<R, V>>",
      "name": "java.util.Map<C, java.util.Map<R, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "columnMap()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "column(C columnKey)",
    "name": "column",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<R, V>",
      "name": "java.util.Map<R, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "columnKey"
      }
    ],
    "equivalence": {
      "member": "column(C columnKey)",
      "comment": "{@inheritDoc} The returned map's views have iterators that don't support remove().",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "cellIterator()",
    "name": "cellIterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<com.google.common.collect.Table$Cell<R, C, V>>",
      "name": "java.util.Iterator<com.google.common.collect.Table$Cell<R, C, V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "cellIterator()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "columnKeySet()",
    "name": "columnKeySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<C>",
      "name": "java.util.Set<C>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "columnKeySet()",
      "comment": "{@inheritDoc} The returned set has an iterator that does not support remove(). The set's iterator traverses the columns of the first row, the columns of the second row, etc., skipping any columns that have appeared previously.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.StandardTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",
    "name": "com.google.common.collect.StandardTable",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.StandardTable",
      "name": "StandardTable",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.StandardTable",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "backingMap"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Supplier",
          "name": "Supplier",
          "isArray": false
        },
        "name": "factory"
      }
    ],
    "equivalence": {
      "member": "com.google.common.collect.StandardTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]