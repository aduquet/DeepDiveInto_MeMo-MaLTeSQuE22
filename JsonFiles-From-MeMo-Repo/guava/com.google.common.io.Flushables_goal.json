[
  {
    "signature": "flush(java.io.Flushable flushable, boolean swallowIOException)",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "com.google.common.io.Flushables",
      "name": "Flushables",
      "isArray": false
    },
    "targetClass": "com.google.common.io.Flushables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Flushable",
          "name": "Flushable",
          "isArray": false
        },
        "name": "flushable"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "swallowIOException"
      }
    ],
    "equivalence": {
      "comment": "Flush a Flushable, with control over whether an IOException may be thrown. <p>If swallowIOException is true, then we don't rethrow IOException, but merely log it.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "flushQuietly(java.io.Flushable flushable)",
    "name": "flushQuietly",
    "containingClass": {
      "qualifiedName": "com.google.common.io.Flushables",
      "name": "Flushables",
      "isArray": false
    },
    "targetClass": "com.google.common.io.Flushables",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Flushable",
          "name": "Flushable",
          "isArray": false
        },
        "name": "flushable"
      }
    ],
    "equivalence": {
      "comment": "Equivalent to calling flush(flushable, true), but with no IOException in the signature.",
      "kind": "FreeText",
      "condition": "com.google.common.io.Flushables.flush(args[0],true); receiverObjectClone.flushQuietly(args[0]); receiverObjectClone.equals(receiverObjectID)"
    }
  }
]