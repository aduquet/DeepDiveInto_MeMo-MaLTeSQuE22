[
  {
    "signature": "removeAll(java.lang.Object key)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<V>",
      "name": "java.util.List<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "removeAll(java.lang.Object key)",
      "comment": "{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
    "name": "replaceValues",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<V>",
      "name": "java.util.List<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "equivalence": {
      "member": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
      "comment": "{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "equals(java.lang.Object object)",
      "comment": "Compares the specified object to this multimap for equality. Two ListMultimap instances are equal if, for each key, they contain the same values in the same order. If the value orderings disagree, the multimaps will not be considered equal.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(K key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<V>",
      "name": "java.util.List<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "get(K key)",
      "comment": "{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "asMap()",
    "name": "asMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<K, java.util.Collection<V>>",
      "name": "java.util.Map<K, java.util.Collection<V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "asMap()",
      "comment": "{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has List values.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.AbstractListMultimap(java.util.Map<K, java.util.Collection<V>> map)",
    "name": "com.google.common.collect.AbstractListMultimap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "map"
      }
    ],
    "equivalence": {
      "member": "com.google.common.collect.AbstractListMultimap(java.util.Map<K, java.util.Collection<V>> map)",
      "comment": "Creates a new multimap that uses the provided map.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createCollection()",
    "name": "createCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<V>",
      "name": "java.util.List<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createCollection()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createUnmodifiableEmptyCollection()",
    "name": "createUnmodifiableEmptyCollection",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<V>",
      "name": "java.util.List<V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "createUnmodifiableEmptyCollection()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "put(K key, V value)",
    "name": "put",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.AbstractListMultimap",
      "name": "AbstractListMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.AbstractListMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "put(K key, V value)",
      "comment": "Stores a key-value pair in the multimap.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]