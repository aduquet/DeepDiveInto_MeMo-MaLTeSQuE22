[
  {
    "signature": "asMap()",
    "name": "asMap",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.SortedSetMultimap",
      "name": "SortedSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.SortedSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<K, java.util.Collection<V>>",
      "name": "java.util.Map<K, java.util.Collection<V>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "asMap()",
      "comment": "Returns a map view that associates each key with the corresponding values in the multimap. Changes to the returned map, such as element removal, will update the underlying multimap. The map does not support setValue() on its entries, put, or putAll. When passed a key that is present in the map, asMap().get(Object) has the same behavior as #get, returning a live collection. When passed a key that is not present, however, asMap().get(Object) returns null instead of an empty collection. Note: The returned map's values are guaranteed to be of type SortedSet. To obtain this map with the more specific generic type Map<K, SortedSet<V>>, call Multimaps#asMap(SortedSetMultimap) instead.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "valueComparator()",
    "name": "valueComparator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.SortedSetMultimap",
      "name": "SortedSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.SortedSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Comparator<? super V>",
      "name": "java.util.Comparator<? super V>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "valueComparator()",
      "comment": "Returns the comparator that orders the multimap values, with null indicating that natural ordering is used.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
    "name": "replaceValues",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.SortedSetMultimap",
      "name": "SortedSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.SortedSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedSet<V>",
      "name": "java.util.SortedSet<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "equivalence": {
      "member": "replaceValues(K key, java.lang.Iterable<? extends V> values)",
      "comment": "Stores a collection of values with the same key, replacing any existing values for that key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "get(K key)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.SortedSetMultimap",
      "name": "SortedSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.SortedSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedSet<V>",
      "name": "java.util.SortedSet<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "get(K key)",
      "comment": "Returns a collection view of all values associated with a key. If no mappings in the multimap have the provided key, an empty collection is returned. Changes to the returned collection will update the underlying multimap, and vice versa. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeAll(java.lang.Object key)",
    "name": "removeAll",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.SortedSetMultimap",
      "name": "SortedSetMultimap",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.SortedSetMultimap",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.SortedSet<V>",
      "name": "java.util.SortedSet<V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "key",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "removeAll(java.lang.Object key)",
      "comment": "Removes all values associated with a given key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",
      "kind": "FreeText",
      "condition": ""
    }
  }
]