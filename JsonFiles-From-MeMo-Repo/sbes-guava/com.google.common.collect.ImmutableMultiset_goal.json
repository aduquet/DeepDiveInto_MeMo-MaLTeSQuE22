[
  {
    "signature": "entrySet()",
    "name": "entrySet",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableSet<com.google.common.collect.Multiset$Entry<E>>",
      "name": "com.google.common.collect.ImmutableSet<com.google.common.collect.Multiset$Entry<E>>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "entrySet()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "remove(java.lang.Object element, int occurrences)",
    "name": "remove",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "occurrences"
      }
    ],
    "equivalence": {
      "member": "remove(java.lang.Object element, int occurrences)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEntry(int index)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.Multiset$Entry<E>",
      "name": "com.google.common.collect.Multiset$Entry<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "equivalence": {
      "member": "getEntry(int index)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setCount(E element, int oldCount, int newCount)",
    "name": "setCount",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "oldCount"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newCount"
      }
    ],
    "equivalence": {
      "member": "setCount(E element, int oldCount, int newCount)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e4"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e5"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e6"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "others"
      }
    ],
    "equivalence": {
      "member": "of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of()",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "of()",
      "comment": "Returns the empty immutable multiset.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "builder()",
    "name": "builder",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset$Builder<E>",
      "name": "com.google.common.collect.ImmutableMultiset$Builder<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "builder()",
      "comment": "Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "equals(java.lang.Object object)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E e1, E e2, E e3)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e3"
      }
    ],
    "equivalence": {
      "member": "of(E e1, E e2, E e3)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E element)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      }
    ],
    "equivalence": {
      "member": "of(E element)",
      "comment": "Returns an immutable multiset containing a single element.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "toString()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E e1, E e2, E e3, E e4)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e4"
      }
    ],
    "equivalence": {
      "member": "of(E e1, E e2, E e3, E e4)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyFromEntries(java.util.Collection<? extends com.google.common.collect.Multiset$Entry<? extends E>> entries)",
    "name": "copyFromEntries",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "entries"
      }
    ],
    "equivalence": {
      "member": "copyFromEntries(java.util.Collection<? extends com.google.common.collect.Multiset$Entry<? extends E>> entries)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyIntoArray(java.lang.Object[] dst, int offset)",
    "name": "copyIntoArray",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "dst"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "equivalence": {
      "member": "copyIntoArray(java.lang.Object[] dst, int offset)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "com.google.common.collect.ImmutableMultiset()",
    "name": "com.google.common.collect.ImmutableMultiset",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "parameters": [],
    "equivalence": {
      "member": "com.google.common.collect.ImmutableMultiset()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E e1, E e2)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e2"
      }
    ],
    "equivalence": {
      "member": "of(E e1, E e2)",
      "comment": "Returns an immutable multiset containing the given elements, in order.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setCount(E element, int count)",
    "name": "setCount",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "count"
      }
    ],
    "equivalence": {
      "member": "setCount(E element, int count)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "iterator()",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.UnmodifiableIterator<E>",
      "name": "com.google.common.collect.UnmodifiableIterator<E>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "iterator()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "writeReplace()",
    "name": "writeReplace",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "writeReplace()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "contains(java.lang.Object object)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object",
        "nullable": true
      }
    ],
    "equivalence": {
      "member": "contains(java.lang.Object object)",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyOf(E[] elements)",
    "name": "copyOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "elements"
      }
    ],
    "equivalence": {
      "member": "copyOf(E[] elements)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyOf(java.lang.Iterable<? extends E> elements)",
    "name": "copyOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Iterable",
          "name": "Iterable",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "equivalence": {
      "member": "copyOf(java.lang.Iterable<? extends E> elements)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copyOf(java.util.Iterator<? extends E> elements)",
    "name": "copyOf",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "elements"
      }
    ],
    "equivalence": {
      "member": "copyOf(java.util.Iterator<? extends E> elements)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "of(E e1, E e2, E e3, E e4, E e5)",
    "name": "of",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset<E>",
      "name": "com.google.common.collect.ImmutableMultiset<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e2"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e3"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e4"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "e5"
      }
    ],
    "equivalence": {
      "member": "of(E e1, E e2, E e3, E e4, E e5)",
      "comment": "Returns an immutable multiset containing the given elements, in the \"grouped iteration order\" described in the class documentation.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(E element, int occurrences)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "element"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "occurrences"
      }
    ],
    "equivalence": {
      "member": "add(E element, int occurrences)",
      "comment": "Guaranteed to throw an exception and leave the collection unmodified.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "com.google.common.collect.ImmutableMultiset",
      "name": "ImmutableMultiset",
      "isArray": false
    },
    "targetClass": "com.google.common.collect.ImmutableMultiset",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "member": "hashCode()",
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]