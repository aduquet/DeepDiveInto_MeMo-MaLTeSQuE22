[
  {
    "signature": "getZero()",
    "name": "getZero",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distance1(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "distance1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "Calling this method is equivalent to calling: <code>q.subtract(p).getNorm1()</code> except that no intermediate vector is built",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNorm1()",
    "name": "getNorm1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distanceSq(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "distanceSq",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "Calling this method is equivalent to calling: <code>q.subtract(p).getNormSq()</code> except that no intermediate vector is built",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "dotProduct(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "dotProduct",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNormSq()",
    "name": "getNormSq",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "normalize()",
    "name": "normalize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distance(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "distance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "Calling this method is equivalent to calling: <code>q.subtract(p).getNorm()</code> except that no intermediate vector is built",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNorm()",
    "name": "getNorm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toString(java.text.NumberFormat format)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.text.NumberFormat",
          "name": "NumberFormat",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "distanceInf(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "distanceInf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "Calling this method is equivalent to calling: <code>q.subtract(p).getNormInf()</code> except that no intermediate vector is built",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subtract(org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "scalarMultiply(double a)",
    "name": "scalarMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subtract(double factor, org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "factor"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNormInf()",
    "name": "getNormInf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "negate()",
    "name": "negate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "isInfinite()",
    "name": "isInfinite",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "Returns true if any coordinate of this vector is infinite and none are NaN; false otherwise",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(double factor, org.apache.commons.math3.geometry.Vector<S> v)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector",
      "name": "Vector",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.Vector",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.Vector<S>",
      "name": "org.apache.commons.math3.geometry.Vector<S>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "factor"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]