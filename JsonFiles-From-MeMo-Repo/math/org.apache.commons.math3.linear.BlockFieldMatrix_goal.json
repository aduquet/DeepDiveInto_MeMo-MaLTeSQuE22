[
  {
    "signature": "addToEntry(int row, int column, T increment)",
    "name": "addToEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "increment"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "scalarMultiply(T d)",
    "name": "scalarMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setRowVector(int row, org.apache.commons.math3.linear.FieldVector<T> vector)",
    "name": "setRowVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "vector"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getColumnMatrix(int column)",
    "name": "getColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRowMatrix(int row)",
    "name": "getRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRowDimension()",
    "name": "getRowDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
          "name": "FieldMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
          "name": "FieldMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
          "name": "FieldMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor)",
    "name": "walkInRowOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
          "name": "FieldMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "multiply(org.apache.commons.math3.linear.FieldMatrix<T> m)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
          "name": "FieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRow(int row)",
    "name": "getRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getColumnDimension()",
    "name": "getColumnDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
          "name": "FieldMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
          "name": "FieldMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subtract(org.apache.commons.math3.linear.BlockFieldMatrix<T> m)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
          "name": "BlockFieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "Compute this - m.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setColumn(int column, T[] array)",
    "name": "setColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "operate(T[] v)",
    "name": "operate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[]",
          "isArray": true
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "transpose()",
    "name": "transpose",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "subtract(org.apache.commons.math3.linear.FieldMatrix<T> m)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
          "name": "FieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setColumnMatrix(int column, org.apache.commons.math3.linear.FieldMatrix<T> matrix)",
    "name": "setColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
          "name": "FieldMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setEntry(int row, int column, T value)",
    "name": "setEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getColumnVector(int column)",
    "name": "getColumnVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector<T>",
      "name": "org.apache.commons.math3.linear.FieldVector<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.apache.commons.math3.linear.BlockFieldMatrix(T[][] rawData)",
    "name": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[][]",
          "isArray": true
        },
        "name": "rawData"
      }
    ],
    "equivalence": {
      "comment": "Create a new dense matrix copying entries from raw layout data. The input array <em>must</em> already be in raw layout. Calling this constructor is equivalent to call: <pre>matrix = new BlockFieldMatrix<T>(getField(), rawData.length, rawData[0].length, toBlocksLayout(rawData), false);</pre>",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getColumn(int column)",
    "name": "getColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)",
    "name": "getSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.apache.commons.math3.linear.BlockFieldMatrix(int rows, int columns, T[][] blockData, boolean copyArray)",
    "name": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rows"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columns"
      },
      {
        "type": {
          "qualifiedName": "[[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[][]",
          "isArray": true
        },
        "name": "blockData"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "copyArray"
      }
    ],
    "equivalence": {
      "comment": "Create a new dense matrix copying entries from block layout data. The input array <em>must</em> already be in blocks layout.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createBlocksLayout(org.apache.commons.math3.Field<T> field, int rows, int columns)",
    "name": "createBlocksLayout",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[][]",
      "name": "T[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rows"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columns"
      }
    ],
    "equivalence": {
      "comment": "Create a data array in blocks layout.  This method can be used to create the array argument of the #BlockFieldMatrix(int, int, FieldElement[][], boolean) constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(org.apache.commons.math3.linear.BlockFieldMatrix<T> m)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
          "name": "BlockFieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "Compute the sum of this and m.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getData()",
    "name": "getData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[][]",
      "name": "T[][]",
      "isArray": true
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "multiply(org.apache.commons.math3.linear.BlockFieldMatrix<T> m)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.BlockFieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
          "name": "BlockFieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "Returns the result of postmultiplying this by m.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "toBlocksLayout(T[][] rawData)",
    "name": "toBlocksLayout",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[][]",
      "name": "T[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[][]",
          "isArray": true
        },
        "name": "rawData"
      }
    ],
    "equivalence": {
      "comment": "Convert a data array from raw layout to blocks layout.  Raw layout is the straightforward layout where element at row i and column j is in array element <code>rawData[i][j]</code>. Blocks layout is the layout used in BlockFieldMatrix instances, where the matrix is split in square blocks (except at right and bottom side where blocks may be rectangular to fit matrix size) and each block is stored in a flattened one-dimensional array.   This method creates an array in blocks layout from an input array in raw layout. It can be used to provide the array argument of the #BlockFieldMatrix(int, int, FieldElement[][], boolean) constructor.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setRowMatrix(int row, org.apache.commons.math3.linear.BlockFieldMatrix<T> matrix)",
    "name": "setRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
          "name": "BlockFieldMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "comment": "Sets the entries in row number row as a row matrix. Row indices start at 0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "add(org.apache.commons.math3.linear.FieldMatrix<T> m)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
          "name": "FieldMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.apache.commons.math3.linear.BlockFieldMatrix(org.apache.commons.math3.Field<T> field, int rows, int columns)",
    "name": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.Field",
          "name": "Field",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rows"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columns"
      }
    ],
    "equivalence": {
      "comment": "Create a new matrix with the supplied row and column dimensions.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "createMatrix(int rowDimension, int columnDimension)",
    "name": "createMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowDimension"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnDimension"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixChangingVisitor",
          "name": "FieldMatrixChangingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor)",
    "name": "walkInOptimizedOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrixPreservingVisitor",
          "name": "FieldMatrixPreservingVisitor",
          "isArray": false
        },
        "name": "visitor"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "preMultiply(T[] v)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T[]",
      "name": "T[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[]",
          "isArray": true
        },
        "name": "v"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setRowMatrix(int row, org.apache.commons.math3.linear.FieldMatrix<T> matrix)",
    "name": "setRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix",
          "name": "FieldMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setColumnMatrix(int column, org.apache.commons.math3.linear.BlockFieldMatrix<T> matrix)",
    "name": "setColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
          "name": "BlockFieldMatrix",
          "isArray": false
        },
        "name": "matrix"
      }
    ],
    "equivalence": {
      "comment": "Sets the entries in column number column as a column matrix. Column indices start at 0.",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "scalarAdd(T d)",
    "name": "scalarAdd",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "name": "org.apache.commons.math3.linear.FieldMatrix<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setRow(int row, T[] array)",
    "name": "setRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "multiplyEntry(int row, int column, T factor)",
    "name": "multiplyEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.FieldElement",
          "name": "FieldElement",
          "isArray": false
        },
        "name": "factor"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEntry(int row, int column)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getRowVector(int row)",
    "name": "getRowVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.FieldVector<T>",
      "name": "org.apache.commons.math3.linear.FieldVector<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setColumnVector(int column, org.apache.commons.math3.linear.FieldVector<T> vector)",
    "name": "setColumnVector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.linear.FieldVector",
          "name": "FieldVector",
          "isArray": false
        },
        "name": "vector"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "setSubMatrix(T[][] subMatrix, int row, int column)",
    "name": "setSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.linear.BlockFieldMatrix",
      "name": "BlockFieldMatrix",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.linear.BlockFieldMatrix",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[Lorg.apache.commons.math3.FieldElement;",
          "name": "FieldElement[][]",
          "isArray": true
        },
        "name": "subMatrix"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]