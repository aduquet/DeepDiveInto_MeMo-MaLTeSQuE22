[
  {
    "signature": "getEdgeSetBetween(int index)",
    "name": "getEdgeSetBetween",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<T>",
      "name": "java.util.Collection<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "removeEdge(int i)",
    "name": "removeEdge",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "org.graphstream.graph.implementations.MultiNode(org.graphstream.graph.implementations.AbstractGraph graph, java.lang.String id)",
    "name": "org.graphstream.graph.implementations.MultiNode",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.implementations.AbstractGraph",
          "name": "AbstractGraph",
          "isArray": false
        },
        "name": "graph"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "clearCallback()",
    "name": "clearCallback",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEdgeSetBetween(org.graphstream.graph.Node node)",
    "name": "getEdgeSetBetween",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<T>",
      "name": "java.util.Collection<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "addEdgeCallback(org.graphstream.graph.implementations.AbstractEdge edge)",
    "name": "addEdgeCallback",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.implementations.AbstractEdge",
          "name": "AbstractEdge",
          "isArray": false
        },
        "name": "edge"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getNeighborNodeIterator()",
    "name": "getNeighborNodeIterator",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<T>",
      "name": "java.util.Iterator<T>",
      "isArray": false
    },
    "parameters": [],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "locateEdge(org.graphstream.graph.Node opposite, char type)",
    "name": "locateEdge",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.graphstream.graph.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "opposite"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  },
  {
    "signature": "getEdgeSetBetween(java.lang.String id)",
    "name": "getEdgeSetBetween",
    "containingClass": {
      "qualifiedName": "org.graphstream.graph.implementations.MultiNode",
      "name": "MultiNode",
      "isArray": false
    },
    "targetClass": "org.graphstream.graph.implementations.MultiNode",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<T>",
      "name": "java.util.Collection<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "equivalence": {
      "comment": "",
      "kind": "FreeText",
      "condition": ""
    }
  }
]