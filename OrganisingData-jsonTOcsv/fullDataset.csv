,library,jsonFileName,signature,name,targetClass,equivalence.comment,equivalence.kind,equivalence.condition,EMR
0,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,cern.colt.matrix.DoubleMatrix2D(),cern.colt.matrix.DoubleMatrix2D,cern.colt.matrix.DoubleMatrix2D,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
1,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"aggregate(cern.colt.function.DoubleDoubleFunction aggr, cern.colt.function.DoubleFunction f)",aggregate,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
2,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"aggregate(cern.colt.matrix.DoubleMatrix2D other, cern.colt.function.DoubleDoubleFunction aggr, cern.colt.function.DoubleDoubleFunction f)",aggregate,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
3,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,assign(double[][] values),assign,cern.colt.matrix.DoubleMatrix2D,"Sets all cells to the state specified by values. values is required to have the form values[row][column] and have exactly the same number of rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
4,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,assign(double value),assign,cern.colt.matrix.DoubleMatrix2D,Sets all cells to the state specified by value.,FreeText,,0
5,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,assign(cern.colt.function.DoubleFunction function),assign,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
6,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,assign(cern.colt.matrix.DoubleMatrix2D other),assign,cern.colt.matrix.DoubleMatrix2D,"Replaces all cell values of the receiver with the values of another matrix. Both matrices must have the same number of rows and columns. If both matrices share the same cells (as is the case if they are views derived from the same matrix) and intersect in an ambiguous way, then replaces as if using an intermediate auxiliary deep copy of other.",FreeText,,0
7,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"assign(cern.colt.matrix.DoubleMatrix2D y, cern.colt.function.DoubleDoubleFunction function)",assign,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
8,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,cardinality(),cardinality,cern.colt.matrix.DoubleMatrix2D,Returns the number of cells having non-zero values; ignores tolerance.,FreeText,,0
9,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,copy(),copy,cern.colt.matrix.DoubleMatrix2D,"Constructs and returns a deep copy of the receiver.  Note that the returned matrix is an independent deep copy. The returned matrix is not backed by this matrix, so changes in the returned matrix are not reflected in this matrix, and vice-versa.",FreeText,,0
10,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,equals(double value),equals,cern.colt.matrix.DoubleMatrix2D,Returns whether all cells are equal to the given value.,FreeText,,0
11,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,equals(java.lang.Object obj),equals,cern.colt.matrix.DoubleMatrix2D,Compares this object against the specified object. The result is true if and only if the argument is not null and is at least a DoubleMatrix2D object that has the same number of columns and rows as the receiver and has exactly the same values at the same coordinates.,FreeText,,0
12,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,forEachNonZero(cern.colt.function.IntIntDoubleFunction function),forEachNonZero,cern.colt.matrix.DoubleMatrix2D,"Assigns the result of a function to each non-zero cell; x[row,col] = function(x[row,col]). Use this method for fast special-purpose iteration. If you want to modify another matrix instead of this (i.e. work in read-only mode), simply return the input value unchanged. Parameters to function are as follows: first==row, second==column, third==nonZeroValue.",FreeText,,0
13,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"get(int row, int column)",get,cern.colt.matrix.DoubleMatrix2D,"Returns the matrix cell value at coordinate [row,column].",FreeText,,0
14,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,getContent(),getContent,cern.colt.matrix.DoubleMatrix2D,Returns the content of this matrix if it is a wrapper; or this otherwise. Override this method in wrappers.,FreeText,,0
15,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"getNonZeros(cern.colt.list.IntArrayList rowList, cern.colt.list.IntArrayList columnList, cern.colt.list.DoubleArrayList valueList)",getNonZeros,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
16,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"getQuick(int row, int column)",getQuick,cern.colt.matrix.DoubleMatrix2D,"Returns the matrix cell value at coordinate [row,column]. Provided with invalid parameters this method may return invalid objects without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): 0 <= column < columns() && 0 <= row < rows().",FreeText,,0
17,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,haveSharedCells(cern.colt.matrix.DoubleMatrix2D other),haveSharedCells,cern.colt.matrix.DoubleMatrix2D,Returns true if both matrices share at least one identical cell.,FreeText,,0
18,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D other),haveSharedCellsRaw,cern.colt.matrix.DoubleMatrix2D,Returns true if both matrices share at least one identical cell.,FreeText,,0
19,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,like(),like,cern.colt.matrix.DoubleMatrix2D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the same number of rows and columns. For example, if the receiver is an instance of type DenseDoubleMatrix2D the new matrix must also be of type DenseDoubleMatrix2D, if the receiver is an instance of type SparseDoubleMatrix2D the new matrix must also be of type SparseDoubleMatrix2D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
20,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"like(int rows, int columns)",like,cern.colt.matrix.DoubleMatrix2D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the specified number of rows and columns. For example, if the receiver is an instance of type DenseDoubleMatrix2D the new matrix must also be of type DenseDoubleMatrix2D, if the receiver is an instance of type SparseDoubleMatrix2D the new matrix must also be of type SparseDoubleMatrix2D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
21,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,like1D(int size),like1D,cern.colt.matrix.DoubleMatrix2D,"Construct and returns a new 1-d matrix of the corresponding dynamic type, entirelly independent of the receiver. For example, if the receiver is an instance of type DenseDoubleMatrix2D the new matrix must be of type DenseDoubleMatrix1D, if the receiver is an instance of type SparseDoubleMatrix2D the new matrix must be of type SparseDoubleMatrix1D, etc.",FreeText,,0
22,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"like1D(int size, int zero, int stride)",like1D,cern.colt.matrix.DoubleMatrix2D,"Construct and returns a new 1-d matrix of the corresponding dynamic type, sharing the same cells. For example, if the receiver is an instance of type DenseDoubleMatrix2D the new matrix must be of type DenseDoubleMatrix1D, if the receiver is an instance of type SparseDoubleMatrix2D the new matrix must be of type SparseDoubleMatrix1D, etc.",FreeText,,0
23,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"set(int row, int column, double value)",set,cern.colt.matrix.DoubleMatrix2D,"Sets the matrix cell at coordinate [row,column] to the specified value.",FreeText,,0
24,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"setQuick(int row, int column, double value)",setQuick,cern.colt.matrix.DoubleMatrix2D,"Sets the matrix cell at coordinate [row,column] to the specified value. Provided with invalid parameters this method may access illegal indexes without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): 0 <= column < columns() && 0 <= row < rows().",FreeText,,0
25,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,toArray(),toArray,cern.colt.matrix.DoubleMatrix2D,"Constructs and returns a 2-dimensional array containing the cell values. The returned array values has the form values[row][column] and has the same number of rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
26,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,toString(),toString,cern.colt.matrix.DoubleMatrix2D,Returns a string representation using default formatting. @see cern.colt.matrix.doublealgo.Formatter,FreeText,,0
27,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,view(),view,cern.colt.matrix.DoubleMatrix2D,"Constructs and returns a new view equal to the receiver. The view is a shallow clone. Calls clone() and casts the result.  Note that the view is not a deep copy. The returned matrix is backed by this matrix, so changes in the returned matrix are reflected in this matrix, and vice-versa.  Use #copy() to construct an independent deep copy rather than a new view.",FreeText,,0
28,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewColumn(int column),viewColumn,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
29,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewColumnFlip(),viewColumnFlip,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
30,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewDice(),viewDice,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
31,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"viewPart(int row, int column, int height, int width)",viewPart,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
32,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewRow(int row),viewRow,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
33,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewRowFlip(),viewRowFlip,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
34,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"viewSelection(int[] rowIndexes, int[] columnIndexes)",viewSelection,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
35,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewSelection(cern.colt.matrix.DoubleMatrix1DProcedure condition),viewSelection,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
36,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"viewSelectionLike(int[] rowOffsets, int[] columnOffsets)",viewSelectionLike,cern.colt.matrix.DoubleMatrix2D,Construct and returns a new selection view.,FreeText,,0
37,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,viewSorted(int column),viewSorted,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
38,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"viewStrides(int rowStride, int columnStride)",viewStrides,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
39,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"zAssign8Neighbors(cern.colt.matrix.DoubleMatrix2D B, cern.colt.function.Double9Function function)",zAssign8Neighbors,cern.colt.matrix.DoubleMatrix2D,,FreeText,,0
40,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"zMult(cern.colt.matrix.DoubleMatrix1D y, cern.colt.matrix.DoubleMatrix1D z)",zMult,cern.colt.matrix.DoubleMatrix2D,"Linear algebraic matrix-vector multiplication; z = A * y; Equivalent to return A.zMult(y,z,1,0);",FreeText,"methodResultID.equals(receiverObjectClone.zMult(args[0],args[1],1,0))",1
41,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"zMult(cern.colt.matrix.DoubleMatrix1D y, cern.colt.matrix.DoubleMatrix1D z, double alpha, double beta, boolean transposeA)",zMult,cern.colt.matrix.DoubleMatrix2D,"Linear algebraic matrix-vector multiplication; z = alpha * A * y + beta*z. z[i] = alpha*Sum(A[i,j] * y[j]) + beta*z[i], i=0..A.rows()-1, j=0..y.size()-1. Where A == this. <br> Note: Matrix shape conformance is checked after potential transpositions.",FreeText,,0
42,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"zMult(cern.colt.matrix.DoubleMatrix2D B, cern.colt.matrix.DoubleMatrix2D C)",zMult,cern.colt.matrix.DoubleMatrix2D,"Linear algebraic matrix-matrix multiplication; C = A x B; Equivalent to A.zMult(B,C,1,0,false,false).",FreeText,"methodResultID.equals(receiverObjectClone.zMult(args[0],args[1],1,0,false,false))",1
43,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,"zMult(cern.colt.matrix.DoubleMatrix2D B, cern.colt.matrix.DoubleMatrix2D C, double alpha, double beta, boolean transposeA, boolean transposeB)",zMult,cern.colt.matrix.DoubleMatrix2D,"Linear algebraic matrix-matrix multiplication; C = alpha * A x B + beta*C. C[i,j] = alpha*Sum(A[i,k] * B[k,j]) + beta*C[i,j], k=0..n-1. <br> Matrix shapes: A(m x n), B(n x p), C(m x p). <br> Note: Matrix shape conformance is checked after potential transpositions.",FreeText,,0
44,colt,cern.colt.matrix.DoubleMatrix2D_goal.json,zSum(),zSum,cern.colt.matrix.DoubleMatrix2D,"Returns the sum of all cells; Sum( x[i,j] ).",FreeText,,0
45,colt,cern.colt.matrix.linalg.Algebra_goal.json,cern.colt.matrix.linalg.Algebra(),cern.colt.matrix.linalg.Algebra,cern.colt.matrix.linalg.Algebra,Constructs a new instance with an equality tolerance given by Property.DEFAULT.tolerance().,FreeText,,0
46,colt,cern.colt.matrix.linalg.Algebra_goal.json,cern.colt.matrix.linalg.Algebra(double tolerance),cern.colt.matrix.linalg.Algebra,cern.colt.matrix.linalg.Algebra,Constructs a new instance with the given equality tolerance.,FreeText,,0
47,colt,cern.colt.matrix.linalg.Algebra_goal.json,clone(),clone,cern.colt.matrix.linalg.Algebra,"Returns a copy of the receiver. The attached property object is also copied. Hence, the property object of the copy is mutable.",FreeText,,0
48,colt,cern.colt.matrix.linalg.Algebra_goal.json,cond(cern.colt.matrix.DoubleMatrix2D A),cond,cern.colt.matrix.linalg.Algebra,"Returns the condition of matrix A, which is the ratio of largest to smallest singular value.",FreeText,,0
49,colt,cern.colt.matrix.linalg.Algebra_goal.json,det(cern.colt.matrix.DoubleMatrix2D A),det,cern.colt.matrix.linalg.Algebra,Returns the determinant of matrix A.,FreeText,,0
50,colt,cern.colt.matrix.linalg.Algebra_goal.json,"hypot(double a, double b)",hypot,cern.colt.matrix.linalg.Algebra,Returns sqrt(a^2 + b^2) without under/overflow.,FreeText,,0
51,colt,cern.colt.matrix.linalg.Algebra_goal.json,hypotFunction(),hypotFunction,cern.colt.matrix.linalg.Algebra,Returns sqrt(a^2 + b^2) without under/overflow.,FreeText,,0
52,colt,cern.colt.matrix.linalg.Algebra_goal.json,inverse(cern.colt.matrix.DoubleMatrix2D A),inverse,cern.colt.matrix.linalg.Algebra,Returns the inverse or pseudo-inverse of matrix A.,FreeText,,0
53,colt,cern.colt.matrix.linalg.Algebra_goal.json,"mult(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y)",mult,cern.colt.matrix.linalg.Algebra,Inner product of two vectors; Sum(x[i] * y[i]). Also known as dot product. <br> Equivalent to x.zDotProduct(y).,FreeText,methodResultID==args[0].zDotProduct(args[1]),1
54,colt,cern.colt.matrix.linalg.Algebra_goal.json,"mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix1D y)",mult,cern.colt.matrix.linalg.Algebra,"Linear algebraic matrix-vector multiplication; z = A * y. z[i] = Sum(A[i,j] * y[j]), i=0..A.rows()-1, j=0..y.size()-1.",FreeText,,0
55,colt,cern.colt.matrix.linalg.Algebra_goal.json,"mult(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",mult,cern.colt.matrix.linalg.Algebra,"Linear algebraic matrix-matrix multiplication; C = A x B. C[i,j] = Sum(A[i,k] * B[k,j]), k=0..n-1. <br> Matrix shapes: A(m x n), B(n x p), C(m x p).",FreeText,,0
56,colt,cern.colt.matrix.linalg.Algebra_goal.json,"multOuter(cern.colt.matrix.DoubleMatrix1D x, cern.colt.matrix.DoubleMatrix1D y, cern.colt.matrix.DoubleMatrix2D A)",multOuter,cern.colt.matrix.linalg.Algebra,"Outer product of two vectors; Sets A[i,j] = x[i] * y[j].",FreeText,,0
57,colt,cern.colt.matrix.linalg.Algebra_goal.json,norm1(cern.colt.matrix.DoubleMatrix1D x),norm1,cern.colt.matrix.linalg.Algebra,"Returns the one-norm of vector x, which is Sum(abs(x[i])).",FreeText,,0
58,colt,cern.colt.matrix.linalg.Algebra_goal.json,norm1(cern.colt.matrix.DoubleMatrix2D A),norm1,cern.colt.matrix.linalg.Algebra,"Returns the one-norm of matrix A, which is the maximum absolute column sum.",FreeText,,0
59,colt,cern.colt.matrix.linalg.Algebra_goal.json,norm2(cern.colt.matrix.DoubleMatrix1D x),norm2,cern.colt.matrix.linalg.Algebra,"Returns the two-norm (aka euclidean norm) of vector x; equivalent to mult(x,x).",FreeText,"methodResultID==(receiverObjectClone.mult(args[0],args[0]))",1
60,colt,cern.colt.matrix.linalg.Algebra_goal.json,norm2(cern.colt.matrix.DoubleMatrix2D A),norm2,cern.colt.matrix.linalg.Algebra,"Returns the two-norm of matrix A, which is the maximum singular value; obtained from SVD.",FreeText,,0
61,colt,cern.colt.matrix.linalg.Algebra_goal.json,normF(cern.colt.matrix.DoubleMatrix2D A),normF,cern.colt.matrix.linalg.Algebra,"Returns the Frobenius norm of matrix A, which is Sqrt(Sum(A[i,j]<sup>2</sup>)).",FreeText,,0
62,colt,cern.colt.matrix.linalg.Algebra_goal.json,normInfinity(cern.colt.matrix.DoubleMatrix1D x),normInfinity,cern.colt.matrix.linalg.Algebra,"Returns the infinity norm of vector x, which is Max(abs(x[i])).",FreeText,,0
63,colt,cern.colt.matrix.linalg.Algebra_goal.json,normInfinity(cern.colt.matrix.DoubleMatrix2D A),normInfinity,cern.colt.matrix.linalg.Algebra,"Returns the infinity norm of matrix A, which is the maximum absolute row sum.",FreeText,,0
64,colt,cern.colt.matrix.linalg.Algebra_goal.json,"permute(cern.colt.matrix.DoubleMatrix1D A, int[] indexes, double[] work)",permute,cern.colt.matrix.linalg.Algebra,,FreeText,,0
65,colt,cern.colt.matrix.linalg.Algebra_goal.json,"permute(cern.colt.matrix.DoubleMatrix2D A, int[] rowIndexes, int[] columnIndexes)",permute,cern.colt.matrix.linalg.Algebra,,FreeText,,0
66,colt,cern.colt.matrix.linalg.Algebra_goal.json,"permuteColumns(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",permuteColumns,cern.colt.matrix.linalg.Algebra,,FreeText,,0
67,colt,cern.colt.matrix.linalg.Algebra_goal.json,"permuteRows(cern.colt.matrix.DoubleMatrix2D A, int[] indexes, int[] work)",permuteRows,cern.colt.matrix.linalg.Algebra,,FreeText,,0
68,colt,cern.colt.matrix.linalg.Algebra_goal.json,"pow(cern.colt.matrix.DoubleMatrix2D A, int p)",pow,cern.colt.matrix.linalg.Algebra,"Linear algebraic matrix power; B = A<sup>k</sup> <==> B = A*A*...*A.  <li><tt>p >= 1: B = A*A*...*A</tt>.</li> <li><tt>p == 0: B = identity matrix</tt>.</li> <li><tt>p < 0: B = pow(inverse(A),-p)</tt>.</li>  Implementation: Based on logarithms of 2, memory usage minimized.",FreeText,,0
69,colt,cern.colt.matrix.linalg.Algebra_goal.json,property(),property,cern.colt.matrix.linalg.Algebra,"Returns the property object attached to this Algebra, defining tolerance.",FreeText,,0
70,colt,cern.colt.matrix.linalg.Algebra_goal.json,rank(cern.colt.matrix.DoubleMatrix2D A),rank,cern.colt.matrix.linalg.Algebra,"Returns the effective numerical rank of matrix A, obtained from Singular Value Decomposition.",FreeText,,0
71,colt,cern.colt.matrix.linalg.Algebra_goal.json,setProperty(cern.colt.matrix.linalg.Property property),setProperty,cern.colt.matrix.linalg.Algebra,"Attaches the given property object to this Algebra, defining tolerance.",FreeText,,0
72,colt,cern.colt.matrix.linalg.Algebra_goal.json,"solve(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",solve,cern.colt.matrix.linalg.Algebra,Solves A*X = B.,FreeText,,0
73,colt,cern.colt.matrix.linalg.Algebra_goal.json,"solveTranspose(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",solveTranspose,cern.colt.matrix.linalg.Algebra,"Solves X*A = B, which is also A'*X' = B'.",FreeText,,0
74,colt,cern.colt.matrix.linalg.Algebra_goal.json,"subMatrix(cern.colt.matrix.DoubleMatrix2D A, int fromRow, int toRow, int fromColumn, int toColumn)",subMatrix,cern.colt.matrix.linalg.Algebra,,FreeText,,0
75,colt,cern.colt.matrix.linalg.Algebra_goal.json,toString(cern.colt.matrix.DoubleMatrix2D matrix),toString,cern.colt.matrix.linalg.Algebra,,FreeText,,0
76,colt,cern.colt.matrix.linalg.Algebra_goal.json,toVerboseString(cern.colt.matrix.DoubleMatrix2D matrix),toVerboseString,cern.colt.matrix.linalg.Algebra,,FreeText,,0
77,colt,cern.colt.matrix.linalg.Algebra_goal.json,trace(cern.colt.matrix.DoubleMatrix2D A),trace,cern.colt.matrix.linalg.Algebra,"Returns the sum of the diagonal elements of matrix A; Sum(A[i,i]).",FreeText,,0
78,colt,cern.colt.matrix.linalg.Algebra_goal.json,transpose(cern.colt.matrix.DoubleMatrix2D A),transpose,cern.colt.matrix.linalg.Algebra,,FreeText,,0
79,colt,cern.colt.matrix.linalg.Algebra_goal.json,trapezoidalLower(cern.colt.matrix.DoubleMatrix2D A),trapezoidalLower,cern.colt.matrix.linalg.Algebra,,FreeText,,0
80,colt,cern.colt.matrix.linalg.Property_goal.json,cern.colt.matrix.linalg.Property(double newTolerance),cern.colt.matrix.linalg.Property,cern.colt.matrix.linalg.Property,Constructs an instance with a tolerance of Math.abs(newTolerance).,FreeText,,0
81,colt,cern.colt.matrix.linalg.Property_goal.json,blanks(int length),blanks,cern.colt.matrix.linalg.Property,Returns a String with length blanks.,FreeText,,0
82,colt,cern.colt.matrix.linalg.Property_goal.json,checkRectangular(cern.colt.matrix.DoubleMatrix2D A),checkRectangular,cern.colt.matrix.linalg.Property,Checks whether the given matrix A is rectangular.,FreeText,,0
83,colt,cern.colt.matrix.linalg.Property_goal.json,checkSquare(cern.colt.matrix.DoubleMatrix2D A),checkSquare,cern.colt.matrix.linalg.Property,Checks whether the given matrix A is square.,FreeText,,0
84,colt,cern.colt.matrix.linalg.Property_goal.json,density(cern.colt.matrix.DoubleMatrix2D A),density,cern.colt.matrix.linalg.Property,Returns the matrix's fraction of non-zero cells; A.cardinality() / A.size().,FreeText,,0
85,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix1D A, double value)",equals,cern.colt.matrix.linalg.Property,Returns whether all cells of the given matrix A are equal to the given value. The result is true if and only if A != null and ! (Math.abs(value - A[i]) > tolerance()) holds for all coordinates.,FreeText,,0
86,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix1D A, cern.colt.matrix.DoubleMatrix1D B)",equals,cern.colt.matrix.linalg.Property,"Returns whether both given matrices A and B are equal. The result is true if A==B. Otherwise, the result is true if and only if both arguments are != null, have the same size and ! (Math.abs(A[i] - B[i]) > tolerance()) holds for all indexes.",FreeText,,0
87,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix2D A, double value)",equals,cern.colt.matrix.linalg.Property,"Returns whether all cells of the given matrix A are equal to the given value. The result is true if and only if A != null and ! (Math.abs(value - A[row,col]) > tolerance()) holds for all coordinates.",FreeText,,0
88,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix2D A, cern.colt.matrix.DoubleMatrix2D B)",equals,cern.colt.matrix.linalg.Property,"Returns whether both given matrices A and B are equal. The result is true if A==B. Otherwise, the result is true if and only if both arguments are != null, have the same number of columns and rows and ! (Math.abs(A[row,col] - B[row,col]) > tolerance()) holds for all coordinates.",FreeText,,0
89,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix3D A, double value)",equals,cern.colt.matrix.linalg.Property,"Returns whether all cells of the given matrix A are equal to the given value. The result is true if and only if A != null and ! (Math.abs(value - A[slice,row,col]) > tolerance()) holds for all coordinates.",FreeText,,0
90,colt,cern.colt.matrix.linalg.Property_goal.json,"equals(cern.colt.matrix.DoubleMatrix3D A, cern.colt.matrix.DoubleMatrix3D B)",equals,cern.colt.matrix.linalg.Property,"Returns whether both given matrices A and B are equal. The result is true if A==B. Otherwise, the result is true if and only if both arguments are != null, have the same number of columns, rows and slices, and ! (Math.abs(A[slice,row,col] - B[slice,row,col]) > tolerance()) holds for all coordinates.",FreeText,,0
91,colt,cern.colt.matrix.linalg.Property_goal.json,generateNonSingular(cern.colt.matrix.DoubleMatrix2D A),generateNonSingular,cern.colt.matrix.linalg.Property,,FreeText,,0
92,colt,cern.colt.matrix.linalg.Property_goal.json,"get(cern.colt.list.ObjectArrayList list, int index)",get,cern.colt.matrix.linalg.Property,,FreeText,,0
93,colt,cern.colt.matrix.linalg.Property_goal.json,isDiagonal(cern.colt.matrix.DoubleMatrix2D A),isDiagonal,cern.colt.matrix.linalg.Property,"A matrix A is diagonal if A[i,j] == 0 whenever i != j. Matrix may but need not be square.",FreeText,,0
94,colt,cern.colt.matrix.linalg.Property_goal.json,isDiagonallyDominantByColumn(cern.colt.matrix.DoubleMatrix2D A),isDiagonallyDominantByColumn,cern.colt.matrix.linalg.Property,"A matrix A is diagonally dominant by column if the absolute value of each diagonal element is larger than the sum of the absolute values of the off-diagonal elements in the corresponding column. returns true if for all i: abs(A[i,i]) > Sum(abs(A[j,i])); j != i. Matrix may but need not be square.  Note: Ignores tolerance.",FreeText,,0
95,colt,cern.colt.matrix.linalg.Property_goal.json,isDiagonallyDominantByRow(cern.colt.matrix.DoubleMatrix2D A),isDiagonallyDominantByRow,cern.colt.matrix.linalg.Property,"A matrix A is diagonally dominant by row if the absolute value of each diagonal element is larger than the sum of the absolute values of the off-diagonal elements in the corresponding row. returns true if for all i: abs(A[i,i]) > Sum(abs(A[i,j])); j != i. Matrix may but need not be square.  Note: Ignores tolerance.",FreeText,,0
96,colt,cern.colt.matrix.linalg.Property_goal.json,isIdentity(cern.colt.matrix.DoubleMatrix2D A),isIdentity,cern.colt.matrix.linalg.Property,"A matrix A is an identity matrix if A[i,i] == 1 and all other cells are zero. Matrix may but need not be square.",FreeText,,0
97,colt,cern.colt.matrix.linalg.Property_goal.json,isLowerBidiagonal(cern.colt.matrix.DoubleMatrix2D A),isLowerBidiagonal,cern.colt.matrix.linalg.Property,"A matrix A is lower bidiagonal if A[i,j]==0 unless i==j || i==j+1. Matrix may but need not be square.",FreeText,,0
98,colt,cern.colt.matrix.linalg.Property_goal.json,isLowerTriangular(cern.colt.matrix.DoubleMatrix2D A),isLowerTriangular,cern.colt.matrix.linalg.Property,"A matrix A is lower triangular if A[i,j]==0 whenever i < j. Matrix may but need not be square.",FreeText,,0
99,colt,cern.colt.matrix.linalg.Property_goal.json,isNonNegative(cern.colt.matrix.DoubleMatrix2D A),isNonNegative,cern.colt.matrix.linalg.Property,"A matrix A is non-negative if A[i,j] >= 0 holds for all cells.  Note: Ignores tolerance.",FreeText,,0
100,colt,cern.colt.matrix.linalg.Property_goal.json,isOrthogonal(cern.colt.matrix.DoubleMatrix2D A),isOrthogonal,cern.colt.matrix.linalg.Property,A square matrix A is orthogonal if A*transpose(A) = I.,FreeText,,0
101,colt,cern.colt.matrix.linalg.Property_goal.json,isPositive(cern.colt.matrix.DoubleMatrix2D A),isPositive,cern.colt.matrix.linalg.Property,"A matrix A is positive if A[i,j] > 0 holds for all cells.  Note: Ignores tolerance.",FreeText,,0
102,colt,cern.colt.matrix.linalg.Property_goal.json,isSingular(cern.colt.matrix.DoubleMatrix2D A),isSingular,cern.colt.matrix.linalg.Property,"A matrix A is singular if it has no inverse, that is, iff det(A)==0.",FreeText,,0
103,colt,cern.colt.matrix.linalg.Property_goal.json,isSkewSymmetric(cern.colt.matrix.DoubleMatrix2D A),isSkewSymmetric,cern.colt.matrix.linalg.Property,"A square matrix A is skew-symmetric if A = -transpose(A), that is A[i,j] == -A[j,i].",FreeText,,0
104,colt,cern.colt.matrix.linalg.Property_goal.json,isSquare(cern.colt.matrix.DoubleMatrix2D A),isSquare,cern.colt.matrix.linalg.Property,A matrix A is square if it has the same number of rows and columns.,FreeText,,0
105,colt,cern.colt.matrix.linalg.Property_goal.json,isStrictlyLowerTriangular(cern.colt.matrix.DoubleMatrix2D A),isStrictlyLowerTriangular,cern.colt.matrix.linalg.Property,"A matrix A is strictly lower triangular if A[i,j]==0 whenever i <= j. Matrix may but need not be square.",FreeText,,0
106,colt,cern.colt.matrix.linalg.Property_goal.json,isStrictlyTriangular(cern.colt.matrix.DoubleMatrix2D A),isStrictlyTriangular,cern.colt.matrix.linalg.Property,A matrix A is strictly triangular if it is triangular and its diagonal elements all equal 0. Matrix may but need not be square.,FreeText,,0
107,colt,cern.colt.matrix.linalg.Property_goal.json,isStrictlyUpperTriangular(cern.colt.matrix.DoubleMatrix2D A),isStrictlyUpperTriangular,cern.colt.matrix.linalg.Property,"A matrix A is strictly upper triangular if A[i,j]==0 whenever i >= j. Matrix may but need not be square.",FreeText,,0
108,colt,cern.colt.matrix.linalg.Property_goal.json,isSymmetric(cern.colt.matrix.DoubleMatrix2D A),isSymmetric,cern.colt.matrix.linalg.Property,"A matrix A is symmetric if A = tranpose(A), that is A[i,j] == A[j,i].",FreeText,,0
109,colt,cern.colt.matrix.linalg.Property_goal.json,isTriangular(cern.colt.matrix.DoubleMatrix2D A),isTriangular,cern.colt.matrix.linalg.Property,A matrix A is triangular iff it is either upper or lower triangular. Matrix may but need not be square.,FreeText,,0
110,colt,cern.colt.matrix.linalg.Property_goal.json,isTridiagonal(cern.colt.matrix.DoubleMatrix2D A),isTridiagonal,cern.colt.matrix.linalg.Property,"A matrix A is tridiagonal if A[i,j]==0 whenever Math.abs(i-j) > 1. Matrix may but need not be square.",FreeText,,0
111,colt,cern.colt.matrix.linalg.Property_goal.json,isUnitTriangular(cern.colt.matrix.DoubleMatrix2D A),isUnitTriangular,cern.colt.matrix.linalg.Property,A matrix A is unit triangular if it is triangular and its diagonal elements all equal 1. Matrix may but need not be square.,FreeText,,0
112,colt,cern.colt.matrix.linalg.Property_goal.json,isUpperBidiagonal(cern.colt.matrix.DoubleMatrix2D A),isUpperBidiagonal,cern.colt.matrix.linalg.Property,"A matrix A is upper bidiagonal if A[i,j]==0 unless i==j || i==j-1. Matrix may but need not be square.",FreeText,,0
113,colt,cern.colt.matrix.linalg.Property_goal.json,isUpperTriangular(cern.colt.matrix.DoubleMatrix2D A),isUpperTriangular,cern.colt.matrix.linalg.Property,"A matrix A is upper triangular if A[i,j]==0 whenever i > j. Matrix may but need not be square.",FreeText,,0
114,colt,cern.colt.matrix.linalg.Property_goal.json,isZero(cern.colt.matrix.DoubleMatrix2D A),isZero,cern.colt.matrix.linalg.Property,A matrix A is zero if all its cells are zero.,FreeText,,0
115,colt,cern.colt.matrix.linalg.Property_goal.json,lowerBandwidth(cern.colt.matrix.DoubleMatrix2D A),lowerBandwidth,cern.colt.matrix.linalg.Property,,FreeText,,0
116,colt,cern.colt.matrix.linalg.Property_goal.json,semiBandwidth(cern.colt.matrix.DoubleMatrix2D A),semiBandwidth,cern.colt.matrix.linalg.Property,,FreeText,,0
117,colt,cern.colt.matrix.linalg.Property_goal.json,setTolerance(double newTolerance),setTolerance,cern.colt.matrix.linalg.Property,Sets the tolerance to Math.abs(newTolerance).,FreeText,,0
118,colt,cern.colt.matrix.linalg.Property_goal.json,tolerance(),tolerance,cern.colt.matrix.linalg.Property,Returns the current tolerance.,FreeText,,0
119,colt,cern.colt.matrix.linalg.Property_goal.json,toString(cern.colt.matrix.DoubleMatrix2D A),toString,cern.colt.matrix.linalg.Property,,FreeText,,0
120,colt,cern.colt.matrix.linalg.Property_goal.json,upperBandwidth(cern.colt.matrix.DoubleMatrix2D A),upperBandwidth,cern.colt.matrix.linalg.Property,,FreeText,,0
121,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,cern.colt.matrix.ObjectMatrix1D(),cern.colt.matrix.ObjectMatrix1D,cern.colt.matrix.ObjectMatrix1D,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
122,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"aggregate(cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
123,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"aggregate(cern.colt.matrix.ObjectMatrix1D other, cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
124,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,assign(java.lang.Object[] values),assign,cern.colt.matrix.ObjectMatrix1D,"Sets all cells to the state specified by values. values is required to have the same number of cells as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
125,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,assign(cern.colt.function.ObjectFunction function),assign,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
126,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,assign(cern.colt.matrix.ObjectMatrix1D other),assign,cern.colt.matrix.ObjectMatrix1D,"Replaces all cell values of the receiver with the values of another matrix. Both matrices must have the same size. If both matrices share the same cells (as is the case if they are views derived from the same matrix) and intersect in an ambiguous way, then replaces as if using an intermediate auxiliary deep copy of other.",FreeText,,0
127,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"assign(cern.colt.matrix.ObjectMatrix1D y, cern.colt.function.ObjectObjectFunction function)",assign,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
128,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,assign(java.lang.Object value),assign,cern.colt.matrix.ObjectMatrix1D,Sets all cells to the state specified by value.,FreeText,,0
129,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,cardinality(),cardinality,cern.colt.matrix.ObjectMatrix1D,Returns the number of cells having non-zero values; ignores tolerance.,FreeText,,0
130,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,copy(),copy,cern.colt.matrix.ObjectMatrix1D,"Constructs and returns a deep copy of the receiver.  Note that the returned matrix is an independent deep copy. The returned matrix is not backed by this matrix, so changes in the returned matrix are not reflected in this matrix, and vice-versa.",FreeText,,0
131,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,equals(java.lang.Object otherObj),equals,cern.colt.matrix.ObjectMatrix1D,"Compares the specified Object with the receiver for equality. Equivalent to equals(otherObj,true).",FreeText,"methodResultID==(receiverObjectClone.equals(args[0],true))",1
132,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"equals(java.lang.Object otherObj, boolean testForEquality)",equals,cern.colt.matrix.ObjectMatrix1D,"Compares the specified Object with the receiver for equality. Returns true if and only if the specified Object is also at least an ObjectMatrix1D, both matrices have the same size, and all corresponding pairs of cells in the two matrices are the same. In other words, two matrices are defined to be equal if they contain the same cell values in the same order. Tests elements for equality or identity as specified by testForEquality. When testing for equality, two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).)",FreeText,,0
133,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,get(int index),get,cern.colt.matrix.ObjectMatrix1D,Returns the matrix cell value at coordinate index.,FreeText,,0
134,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,getContent(),getContent,cern.colt.matrix.ObjectMatrix1D,Returns the content of this matrix if it is a wrapper; or this otherwise. Override this method in wrappers.,FreeText,,0
135,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"getNonZeros(cern.colt.list.IntArrayList indexList, cern.colt.list.ObjectArrayList valueList)",getNonZeros,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
136,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,getQuick(int index),getQuick,cern.colt.matrix.ObjectMatrix1D,Returns the matrix cell value at coordinate index. Provided with invalid parameters this method may return invalid objects without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): index<0 || index>=size().,FreeText,,0
137,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,haveSharedCells(cern.colt.matrix.ObjectMatrix1D other),haveSharedCells,cern.colt.matrix.ObjectMatrix1D,Returns true if both matrices share at least one identical cell.,FreeText,,0
138,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D other),haveSharedCellsRaw,cern.colt.matrix.ObjectMatrix1D,Returns true if both matrices share at least one identical cell.,FreeText,,0
139,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,like(),like,cern.colt.matrix.ObjectMatrix1D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the same size. For example, if the receiver is an instance of type DenseObjectMatrix1D the new matrix must also be of type DenseObjectMatrix1D, if the receiver is an instance of type SparseObjectMatrix1D the new matrix must also be of type SparseObjectMatrix1D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
140,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,like(int size),like,cern.colt.matrix.ObjectMatrix1D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the specified size. For example, if the receiver is an instance of type DenseObjectMatrix1D the new matrix must also be of type DenseObjectMatrix1D, if the receiver is an instance of type SparseObjectMatrix1D the new matrix must also be of type SparseObjectMatrix1D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
141,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"like2D(int rows, int columns)",like2D,cern.colt.matrix.ObjectMatrix1D,"Construct and returns a new 2-d matrix of the corresponding dynamic type, entirelly independent of the receiver. For example, if the receiver is an instance of type DenseObjectMatrix1D the new matrix must be of type DenseObjectMatrix2D, if the receiver is an instance of type SparseObjectMatrix1D the new matrix must be of type SparseObjectMatrix2D, etc.",FreeText,,0
142,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"set(int index, java.lang.Object value)",set,cern.colt.matrix.ObjectMatrix1D,Sets the matrix cell at coordinate index to the specified value.,FreeText,,0
143,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"setQuick(int index, java.lang.Object value)",setQuick,cern.colt.matrix.ObjectMatrix1D,Sets the matrix cell at coordinate index to the specified value. Provided with invalid parameters this method may access illegal indexes without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): index<0 || index>=size().,FreeText,,0
144,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,swap(cern.colt.matrix.ObjectMatrix1D other),swap,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
145,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,toArray(),toArray,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
146,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,toArray(java.lang.Object[] values),toArray,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
147,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,toString(),toString,cern.colt.matrix.ObjectMatrix1D,Returns a string representation using default formatting. @see cern.colt.matrix.objectalgo.Formatter,FreeText,,0
148,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,view(),view,cern.colt.matrix.ObjectMatrix1D,"Constructs and returns a new view equal to the receiver. The view is a shallow clone. Calls clone() and casts the result.  Note that the view is not a deep copy. The returned matrix is backed by this matrix, so changes in the returned matrix are reflected in this matrix, and vice-versa.  Use #copy() to construct an independent deep copy rather than a new view.",FreeText,,0
149,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewFlip(),viewFlip,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
150,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,"viewPart(int index, int width)",viewPart,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
151,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewSelection(int[] indexes),viewSelection,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
152,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewSelection(cern.colt.function.ObjectProcedure condition),viewSelection,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
153,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewSelectionLike(int[] offsets),viewSelectionLike,cern.colt.matrix.ObjectMatrix1D,Construct and returns a new selection view.,FreeText,,0
154,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewSorted(),viewSorted,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
155,colt,cern.colt.matrix.ObjectMatrix1D_goal.json,viewStrides(int stride),viewStrides,cern.colt.matrix.ObjectMatrix1D,,FreeText,,0
156,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,cern.colt.matrix.ObjectMatrix2D(),cern.colt.matrix.ObjectMatrix2D,cern.colt.matrix.ObjectMatrix2D,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
157,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"aggregate(cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
158,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"aggregate(cern.colt.matrix.ObjectMatrix2D other, cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
159,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,assign(java.lang.Object[][] values),assign,cern.colt.matrix.ObjectMatrix2D,"Sets all cells to the state specified by values. values is required to have the form values[row][column] and have exactly the same number of rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
160,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,assign(cern.colt.function.ObjectFunction function),assign,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
161,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,assign(cern.colt.matrix.ObjectMatrix2D other),assign,cern.colt.matrix.ObjectMatrix2D,"Replaces all cell values of the receiver with the values of another matrix. Both matrices must have the same number of rows and columns. If both matrices share the same cells (as is the case if they are views derived from the same matrix) and intersect in an ambiguous way, then replaces as if using an intermediate auxiliary deep copy of other.",FreeText,,0
162,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"assign(cern.colt.matrix.ObjectMatrix2D y, cern.colt.function.ObjectObjectFunction function)",assign,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
163,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,assign(java.lang.Object value),assign,cern.colt.matrix.ObjectMatrix2D,Sets all cells to the state specified by value.,FreeText,,0
164,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,cardinality(),cardinality,cern.colt.matrix.ObjectMatrix2D,Returns the number of cells having non-zero values; ignores tolerance.,FreeText,,0
165,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,copy(),copy,cern.colt.matrix.ObjectMatrix2D,"Constructs and returns a deep copy of the receiver.  Note that the returned matrix is an independent deep copy. The returned matrix is not backed by this matrix, so changes in the returned matrix are not reflected in this matrix, and vice-versa.",FreeText,,0
166,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,equals(java.lang.Object otherObj),equals,cern.colt.matrix.ObjectMatrix2D,"Compares the specified Object with the receiver for equality. Equivalent to equals(otherObj,true).",FreeText,"methodResultID==(receiverObjectClone.equals(args[0],true))",1
167,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"equals(java.lang.Object otherObj, boolean testForEquality)",equals,cern.colt.matrix.ObjectMatrix2D,"Compares the specified Object with the receiver for equality. Returns true if and only if the specified Object is also at least an ObjectMatrix2D, both matrices have the same size, and all corresponding pairs of cells in the two matrices are the same. In other words, two matrices are defined to be equal if they contain the same cell values in the same order. Tests elements for equality or identity as specified by testForEquality. When testing for equality, two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).)",FreeText,,0
168,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"get(int row, int column)",get,cern.colt.matrix.ObjectMatrix2D,"Returns the matrix cell value at coordinate [row,column].",FreeText,,0
169,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,getContent(),getContent,cern.colt.matrix.ObjectMatrix2D,Returns the content of this matrix if it is a wrapper; or this otherwise. Override this method in wrappers.,FreeText,,0
170,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"getNonZeros(cern.colt.list.IntArrayList rowList, cern.colt.list.IntArrayList columnList, cern.colt.list.ObjectArrayList valueList)",getNonZeros,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
171,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"getQuick(int row, int column)",getQuick,cern.colt.matrix.ObjectMatrix2D,"Returns the matrix cell value at coordinate [row,column]. Provided with invalid parameters this method may return invalid objects without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): 0 <= column < columns() && 0 <= row < rows().",FreeText,,0
172,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,haveSharedCells(cern.colt.matrix.ObjectMatrix2D other),haveSharedCells,cern.colt.matrix.ObjectMatrix2D,Returns true if both matrices share at least one identical cell.,FreeText,,0
173,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D other),haveSharedCellsRaw,cern.colt.matrix.ObjectMatrix2D,Returns true if both matrices share at least one identical cell.,FreeText,,0
174,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,like(),like,cern.colt.matrix.ObjectMatrix2D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the same number of rows and columns. For example, if the receiver is an instance of type DenseObjectMatrix2D the new matrix must also be of type DenseObjectMatrix2D, if the receiver is an instance of type SparseObjectMatrix2D the new matrix must also be of type SparseObjectMatrix2D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
175,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"like(int rows, int columns)",like,cern.colt.matrix.ObjectMatrix2D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the specified number of rows and columns. For example, if the receiver is an instance of type DenseObjectMatrix2D the new matrix must also be of type DenseObjectMatrix2D, if the receiver is an instance of type SparseObjectMatrix2D the new matrix must also be of type SparseObjectMatrix2D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
176,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,like1D(int size),like1D,cern.colt.matrix.ObjectMatrix2D,"Construct and returns a new 1-d matrix of the corresponding dynamic type, entirelly independent of the receiver. For example, if the receiver is an instance of type DenseObjectMatrix2D the new matrix must be of type DenseObjectMatrix1D, if the receiver is an instance of type SparseObjectMatrix2D the new matrix must be of type SparseObjectMatrix1D, etc.",FreeText,,0
177,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"like1D(int size, int zero, int stride)",like1D,cern.colt.matrix.ObjectMatrix2D,"Construct and returns a new 1-d matrix of the corresponding dynamic type, sharing the same cells. For example, if the receiver is an instance of type DenseObjectMatrix2D the new matrix must be of type DenseObjectMatrix1D, if the receiver is an instance of type SparseObjectMatrix2D the new matrix must be of type SparseObjectMatrix1D, etc.",FreeText,,0
178,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"set(int row, int column, java.lang.Object value)",set,cern.colt.matrix.ObjectMatrix2D,"Sets the matrix cell at coordinate [row,column] to the specified value.",FreeText,,0
179,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"setQuick(int row, int column, java.lang.Object value)",setQuick,cern.colt.matrix.ObjectMatrix2D,"Sets the matrix cell at coordinate [row,column] to the specified value. Provided with invalid parameters this method may access illegal indexes without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): 0 <= column < columns() && 0 <= row < rows().",FreeText,,0
180,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,toArray(),toArray,cern.colt.matrix.ObjectMatrix2D,"Constructs and returns a 2-dimensional array containing the cell values. The returned array values has the form values[row][column] and has the same number of rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
181,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,toString(),toString,cern.colt.matrix.ObjectMatrix2D,Returns a string representation using default formatting. @see cern.colt.matrix.objectalgo.Formatter,FreeText,,0
182,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,view(),view,cern.colt.matrix.ObjectMatrix2D,"Constructs and returns a new view equal to the receiver. The view is a shallow clone. Calls clone() and casts the result.  Note that the view is not a deep copy. The returned matrix is backed by this matrix, so changes in the returned matrix are reflected in this matrix, and vice-versa.  Use #copy() to construct an independent deep copy rather than a new view.",FreeText,,0
183,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewColumn(int column),viewColumn,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
184,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewColumnFlip(),viewColumnFlip,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
185,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewDice(),viewDice,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
186,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"viewPart(int row, int column, int height, int width)",viewPart,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
187,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewRow(int row),viewRow,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
188,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewRowFlip(),viewRowFlip,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
189,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"viewSelection(int[] rowIndexes, int[] columnIndexes)",viewSelection,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
190,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewSelection(cern.colt.matrix.ObjectMatrix1DProcedure condition),viewSelection,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
191,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"viewSelectionLike(int[] rowOffsets, int[] columnOffsets)",viewSelectionLike,cern.colt.matrix.ObjectMatrix2D,Construct and returns a new selection view.,FreeText,,0
192,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,viewSorted(int column),viewSorted,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
193,colt,cern.colt.matrix.ObjectMatrix2D_goal.json,"viewStrides(int rowStride, int columnStride)",viewStrides,cern.colt.matrix.ObjectMatrix2D,,FreeText,,0
194,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,cern.colt.matrix.ObjectMatrix3D(),cern.colt.matrix.ObjectMatrix3D,cern.colt.matrix.ObjectMatrix3D,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
195,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"aggregate(cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
196,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"aggregate(cern.colt.matrix.ObjectMatrix3D other, cern.colt.function.ObjectObjectFunction aggr, cern.colt.function.ObjectObjectFunction f)",aggregate,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
197,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,assign(java.lang.Object[][][] values),assign,cern.colt.matrix.ObjectMatrix3D,"Sets all cells to the state specified by values. values is required to have the form values[slice][row][column] and have exactly the same number of slices, rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
198,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,assign(cern.colt.function.ObjectFunction function),assign,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
199,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,assign(cern.colt.matrix.ObjectMatrix3D other),assign,cern.colt.matrix.ObjectMatrix3D,"Replaces all cell values of the receiver with the values of another matrix. Both matrices must have the same number of slices, rows and columns. If both matrices share the same cells (as is the case if they are views derived from the same matrix) and intersect in an ambiguous way, then replaces as if using an intermediate auxiliary deep copy of other.",FreeText,,0
200,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"assign(cern.colt.matrix.ObjectMatrix3D y, cern.colt.function.ObjectObjectFunction function)",assign,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
201,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,assign(java.lang.Object value),assign,cern.colt.matrix.ObjectMatrix3D,Sets all cells to the state specified by value.,FreeText,,0
202,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,cardinality(),cardinality,cern.colt.matrix.ObjectMatrix3D,Returns the number of cells having non-zero values; ignores tolerance.,FreeText,,0
203,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,copy(),copy,cern.colt.matrix.ObjectMatrix3D,"Constructs and returns a deep copy of the receiver.  Note that the returned matrix is an independent deep copy. The returned matrix is not backed by this matrix, so changes in the returned matrix are not reflected in this matrix, and vice-versa.",FreeText,,0
204,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,equals(java.lang.Object otherObj),equals,cern.colt.matrix.ObjectMatrix3D,"Compares the specified Object with the receiver for equality. Equivalent to equals(otherObj,true).",FreeText,"methodResultID==(receiverObjectClone.equals(args[0],true))",1
205,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"equals(java.lang.Object otherObj, boolean testForEquality)",equals,cern.colt.matrix.ObjectMatrix3D,"Compares the specified Object with the receiver for equality. Returns true if and only if the specified Object is also at least an ObjectMatrix3D, both matrices have the same size, and all corresponding pairs of cells in the two matrices are the same. In other words, two matrices are defined to be equal if they contain the same cell values in the same order. Tests elements for equality or identity as specified by testForEquality. When testing for equality, two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).)",FreeText,,0
206,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"get(int slice, int row, int column)",get,cern.colt.matrix.ObjectMatrix3D,"Returns the matrix cell value at coordinate [slice,row,column].",FreeText,,0
207,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,getContent(),getContent,cern.colt.matrix.ObjectMatrix3D,Returns the content of this matrix if it is a wrapper; or this otherwise. Override this method in wrappers.,FreeText,,0
208,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"getNonZeros(cern.colt.list.IntArrayList sliceList, cern.colt.list.IntArrayList rowList, cern.colt.list.IntArrayList columnList, cern.colt.list.ObjectArrayList valueList)",getNonZeros,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
209,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"getQuick(int slice, int row, int column)",getQuick,cern.colt.matrix.ObjectMatrix3D,"Returns the matrix cell value at coordinate [slice,row,column]. Provided with invalid parameters this method may return invalid objects without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): slice<0 || slice>=slices() || row<0 || row>=rows() || column<0 || column>=column().",FreeText,,0
210,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,haveSharedCells(cern.colt.matrix.ObjectMatrix3D other),haveSharedCells,cern.colt.matrix.ObjectMatrix3D,Returns true if both matrices share at least one identical cell.,FreeText,,0
211,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D other),haveSharedCellsRaw,cern.colt.matrix.ObjectMatrix3D,Returns true if both matrices share at least one identical cell.,FreeText,,0
212,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,like(),like,cern.colt.matrix.ObjectMatrix3D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the same number of slices, rows and columns. For example, if the receiver is an instance of type DenseObjectMatrix3D the new matrix must also be of type DenseObjectMatrix3D, if the receiver is an instance of type SparseObjectMatrix3D the new matrix must also be of type SparseObjectMatrix3D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
213,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"like(int slices, int rows, int columns)",like,cern.colt.matrix.ObjectMatrix3D,"Construct and returns a new empty matrix of the same dynamic type as the receiver, having the specified number of slices, rows and columns. For example, if the receiver is an instance of type DenseObjectMatrix3D the new matrix must also be of type DenseObjectMatrix3D, if the receiver is an instance of type SparseObjectMatrix3D the new matrix must also be of type SparseObjectMatrix3D, etc. In general, the new matrix should have internal parametrization as similar as possible.",FreeText,,0
214,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"like2D(int rows, int columns, int rowZero, int columnZero, int rowStride, int columnStride)",like2D,cern.colt.matrix.ObjectMatrix3D,"Construct and returns a new 2-d matrix of the corresponding dynamic type, sharing the same cells. For example, if the receiver is an instance of type DenseObjectMatrix3D the new matrix must also be of type DenseObjectMatrix2D, if the receiver is an instance of type SparseObjectMatrix3D the new matrix must also be of type SparseObjectMatrix2D, etc.",FreeText,,0
215,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"set(int slice, int row, int column, java.lang.Object value)",set,cern.colt.matrix.ObjectMatrix3D,"Sets the matrix cell at coordinate [slice,row,column] to the specified value.",FreeText,,0
216,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"setQuick(int slice, int row, int column, java.lang.Object value)",setQuick,cern.colt.matrix.ObjectMatrix3D,"Sets the matrix cell at coordinate [slice,row,column] to the specified value. Provided with invalid parameters this method may access illegal indexes without throwing any exception. You should only use this method when you are absolutely sure that the coordinate is within bounds. Precondition (unchecked): slice<0 || slice>=slices() || row<0 || row>=rows() || column<0 || column>=column().",FreeText,,0
217,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,toArray(),toArray,cern.colt.matrix.ObjectMatrix3D,"Constructs and returns a 2-dimensional array containing the cell values. The returned array values has the form values[slice][row][column] and has the same number of slices, rows and columns as the receiver.  The values are copied. So subsequent changes in values are not reflected in the matrix, and vice-versa.",FreeText,,0
218,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,toString(),toString,cern.colt.matrix.ObjectMatrix3D,Returns a string representation using default formatting. @see cern.colt.matrix.objectalgo.Formatter,FreeText,,0
219,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,view(),view,cern.colt.matrix.ObjectMatrix3D,"Constructs and returns a new view equal to the receiver. The view is a shallow clone. Calls clone() and casts the result.  Note that the view is not a deep copy. The returned matrix is backed by this matrix, so changes in the returned matrix are reflected in this matrix, and vice-versa.  Use #copy() if you want to construct an independent deep copy rather than a new view.",FreeText,,0
220,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewColumn(int column),viewColumn,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
221,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewColumnFlip(),viewColumnFlip,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
222,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewDice(int axis0, int axis1, int axis2)",viewDice,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
223,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewPart(int slice, int row, int column, int depth, int height, int width)",viewPart,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
224,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewRow(int row),viewRow,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
225,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewRowFlip(),viewRowFlip,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
226,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewSelection(int[] sliceIndexes, int[] rowIndexes, int[] columnIndexes)",viewSelection,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
227,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewSelection(cern.colt.matrix.ObjectMatrix2DProcedure condition),viewSelection,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
228,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewSelectionLike(int[] sliceOffsets, int[] rowOffsets, int[] columnOffsets)",viewSelectionLike,cern.colt.matrix.ObjectMatrix3D,Construct and returns a new selection view.,FreeText,,0
229,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewSlice(int slice),viewSlice,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
230,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,viewSliceFlip(),viewSliceFlip,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
231,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewSorted(int row, int column)",viewSorted,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
232,colt,cern.colt.matrix.ObjectMatrix3D_goal.json,"viewStrides(int sliceStride, int rowStride, int columnStride)",viewStrides,cern.colt.matrix.ObjectMatrix3D,,FreeText,,0
233,colt,cern.colt.Partitioning_goal.json,cern.colt.Partitioning(),cern.colt.Partitioning,cern.colt.Partitioning,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
234,colt,cern.colt.Partitioning_goal.json,"dualPartition(double[] list, double[] secondary, int from, int to, double[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",dualPartition,cern.colt.Partitioning,"Same as #dualPartition(int[],int[],int,int,int[],int,int,int[]) except that it synchronously partitions double[] rather than int[] arrays.",FreeText,,0
235,colt,cern.colt.Partitioning_goal.json,"dualPartition(double[] list, double[] secondary, int from, int to, double splitter)",dualPartition,cern.colt.Partitioning,"Same as #dualPartition(int[],int[],int,int,int) except that it synchronously partitions double[] rather than int[] arrays.",FreeText,,0
236,colt,cern.colt.Partitioning_goal.json,"dualPartition(int[] list, int[] secondary, int from, int to, int[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",dualPartition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int[],int,int,int[]) except that this method synchronously partitions two arrays at the same time; both arrays are partially sorted according to the elements of the primary array. In other words, each time an element in the primary array is moved from index A to B, the correspoding element within the secondary array is also moved from index A to B.  Use cases:  Image having a large list of 2-dimensional points. If memory consumption and performance matter, it is a good idea to physically lay them out as two 1-dimensional arrays (using something like Point2D objects would be prohibitively expensive, both in terms of time and space). Now imagine wanting to histogram the points. We may want to partially sort the points by x-coordinate into intervals. This method efficiently does the job.  Performance:  Same as for single-partition methods.",FreeText,,0
237,colt,cern.colt.Partitioning_goal.json,"dualPartition(int[] list, int[] secondary, int from, int to, int splitter)",dualPartition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int) except that this method synchronously partitions two arrays at the same time; both arrays are partially sorted according to the elements of the primary array. In other words, each time an element in the primary array is moved from index A to B, the correspoding element within the secondary array is also moved from index A to B.  Performance:  Same as for single-partition methods.",FreeText,,0
238,colt,cern.colt.Partitioning_goal.json,"genericPartition(int from, int to, int splitFrom, int splitTo, int[] splitIndexes, cern.colt.function.IntComparator comp, cern.colt.function.IntComparator comp2, cern.colt.function.IntComparator comp3, cern.colt.Swapper swapper)",genericPartition,cern.colt.Partitioning,,FreeText,,0
239,colt,cern.colt.Partitioning_goal.json,"partition(double[] list, int from, int to, double[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",partition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int[],int,int,int[]) except that it partitions double[] rather than int[] arrays.",FreeText,,0
240,colt,cern.colt.Partitioning_goal.json,"partition(double[] list, int from, int to, double splitter)",partition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int) except that it partitions double[] rather than int[] arrays.",FreeText,,0
241,colt,cern.colt.Partitioning_goal.json,"partition(int[] list, int from, int to, int[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",partition,cern.colt.Partitioning,"Partitions (partially sorts) the given list such that all elements falling into some intervals are placed next to each other. Returns the indexes of elements delimiting intervals.  Example:  list = (7, 4, 5, 50, 6, 4, 3, 6), splitters = (5, 10, 30) defines the three intervals [-infinity,5), [5,10), [10,30). Lets define to sort the entire list (from=0, to=7) using all splitters (splitFrom==0, splitTo=2).  The method modifies the list to be list = (4, 4, 3, 6, 7, 5, 6, 50) and returns the splitIndexes = (2, 6, 6). In other words,  <li>All values <tt>list[0..2]</tt> fall into <tt>[-infinity,5)</tt>. <li>All values <tt>list[3..6]</tt> fall into <tt>[5,10)</tt>. <li>All values <tt>list[7..6]</tt> fall into <tt>[10,30)</tt>, i.e. no elements, since <tt>7>6</tt>. <li>All values <tt>list[7 .. 7=list.length-1]</tt> fall into <tt>[30,infinity]</tt>. <li>In general, all values <tt>list[splitIndexes[j-1]+1 .. splitIndexes[j]]</tt> fall into interval <tt>j</tt>.  As can be seen, the list is partially sorted such that values falling into a certain interval are placed next to each other. Note that within an interval, elements are entirelly unsorted. They are only sorted across interval boundaries. In particular, this partitioning algorithm is not stable: the relative order of elements is not preserved (Producing a stable algorithm would require no more than minor modifications to method partition(int[],int,int,int)).  More formally, this method guarantees that upon return for all j = splitFrom .. splitTo there holds: <br>for all i = splitIndexes[j-1]+1 .. splitIndexes[j]: splitters[j-1] <= list[i] < splitters[j].  Performance:  Let N=to-from+1 be the number of elements to be partitioned. Let k=splitTo-splitFrom+1 be the number of splitter elements. Then we have the following time complexities  <li>Worst case: <tt>O( N * log(k) )</tt>. <li>Average case: <tt>O( N * log(k) )</tt>. <li>Best case: <tt>O( N )</tt>. In general, the more uniform (skewed) the data is spread across intervals, the more performance approaches the worst (best) case. If no elements fall into the given intervals, running time is linear.  No temporary memory is allocated; the sort is in-place.  Implementation:  The algorithm can be seen as a Bentley/McIlroy quicksort where swapping and insertion sort are omitted. It is designed to detect and take advantage of skew while maintaining good performance in the uniform case.",FreeText,,0
242,colt,cern.colt.Partitioning_goal.json,"partition(int[] list, int from, int to, int splitter)",partition,cern.colt.Partitioning,"Partitions (partially sorts) the given list such that all elements falling into the given interval are placed next to each other. Returns the index of the element delimiting the interval.  Example:  list = (7, 4, 5, 50, 6, 4, 3, 6), splitter = 5 defines the two intervals [-infinity,5), [5,+infinity].  The method modifies the list to be list = (4, 4, 3, 50, 6, 7, 5, 6) and returns the split index 2. In other words,  <li>All values <tt>list[0..2]</tt> fall into <tt>[-infinity,5)</tt>. <li>All values <tt>list[3=2+1 .. 7=list.length-1]</tt> fall into <tt>[5,+infinity]</tt>.  As can be seen, the list is partially sorted such that values falling into a certain interval are placed next to each other. Note that within an interval, elements are entirelly unsorted. They are only sorted across interval boundaries. In particular, this partitioning algorithm is not stable.  More formally, this method guarantees that upon return there holds:  <li>for all <tt>i = from .. returnValue: list[i] < splitter</tt> and <li>for all <tt>i = returnValue+1 .. list.length-1: !(list[i] < splitter)</tt>.   Performance:  Let N=to-from+1 be the number of elements to be partially sorted. Then the time complexity is O( N ). No temporary memory is allocated; the sort is in-place.",FreeText,,0
243,colt,cern.colt.Partitioning_goal.json,"partition(java.lang.Object[] list, int from, int to, java.lang.Object[] splitters, int splitFrom, int splitTo, int[] splitIndexes, java.util.Comparator comp)",partition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int[],int,int,int[]) except that it partitions Object[] rather than int[] arrays.",FreeText,,0
244,colt,cern.colt.Partitioning_goal.json,"partition(java.lang.Object[] list, int from, int to, java.lang.Object splitter, java.util.Comparator comp)",partition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int) except that it synchronously partitions the objects of the given list by the order of the given comparator.",FreeText,,0
245,colt,cern.colt.Partitioning_goal.json,"partition(cern.colt.list.DoubleArrayList list, int from, int to, cern.colt.list.DoubleArrayList splitters, cern.colt.list.IntArrayList splitIndexes)",partition,cern.colt.Partitioning,"Equivalent to partition(list.elements(), from, to, splitters.elements(), 0, splitters.size()-1, splitIndexes.elements()).",FreeText,"receiverObjectID.partition(args[0], args[1], args[2], args[3], args[4]); receiverObjectClone.partition(args[0].elements(), args[1], args[2], args[3].elements(), 0, args[3].size()-1, args[4].elements())",1
246,colt,cern.colt.Partitioning_goal.json,"partition(cern.colt.list.IntArrayList list, int from, int to, cern.colt.list.IntArrayList splitters, cern.colt.list.IntArrayList splitIndexes)",partition,cern.colt.Partitioning,"Equivalent to partition(list.elements(), from, to, splitters.elements(), 0, splitters.size()-1, splitIndexes.elements()).",FreeText,"receiverObjectID.partition(args[0], args[1], args[2], args[3], args[4]); receiverObjectClone.partition(args[0].elements(), args[1], args[2], args[3].elements(), 0, args[3].size()-1, args[4].elements())",1
247,colt,cern.colt.Partitioning_goal.json,"triplePartition(double[] list, double[] secondary, double[] tertiary, int from, int to, double[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",triplePartition,cern.colt.Partitioning,"Same as #triplePartition(int[],int[],int[],int,int,int[],int,int,int[]) except that it synchronously partitions double[] rather than int[] arrays.",FreeText,,0
248,colt,cern.colt.Partitioning_goal.json,"triplePartition(double[] list, double[] secondary, double[] tertiary, int from, int to, double splitter)",triplePartition,cern.colt.Partitioning,"Same as #triplePartition(int[],int[],int[],int,int,int) except that it synchronously partitions double[] rather than int[] arrays.",FreeText,,0
249,colt,cern.colt.Partitioning_goal.json,"triplePartition(int[] list, int[] secondary, int[] tertiary, int from, int to, int[] splitters, int splitFrom, int splitTo, int[] splitIndexes)",triplePartition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int[],int,int,int[]) except that this method synchronously partitions three arrays at the same time; all three arrays are partially sorted according to the elements of the primary array. In other words, each time an element in the primary array is moved from index A to B, the correspoding element within the secondary array as well as the corresponding element within the tertiary array are also moved from index A to B.  Use cases:  Image having a large list of 3-dimensional points. If memory consumption and performance matter, it is a good idea to physically lay them out as three 1-dimensional arrays (using something like Point3D objects would be prohibitively expensive, both in terms of time and space). Now imagine wanting to histogram the points. We may want to partially sort the points by x-coordinate into intervals. This method efficiently does the job.  Performance:  Same as for single-partition methods.",FreeText,,0
250,colt,cern.colt.Partitioning_goal.json,"triplePartition(int[] list, int[] secondary, int[] tertiary, int from, int to, int splitter)",triplePartition,cern.colt.Partitioning,"Same as #partition(int[],int,int,int) except that this method synchronously partitions three arrays at the same time; all three arrays are partially sorted according to the elements of the primary array. In other words, each time an element in the primary array is moved from index A to B, the correspoding element within the secondary array as well as the corresponding element within the tertiary array are also moved from index A to B.  Performance:  Same as for single-partition methods.",FreeText,,0
251,colt,cern.colt.Timer_goal.json,cern.colt.Timer(),cern.colt.Timer,cern.colt.Timer,"Constructs a new timer, initially not started. Use start() to start the timer.",FreeText,,0
252,colt,cern.colt.Timer_goal.json,display(),display,cern.colt.Timer,Prints the elapsed time on System.out,FreeText,,0
253,colt,cern.colt.Timer_goal.json,elapsedTime(),elapsedTime,cern.colt.Timer,Same as seconds().,FreeText,methodResultID==(receiverObjectClone.seconds()),1
254,colt,cern.colt.Timer_goal.json,millis(),millis,cern.colt.Timer,"Returns the elapsed time in milli seconds; does not stop the timer, if started.",FreeText,,0
255,colt,cern.colt.Timer_goal.json,minus(cern.colt.Timer other),minus,cern.colt.Timer,T = this - other; Constructs and returns a new timer which is the difference of the receiver and the other timer. The new timer is not started.,FreeText,,0
256,colt,cern.colt.Timer_goal.json,minutes(),minutes,cern.colt.Timer,"Returns the elapsed time in minutes; does not stop the timer, if started.",FreeText,,0
257,colt,cern.colt.Timer_goal.json,plus(cern.colt.Timer other),plus,cern.colt.Timer,T = this + other; Constructs and returns a new timer which is the sum of the receiver and the other timer. The new timer is not started.,FreeText,,0
258,colt,cern.colt.Timer_goal.json,reset(),reset,cern.colt.Timer,Resets the timer.,FreeText,,0
259,colt,cern.colt.Timer_goal.json,seconds(),seconds,cern.colt.Timer,"Returns the elapsed time in seconds; does not stop the timer, if started.",FreeText,,0
260,colt,cern.colt.Timer_goal.json,start(),start,cern.colt.Timer,Starts the timer.,FreeText,,0
261,colt,cern.colt.Timer_goal.json,stop(),stop,cern.colt.Timer,"Stops the timer. You can start it again later, if necessary.",FreeText,,0
262,colt,cern.colt.Timer_goal.json,test(int size),test,cern.colt.Timer,Shows how to use a timer in convenient ways.,FreeText,,0
263,colt,cern.colt.Timer_goal.json,toString(),toString,cern.colt.Timer,Returns a String representation of the receiver.,FreeText,,0
264,colt,cern.jet.stat.Probability_goal.json,cern.jet.stat.Probability(),cern.jet.stat.Probability,cern.jet.stat.Probability,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
265,colt,cern.jet.stat.Probability_goal.json,"beta(double a, double b, double x)",beta,cern.jet.stat.Probability,"Returns the area from zero to x under the beta density function.  x - - | (a+b) | | a-1 b-1 P(x) = ---------- | t (1-t) dt - - | | | (a) | (b) - 0  This function is identical to the incomplete beta integral function Gamma.incompleteBeta(a, b, x). The complemented function is 1 - P(1-x) = Gamma.incompleteBeta( b, a, x );",FreeText,"methodResultID==Gamma.incompleteBeta(args[0], args[1], args[2])",1
266,colt,cern.jet.stat.Probability_goal.json,"betaComplemented(double a, double b, double x)",betaComplemented,cern.jet.stat.Probability,"Returns the area under the right hand tail (from x to infinity) of the beta density function. This function is identical to the incomplete beta integral function Gamma.incompleteBeta(b, a, x).",FreeText,,0
267,colt,cern.jet.stat.Probability_goal.json,"binomial(int k, int n, double p)",binomial,cern.jet.stat.Probability,"Returns the sum of the terms 0 through k of the Binomial probability density.  k -- ( n ) j n-j > ( ) p (1-p) -- ( j ) j=0  The terms are not summed directly; instead the incomplete beta integral is employed, according to the formula  y = binomial( k, n, p ) = Gamma.incompleteBeta( n-k, k+1, 1-p ).  All arguments must be positive,",FreeText,,0
268,colt,cern.jet.stat.Probability_goal.json,"binomialComplemented(int k, int n, double p)",binomialComplemented,cern.jet.stat.Probability,"Returns the sum of the terms k+1 through n of the Binomial probability density.  n -- ( n ) j n-j > ( ) p (1-p) -- ( j ) j=k+1  The terms are not summed directly; instead the incomplete beta integral is employed, according to the formula  y = binomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n-k, p ).  All arguments must be positive,",FreeText,,0
269,colt,cern.jet.stat.Probability_goal.json,"chiSquare(double v, double x)",chiSquare,cern.jet.stat.Probability,"Returns the area under the left hand tail (from 0 to x) of the Chi square probability density function with v degrees of freedom.  inf. - 1 | | v/2-1 -t/2 P( x | v ) = ----------- | t e dt v/2 - | | 2 | (v/2) - x  where x is the Chi-square variable.  The incomplete gamma integral is used, according to the formula  y = chiSquare( v, x ) = incompleteGamma( v/2.0, x/2.0 ).  The arguments must both be positive.",FreeText,,0
270,colt,cern.jet.stat.Probability_goal.json,"chiSquareComplemented(double v, double x)",chiSquareComplemented,cern.jet.stat.Probability,"Returns the area under the right hand tail (from x to infinity) of the Chi square probability density function with v degrees of freedom.  inf. - 1 | | v/2-1 -t/2 P( x | v ) = ----------- | t e dt v/2 - | | 2 | (v/2) - x  where x is the Chi-square variable. The incomplete gamma integral is used, according to the formula y = chiSquareComplemented( v, x ) = incompleteGammaComplement( v/2.0, x/2.0 ). The arguments must both be positive.",FreeText,,0
271,colt,cern.jet.stat.Probability_goal.json,errorFunction(double x),errorFunction,cern.jet.stat.Probability,"Returns the error function of the normal distribution; formerly named erf. The integral is  x - 2 | | 2 erf(x) = -------- | exp( - t ) dt. sqrt(pi) | | - 0  Implementation: For 0 <= |x| < 1, erf(x) = x * P4(x**2)/Q5(x**2); otherwise erf(x) = 1 - erfc(x).  Code adapted from the Java 2D Graph Package 2.4, which in turn is a port from the Cephes 2.2 Math Library (C).",FreeText,,0
272,colt,cern.jet.stat.Probability_goal.json,errorFunctionComplemented(double a),errorFunctionComplemented,cern.jet.stat.Probability,"Returns the complementary Error function of the normal distribution; formerly named erfc.  1 - erf(x) = inf. - 2 | | 2 erfc(x) = -------- | exp( - t ) dt sqrt(pi) | | - x  Implementation: For small x, erfc(x) = 1 - erf(x); otherwise rational approximations are computed.  Code adapted from the Java 2D Graph Package 2.4, which in turn is a port from the Cephes 2.2 Math Library (C).",FreeText,,0
273,colt,cern.jet.stat.Probability_goal.json,"gamma(double a, double b, double x)",gamma,cern.jet.stat.Probability,"Returns the integral from zero to x of the gamma probability density function.  x b - a | | b-1 -at y = ----- | t e dt - | | | (b) - 0  The incomplete gamma integral is used, according to the relation y = Gamma.incompleteGamma( b, a*x ).",FreeText,,0
274,colt,cern.jet.stat.Probability_goal.json,"gammaComplemented(double a, double b, double x)",gammaComplemented,cern.jet.stat.Probability,"Returns the integral from x to infinity of the gamma probability density function:  inf. b - a | | b-1 -at y = ----- | t e dt - | | | (b) - x  The incomplete gamma integral is used, according to the relation  y = Gamma.incompleteGammaComplement( b, a*x ).",FreeText,,0
275,colt,cern.jet.stat.Probability_goal.json,"negativeBinomial(int k, int n, double p)",negativeBinomial,cern.jet.stat.Probability,"Returns the sum of the terms 0 through k of the Negative Binomial Distribution.  k -- ( n+j-1 ) n j > ( ) p (1-p) -- ( j ) j=0  In a sequence of Bernoulli trials, this is the probability that k or fewer failures precede the n-th success.  The terms are not computed individually; instead the incomplete beta integral is employed, according to the formula  y = negativeBinomial( k, n, p ) = Gamma.incompleteBeta( n, k+1, p ). All arguments must be positive,",FreeText,,0
276,colt,cern.jet.stat.Probability_goal.json,"negativeBinomialComplemented(int k, int n, double p)",negativeBinomialComplemented,cern.jet.stat.Probability,"Returns the sum of the terms k+1 to infinity of the Negative Binomial distribution.  inf -- ( n+j-1 ) n j > ( ) p (1-p) -- ( j ) j=k+1  The terms are not computed individually; instead the incomplete beta integral is employed, according to the formula  y = negativeBinomialComplemented( k, n, p ) = Gamma.incompleteBeta( k+1, n, 1-p ). All arguments must be positive,",FreeText,,0
277,colt,cern.jet.stat.Probability_goal.json,normal(double a),normal,cern.jet.stat.Probability,"Returns the area under the Normal (Gaussian) probability density function, integrated from minus infinity to x (assumes mean is zero, variance is one).  x - 1 | | 2 normal(x) = --------- | exp( - t /2 ) dt sqrt(2pi) | | - -inf. = ( 1 + erf(z) ) / 2 = erfc(z) / 2  where z = x/sqrt(2). Computation is via the functions errorFunction and errorFunctionComplement.",FreeText,,0
278,colt,cern.jet.stat.Probability_goal.json,"normal(double mean, double variance, double x)",normal,cern.jet.stat.Probability,"Returns the area under the Normal (Gaussian) probability density function, integrated from minus infinity to x.  x - 1 | | 2 normal(x) = --------- | exp( - (t-mean) / 2v ) dt sqrt(2pi*v)| | - -inf.  where v = variance. Computation is via the functions errorFunction.",FreeText,,0
279,colt,cern.jet.stat.Probability_goal.json,normalInverse(double y0),normalInverse,cern.jet.stat.Probability,"Returns the value, x, for which the area under the Normal (Gaussian) probability density function (integrated from minus infinity to x) is equal to the argument y (assumes mean is zero, variance is one); formerly named ndtri.  For small arguments 0 < y < exp(-2), the program computes z = sqrt( -2.0 * log(y) ); then the approximation is x = z - log(z)/z - (1/z) P(1/z) / Q(1/z). There are two rational functions P/Q, one for 0 < y < exp(-32) and the other for y up to exp(-2). For larger arguments, w = y - 0.5, and x/sqrt(2pi) = w + w**3 R(w**2)/S(w**2)).",FreeText,,0
280,colt,cern.jet.stat.Probability_goal.json,"poisson(int k, double mean)",poisson,cern.jet.stat.Probability,"Returns the sum of the first k terms of the Poisson distribution.  k j -- -m m > e -- -- j! j=0  The terms are not summed directly; instead the incomplete gamma integral is employed, according to the relation  y = poisson( k, m ) = Gamma.incompleteGammaComplement( k+1, m ). The arguments must both be positive.",FreeText,,0
281,colt,cern.jet.stat.Probability_goal.json,"poissonComplemented(int k, double mean)",poissonComplemented,cern.jet.stat.Probability,"Returns the sum of the terms k+1 to Infinity of the Poisson distribution.  inf. j -- -m m > e -- -- j! j=k+1  The terms are not summed directly; instead the incomplete gamma integral is employed, according to the formula  y = poissonComplemented( k, m ) = Gamma.incompleteGamma( k+1, m ). The arguments must both be positive.",FreeText,,0
282,colt,cern.jet.stat.Probability_goal.json,"studentT(double k, double t)",studentT,cern.jet.stat.Probability,"Returns the integral from minus infinity to t of the Student-t distribution with k > 0 degrees of freedom.  t - | | - | 2 -(k+1)/2 | ( (k+1)/2 ) | ( x ) ---------------------- | ( 1 + --- ) dx - | ( k ) sqrt( k pi ) | ( k/2 ) | | | - -inf.  Relation to incomplete beta integral:  1 - studentT(k,t) = 0.5 * Gamma.incompleteBeta( k/2, 1/2, z ) where z = k/(k + t**2).  Since the function is symmetric about t=0, the area under the right tail of the density is found by calling the function with -t instead of t.",FreeText,,0
283,colt,cern.jet.stat.Probability_goal.json,"studentTInverse(double alpha, int size)",studentTInverse,cern.jet.stat.Probability,"Returns the value, t, for which the area under the Student-t probability density function (integrated from minus infinity to t) is equal to 1-alpha/2. The value returned corresponds to usual Student t-distribution lookup table for t<sub>alpha[size]</sub>.  The function uses the studentT function to determine the return value iteratively.",FreeText,,0
284,colt,cern.jet.stat.quantile.Utils_goal.json,cern.jet.stat.quantile.Utils(),cern.jet.stat.quantile.Utils,cern.jet.stat.quantile.Utils,"Makes this class non instantiable, but still let's others inherit from it.",FreeText,,0
285,colt,cern.jet.stat.quantile.Utils_goal.json,epsilonCeiling(double value),epsilonCeiling,cern.jet.stat.quantile.Utils,"Similar to Math.ceil(value), but adjusts small numerical rounding errors +- epsilon.",FreeText,,0
286,colt,hep.aida.bin.QuantileBin1D_goal.json,hep.aida.bin.QuantileBin1D(),hep.aida.bin.QuantileBin1D,hep.aida.bin.QuantileBin1D,Not public; for use by subclasses only! Constructs and returns an empty bin.,FreeText,,0
287,colt,hep.aida.bin.QuantileBin1D_goal.json,hep.aida.bin.QuantileBin1D(double epsilon),hep.aida.bin.QuantileBin1D,hep.aida.bin.QuantileBin1D,"Equivalent to new QuantileBin1D(false, Long.MAX_VALUE, epsilon, 0.001, 10000, new cern.jet.random.engine.DRand(new java.util.Date()).",FreeText,,0
288,colt,hep.aida.bin.QuantileBin1D_goal.json,"hep.aida.bin.QuantileBin1D(boolean known_N, long N, double epsilon, double delta, int quantiles, cern.jet.random.engine.RandomEngine randomGenerator)",hep.aida.bin.QuantileBin1D,hep.aida.bin.QuantileBin1D,"Equivalent to new QuantileBin1D(known_N, N, epsilon, delta, quantiles, randomGenerator, false, false, 2).",FreeText,,0
289,colt,hep.aida.bin.QuantileBin1D_goal.json,"hep.aida.bin.QuantileBin1D(boolean known_N, long N, double epsilon, double delta, int quantiles, cern.jet.random.engine.RandomEngine randomGenerator, boolean hasSumOfLogarithms, boolean hasSumOfInversions, int maxOrderForSumOfPowers)",hep.aida.bin.QuantileBin1D,hep.aida.bin.QuantileBin1D,"Constructs and returns an empty bin that, under the given constraints, minimizes the amount of memory needed. Some applications exactly know in advance over how many elements quantiles are to be computed. Provided with such information the main memory requirements of this class are small. Other applications don't know in advance over how many elements quantiles are to be computed. However, some of them can give an upper limit, which will reduce main memory requirements. For example, if elements are selected from a database and filled into histograms, it is usually not known in advance how many elements are being filled, but one may know that at most S elements, the number of elements in the database, are filled. A third type of application knowns nothing at all about the number of elements to be filled; from zero to infinitely many elements may actually be filled. This method efficiently supports all three types of applications.",FreeText,,0
290,colt,hep.aida.bin.QuantileBin1D_goal.json,"addAllOfFromTo(cern.colt.list.DoubleArrayList list, int from, int to)",addAllOfFromTo,hep.aida.bin.QuantileBin1D,Adds the part of the specified list between indexes from (inclusive) and to (inclusive) to the receiver.,FreeText,,0
291,colt,hep.aida.bin.QuantileBin1D_goal.json,clear(),clear,hep.aida.bin.QuantileBin1D,Removes all elements from the receiver. The receiver will be empty after this call returns.,FreeText,,0
292,colt,hep.aida.bin.QuantileBin1D_goal.json,clone(),clone,hep.aida.bin.QuantileBin1D,Returns a deep copy of the receiver.,FreeText,,0
293,colt,hep.aida.bin.QuantileBin1D_goal.json,compareWith(hep.aida.bin.AbstractBin1D other),compareWith,hep.aida.bin.QuantileBin1D,Computes the deviations from the receiver's measures to another bin's measures.,FreeText,,0
294,colt,hep.aida.bin.QuantileBin1D_goal.json,median(),median,hep.aida.bin.QuantileBin1D,Returns the median.,FreeText,,0
295,colt,hep.aida.bin.QuantileBin1D_goal.json,quantile(double phi),quantile,hep.aida.bin.QuantileBin1D,Computes and returns the phi-quantile.,FreeText,,0
296,colt,hep.aida.bin.QuantileBin1D_goal.json,quantileInverse(double element),quantileInverse,hep.aida.bin.QuantileBin1D,Returns how many percent of the elements contained in the receiver are <= element. Does linear interpolation if the element is not contained but lies in between two contained elements.,FreeText,,0
297,colt,hep.aida.bin.QuantileBin1D_goal.json,quantiles(cern.colt.list.DoubleArrayList phis),quantiles,hep.aida.bin.QuantileBin1D,Returns the quantiles of the specified percentages. For implementation reasons considerably more efficient than calling #quantile(double) various times.,FreeText,,0
298,colt,hep.aida.bin.QuantileBin1D_goal.json,"sizeOfRange(double minElement, double maxElement)",sizeOfRange,hep.aida.bin.QuantileBin1D,"Returns how many elements are contained in the range [minElement,maxElement]. Does linear interpolation if one or both of the parameter elements are not contained. Returns exact or approximate results, depending on the parametrization of this class or subclasses.",FreeText,,0
299,colt,hep.aida.bin.QuantileBin1D_goal.json,"splitApproximately(cern.colt.list.DoubleArrayList percentages, int k)",splitApproximately,hep.aida.bin.QuantileBin1D,,FreeText,,0
300,colt,hep.aida.bin.QuantileBin1D_goal.json,"splitApproximately(hep.aida.IAxis axis, int k)",splitApproximately,hep.aida.bin.QuantileBin1D,,FreeText,,0
301,colt,hep.aida.bin.QuantileBin1D_goal.json,toString(),toString,hep.aida.bin.QuantileBin1D,Returns a String representation of the receiver.,FreeText,,0
302,colt,hep.aida.IHistogram2D_goal.json,"binEntries(int indexX, int indexY)",binEntries,hep.aida.IHistogram2D,The number of entries (ie the number of times fill was called for this bin).,FreeText,,0
303,colt,hep.aida.IHistogram2D_goal.json,binEntriesX(int indexX),binEntriesX,hep.aida.IHistogram2D,Equivalent to projectionX().binEntries(indexX).,FreeText,methodResultID==(receiverObjectClone.projectionX().binEntries(args[0])),1
304,colt,hep.aida.IHistogram2D_goal.json,binEntriesY(int indexY),binEntriesY,hep.aida.IHistogram2D,Equivalent to projectionY().binEntries(indexY).,FreeText,methodResultID==(receiverObjectClone.projectionY().binEntries(args[0])),1
305,colt,hep.aida.IHistogram2D_goal.json,"binError(int indexX, int indexY)",binError,hep.aida.IHistogram2D,The error on this bin.,FreeText,,0
306,colt,hep.aida.IHistogram2D_goal.json,"binHeight(int indexX, int indexY)",binHeight,hep.aida.IHistogram2D,Total height of the corresponding bin (ie the sum of the weights in this bin).,FreeText,,0
307,colt,hep.aida.IHistogram2D_goal.json,binHeightX(int indexX),binHeightX,hep.aida.IHistogram2D,Equivalent to projectionX().binHeight(indexX).,FreeText,methodResultID==(receiverObjectClone.projectionX().binHeight(args[0])),1
308,colt,hep.aida.IHistogram2D_goal.json,binHeightY(int indexY),binHeightY,hep.aida.IHistogram2D,Equivalent to projectionY().binHeight(indexY).,FreeText,methodResultID==(receiverObjectClone.projectionY().binHeight(args[0])),1
309,colt,hep.aida.IHistogram2D_goal.json,"fill(double x, double y)",fill,hep.aida.IHistogram2D,Fill the histogram with weight 1.,FreeText,,0
310,colt,hep.aida.IHistogram2D_goal.json,"fill(double x, double y, double weight)",fill,hep.aida.IHistogram2D,Fill the histogram with specified weight.,FreeText,,0
311,colt,hep.aida.IHistogram2D_goal.json,meanX(),meanX,hep.aida.IHistogram2D,"Returns the mean of the histogram, as calculated on filling-time projected on the X axis.",FreeText,,0
312,colt,hep.aida.IHistogram2D_goal.json,meanY(),meanY,hep.aida.IHistogram2D,"Returns the mean of the histogram, as calculated on filling-time projected on the Y axis.",FreeText,,0
313,colt,hep.aida.IHistogram2D_goal.json,minMaxBins(),minMaxBins,hep.aida.IHistogram2D,"Indexes of the in-range bins containing the smallest and largest binHeight(), respectively.",FreeText,,0
314,colt,hep.aida.IHistogram2D_goal.json,projectionX(),projectionX,hep.aida.IHistogram2D,"Create a projection parallel to the X axis. Equivalent to sliceX(UNDERFLOW,OVERFLOW).",FreeText,,0
315,colt,hep.aida.IHistogram2D_goal.json,projectionY(),projectionY,hep.aida.IHistogram2D,"Create a projection parallel to the Y axis. Equivalent to sliceY(UNDERFLOW,OVERFLOW).",FreeText,,0
316,colt,hep.aida.IHistogram2D_goal.json,rmsX(),rmsX,hep.aida.IHistogram2D,Returns the rms of the histogram as calculated on filling-time projected on the X axis.,FreeText,,0
317,colt,hep.aida.IHistogram2D_goal.json,rmsY(),rmsY,hep.aida.IHistogram2D,Returns the rms of the histogram as calculated on filling-time projected on the Y axis.,FreeText,,0
318,colt,hep.aida.IHistogram2D_goal.json,sliceX(int indexY),sliceX,hep.aida.IHistogram2D,"Slice parallel to the Y axis at bin indexY and one bin wide. Equivalent to sliceX(indexY,indexY).",FreeText,"methodResultID.equals(receiverObjectClone.sliceX(args[0],args[0]))",1
319,colt,hep.aida.IHistogram2D_goal.json,"sliceX(int indexY1, int indexY2)",sliceX,hep.aida.IHistogram2D,"Create a slice parallel to the axis X axis, between ""indexY1"" and ""indexY2"" (inclusive). The returned IHistogram1D represents an instantaneous snapshot of the histogram at the time the slice was created.",FreeText,,0
320,colt,hep.aida.IHistogram2D_goal.json,sliceY(int indexX),sliceY,hep.aida.IHistogram2D,"Slice parallel to the X axis at bin indexX and one bin wide. Equivalent to sliceY(indexX,indexX).",FreeText,"methodResultID.equals(receiverObjectClone.sliceY(args[0],args[0]))",1
321,colt,hep.aida.IHistogram2D_goal.json,"sliceY(int indexX1, int indexX2)",sliceY,hep.aida.IHistogram2D,"Create a slice parallel to the axis Y axis, between ""indexX1"" and ""indexX2"" (inclusive) The returned IHistogram1D represents an instantaneous snapshot of the histogram at the time the slice was created.",FreeText,,0
322,colt,hep.aida.IHistogram2D_goal.json,xAxis(),xAxis,hep.aida.IHistogram2D,Return the X axis.,FreeText,,0
323,colt,hep.aida.IHistogram2D_goal.json,yAxis(),yAxis,hep.aida.IHistogram2D,Return the Y axis.,FreeText,,0
324,colt,hep.aida.IHistogram3D_goal.json,"binEntries(int indexX, int indexY, int indexZ)",binEntries,hep.aida.IHistogram3D,The number of entries (ie the number of times fill was called for this bin).,FreeText,,0
325,colt,hep.aida.IHistogram3D_goal.json,"binError(int indexX, int indexY, int indexZ)",binError,hep.aida.IHistogram3D,The error on this bin.,FreeText,,0
326,colt,hep.aida.IHistogram3D_goal.json,"binHeight(int indexX, int indexY, int indexZ)",binHeight,hep.aida.IHistogram3D,Total height of the corresponding bin (ie the sum of the weights in this bin).,FreeText,,0
327,colt,hep.aida.IHistogram3D_goal.json,"fill(double x, double y, double z)",fill,hep.aida.IHistogram3D,"Fill the histogram with weight 1; equivalent to fill(x,y,z,1)..",FreeText,"receiverObjectClone.fill(args[0],args[1],args[2],1);
receiverObjectClone.equals(receiverObjectID)",1
328,colt,hep.aida.IHistogram3D_goal.json,"fill(double x, double y, double z, double weight)",fill,hep.aida.IHistogram3D,Fill the histogram with specified weight.,FreeText,,0
329,colt,hep.aida.IHistogram3D_goal.json,meanX(),meanX,hep.aida.IHistogram3D,"Returns the mean of the histogram, as calculated on filling-time projected on the X axis.",FreeText,,0
330,colt,hep.aida.IHistogram3D_goal.json,meanY(),meanY,hep.aida.IHistogram3D,"Returns the mean of the histogram, as calculated on filling-time projected on the Y axis.",FreeText,,0
331,colt,hep.aida.IHistogram3D_goal.json,meanZ(),meanZ,hep.aida.IHistogram3D,"Returns the mean of the histogram, as calculated on filling-time projected on the Z axis.",FreeText,,0
332,colt,hep.aida.IHistogram3D_goal.json,minMaxBins(),minMaxBins,hep.aida.IHistogram3D,"Indexes of the in-range bins containing the smallest and largest binHeight(), respectively.",FreeText,,0
333,colt,hep.aida.IHistogram3D_goal.json,projectionXY(),projectionXY,hep.aida.IHistogram3D,"Create a projection parallel to the XY plane. Equivalent to sliceXY(UNDERFLOW,OVERFLOW).",FreeText,,0
334,colt,hep.aida.IHistogram3D_goal.json,projectionXZ(),projectionXZ,hep.aida.IHistogram3D,"Create a projection parallel to the XZ plane. Equivalent to sliceXZ(UNDERFLOW,OVERFLOW).",FreeText,,0
335,colt,hep.aida.IHistogram3D_goal.json,projectionYZ(),projectionYZ,hep.aida.IHistogram3D,"Create a projection parallel to the YZ plane. Equivalent to sliceYZ(UNDERFLOW,OVERFLOW).",FreeText,,0
336,colt,hep.aida.IHistogram3D_goal.json,rmsX(),rmsX,hep.aida.IHistogram3D,Returns the rms of the histogram as calculated on filling-time projected on the X axis.,FreeText,,0
337,colt,hep.aida.IHistogram3D_goal.json,rmsY(),rmsY,hep.aida.IHistogram3D,Returns the rms of the histogram as calculated on filling-time projected on the Y axis.,FreeText,,0
338,colt,hep.aida.IHistogram3D_goal.json,rmsZ(),rmsZ,hep.aida.IHistogram3D,Returns the rms of the histogram as calculated on filling-time projected on the Z axis.,FreeText,,0
339,colt,hep.aida.IHistogram3D_goal.json,sliceXY(int indexZ),sliceXY,hep.aida.IHistogram3D,"Create a slice parallel to the XY plane at bin indexZ and one bin wide. Equivalent to sliceXY(indexZ,indexZ).",FreeText,"methodResultID.equals(receiverObjectClone.sliceXY(args[0],args[0]))",1
340,colt,hep.aida.IHistogram3D_goal.json,"sliceXY(int indexZ1, int indexZ2)",sliceXY,hep.aida.IHistogram3D,"Create a slice parallel to the XY plane, between ""indexZ1"" and ""indexZ2"" (inclusive). The returned IHistogram2D represents an instantaneous snapshot of the histogram at the time the slice was created.",FreeText,,0
341,colt,hep.aida.IHistogram3D_goal.json,sliceXZ(int indexY),sliceXZ,hep.aida.IHistogram3D,"Create a slice parallel to the XZ plane at bin indexY and one bin wide. Equivalent to sliceXZ(indexY,indexY).",FreeText,"methodResultID.equals(receiverObjectClone.sliceXZ(args[0],args[0]))",1
342,colt,hep.aida.IHistogram3D_goal.json,"sliceXZ(int indexY1, int indexY2)",sliceXZ,hep.aida.IHistogram3D,"Create a slice parallel to the XZ plane, between ""indexY1"" and ""indexY2"" (inclusive). The returned IHistogram2D represents an instantaneous snapshot of the histogram at the time the slice was created.",FreeText,,0
343,colt,hep.aida.IHistogram3D_goal.json,sliceYZ(int indexX),sliceYZ,hep.aida.IHistogram3D,"Create a slice parallel to the YZ plane at bin indexX and one bin wide. Equivalent to sliceYZ(indexX,indexX).",FreeText,"methodResultID.equals(receiverObjectClone.sliceYZ(args[0],args[0]))",1
344,colt,hep.aida.IHistogram3D_goal.json,"sliceYZ(int indexX1, int indexX2)",sliceYZ,hep.aida.IHistogram3D,"Create a slice parallel to the YZ plane, between ""indexX1"" and ""indexX2"" (inclusive). The returned IHistogram2D represents an instantaneous snapshot of the histogram at the time the slice was created.",FreeText,,0
345,colt,hep.aida.IHistogram3D_goal.json,xAxis(),xAxis,hep.aida.IHistogram3D,Return the X axis.,FreeText,,0
346,colt,hep.aida.IHistogram3D_goal.json,yAxis(),yAxis,hep.aida.IHistogram3D,Return the Y axis.,FreeText,,0
347,colt,hep.aida.IHistogram3D_goal.json,zAxis(),zAxis,hep.aida.IHistogram3D,Return the Z axis.,FreeText,,0
348,elastic,org.elasticsearch.cluster.action.index.MappingUpdatedAction_goal.json,"updateMappingOnMaster(org.elasticsearch.index.Index index, java.lang.String type, org.elasticsearch.index.mapper.Mapping mappingUpdate, org.elasticsearch.common.unit.TimeValue timeout)",updateMappingOnMaster,org.elasticsearch.cluster.action.index.MappingUpdatedAction,"Update mappings synchronously on the master node, waiting for at most timeout. When this method returns successfully mappings have been applied to the master node and propagated to data nodes.",FreeText,,0
349,elastic,org.elasticsearch.cluster.action.index.MappingUpdatedAction_goal.json,"org.elasticsearch.cluster.action.index.MappingUpdatedAction(org.elasticsearch.common.settings.Settings settings, org.elasticsearch.common.settings.ClusterSettings clusterSettings)",org.elasticsearch.cluster.action.index.MappingUpdatedAction,org.elasticsearch.cluster.action.index.MappingUpdatedAction,,FreeText,,0
350,elastic,org.elasticsearch.cluster.action.index.MappingUpdatedAction_goal.json,"updateMappingOnMaster(org.elasticsearch.index.Index index, java.lang.String type, org.elasticsearch.index.mapper.Mapping mappingUpdate)",updateMappingOnMaster,org.elasticsearch.cluster.action.index.MappingUpdatedAction,"Same as #updateMappingOnMaster(Index, String, Mapping, TimeValue) using the default timeout.",FreeText,,0
351,elastic,org.elasticsearch.cluster.action.index.MappingUpdatedAction_goal.json,setClient(org.elasticsearch.client.Client client),setClient,org.elasticsearch.cluster.action.index.MappingUpdatedAction,,FreeText,,0
352,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"resolveSearchRoutingAllIndices(org.elasticsearch.cluster.metadata.MetaData metaData, java.lang.String routing)",resolveSearchRoutingAllIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Sets the same routing for all indices,FreeText,,0
353,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"indexAliases(org.elasticsearch.cluster.ClusterState state, java.lang.String index, java.util.function.Predicate<org.elasticsearch.cluster.metadata.AliasMetaData> requiredAlias, boolean skipIdentity, java.lang.String... expressions)",indexAliases,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Iterates through the list of indices and selects the effective list of required aliases for the given index. Only aliases where the given predicate tests successfully are returned. If the indices list contains a non-required reference to the index itself - null is returned. Returns null if no filtering is required.,FreeText,,0
354,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndices(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.support.IndicesOptions options, long startTime, java.lang.String... indexExpressions)",concreteIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Translates the provided index expression into actual concrete indices, properly deduplicated.",FreeText,,0
355,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"resolveSearchRouting(org.elasticsearch.cluster.ClusterState state, java.lang.String routing, java.lang.String... expressions)",resolveSearchRouting,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Resolves the search routing if in the expression aliases are used. If expressions point to concrete indices or aliases with no routing defined the specified routing is used.,FreeText,,0
356,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndexNames(org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$Context context, java.lang.String... indexExpressions)",concreteIndexNames,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,,FreeText,,0
357,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndexNames(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.IndicesRequest request)",concreteIndexNames,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Same as #concreteIndexNames(ClusterState, IndicesOptions, String...), but the index expressions and options are encapsulated in the specified request.",FreeText,,0
358,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"hasIndexOrAlias(java.lang.String aliasOrIndex, org.elasticsearch.cluster.ClusterState state)",hasIndexOrAlias,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,,FreeText,,0
359,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndices(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.IndicesRequest request)",concreteIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Same as #concreteIndices(ClusterState, IndicesOptions, String...), but the index expressions and options are encapsulated in the specified request.",FreeText,,0
360,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndices(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.support.IndicesOptions options, java.lang.String... indexExpressions)",concreteIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Translates the provided index expression into actual concrete indices, properly deduplicated.",FreeText,,0
361,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,resolveDateMathExpression(java.lang.String dateExpression),resolveDateMathExpression,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,,FreeText,,0
362,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"isPatternMatchingAllIndices(org.elasticsearch.cluster.metadata.MetaData metaData, java.lang.String[] indicesOrAliases, java.lang.String[] concreteIndices)",isPatternMatchingAllIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Identifies whether the first argument (an array containing index names) is a pattern that matches all indices,FreeText,,0
363,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"matchesIndex(java.lang.String indexName, java.lang.String expression, org.elasticsearch.cluster.ClusterState state)",matchesIndex,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Returns true iff the given expression resolves to the given index name otherwise false,FreeText,,0
364,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndexNames(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.support.IndicesOptions options, java.lang.String... indexExpressions)",concreteIndexNames,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Translates the provided index expression into actual concrete indices, properly deduplicated.",FreeText,,0
365,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteIndices(org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$Context context, java.lang.String... indexExpressions)",concreteIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,,FreeText,,0
366,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver(org.elasticsearch.common.settings.Settings settings),org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,,FreeText,,0
367,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"filteringAliases(org.elasticsearch.cluster.ClusterState state, java.lang.String index, java.lang.String... expressions)",filteringAliases,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Iterates through the list of indices and selects the effective list of filtering aliases for the given index. Only aliases with filters are returned. If the indices list contains a non-filtering reference to the index itself - null is returned. Returns null if no filtering is required.,FreeText,,0
368,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,"concreteSingleIndex(org.elasticsearch.cluster.ClusterState state, org.elasticsearch.action.IndicesRequest request)",concreteSingleIndex,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,"Utility method that allows to resolve an index expression to its corresponding single concrete index. Callers should make sure they provide proper org.elasticsearch.action.support.IndicesOptions that require a single index as a result. The indices resolution must in fact return a single index when using this method, an IllegalArgumentException gets thrown otherwise.",FreeText,,0
369,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,isAllIndices(java.util.List<java.lang.String> aliasesOrIndices),isAllIndices,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Identifies whether the array containing index names given as argument refers to all indices The empty or null array identifies all indices,FreeText,,0
370,elastic,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver_goal.json,isExplicitAllPattern(java.util.List<java.lang.String> aliasesOrIndices),isExplicitAllPattern,org.elasticsearch.cluster.metadata.IndexNameExpressionResolver,Identifies whether the array containing index names given as argument explicitly refers to all indices The empty or null array doesn't explicitly map to all indices,FreeText,,0
371,elastic,org.elasticsearch.cluster.routing.ShardShuffler_goal.json,nextSeed(),nextSeed,org.elasticsearch.cluster.routing.ShardShuffler,Return a new seed.,FreeText,,0
372,elastic,org.elasticsearch.cluster.routing.ShardShuffler_goal.json,"shuffle(java.util.List<org.elasticsearch.cluster.routing.ShardRouting> shards, int seed)",shuffle,org.elasticsearch.cluster.routing.ShardShuffler,"Return a shuffled view over the list of shards. The behavior of this method must be deterministic: if the same list and the same seed are provided twice, then the result needs to be the same.",FreeText,,0
373,elastic,org.elasticsearch.cluster.routing.ShardShuffler_goal.json,shuffle(java.util.List<org.elasticsearch.cluster.routing.ShardRouting> shards),shuffle,org.elasticsearch.cluster.routing.ShardShuffler,"Equivalent to calling shuffle(shards, nextSeed()).",FreeText,"methodResultID.equals(args[0], nextSeed())",1
374,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"appendElement(T[] array, T element)",appendElement,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
375,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"copyOf(java.util.Map<? extends K, ? extends V> map)",copyOf,org.elasticsearch.common.collect.CopyOnWriteHashMap,Return a copy of the provided map.,FreeText,,0
376,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,org.elasticsearch.common.collect.CopyOnWriteHashMap(),org.elasticsearch.common.collect.CopyOnWriteHashMap,org.elasticsearch.common.collect.CopyOnWriteHashMap,Create a new empty map.,FreeText,,0
377,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"copyAndPut(K key, V value)",copyAndPut,org.elasticsearch.common.collect.CopyOnWriteHashMap,Associate key with value and return a new copy of the hash table. The current hash table is not modified.,FreeText,,0
378,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,get(java.lang.Object key),get,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
379,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,entrySet(),entrySet,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
380,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,size(),size,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
381,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"copyAndPutAll(java.util.Map<? extends K, ? extends V> other)",copyAndPutAll,org.elasticsearch.common.collect.CopyOnWriteHashMap,"Same as #copyAndPut(Object, Object) but for an arbitrary number of entries.",FreeText,,0
382,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"insertElement(T[] array, T element, int index)",insertElement,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
383,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,copyAndRemove(java.lang.Object key),copyAndRemove,org.elasticsearch.common.collect.CopyOnWriteHashMap,Remove the given key from this map. The current hash table is not modified.,FreeText,,0
384,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,copyAndRemoveAll(java.util.Collection<?> keys),copyAndRemoveAll,org.elasticsearch.common.collect.CopyOnWriteHashMap,Same as #copyAndRemove(Object) but for an arbitrary number of entries.,FreeText,,0
385,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,containsKey(java.lang.Object key),containsKey,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
386,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"copyAndPutAll(java.lang.Iterable<java.util.Map$Entry<K1, V1>> entries)",copyAndPutAll,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
387,elastic,org.elasticsearch.common.collect.CopyOnWriteHashMap_goal.json,"copyAndPutAll(java.util.stream.Stream<java.util.Map$Entry<K1, V1>> entries)",copyAndPutAll,org.elasticsearch.common.collect.CopyOnWriteHashMap,,FreeText,,0
388,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,isValidLongitude(double longitude),isValidLongitude,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
389,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,normalizeLat(double lat),normalizeLat,org.elasticsearch.common.geo.GeoUtils,"Normalize latitude to lie within the -90 to 90 (both inclusive) range.  Note: You should not normalize longitude and latitude separately, because when normalizing latitude it may be necessary to add a shift of 180&deg; in the longitude. For this purpose, you should call the #normalizePoint(GeoPoint) function.",FreeText,,0
390,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"rectangleContainsPoint(org.apache.lucene.geo.Rectangle r, double lat, double lon)",rectangleContainsPoint,org.elasticsearch.common.geo.GeoUtils,todo: move this to lucene Rectangle class,FreeText,,0
391,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,quadTreeCellWidth(int level),quadTreeCellWidth,org.elasticsearch.common.geo.GeoUtils,Calculate the width (in meters) of quadtree cells at a specific level,FreeText,,0
392,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,parseGeoPoint(org.elasticsearch.common.xcontent.XContentParser parser),parseGeoPoint,org.elasticsearch.common.geo.GeoUtils,Parse a GeoPoint with a XContentParser:,FreeText,,0
393,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"parseGeoPoint(org.elasticsearch.common.xcontent.XContentParser parser, org.elasticsearch.common.geo.GeoPoint point)",parseGeoPoint,org.elasticsearch.common.geo.GeoUtils,"Parse a GeoPoint with a XContentParser. A geopoint has one of the following forms:  <li>Object: <pre>{&quot;lat&quot;: <i><latitude></i>, &quot;lon&quot;: <i><longitude></i>}</pre></li> <li>String: <pre>&quot;<i><latitude></i>,<i><longitude></i>&quot;</pre></li> <li>Geohash: <pre>&quot;<i><geohash></i>&quot;</pre></li> <li>Array: <pre>[<i><longitude></i>,<i><latitude></i>]</pre></li>",FreeText,,0
394,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"distanceValues(org.elasticsearch.common.geo.GeoDistance distance, org.elasticsearch.common.unit.DistanceUnit unit, org.elasticsearch.index.fielddata.MultiGeoPointValues geoPointValues, org.elasticsearch.common.geo.GeoPoint... fromPoints)",distanceValues,org.elasticsearch.common.geo.GeoUtils,Return a SortedNumericDoubleValues instance that returns the distances to a list of geo-points for each document.,FreeText,,0
395,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,quadTreeLevelsForPrecision(java.lang.String distance),quadTreeLevelsForPrecision,org.elasticsearch.common.geo.GeoUtils,Calculate the number of levels needed for a specific precision. QuadTree cells will not exceed the specified size (diagonal) of the precision.,FreeText,,0
396,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,geoHashCellHeight(int level),geoHashCellHeight,org.elasticsearch.common.geo.GeoUtils,Calculate the height (in meters) of geohash cells at a specific level,FreeText,,0
397,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,quadTreeLevelsForPrecision(double meters),quadTreeLevelsForPrecision,org.elasticsearch.common.geo.GeoUtils,Calculate the number of levels needed for a specific precision. Quadtree cells will not exceed the specified size (diagonal) of the precision.,FreeText,,0
398,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,geoHashLevelsForPrecision(double meters),geoHashLevelsForPrecision,org.elasticsearch.common.geo.GeoUtils,Calculate the number of levels needed for a specific precision. GeoHash cells will not exceed the specified size (diagonal) of the precision.,FreeText,,0
399,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,geoHashCellSize(int level),geoHashCellSize,org.elasticsearch.common.geo.GeoUtils,Calculate the size (in meters) of geohash cells at a specific level,FreeText,,0
400,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,geoHashLevelsForPrecision(java.lang.String distance),geoHashLevelsForPrecision,org.elasticsearch.common.geo.GeoUtils,Calculate the number of levels needed for a specific precision. GeoHash cells will not exceed the specified size (diagonal) of the precision.,FreeText,,0
401,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"planeDistance(double lat1, double lon1, double lat2, double lon2)",planeDistance,org.elasticsearch.common.geo.GeoUtils,"Return the distance (in meters) between 2 lat,lon geo points using a simple tangential plane this provides a faster alternative to GeoUtils#arcDistance but is inaccurate for distances greater than 4 decimal degrees",FreeText,"methodResultID==(org.elasticsearch.common.geo.GeoUtils.arcDistance(args[0],args[1],args[2],args[3]))",1
402,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,normalizePoint(double[] lonLat),normalizePoint,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
403,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"parseGeoPoint(java.lang.String data, org.elasticsearch.common.geo.GeoPoint point)",parseGeoPoint,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
404,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,quadTreeCellHeight(int level),quadTreeCellHeight,org.elasticsearch.common.geo.GeoUtils,Calculate the height (in meters) of quadtree cells at a specific level,FreeText,,0
405,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,normalizePoint(org.elasticsearch.common.geo.GeoPoint point),normalizePoint,org.elasticsearch.common.geo.GeoUtils,"Normalize the geo Point for its coordinates to lie within their respective normalized ranges.  Note: A shift of 180&deg; is applied in the longitude if necessary, in order to normalize properly the latitude.",FreeText,,0
406,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"maxRadialDistanceMeters(double centerLat, double centerLon)",maxRadialDistanceMeters,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
407,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"normalizePoint(org.elasticsearch.common.geo.GeoPoint point, boolean normLat, boolean normLon)",normalizePoint,org.elasticsearch.common.geo.GeoUtils,"Normalize the geo Point for the given coordinates to lie within their respective normalized ranges.  You can control which coordinate gets normalized with the two flags.  Note: A shift of 180&deg; is applied in the longitude if necessary, in order to normalize properly the latitude. If normalizing latitude but not longitude, it is assumed that the longitude is in the form x+k*360, with x in ]-180;180], and k is meaningful to the application. Therefore x will be adjusted while keeping k preserved.",FreeText,,0
408,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,quadTreeCellSize(int level),quadTreeCellSize,org.elasticsearch.common.geo.GeoUtils,Calculate the size (in meters) of quadtree cells at a specific level,FreeText,,0
409,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"arcDistance(double lat1, double lon1, double lat2, double lon2)",arcDistance,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
410,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,normalizeLon(double lon),normalizeLon,org.elasticsearch.common.geo.GeoUtils,Normalize longitude to lie within the -180 (exclusive) to 180 (inclusive) range.,FreeText,,0
411,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,geoHashCellWidth(int level),geoHashCellWidth,org.elasticsearch.common.geo.GeoUtils,Calculate the width (in meters) of geohash cells at a specific level,FreeText,,0
412,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,isValidLatitude(double latitude),isValidLatitude,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
413,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"normalizePoint(double[] lonLat, boolean normLon, boolean normLat)",normalizePoint,org.elasticsearch.common.geo.GeoUtils,,FreeText,,0
414,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,reset(),reset,org.elasticsearch.common.io.FastCharArrayWriter,Resets the buffer so that you can use it again without throwing away the already allocated buffer.,FreeText,,0
415,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,toString(),toString,org.elasticsearch.common.io.FastCharArrayWriter,Converts input data to a string.,FreeText,,0
416,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,toCharArray(),toCharArray,org.elasticsearch.common.io.FastCharArrayWriter,Returns a copy of the input data.,FreeText,,0
417,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,org.elasticsearch.common.io.FastCharArrayWriter(int initialSize),org.elasticsearch.common.io.FastCharArrayWriter,org.elasticsearch.common.io.FastCharArrayWriter,Creates a new CharArrayWriter with the specified initial size.,FreeText,,0
418,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,flush(),flush,org.elasticsearch.common.io.FastCharArrayWriter,Flush the stream.,FreeText,,0
419,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,append(java.lang.CharSequence csq),append,org.elasticsearch.common.io.FastCharArrayWriter,"Appends the specified character sequence to this writer.  An invocation of this method of the form out.append(csq) behaves in exactly the same way as the invocation  out.write(csq.toString())   Depending on the specification of toString for the character sequence csq, the entire sequence may not be appended. For instance, invoking the toString method of a character buffer will return a subsequence whose content depends upon the buffer's position and limit.",FreeText,,0
420,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,org.elasticsearch.common.io.FastCharArrayWriter(),org.elasticsearch.common.io.FastCharArrayWriter,org.elasticsearch.common.io.FastCharArrayWriter,Creates a new CharArrayWriter.,FreeText,,0
421,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,unsafeCharArray(),unsafeCharArray,org.elasticsearch.common.io.FastCharArrayWriter,"Returns the underlying char array. Note, use #size() in order to know the size of of the actual content within the array.",FreeText,,0
422,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,"append(java.lang.CharSequence csq, int start, int end)",append,org.elasticsearch.common.io.FastCharArrayWriter,"Appends a subsequence of the specified character sequence to this writer.  An invocation of this method of the form out.append(csq, start, end) when csq is not null, behaves in exactly the same way as the invocation  out.write(csq.subSequence(start, end).toString())",FreeText,,0
423,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,append(char c),append,org.elasticsearch.common.io.FastCharArrayWriter,Appends the specified character to this writer.  An invocation of this method of the form out.append(c) behaves in exactly the same way as the invocation  out.write(c),FreeText,,0
424,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,close(),close,org.elasticsearch.common.io.FastCharArrayWriter,"Close the stream. This method does not release the buffer, since its contents might still be required. Note: Invoking this method in this class will have no effect.",FreeText,,0
425,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,"write(java.lang.String str, int off, int len)",write,org.elasticsearch.common.io.FastCharArrayWriter,Write a portion of a string to the buffer.,FreeText,,0
426,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,"write(char[] c, int off, int len)",write,org.elasticsearch.common.io.FastCharArrayWriter,Writes characters to the buffer.,FreeText,,0
427,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,writeTo(java.io.Writer out),writeTo,org.elasticsearch.common.io.FastCharArrayWriter,Writes the contents of the buffer to another character stream.,FreeText,,0
428,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,write(int c),write,org.elasticsearch.common.io.FastCharArrayWriter,Writes a character to the buffer.,FreeText,,0
429,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,toStringTrim(),toStringTrim,org.elasticsearch.common.io.FastCharArrayWriter,Converts the input data to a string with trimmed whitespaces.,FreeText,,0
430,elastic,org.elasticsearch.common.io.FastCharArrayWriter_goal.json,size(),size,org.elasticsearch.common.io.FastCharArrayWriter,Returns the current size of the buffer.,FreeText,,0
431,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,org.elasticsearch.common.io.UTF8StreamWriter(),org.elasticsearch.common.io.UTF8StreamWriter,org.elasticsearch.common.io.UTF8StreamWriter,Creates a UTF-8 writer having a byte buffer of moderate capacity (2048).,FreeText,,0
432,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,"write(char[] cbuf, int off, int len)",write,org.elasticsearch.common.io.UTF8StreamWriter,Writes a portion of an array of characters.,FreeText,,0
433,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,flush(),flush,org.elasticsearch.common.io.UTF8StreamWriter,"Flushes the stream. If the stream has saved any characters from the various write() methods in a buffer, write them immediately to their intended destination. Then, if that destination is another character or byte stream, flush it. Thus one flush() invocation will flush all the buffers in a chain of Writers and OutputStreams.",FreeText,,0
434,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,"write(java.lang.String str, int off, int len)",write,org.elasticsearch.common.io.UTF8StreamWriter,Writes a portion of a string.,FreeText,,0
435,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,write(java.lang.CharSequence csq),write,org.elasticsearch.common.io.UTF8StreamWriter,Writes the specified character sequence.,FreeText,,0
436,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,close(),close,org.elasticsearch.common.io.UTF8StreamWriter,Closes and #reset resets this writer for reuse.,FreeText,,0
437,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,org.elasticsearch.common.io.UTF8StreamWriter(int capacity),org.elasticsearch.common.io.UTF8StreamWriter,org.elasticsearch.common.io.UTF8StreamWriter,Creates a UTF-8 writer having a byte buffer of specified capacity.,FreeText,,0
438,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,write(char c),write,org.elasticsearch.common.io.UTF8StreamWriter,Writes a single character. This method supports 16-bits character surrogates.,FreeText,,0
439,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,setOutput(java.io.OutputStream out),setOutput,org.elasticsearch.common.io.UTF8StreamWriter,"Sets the output stream to use for writing until this writer is closed. For example:[code] Writer writer = new UTF8StreamWriter().setOutputStream(out); [/code] is equivalent but writes faster than [code] Writer writer = new java.io.OutputStreamWriter(out, ""UTF-8""); [/code]",FreeText,,0
440,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,reset(),reset,org.elasticsearch.common.io.UTF8StreamWriter,,FreeText,,0
441,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,setOutputStream(java.io.OutputStream out),setOutputStream,org.elasticsearch.common.io.UTF8StreamWriter,@deprecated Replaced by #setOutput(OutputStream),FreeText,methodResultID.equals(receiverObjectID.equalssetOutput(args[0])),1
442,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,write(int code),write,org.elasticsearch.common.io.UTF8StreamWriter,Writes a character given its 31-bits Unicode.,FreeText,,0
443,elastic,org.elasticsearch.common.Randomness_goal.json,createSecure(),createSecure,org.elasticsearch.common.Randomness,"Provides a secure source of randomness. This acts exactly similar to #get(), but returning a new SecureRandom.",FreeText,,0
444,elastic,org.elasticsearch.common.Randomness_goal.json,shuffle(java.util.List<?> list),shuffle,org.elasticsearch.common.Randomness,,FreeText,,0
445,elastic,org.elasticsearch.common.Randomness_goal.json,"get(org.elasticsearch.common.settings.Settings settings, org.elasticsearch.common.settings.Setting<java.lang.Long> setting)",get,org.elasticsearch.common.Randomness,Provides a reproducible source of randomness seeded by a long seed in the settings with the key setting.,FreeText,,0
446,elastic,org.elasticsearch.common.Randomness_goal.json,get(),get,org.elasticsearch.common.Randomness,"Provides a source of randomness that is reproducible when running under the Elasticsearch test suite, and otherwise produces a non-reproducible source of randomness. Reproducible sources of randomness are created when the system property ""tests.seed"" is set and the security policy allows reading this system property. Otherwise, non-reproducible sources of randomness are created.",FreeText,,0
447,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,onRejection(java.lang.Exception e),onRejection,org.elasticsearch.common.util.concurrent.AbstractRunnable,This should be executed if the thread-pool executing this action rejected the execution. The default implementation forwards to #onFailure(Exception),FreeText,,0
448,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,onAfter(),onAfter,org.elasticsearch.common.util.concurrent.AbstractRunnable,This method is called in a finally block after successful execution or on a rejection.,FreeText,,0
449,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,run(),run,org.elasticsearch.common.util.concurrent.AbstractRunnable,,FreeText,,0
450,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,onFailure(java.lang.Exception e),onFailure,org.elasticsearch.common.util.concurrent.AbstractRunnable,This method is invoked for all exception thrown by #doRun(),FreeText,,0
451,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,isForceExecution(),isForceExecution,org.elasticsearch.common.util.concurrent.AbstractRunnable,Should the runnable force its execution in case it gets rejected?,FreeText,,0
452,elastic,org.elasticsearch.common.util.concurrent.AbstractRunnable_goal.json,doRun(),doRun,org.elasticsearch.common.util.concurrent.AbstractRunnable,This method has the same semantics as Runnable#run(),FreeText,,0
453,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,getTasks(),getTasks,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,Returns a stream of all pending tasks. This is similar to #getQueue() but will expose the originally submitted Runnable instances rather than potentially wrapped ones.,FreeText,methodResultID.equals(receiverObjectClone.getQueue()),1
454,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,"afterExecute(java.lang.Runnable r, java.lang.Throwable t)",afterExecute,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
455,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,wrapRunnable(java.lang.Runnable command),wrapRunnable,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
456,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,execute(java.lang.Runnable command),execute,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
457,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,"org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor(java.lang.String name, int corePoolSize, int maximumPoolSize, long keepAliveTime, java.util.concurrent.TimeUnit unit, java.util.concurrent.BlockingQueue<java.lang.Runnable> workQueue, java.util.concurrent.ThreadFactory threadFactory, org.elasticsearch.common.util.concurrent.XRejectedExecutionHandler handler, org.elasticsearch.common.util.concurrent.ThreadContext contextHolder)",org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
458,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,shutdown(org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor$ShutdownListener listener),shutdown,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
459,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,unwrap(java.lang.Runnable runnable),unwrap,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
460,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,toString(),toString,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
461,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,"org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor(java.lang.String name, int corePoolSize, int maximumPoolSize, long keepAliveTime, java.util.concurrent.TimeUnit unit, java.util.concurrent.BlockingQueue<java.lang.Runnable> workQueue, java.util.concurrent.ThreadFactory threadFactory, org.elasticsearch.common.util.concurrent.ThreadContext contextHolder)",org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
462,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,terminated(),terminated,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
463,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,doExecute(java.lang.Runnable command),doExecute,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,,FreeText,,0
464,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,isDefaultContext(),isDefaultContext,org.elasticsearch.common.util.concurrent.ThreadContext,Returns true if the current context is the default context.,FreeText,,0
465,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"putTransient(java.lang.String key, java.lang.Object value)",putTransient,org.elasticsearch.common.util.concurrent.ThreadContext,Puts a transient header object into this context,FreeText,,0
466,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,org.elasticsearch.common.util.concurrent.ThreadContext(org.elasticsearch.common.settings.Settings settings),org.elasticsearch.common.util.concurrent.ThreadContext,org.elasticsearch.common.util.concurrent.ThreadContext,Creates a new ThreadContext instance,FreeText,,0
467,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,writeTo(org.elasticsearch.common.io.stream.StreamOutput out),writeTo,org.elasticsearch.common.util.concurrent.ThreadContext,,FreeText,,0
468,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,wrapRestorable(org.elasticsearch.common.util.concurrent.ThreadContext$StoredContext storedContext),wrapRestorable,org.elasticsearch.common.util.concurrent.ThreadContext,Same as #newRestorableContext(boolean) but wraps an existing context to restore.,FreeText,,0
469,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"addResponseHeader(java.lang.String key, java.lang.String value, java.util.function.Function<java.lang.String, java.lang.String> uniqueValue)",addResponseHeader,org.elasticsearch.common.util.concurrent.ThreadContext,Add the value for the specified key with the specified uniqueValue used for de-duplication. Any duplicate value after applying uniqueValue is ignored.,FreeText,,0
470,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,getHeaders(),getHeaders,org.elasticsearch.common.util.concurrent.ThreadContext,Returns all of the request contexts headers,FreeText,,0
471,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,markAsSystemContext(),markAsSystemContext,org.elasticsearch.common.util.concurrent.ThreadContext,Marks this thread context as an internal system context. This signals that actions in this context are issued by the system itself rather than by a user action.,FreeText,,0
472,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,isSystemContext(),isSystemContext,org.elasticsearch.common.util.concurrent.ThreadContext,Returns true iff this context is a system context,FreeText,,0
473,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,getTransient(java.lang.String key),getTransient,org.elasticsearch.common.util.concurrent.ThreadContext,Returns a transient header object or null if there is no header for the given key,FreeText,,0
474,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,stashContext(),stashContext,org.elasticsearch.common.util.concurrent.ThreadContext,Removes the current context and resets a default context. The removed context can be restored when closing the returned StoredContext,FreeText,,0
475,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,getResponseHeaders(),getResponseHeaders,org.elasticsearch.common.util.concurrent.ThreadContext,Get a copy of all response headers.,FreeText,,0
476,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"putHeader(java.lang.String key, java.lang.String value)",putHeader,org.elasticsearch.common.util.concurrent.ThreadContext,Puts a header into the context,FreeText,,0
477,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"stashAndMergeHeaders(java.util.Map<java.lang.String, java.lang.String> headers)",stashAndMergeHeaders,org.elasticsearch.common.util.concurrent.ThreadContext,Removes the current context and resets a new context that contains a merge of the current headers and the given headers. The removed context can be restored when closing the returned StoredContext. The merge strategy is that headers that are already existing are preserved unless they are defaults.,FreeText,,0
478,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,newStoredContext(boolean preserveResponseHeaders),newStoredContext,org.elasticsearch.common.util.concurrent.ThreadContext,Just like #stashContext() but no default context is set.,FreeText,methodResultID.equals(receiverObjectClone.stashContext()),1
479,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,getHeader(java.lang.String key),getHeader,org.elasticsearch.common.util.concurrent.ThreadContext,Returns the header for the given key or null if not present,FreeText,,0
480,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"putHeader(java.util.Map<java.lang.String, java.lang.String> header)",putHeader,org.elasticsearch.common.util.concurrent.ThreadContext,Puts all of the given headers into this context,FreeText,,0
481,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,isClosed(),isClosed,org.elasticsearch.common.util.concurrent.ThreadContext,"Returns true if the context is closed, otherwise true",FreeText,,0
482,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,newRestorableContext(boolean preserveResponseHeaders),newRestorableContext,org.elasticsearch.common.util.concurrent.ThreadContext,Returns a supplier that gathers a #newStoredContext(boolean) and restores it once the returned supplier is invoked. The context returned from the supplier is a stored version of the suppliers callers context that should be restored once the originally gathered context is not needed anymore. For instance this method should be used like this:  Supplier<ThreadContext.StoredContext> restorable = context.newRestorableContext(true); new Thread() { public void run() { try (ThreadContext.StoredContext ctx = restorable.get()) { // execute with the parents context and restore the threads context afterwards } } }.start();,FreeText,,0
483,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,readHeaders(org.elasticsearch.common.io.stream.StreamInput in),readHeaders,org.elasticsearch.common.util.concurrent.ThreadContext,Reads the headers from the stream into the current context,FreeText,,0
484,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"copyHeaders(java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.lang.String>> headers)",copyHeaders,org.elasticsearch.common.util.concurrent.ThreadContext,"Copies all header key, value pairs into the current context",FreeText,,0
485,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,close(),close,org.elasticsearch.common.util.concurrent.ThreadContext,,FreeText,,0
486,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,"addResponseHeader(java.lang.String key, java.lang.String value)",addResponseHeader,org.elasticsearch.common.util.concurrent.ThreadContext,Add the value for the specified key Any duplicate value is ignored.,FreeText,,0
487,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,preserveContext(java.lang.Runnable command),preserveContext,org.elasticsearch.common.util.concurrent.ThreadContext,Saves the current thread context and wraps command in a Runnable that restores that context before running command. If command has already been passed through this method then it is returned unaltered rather than wrapped twice.,FreeText,,0
488,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,unwrap(java.lang.Runnable command),unwrap,org.elasticsearch.common.util.concurrent.ThreadContext,Unwraps a command that was previously wrapped by #preserveContext(Runnable).,FreeText,,0
489,elastic,org.elasticsearch.rest.RestRequest_goal.json,rawPath(),rawPath,org.elasticsearch.rest.RestRequest,"The non decoded, raw path provided.",FreeText,,0
490,elastic,org.elasticsearch.rest.RestRequest_goal.json,getLocalAddress(),getLocalAddress,org.elasticsearch.rest.RestRequest,,FreeText,,0
491,elastic,org.elasticsearch.rest.RestRequest_goal.json,"org.elasticsearch.rest.RestRequest(org.elasticsearch.common.xcontent.NamedXContentRegistry xContentRegistry, java.lang.String uri, java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers)",org.elasticsearch.rest.RestRequest,org.elasticsearch.rest.RestRequest,Creates a new RestRequest,FreeText,,0
492,elastic,org.elasticsearch.rest.RestRequest_goal.json,"param(java.lang.String key, java.lang.String defaultValue)",param,org.elasticsearch.rest.RestRequest,,FreeText,,0
493,elastic,org.elasticsearch.rest.RestRequest_goal.json,"applyContentParser(org.elasticsearch.common.CheckedConsumer<org.elasticsearch.common.xcontent.XContentParser, java.io.IOException> applyParser)",applyContentParser,org.elasticsearch.rest.RestRequest,"If there is any content then call applyParser with the parser, otherwise do nothing.",FreeText,,0
494,elastic,org.elasticsearch.rest.RestRequest_goal.json,contentParser(),contentParser,org.elasticsearch.rest.RestRequest,"A parser for the contents of this request if there is a body, otherwise throws an ElasticsearchParseException. Use #applyContentParser(CheckedConsumer) if you want to gracefully handle when the request doesn't have any contents. Use #contentOrSourceParamParser() for requests that support specifying the request body in the source param.",FreeText,,0
495,elastic,org.elasticsearch.rest.RestRequest_goal.json,contentOrSourceParamParser(),contentOrSourceParamParser,org.elasticsearch.rest.RestRequest,"A parser for the contents of this request if it has contents, otherwise a parser for the source parameter if there is one, otherwise throws an ElasticsearchParseException. Use #withContentOrSourceParamParserOrNull(CheckedConsumer) instead if you need to handle the absence request content gracefully.",FreeText,,0
496,elastic,org.elasticsearch.rest.RestRequest_goal.json,param(java.lang.String key),param,org.elasticsearch.rest.RestRequest,,FreeText,,0
497,elastic,org.elasticsearch.rest.RestRequest_goal.json,"org.elasticsearch.rest.RestRequest(org.elasticsearch.common.xcontent.NamedXContentRegistry xContentRegistry, java.util.Map<java.lang.String, java.lang.String> params, java.lang.String path, java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers)",org.elasticsearch.rest.RestRequest,org.elasticsearch.rest.RestRequest,Creates a new RestRequest,FreeText,,0
498,elastic,org.elasticsearch.rest.RestRequest_goal.json,paramAsStringArrayOrEmptyIfAll(java.lang.String key),paramAsStringArrayOrEmptyIfAll,org.elasticsearch.rest.RestRequest,,FreeText,,0
499,elastic,org.elasticsearch.rest.RestRequest_goal.json,hasContentOrSourceParam(),hasContentOrSourceParam,org.elasticsearch.rest.RestRequest,Does this request have content or a source parameter? Use this instead of #hasContent() if this RestHandler treats the source parameter like the body content.,FreeText,methodResultID==(receiverObjectClone.hasContent()),1
500,elastic,org.elasticsearch.rest.RestRequest_goal.json,requiredContent(),requiredContent,org.elasticsearch.rest.RestRequest,,FreeText,,0
501,elastic,org.elasticsearch.rest.RestRequest_goal.json,getHeaders(),getHeaders,org.elasticsearch.rest.RestRequest,Get all of the headers and values associated with the headers. Modifications of this map are not supported.,FreeText,,0
502,elastic,org.elasticsearch.rest.RestRequest_goal.json,setXContentType(org.elasticsearch.common.xcontent.XContentType xContentType),setXContentType,org.elasticsearch.rest.RestRequest,Sets the XContentType,FreeText,,0
503,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsTime(java.lang.String key, org.elasticsearch.common.unit.TimeValue defaultValue)",paramAsTime,org.elasticsearch.rest.RestRequest,,FreeText,,0
504,elastic,org.elasticsearch.rest.RestRequest_goal.json,getXContentType(),getXContentType,org.elasticsearch.rest.RestRequest,"The XContentType that was parsed from the Content-Type header. This value will be null in the case of a request without a valid Content-Type header, a request without content (#hasContent(), or a plain text request",FreeText,,0
505,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsStringArray(java.lang.String key, java.lang.String[] defaultValue)",paramAsStringArray,org.elasticsearch.rest.RestRequest,,FreeText,,0
506,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsFloat(java.lang.String key, float defaultValue)",paramAsFloat,org.elasticsearch.rest.RestRequest,,FreeText,,0
507,elastic,org.elasticsearch.rest.RestRequest_goal.json,hasParam(java.lang.String key),hasParam,org.elasticsearch.rest.RestRequest,,FreeText,,0
508,elastic,org.elasticsearch.rest.RestRequest_goal.json,consumedParams(),consumedParams,org.elasticsearch.rest.RestRequest,"Returns a list of parameters that have been consumed. This method returns a copy, callers are free to modify the returned list.",FreeText,,0
509,elastic,org.elasticsearch.rest.RestRequest_goal.json,method(),method,org.elasticsearch.rest.RestRequest,,FreeText,,0
510,elastic,org.elasticsearch.rest.RestRequest_goal.json,uri(),uri,org.elasticsearch.rest.RestRequest,"The uri of the rest request, with the query string.",FreeText,,0
511,elastic,org.elasticsearch.rest.RestRequest_goal.json,content(),content,org.elasticsearch.rest.RestRequest,,FreeText,,0
512,elastic,org.elasticsearch.rest.RestRequest_goal.json,unconsumedParams(),unconsumedParams,org.elasticsearch.rest.RestRequest,"Returns a list of parameters that have not yet been consumed. This method returns a copy, callers are free to modify the returned list.",FreeText,,0
513,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsLong(java.lang.String key, long defaultValue)",paramAsLong,org.elasticsearch.rest.RestRequest,,FreeText,,0
514,elastic,org.elasticsearch.rest.RestRequest_goal.json,getAllHeaderValues(java.lang.String name),getAllHeaderValues,org.elasticsearch.rest.RestRequest,Get all values for the header or null if the header was not found,FreeText,,0
515,elastic,org.elasticsearch.rest.RestRequest_goal.json,path(),path,org.elasticsearch.rest.RestRequest,"The path part of the URI (without the query string), decoded.",FreeText,,0
516,elastic,org.elasticsearch.rest.RestRequest_goal.json,getRemoteAddress(),getRemoteAddress,org.elasticsearch.rest.RestRequest,,FreeText,,0
517,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsInt(java.lang.String key, int defaultValue)",paramAsInt,org.elasticsearch.rest.RestRequest,,FreeText,,0
518,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsSize(java.lang.String key, org.elasticsearch.common.unit.ByteSizeValue defaultValue)",paramAsSize,org.elasticsearch.rest.RestRequest,,FreeText,,0
519,elastic,org.elasticsearch.rest.RestRequest_goal.json,getXContentRegistry(),getXContentRegistry,org.elasticsearch.rest.RestRequest,Get the NamedXContentRegistry that should be used to create parsers from this request.,FreeText,,0
520,elastic,org.elasticsearch.rest.RestRequest_goal.json,params(),params,org.elasticsearch.rest.RestRequest,,FreeText,,0
521,elastic,org.elasticsearch.rest.RestRequest_goal.json,hasContent(),hasContent,org.elasticsearch.rest.RestRequest,,FreeText,,0
522,elastic,org.elasticsearch.rest.RestRequest_goal.json,"withContentOrSourceParamParserOrNull(org.elasticsearch.common.CheckedConsumer<org.elasticsearch.common.xcontent.XContentParser, java.io.IOException> withParser)",withContentOrSourceParamParserOrNull,org.elasticsearch.rest.RestRequest,"Call a consumer with the parser for the contents of this request if it has contents, otherwise with a parser for the source parameter if there is one, otherwise with null. Use #contentOrSourceParamParser() if you should throw an exception back to the user when there isn't request content.",FreeText,,0
523,elastic,org.elasticsearch.rest.RestRequest_goal.json,contentOrSourceParam(),contentOrSourceParam,org.elasticsearch.rest.RestRequest,Get the content of the request or the contents of the source param or throw an exception if both are missing. Prefer #contentOrSourceParamParser() or #withContentOrSourceParamParserOrNull(CheckedConsumer) if you need a parser.,FreeText,,0
524,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsBoolean(java.lang.String key, boolean defaultValue)",paramAsBoolean,org.elasticsearch.rest.RestRequest,,FreeText,,0
525,elastic,org.elasticsearch.rest.RestRequest_goal.json,"paramAsBoolean(java.lang.String key, java.lang.Boolean defaultValue)",paramAsBoolean,org.elasticsearch.rest.RestRequest,,FreeText,,0
526,elastic,org.elasticsearch.rest.RestRequest_goal.json,header(java.lang.String name),header,org.elasticsearch.rest.RestRequest,Get the value of the header or null if not found. This method only retrieves the first header value if multiple values are sent. Use of #getAllHeaderValues(String) should be preferred,FreeText,methodResultID.equals(receiverObjectClone.getAllHeaderValues(args[0])),1
527,elastic,org.elasticsearch.rest.RestUtils_goal.json,decodeComponent(java.lang.String s),decodeComponent,org.elasticsearch.rest.RestUtils,"Decodes a bit of an URL encoded by a browser.  This is equivalent to calling #decodeComponent(String, Charset) with the UTF-8 charset (recommended to comply with RFC 3986, Section 2).",FreeText,"methodResultID.equals(receiverObjectID.decodeComponent(args[0], java.nio.charset.Charset.UTF_8))",1
528,elastic,org.elasticsearch.rest.RestUtils_goal.json,checkCorsSettingForRegex(java.lang.String corsSetting),checkCorsSettingForRegex,org.elasticsearch.rest.RestUtils,Determine if CORS setting is a regex,FreeText,,0
529,elastic,org.elasticsearch.rest.RestUtils_goal.json,"decodeQueryString(java.lang.String s, int fromIndex, java.util.Map<java.lang.String, java.lang.String> params)",decodeQueryString,org.elasticsearch.rest.RestUtils,,FreeText,,0
530,elastic,org.elasticsearch.rest.RestUtils_goal.json,"decodeComponent(java.lang.String s, java.nio.charset.Charset charset)",decodeComponent,org.elasticsearch.rest.RestUtils,"Decodes a bit of an URL encoded by a browser.  The string is expected to be encoded as per RFC 3986, Section 2. This is the encoding used by JavaScript functions encodeURI and encodeURIComponent, but not escape. For example in this encoding, &eacute; (in Unicode U+00E9 or in UTF-8 0xC3 0xA9}) is encoded as {@code %C3%A9 or %c3%a9.  This is essentially equivalent to calling java.net.URLDecoder URLDecoder.java.net.URLDecoder#decode(String, String) except that it's over 2x faster and generates less garbage for the GC. Actually this function doesn't allocate any memory if there's nothing to decode, the argument itself is returned.",FreeText,"methodResultID.equals(java.net.URLDecoder#decode(args[0], ""StandardCharsets.UTF_8""))",1
531,elastic,org.elasticsearch.rest.RestUtils_goal.json,corsSettingAsArray(java.lang.String corsSetting),corsSettingAsArray,org.elasticsearch.rest.RestUtils,Return the CORS setting as an array of origins.,FreeText,,0
532,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,bucketAggregations(long bucket),bucketAggregations,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Required method to build the child aggregations of the given bucket (identified by the bucket ordinal).,FreeText,,0
533,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,maxBucketOrd(),maxBucketOrd,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Return an upper bound of the maximum bucket ordinal seen so far.,FreeText,,0
534,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,close(),close,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,,FreeText,,0
535,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,"org.elasticsearch.search.aggregations.bucket.BucketsAggregator(java.lang.String name, org.elasticsearch.search.aggregations.AggregatorFactories factories, org.elasticsearch.search.internal.SearchContext context, org.elasticsearch.search.aggregations.Aggregator parent, java.util.List<org.elasticsearch.search.aggregations.pipeline.PipelineAggregator> pipelineAggregators, java.util.Map<java.lang.String, java.lang.Object> metaData)",org.elasticsearch.search.aggregations.bucket.BucketsAggregator,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,,FreeText,,0
536,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,"collectBucket(org.elasticsearch.search.aggregations.LeafBucketCollector subCollector, int doc, long bucketOrd)",collectBucket,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Utility method to collect the given doc in the given bucket (identified by the bucket ordinal),FreeText,,0
537,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,getDocCounts(),getDocCounts,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,,FreeText,,0
538,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,grow(long maxBucketOrd),grow,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Ensure there are at least maxBucketOrd buckets available.,FreeText,,0
539,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,bucketDocCount(long bucketOrd),bucketDocCount,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Utility method to return the number of documents that fell in the given bucket (identified by the bucket ordinal),FreeText,,0
540,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,"collectExistingBucket(org.elasticsearch.search.aggregations.LeafBucketCollector subCollector, int doc, long bucketOrd)",collectExistingBucket,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,"Same as #collectBucket(LeafBucketCollector, int, long), but doesn't check if the docCounts needs to be re-sized.",FreeText,"receiverObjectClone.collectBucket(args[0],args[1],args[2]); receiverObjectClone.equals(receiverObjectID)",1
541,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,"incrementBucketDocCount(long bucketOrd, int inc)",incrementBucketDocCount,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Utility method to increment the doc counts of the given bucket (identified by the bucket ordinal),FreeText,,0
542,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,bucketEmptyAggregations(),bucketEmptyAggregations,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,Utility method to build empty aggregations of the sub aggregators.,FreeText,,0
543,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,innerEquals(java.lang.Object obj),innerEquals,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
544,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"addRange(java.lang.String key, double from, double to)",addRange,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,Add a new range to this aggregation.,FreeText,,0
545,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"addUnboundedFrom(java.lang.String key, double from)",addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,Add a new range with no upper bound.,FreeText,,0
546,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,unit(org.elasticsearch.common.unit.DistanceUnit unit),unit,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
547,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,range(),range,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
548,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,distanceType(org.elasticsearch.common.geo.GeoDistance distanceType),distanceType,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
549,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,innerHashCode(),innerHashCode,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
550,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,origin(org.elasticsearch.common.geo.GeoPoint origin),origin,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
551,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,keyed(),keyed,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
552,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,keyed(boolean keyed),keyed,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
553,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder(java.lang.String name),org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
554,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"addRange(double from, double to)",addRange,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,"Same as #addRange(String, double, double) but the key will be automatically generated based on from and to.",FreeText,,0
555,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,addUnboundedTo(double to),addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,"Same as #addUnboundedTo(String, double) but the key will be computed automatically.",FreeText,,0
556,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,getType(),getType,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
557,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,addUnboundedFrom(double from),addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,"Same as #addUnboundedFrom(String, double) but the key will be computed automatically.",FreeText,,0
558,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder(org.elasticsearch.common.io.stream.StreamInput in),org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,Read from a stream.,FreeText,,0
559,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,innerWriteTo(org.elasticsearch.common.io.stream.StreamOutput out),innerWriteTo,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
560,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"addUnboundedTo(java.lang.String key, double to)",addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,Add a new range with no lower bound.,FreeText,,0
561,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"innerBuild(org.elasticsearch.search.internal.SearchContext context, org.elasticsearch.search.aggregations.support.ValuesSourceConfig<org.elasticsearch.search.aggregations.support.ValuesSource$GeoPoint> config, org.elasticsearch.search.aggregations.AggregatorFactory<?> parent, org.elasticsearch.search.aggregations.AggregatorFactories$Builder subFactoriesBuilder)",innerBuild,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
562,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder(java.lang.String name, org.elasticsearch.common.geo.GeoPoint origin)",org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
563,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"doXContentBody(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",doXContentBody,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
564,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,distanceType(),distanceType,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
565,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,addRange(org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder$Range range),addRange,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
566,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,origin(),origin,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,Return the GeoPoint that is used for distance computations.,FreeText,,0
567,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,unit(),unit,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
568,elastic,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder_goal.json,"parse(java.lang.String aggregationName, org.elasticsearch.common.xcontent.XContentParser parser)",parse,org.elasticsearch.search.aggregations.bucket.range.GeoDistanceAggregationBuilder,,FreeText,,0
569,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,keyed(boolean keyed),keyed,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
570,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,script(org.elasticsearch.script.Script script),script,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
571,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"innerBuild(org.elasticsearch.search.internal.SearchContext context, org.elasticsearch.search.aggregations.support.ValuesSourceConfig<org.elasticsearch.search.aggregations.support.ValuesSource$Bytes> config, org.elasticsearch.search.aggregations.AggregatorFactory<?> parent, org.elasticsearch.search.aggregations.AggregatorFactories$Builder subFactoriesBuilder)",innerBuild,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
572,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,getType(),getType,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
573,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder(java.lang.String name),org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
574,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,keyed(),keyed,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
575,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,innerWriteTo(org.elasticsearch.common.io.stream.StreamOutput out),innerWriteTo,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
576,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"addMaskRange(java.lang.String key, java.lang.String mask)",addMaskRange,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,Add a new range to this aggregation using the CIDR notation.,FreeText,,0
577,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,addUnboundedFrom(java.lang.String from),addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addUnboundedFrom(String, String) but the key will be generated automatically.",FreeText,,0
578,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"doXContentBody(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",doXContentBody,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
579,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"addUnboundedFrom(java.lang.String key, java.lang.String from)",addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addRange(String, String, String) but there will be no upper bound.",FreeText,,0
580,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,addMaskRange(java.lang.String mask),addMaskRange,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addMaskRange(String, String) but uses the mask itself as a key.",FreeText,,0
581,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,addRange(org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder$Range range),addRange,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
582,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,getRanges(),getRanges,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
583,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"addRange(java.lang.String key, java.lang.String from, java.lang.String to)",addRange,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,Add a new range to this aggregation.,FreeText,,0
584,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"addUnboundedTo(java.lang.String key, java.lang.String to)",addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addRange(String, String, String) but there will be no lower bound.",FreeText,,0
585,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder(org.elasticsearch.common.io.stream.StreamInput in),org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
586,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,innerEquals(java.lang.Object obj),innerEquals,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
587,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"addRange(java.lang.String from, java.lang.String to)",addRange,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addRange(String, String, String) but the key will be automatically generated.",FreeText,,0
588,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,"parse(java.lang.String aggregationName, org.elasticsearch.common.xcontent.XContentParser parser)",parse,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
589,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,innerHashCode(),innerHashCode,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,,FreeText,,0
590,elastic,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder_goal.json,addUnboundedTo(java.lang.String to),addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.IpRangeAggregationBuilder,"Same as #addUnboundedTo(String, String) but the key will be generated automatically.",FreeText,,0
591,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder(org.elasticsearch.common.io.stream.StreamInput in),org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,Read from a stream.,FreeText,,0
592,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"addUnboundedFrom(java.lang.String key, double from)",addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,Add a new range with no upper bound.,FreeText,,0
593,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"addRange(double from, double to)",addRange,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,"Same as #addRange(String, double, double) but the key will be automatically generated based on from and to.",FreeText,,0
594,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"parse(java.lang.String aggregationName, org.elasticsearch.common.xcontent.XContentParser parser)",parse,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,,FreeText,,0
595,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,getType(),getType,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,,FreeText,,0
596,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder(java.lang.String name),org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,,FreeText,,0
597,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,addUnboundedFrom(double from),addUnboundedFrom,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,"Same as #addUnboundedFrom(String, double) but the key will be computed automatically.",FreeText,,0
598,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,addUnboundedTo(double to),addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,"Same as #addUnboundedTo(String, double) but the key will be computed automatically.",FreeText,,0
599,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"innerBuild(org.elasticsearch.search.internal.SearchContext context, org.elasticsearch.search.aggregations.support.ValuesSourceConfig<org.elasticsearch.search.aggregations.support.ValuesSource$Numeric> config, org.elasticsearch.search.aggregations.AggregatorFactory<?> parent, org.elasticsearch.search.aggregations.AggregatorFactories$Builder subFactoriesBuilder)",innerBuild,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,,FreeText,,0
600,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"addRange(java.lang.String key, double from, double to)",addRange,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,Add a new range to this aggregation.,FreeText,,0
601,elastic,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder_goal.json,"addUnboundedTo(java.lang.String key, double to)",addUnboundedTo,org.elasticsearch.search.aggregations.bucket.range.RangeAggregationBuilder,Add a new range with no lower bound.,FreeText,,0
602,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder(java.lang.String field),org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
603,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder(org.elasticsearch.common.io.stream.StreamInput in),org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Read from a stream.,FreeText,,0
604,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"innerToXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",innerToXContent,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
605,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"contexts(java.util.Map<java.lang.String, java.util.List<? extends org.elasticsearch.common.xcontent.ToXContent>> queryContexts)",contexts,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Sets query contexts for completion,FreeText,,0
606,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,regex(java.lang.String regex),regex,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Sets a regular expression pattern for prefixes to provide completions for.,FreeText,,0
607,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"parseContextBytes(org.elasticsearch.common.bytes.BytesReference contextBytes, org.elasticsearch.common.xcontent.NamedXContentRegistry xContentRegistry, org.elasticsearch.search.suggest.completion.context.ContextMappings contextMappings)",parseContextBytes,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
608,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,prefix(java.lang.String prefix),prefix,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Sets the prefix to provide completions for. The prefix gets analyzed by the suggest analyzer.,FreeText,,0
609,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,skipDuplicates(),skipDuplicates,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Returns whether duplicate suggestions should be filtered out.,FreeText,,0
610,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,doEquals(org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder other),doEquals,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
611,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"prefix(java.lang.String prefix, org.elasticsearch.search.suggest.completion.FuzzyOptions fuzzyOptions)",prefix,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #prefix(String) with full fuzzy options see FuzzyOptions.Builder,FreeText,methodResultID.equals(receiverObjectClone.prefix(args[0])),1
612,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"regex(java.lang.String regex, org.elasticsearch.search.suggest.completion.RegexOptions regexOptions)",regex,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #regex(String) with full regular expression options see RegexOptions.Builder,FreeText,methodResultID.equals(receiverObjectClone.regex(args[0])),1
613,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,skipDuplicates(boolean skipDuplicates),skipDuplicates,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Should duplicates be filtered or not. Defaults to false.,FreeText,,0
614,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,fromXContent(org.elasticsearch.common.xcontent.XContentParser parser),fromXContent,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
615,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,build(org.elasticsearch.index.query.QueryShardContext context),build,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
616,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,doHashCode(),doHashCode,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
617,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,doWriteTo(org.elasticsearch.common.io.stream.StreamOutput out),doWriteTo,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
618,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"prefix(java.lang.String prefix, org.elasticsearch.common.unit.Fuzziness fuzziness)",prefix,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #prefix(String) with fuzziness of fuzziness,FreeText,methodResultID.equals(receiverObjectClone.prefix(args[0])),1
619,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,getWriteableName(),getWriteableName,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,,FreeText,,0
620,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,writeTo(org.elasticsearch.common.io.stream.StreamOutput out),writeTo,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
621,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,org.elasticsearch.search.suggest.SuggestionBuilder(org.elasticsearch.common.io.stream.StreamInput in),org.elasticsearch.search.suggest.SuggestionBuilder,org.elasticsearch.search.suggest.SuggestionBuilder,Read from a stream.,FreeText,,0
622,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,prefix(java.lang.String prefix),prefix,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
623,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,fromXContent(org.elasticsearch.common.xcontent.XContentParser parser),fromXContent,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
624,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,"toXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",toXContent,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
625,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,shardSize(),shardSize,org.elasticsearch.search.suggest.SuggestionBuilder,get the #shardSize() parameter,FreeText,,0
626,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,org.elasticsearch.search.suggest.SuggestionBuilder(java.lang.String field),org.elasticsearch.search.suggest.SuggestionBuilder,org.elasticsearch.search.suggest.SuggestionBuilder,Creates a new suggestion.,FreeText,,0
627,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,size(int size),size,org.elasticsearch.search.suggest.SuggestionBuilder,Sets the maximum suggestions to be returned per suggest text term.,FreeText,,0
628,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,doWriteTo(org.elasticsearch.common.io.stream.StreamOutput out),doWriteTo,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
629,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,analyzer(),analyzer,org.elasticsearch.search.suggest.SuggestionBuilder,get the #analyzer() parameter,FreeText,,0
630,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,"populateCommonFields(org.elasticsearch.index.mapper.MapperService mapperService, org.elasticsearch.search.suggest.SuggestionSearchContext$SuggestionContext suggestionContext)",populateCommonFields,org.elasticsearch.search.suggest.SuggestionBuilder,"Transfers the text, prefix, regex, analyzer, field, size and shard size settings from the original SuggestionBuilder to the target SuggestionContext",FreeText,,0
631,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,"org.elasticsearch.search.suggest.SuggestionBuilder(java.lang.String field, org.elasticsearch.search.suggest.SuggestionBuilder<?> in)",org.elasticsearch.search.suggest.SuggestionBuilder,org.elasticsearch.search.suggest.SuggestionBuilder,internal copy constructor that copies over all class fields from second SuggestionBuilder except field name.,FreeText,,0
632,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,regex(java.lang.String regex),regex,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
633,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,analyzer(java.lang.String analyzer),analyzer,org.elasticsearch.search.suggest.SuggestionBuilder,Sets the analyzer to analyse to suggest text with. Defaults to the search analyzer of the suggest field.,FreeText,,0
634,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,doHashCode(),doHashCode,org.elasticsearch.search.suggest.SuggestionBuilder,HashCode for the subclass of SuggestionBuilder to implement.,FreeText,,0
635,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,prefix(),prefix,org.elasticsearch.search.suggest.SuggestionBuilder,get the prefix for this suggestion,FreeText,,0
636,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,field(),field,org.elasticsearch.search.suggest.SuggestionBuilder,get the #field() parameter,FreeText,,0
637,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,"innerToXContent(org.elasticsearch.common.xcontent.XContentBuilder builder, org.elasticsearch.common.xcontent.ToXContent$Params params)",innerToXContent,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
638,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,text(),text,org.elasticsearch.search.suggest.SuggestionBuilder,get the text for this suggestion,FreeText,,0
639,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,shardSize(java.lang.Integer shardSize),shardSize,org.elasticsearch.search.suggest.SuggestionBuilder,"Sets the maximum number of suggested term to be retrieved from each individual shard. During the reduce phase the only the top N suggestions are returned based on the size option. Defaults to the size option.  Setting this to a value higher than the `size` can be useful in order to get a more accurate document frequency for suggested terms. Due to the fact that terms are partitioned amongst shards, the shard level document frequencies of suggestions may not be precise. Increasing this will make these document frequencies more precise.",FreeText,,0
640,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,doEquals(T other),doEquals,org.elasticsearch.search.suggest.SuggestionBuilder,"Indicates whether some other SuggestionBuilder of the same type is ""equal to"" this one.",FreeText,,0
641,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,text(java.lang.String text),text,org.elasticsearch.search.suggest.SuggestionBuilder,"Same as in SuggestBuilder#setGlobalText(String), but in the suggestion scope.",FreeText,methodResultID.equals(setGlobalText(args[0])),1
642,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,equals(java.lang.Object obj),equals,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
643,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,hashCode(),hashCode,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
644,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,regex(),regex,org.elasticsearch.search.suggest.SuggestionBuilder,get the regex for this suggestion,FreeText,,0
645,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,size(),size,org.elasticsearch.search.suggest.SuggestionBuilder,get the #size() parameter,FreeText,,0
646,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,build(org.elasticsearch.index.query.QueryShardContext context),build,org.elasticsearch.search.suggest.SuggestionBuilder,,FreeText,,0
647,gs,org.graphstream.graph.Edge_goal.json,isDirected(),isDirected,org.graphstream.graph.Edge,Is the edge directed ?.,FreeText,,0
648,gs,org.graphstream.graph.Edge_goal.json,getNode1(),getNode1,org.graphstream.graph.Edge,"Second node of the edge.  This is equivalent to the #getTargetNode() method, but may be clearer in the source code if the graph you are using is not directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getNode1(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode0() @see #getTargetNode()",FreeText,methodResultID.equals(receiverObjectClone.getTargetNode()),1
649,gs,org.graphstream.graph.Edge_goal.json,getSourceNode(),getSourceNode,org.graphstream.graph.Edge,"Start node.  When the edge is directed this is the source node, in this case you can get the opposite node using #getTargetNode(). This is equivalent to the #getNode0() method but may be clearer in the source code if the graph you are using is directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getSourceNode(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode0() @see #getTargetNode()",FreeText,methodResultID.equals(receiverObjectClone.getNode0()),1
650,gs,org.graphstream.graph.Edge_goal.json,getOpposite(org.graphstream.graph.Node node),getOpposite,org.graphstream.graph.Edge,"When knowing one node and one edge of this node, this method return the node at the other end of the edge.  Return null if the given node is not at any end of the edge.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getOppositeNode((ExtendedNode) m); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.",FreeText,,0
651,gs,org.graphstream.graph.Edge_goal.json,getTargetNode(),getTargetNode,org.graphstream.graph.Edge,"End node.  When the edge is directed this is the target node, in this case you can get the opposite node using #getSourceNode(). This is equivalent to the #getNode1() method but may be clearer in the source code if the graph you are using is directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getTargetNode(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode1() @see #getSourceNode()",FreeText,methodResultID.equals(receiverObjectClone.getNode1()),1
652,gs,org.graphstream.graph.Edge_goal.json,isLoop(),isLoop,org.graphstream.graph.Edge,Does the source and target of this edge identify the same node ?.,FreeText,,0
653,gs,org.graphstream.graph.Edge_goal.json,getNode0(),getNode0,org.graphstream.graph.Edge,"First node of the edge.  This is equivalent to the #getSourceNode() method, but may be clearer in the source code if the graph you are using is not directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getNode0(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode1() @see #getSourceNode()",FreeText,methodResultID.equals(receiverObjectClone.getSourceNode()),1
654,gs,org.graphstream.graph.Element_goal.json,getHash(java.lang.String key),getHash,org.graphstream.graph.Element,"Get the hash bound to key. Hashes are special attributes whose value is a set of pairs (name,object). Instances of object implementing the CompoundAttribute interface are considered like hashes since they can be transformed to a hash. If an attribute with the same name exists but is not a hash, null is returned. We cannot enforce the type of the key. It is considered a string and you should use ""Object.toString()"" to get it.",FreeText,,0
655,gs,org.graphstream.graph.Element_goal.json,getId(),getId,org.graphstream.graph.Element,Unique identifier of this element.,FreeText,,0
656,gs,org.graphstream.graph.Element_goal.json,"addAttributes(java.util.Map<java.lang.String, java.lang.Object> attributes)",addAttributes,org.graphstream.graph.Element,Add or replace each attribute found in attributes. Existing attributes are overwritten silently. All classes inheriting from Number can be considered as numbers. All classes inheriting from CharSequence can be considered as labels.,FreeText,,0
657,gs,org.graphstream.graph.Element_goal.json,getNumber(java.lang.String key),getNumber,org.graphstream.graph.Element,"Get the number bound to key. Numbers are special attributes whose value is an instance of Number. If an attribute with the same name exists but is not a Number, NaN is returned.",FreeText,,0
658,gs,org.graphstream.graph.Element_goal.json,"setAttribute(java.lang.String attribute, java.lang.Object... values)",setAttribute,org.graphstream.graph.Element,"Like #addAttribute(String, Object...) but for consistency.",FreeText,"receiverObjectClone.addAttribute(args[0],args[1]); receiverObjectClone.equals(receiverObjectID)",1
659,gs,org.graphstream.graph.Element_goal.json,"addAttribute(java.lang.String attribute, java.lang.Object... values)",addAttribute,org.graphstream.graph.Element,"Add or replace the value of an attribute. Existing attributes are overwritten silently. All classes inheriting from Number can be considered as numbers. All classes inheriting from CharSequence can be considered as labels. You can pass zero, one or more arguments for the attribute values. If no value is given, a boolean with value ""true"" is added. If there is more than one value, an array is stored. If there is only one value, the value is stored (but not in an array).",FreeText,,0
660,gs,org.graphstream.graph.Element_goal.json,getLabel(java.lang.String key),getLabel,org.graphstream.graph.Element,"Get the label string bound to the given key key. Labels are special attributes whose value is a character sequence. If an attribute with the same name exists but is not a character sequence, null is returned.",FreeText,,0
661,gs,org.graphstream.graph.Element_goal.json,hasHash(java.lang.String key),hasHash,org.graphstream.graph.Element,"Does this element store a hash value for the given key? A hash is a set of pairs (key,value) or objects that implement the org.graphstream.graph.CompoundAttribute class.",FreeText,,0
662,gs,org.graphstream.graph.Element_goal.json,hasVector(java.lang.String key),hasVector,org.graphstream.graph.Element,Does this element store a vector value for the given key? A vector is an attribute whose value is a sequence of numbers.,FreeText,,0
663,gs,org.graphstream.graph.Element_goal.json,hasAttribute(java.lang.String key),hasAttribute,org.graphstream.graph.Element,Does this element store a value for the given attribute key?,FreeText,,0
664,gs,org.graphstream.graph.Element_goal.json,hasNumber(java.lang.String key),hasNumber,org.graphstream.graph.Element,Does this element store a number for the given key? A number is an attribute whose value is an instance of Number.,FreeText,,0
665,gs,org.graphstream.graph.Element_goal.json,"getFirstAttributeOf(java.lang.Class<T> clazz, java.lang.String... keys)",getFirstAttributeOf,org.graphstream.graph.Element,"Like #getAttribute(String, Class), but returns the first existing attribute in a list of keys, instead of only one key. The key list order matters.",FreeText,"methodResultID.equals(receiverObjectClone.getAttribute(args[1][0], args[0]))",1
666,gs,org.graphstream.graph.Element_goal.json,getArray(java.lang.String key),getArray,org.graphstream.graph.Element,"Get the array of objects bound to key. Arrays of objects are special attributes whose value is a sequence of objects. If an attribute with the same name exists but is not an array, null is returned.",FreeText,,0
667,gs,org.graphstream.graph.Element_goal.json,getFirstAttributeOf(java.lang.String... keys),getFirstAttributeOf,org.graphstream.graph.Element,"Like #getAttribute(String), but returns the first existing attribute in a list of keys, instead of only one key. The key list order matters.",FreeText,methodResultID.equals(receiverObjectClone.getAttribute(args[0][0])),1
668,gs,org.graphstream.graph.Element_goal.json,getVector(java.lang.String key),getVector,org.graphstream.graph.Element,"Get the vector of number bound to key. Vectors of numbers are special attributes whose value is a sequence of numbers. If an attribute with the same name exists but is not a vector of number, null is returned.",FreeText,,0
669,gs,org.graphstream.graph.Element_goal.json,"changeAttribute(java.lang.String attribute, java.lang.Object... values)",changeAttribute,org.graphstream.graph.Element,"Like #addAttribute(String, Object...) but for consistency.",FreeText,"receiverObjectClone.addAttribute(args[0],args[1]); receiverObjectClone.equals(receiverObjectID)",1
670,gs,org.graphstream.graph.Element_goal.json,"hasAttribute(java.lang.String key, java.lang.Class<?> clazz)",hasAttribute,org.graphstream.graph.Element,Does this element store a value for the given attribute key and this value is an instance of the given class?,FreeText,,0
671,gs,org.graphstream.graph.Element_goal.json,hasArray(java.lang.String key),hasArray,org.graphstream.graph.Element,Does this element store an array value for the given key? A vector is an attribute whose value is an array of objects.,FreeText,,0
672,gs,org.graphstream.graph.Element_goal.json,getAttributeCount(),getAttributeCount,org.graphstream.graph.Element,Number of attributes stored in this element.,FreeText,,0
673,gs,org.graphstream.graph.Element_goal.json,removeAttribute(java.lang.String attribute),removeAttribute,org.graphstream.graph.Element,Remove an attribute. Non-existent attributes errors are ignored silently.,FreeText,,0
674,gs,org.graphstream.graph.Element_goal.json,getEachAttributeKey(),getEachAttributeKey,org.graphstream.graph.Element,An iterable view on the set of attribute keys usable within a for-each loop.,FreeText,,0
675,gs,org.graphstream.graph.Element_goal.json,clearAttributes(),clearAttributes,org.graphstream.graph.Element,"Remove all registered attributes. This includes numbers, labels and vectors.",FreeText,,0
676,gs,org.graphstream.graph.Element_goal.json,"getAttribute(java.lang.String key, java.lang.Class<T> clazz)",getAttribute,org.graphstream.graph.Element,Get the attribute object bound to the given key if it is an instance of the given class. Some The returned value maybe null to indicate the attribute does not exists or is not an instance of the given class.,FreeText,,0
677,gs,org.graphstream.graph.Element_goal.json,getAttribute(java.lang.String key),getAttribute,org.graphstream.graph.Element,Get the attribute object bound to the given key. The returned value may be null to indicate the attribute does not exists or is not supported.,FreeText,,0
678,gs,org.graphstream.graph.Element_goal.json,hasLabel(java.lang.String key),hasLabel,org.graphstream.graph.Element,Does this element store a label value for the given key? A label is an attribute whose value is a string.,FreeText,,0
679,gs,org.graphstream.graph.Element_goal.json,getIndex(),getIndex,org.graphstream.graph.Element,The current index of this element,FreeText,,0
680,gs,org.graphstream.graph.Element_goal.json,getAttributeKeyIterator(),getAttributeKeyIterator,org.graphstream.graph.Element,Iterator on all attributes keys.,FreeText,,0
681,gs,org.graphstream.graph.Element_goal.json,getAttributeKeySet(),getAttributeKeySet,org.graphstream.graph.Element,An unmodifiable view on the set of attribute keys.,FreeText,,0
682,gs,org.graphstream.graph.implementations.MultiNode_goal.json,getEdgeSetBetween(int index),getEdgeSetBetween,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
683,gs,org.graphstream.graph.implementations.MultiNode_goal.json,removeEdge(int i),removeEdge,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
684,gs,org.graphstream.graph.implementations.MultiNode_goal.json,"org.graphstream.graph.implementations.MultiNode(org.graphstream.graph.implementations.AbstractGraph graph, java.lang.String id)",org.graphstream.graph.implementations.MultiNode,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
685,gs,org.graphstream.graph.implementations.MultiNode_goal.json,clearCallback(),clearCallback,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
686,gs,org.graphstream.graph.implementations.MultiNode_goal.json,getEdgeSetBetween(org.graphstream.graph.Node node),getEdgeSetBetween,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
687,gs,org.graphstream.graph.implementations.MultiNode_goal.json,addEdgeCallback(org.graphstream.graph.implementations.AbstractEdge edge),addEdgeCallback,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
688,gs,org.graphstream.graph.implementations.MultiNode_goal.json,getNeighborNodeIterator(),getNeighborNodeIterator,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
689,gs,org.graphstream.graph.implementations.MultiNode_goal.json,"locateEdge(org.graphstream.graph.Node opposite, char type)",locateEdge,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
690,gs,org.graphstream.graph.implementations.MultiNode_goal.json,getEdgeSetBetween(java.lang.String id),getEdgeSetBetween,org.graphstream.graph.implementations.MultiNode,,FreeText,,0
691,gs,org.graphstream.graph.implementations.SingleNode_goal.json,clearCallback(),clearCallback,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
692,gs,org.graphstream.graph.implementations.SingleNode_goal.json,getNeighborNodeIterator(),getNeighborNodeIterator,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
693,gs,org.graphstream.graph.implementations.SingleNode_goal.json,"locateEdge(org.graphstream.graph.Node opposite, char type)",locateEdge,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
694,gs,org.graphstream.graph.implementations.SingleNode_goal.json,"org.graphstream.graph.implementations.SingleNode(org.graphstream.graph.implementations.AbstractGraph graph, java.lang.String id)",org.graphstream.graph.implementations.SingleNode,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
695,gs,org.graphstream.graph.implementations.SingleNode_goal.json,addEdgeCallback(org.graphstream.graph.implementations.AbstractEdge edge),addEdgeCallback,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
696,gs,org.graphstream.graph.implementations.SingleNode_goal.json,removeEdge(int i),removeEdge,org.graphstream.graph.implementations.SingleNode,,FreeText,,0
697,gs,org.graphstream.graph.Node_goal.json,getBreadthFirstIterator(),getBreadthFirstIterator,org.graphstream.graph.Node,"Iterator for breadth first exploration of the graph, starting at this node.  If the graph is not connected, only a part of it will be explored. By default, this iterator will respect edge orientation.   This method is implicitly generic and return an Iterator over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedNode> ite = node.getBreadthFirstIterator(); </pre> the method will return an Iterator<ExtendedNode>. If no left part exists, method will just return an Iterator<Node>.",FreeText,,0
698,gs,org.graphstream.graph.Node_goal.json,getEdgeSet(),getEdgeSet,org.graphstream.graph.Node,"Set of all entering and leaving edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
699,gs,org.graphstream.graph.Node_goal.json,toString(),toString,org.graphstream.graph.Node,Override the Object.toString() method.,FreeText,,0
700,gs,org.graphstream.graph.Node_goal.json,getDepthFirstIterator(),getDepthFirstIterator,org.graphstream.graph.Node,"Iterator for depth first exploration of the graph, starting at this node.  If the graph is not connected, only a part of it will be explored. By default, this iterator will respect edge orientation.   This method is implicitly generic and return an Iterator over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedNode> ite = node.getDepthFirstIterator(); </pre> the method will return an Iterator<ExtendedNode>. If no left part exists, method will just return an Iterator<Node>.",FreeText,,0
701,gs,org.graphstream.graph.Node_goal.json,getNeighborNodeIterator(),getNeighborNodeIterator,org.graphstream.graph.Node,"Iterator on the set of neighbor nodes connected to this node via one or more edges. This iterator iterates across any leaving, entering and non directed edges (nodes are neighbors even if they only have a directed edge from them toward this node). If there are multiple edges connecting the same node, it might be iterated several times.",FreeText,,0
702,gs,org.graphstream.graph.Node_goal.json,getEdgeBetween(java.lang.String id),getEdgeBetween,org.graphstream.graph.Node,"Retrieve an edge between this node and the node 'id', if it exits.  This method selects directed or undirected edges. If the edge is directed, its direction is not important and leaving or entering edges will be selected.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeBetween(&quot;...&quot;); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
703,gs,org.graphstream.graph.Node_goal.json,getEnteringEdgeSet(),getEnteringEdgeSet,org.graphstream.graph.Node,"Set of all entering edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getEnteringEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
704,gs,org.graphstream.graph.Node_goal.json,getEdgeFrom(java.lang.String id),getEdgeFrom,org.graphstream.graph.Node,"Retrieve an edge that leaves node 'id' toward this node.  This method selects only edges leaving node 'id' an pointing at this node (this also selects undirected edges).   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeFrom(&quot;...&quot;); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
705,gs,org.graphstream.graph.Node_goal.json,getEdgeFrom(org.graphstream.graph.Node node),getEdgeFrom,org.graphstream.graph.Node,"Retrieves an edge that leaves given node toward this node.  This method selects only edges leaving the other node an pointing at this node (this also selects undirected edges).   This method is implicitly generic and returns something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeFrom(...); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
706,gs,org.graphstream.graph.Node_goal.json,hasEdgeFrom(org.graphstream.graph.Node node),hasEdgeFrom,org.graphstream.graph.Node,True if an edge enters this node from a given node.,FreeText,,0
707,gs,org.graphstream.graph.Node_goal.json,getEachEdge(),getEachEdge,org.graphstream.graph.Node,"Set of all entering and leaving edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
708,gs,org.graphstream.graph.Node_goal.json,getEdgeToward(int index),getEdgeToward,org.graphstream.graph.Node,"Retrieves an edge that leaves this node toward the node with given index.  This method selects only edges leaving this node an pointing at the parameter node (this also selects undirected edges).   This method is implicitly generic and returns something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeToward(...); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
709,gs,org.graphstream.graph.Node_goal.json,getGraph(),getGraph,org.graphstream.graph.Node,Parent graph. Some elements are not able to give their parent graph.,FreeText,,0
710,gs,org.graphstream.graph.Node_goal.json,getEdgeBetween(org.graphstream.graph.Node node),getEdgeBetween,org.graphstream.graph.Node,"Retrieves an edge between this node and and another node if one exists.  This method selects directed or undirected edges. If the edge is directed, its direction is not important and leaving or entering edges will be selected.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeBetween(...); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
711,gs,org.graphstream.graph.Node_goal.json,getInDegree(),getInDegree,org.graphstream.graph.Node,Number of entering edges.,FreeText,,0
712,gs,org.graphstream.graph.Node_goal.json,getBreadthFirstIterator(boolean directed),getBreadthFirstIterator,org.graphstream.graph.Node,"Iterator for breadth first exploration of the graph, starting at this node.  If the graph is not connected, only a part of it will be explored.   This method is implicitly generic and return an Iterator over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedNode> ite = node.getBreadthFirstIterator(true); </pre> the method will return an Iterator<ExtendedNode>. If no left part exists, method will just return an Iterator<Node>.",FreeText,,0
713,gs,org.graphstream.graph.Node_goal.json,getEachLeavingEdge(),getEachLeavingEdge,org.graphstream.graph.Node,"Set of all leaving edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getLeavingEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
714,gs,org.graphstream.graph.Node_goal.json,hasEdgeFrom(java.lang.String id),hasEdgeFrom,org.graphstream.graph.Node,True if an edge enters this node from node 'id'.,FreeText,,0
715,gs,org.graphstream.graph.Node_goal.json,hasEdgeBetween(java.lang.String id),hasEdgeBetween,org.graphstream.graph.Node,True if an edge exists between this node and node 'id'.,FreeText,,0
716,gs,org.graphstream.graph.Node_goal.json,getEachEnteringEdge(),getEachEnteringEdge,org.graphstream.graph.Node,"Set of all entering edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getEnteringEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
717,gs,org.graphstream.graph.Node_goal.json,getLeavingEdgeIterator(),getLeavingEdgeIterator,org.graphstream.graph.Node,"Iterator only on entering edges.  This iterator iterates only on directed edges going from other nodes toward this node (non-directed edges are included in the iteration).   This method is implicitly generic and return an Iterator over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedEdge> ite = node.getLeavingEdgeIterator(); </pre> the method will return an Iterator<ExtendedEdge>. If no left part exists, method will just return an Iterator<Edge>.",FreeText,,0
718,gs,org.graphstream.graph.Node_goal.json,getEdgeToward(java.lang.String id),getEdgeToward,org.graphstream.graph.Node,"Retrieve an edge that leaves this node toward 'id'.  This method selects only edges leaving this node an pointing at node 'id' (this also selects undirected edges).   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeToward(&quot;...&quot;); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
719,gs,org.graphstream.graph.Node_goal.json,getDepthFirstIterator(boolean directed),getDepthFirstIterator,org.graphstream.graph.Node,"Iterator for depth first exploration of the graph, starting at this node.  If the graph is not connected, only a part of it will be explored.   This method is implicitly generic and return an Iterator over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedNode> ite = node.getDepthFirstIterator(true); </pre> the method will return an Iterator<ExtendedNode>. If no left part exists, method will just return an Iterator<Node>.",FreeText,,0
720,gs,org.graphstream.graph.Node_goal.json,hasEdgeFrom(int index),hasEdgeFrom,org.graphstream.graph.Node,True if an edge enters this node from a node with given index.,FreeText,,0
721,gs,org.graphstream.graph.Node_goal.json,getEdgeFrom(int index),getEdgeFrom,org.graphstream.graph.Node,"Retrieves an edge that leaves node with given index toward this node.  This method selects only edges leaving the other node an pointing at this node (this also selects undirected edges).   This method is implicitly generic and returns something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeFrom(&quot;...&quot;); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
722,gs,org.graphstream.graph.Node_goal.json,getOutDegree(),getOutDegree,org.graphstream.graph.Node,Number of leaving edges.,FreeText,,0
723,gs,org.graphstream.graph.Node_goal.json,getLeavingEdge(int i),getLeavingEdge,org.graphstream.graph.Node,"I-th leaving edge. Edges are stored in no given order.  However this method allows to iterate very quickly on all leaving edges, or to choose a given leaving edge with direct access.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getLeavingEdge(i); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
724,gs,org.graphstream.graph.Node_goal.json,getLeavingEdgeSet(),getLeavingEdgeSet,org.graphstream.graph.Node,"Set of all leaving edges.  This method is implicitly generic and return an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterable<ExtendedEdge> ite = node.getLeavingEdgeSet(); </pre> the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>.",FreeText,,0
725,gs,org.graphstream.graph.Node_goal.json,getEdgeToward(org.graphstream.graph.Node node),getEdgeToward,org.graphstream.graph.Node,"Retrieves an edge that leaves this node toward another node.  This method selects only edges leaving this node an pointing at the parameter node (this also selects undirected edges).   This method is implicitly generic and returns something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeToward(...); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
726,gs,org.graphstream.graph.Node_goal.json,hasEdgeToward(org.graphstream.graph.Node node),hasEdgeToward,org.graphstream.graph.Node,True if an edge leaves this node toward a given node.,FreeText,,0
727,gs,org.graphstream.graph.Node_goal.json,getEnteringEdge(int i),getEnteringEdge,org.graphstream.graph.Node,"I-th entering edge. Edges are stored in no given order.  However this method allows to iterate very quickly on all entering edges, or to choose a given entering edge with direct access.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEnteringEdge(i); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
728,gs,org.graphstream.graph.Node_goal.json,getEdge(int i),getEdge,org.graphstream.graph.Node,"I-th edge. Edges are stored in no given order.  However this method allows to iterate very quickly on all edges, or to choose a given edge with direct access.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdge(i); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
729,gs,org.graphstream.graph.Node_goal.json,getEdgeBetween(int index),getEdgeBetween,org.graphstream.graph.Node,"Retrieves an edge between this node and the node with index i if one exists.  This method selects directed or undirected edges. If the edge is directed, its direction is not important and leaving or entering edges will be selected.   This method is implicitly generic and return something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedEdge e = node.getEdgeBetween(...); </pre> the method will return an ExtendedEdge. If no left part exists, method will just return an Edge.",FreeText,,0
730,gs,org.graphstream.graph.Node_goal.json,hasEdgeToward(int index),hasEdgeToward,org.graphstream.graph.Node,True if an edge leaves this node toward a node with given index.,FreeText,,0
731,gs,org.graphstream.graph.Node_goal.json,getEdgeIterator(),getEdgeIterator,org.graphstream.graph.Node,"Iterator on the set of connected edges.  This iterator iterates on all edges leaving and entering (this includes any non-directed edge present, and a non-directed edge is only iterated once).   This method is implicitly generic and return an Iterator over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedEdge> ite = node.getEdgeIterator(); </pre> the method will return an Iterator<ExtendedEdge>. If no left part exists, method will just return an Iterator<Edge>.",FreeText,,0
732,gs,org.graphstream.graph.Node_goal.json,hasEdgeToward(java.lang.String id),hasEdgeToward,org.graphstream.graph.Node,True if an edge leaves this node toward node 'id'.,FreeText,,0
733,gs,org.graphstream.graph.Node_goal.json,getDegree(),getDegree,org.graphstream.graph.Node,Total number of relations with other nodes or this node.,FreeText,,0
734,gs,org.graphstream.graph.Node_goal.json,getEnteringEdgeIterator(),getEnteringEdgeIterator,org.graphstream.graph.Node,"Iterator only on leaving edges.  This iterator iterates only on directed edges going from this node to others (non-directed edges are included in the iteration).   This method is implicitly generic and return an Iterator over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call : <pre> Iterator<ExtendedEdge> ite = node.getEnteringEdgeIterator(); </pre> the method will return an Iterator<ExtendedEdge>. If no left part exists, method will just return an Iterator<Edge>.",FreeText,,0
735,gs,org.graphstream.graph.Node_goal.json,hasEdgeBetween(int index),hasEdgeBetween,org.graphstream.graph.Node,True if an edge exists between this node and a node with given index.,FreeText,,0
736,gs,org.graphstream.graph.Node_goal.json,hasEdgeBetween(org.graphstream.graph.Node node),hasEdgeBetween,org.graphstream.graph.Node,True if an edge exists between this node and another node.,FreeText,,0
737,gs,org.graphstream.graph.Path_goal.json,getNodeCount(),getNodeCount,org.graphstream.graph.Path,Returns the size of the path. Identical to #size().,FreeText,methodResultID==(receiverObjectClone.size()),1
738,gs,org.graphstream.graph.Path_goal.json,getEachNode(),getEachNode,org.graphstream.graph.Path,,FreeText,,0
739,gs,org.graphstream.graph.Path_goal.json,"push(org.graphstream.graph.Node from, org.graphstream.graph.Edge edge)",push,org.graphstream.graph.Path,A synonym for #add(Edge).,FreeText,receiverObjectClone.add(args[1]);receiverObjectClone.equals(receiverObjectID),1
740,gs,org.graphstream.graph.Path_goal.json,getACopy(),getACopy,org.graphstream.graph.Path,Get a copy of this path,FreeText,,0
741,gs,org.graphstream.graph.Path_goal.json,contains(org.graphstream.graph.Node node),contains,org.graphstream.graph.Path,Says whether the path contains this node or not.,FreeText,,0
742,gs,org.graphstream.graph.Path_goal.json,getNodePath(),getNodePath,org.graphstream.graph.Path,Construct an return a list of nodes that represents the path.,FreeText,,0
743,gs,org.graphstream.graph.Path_goal.json,size(),size,org.graphstream.graph.Path,Returns the size of the path,FreeText,,0
744,gs,org.graphstream.graph.Path_goal.json,push(org.graphstream.graph.Edge edge),push,org.graphstream.graph.Path,A synonym for #add(Edge).,FreeText,receiverObjectClone.add(args[0]);receiverObjectClone.equals(receiverObjectID),1
745,gs,org.graphstream.graph.Path_goal.json,popEdge(),popEdge,org.graphstream.graph.Path,This methods pops the 2 stacks (edgePath and nodePath) and returns the removed edge.,FreeText,,0
746,gs,org.graphstream.graph.Path_goal.json,getEdgePath(),getEdgePath,org.graphstream.graph.Path,Returns the list of edges representing the path.,FreeText,,0
747,gs,org.graphstream.graph.Path_goal.json,equals(org.graphstream.graph.Path p),equals,org.graphstream.graph.Path,Compare the content of the current path and the specified path to decide weather they are equal or not.,FreeText,,0
748,gs,org.graphstream.graph.Path_goal.json,peekNode(),peekNode,org.graphstream.graph.Path,Looks at the node at the top of the stack without removing it from the stack.,FreeText,,0
749,gs,org.graphstream.graph.Path_goal.json,toString(),toString,org.graphstream.graph.Path,Returns a String description of the path.,FreeText,,0
750,gs,org.graphstream.graph.Path_goal.json,setRoot(org.graphstream.graph.Node root),setRoot,org.graphstream.graph.Path,Set the root (first node) of the path.,FreeText,,0
751,gs,org.graphstream.graph.Path_goal.json,add(org.graphstream.graph.Edge edge),add,org.graphstream.graph.Path,Method that adds an edge an a node to the path. The new edge to add is given.,FreeText,,0
752,gs,org.graphstream.graph.Path_goal.json,getNodeIterator(),getNodeIterator,org.graphstream.graph.Path,,FreeText,,0
753,gs,org.graphstream.graph.Path_goal.json,getEdgeSet(),getEdgeSet,org.graphstream.graph.Path,,FreeText,,0
754,gs,org.graphstream.graph.Path_goal.json,empty(),empty,org.graphstream.graph.Path,Returns true if the path is empty.,FreeText,,0
755,gs,org.graphstream.graph.Path_goal.json,"add(org.graphstream.graph.Node from, org.graphstream.graph.Edge edge)",add,org.graphstream.graph.Path,Method that adds a node (and an edge) to the path. Parameters are the start node : the one who already belong to the path or the first one if the path is empty. The other parameter is the the new edge to add.,FreeText,,0
756,gs,org.graphstream.graph.Path_goal.json,clear(),clear,org.graphstream.graph.Path,Clears the path;,FreeText,,0
757,gs,org.graphstream.graph.Path_goal.json,contains(org.graphstream.graph.Edge edge),contains,org.graphstream.graph.Path,Says whether the path contains this edge or not.,FreeText,,0
758,gs,org.graphstream.graph.Path_goal.json,getEachEdge(),getEachEdge,org.graphstream.graph.Path,,FreeText,,0
759,gs,org.graphstream.graph.Path_goal.json,getPathWeight(java.lang.String characteristic),getPathWeight,org.graphstream.graph.Path,It returns the sum of the characteristic given value in the Edges of the path.,FreeText,,0
760,gs,org.graphstream.graph.Path_goal.json,org.graphstream.graph.Path(),org.graphstream.graph.Path,org.graphstream.graph.Path,New empty path.,FreeText,,0
761,gs,org.graphstream.graph.Path_goal.json,getEdgeCount(),getEdgeCount,org.graphstream.graph.Path,,FreeText,,0
762,gs,org.graphstream.graph.Path_goal.json,removeLoops(),removeLoops,org.graphstream.graph.Path,Remove all parts of the path that start at a given node and pass a new at this node.,FreeText,,0
763,gs,org.graphstream.graph.Path_goal.json,getRoot(),getRoot,org.graphstream.graph.Path,Get the root (the first node) of the path.,FreeText,,0
764,gs,org.graphstream.graph.Path_goal.json,peekEdge(),peekEdge,org.graphstream.graph.Path,Looks at the edge at the top of the stack without removing it from the stack.,FreeText,,0
765,gs,org.graphstream.graph.Path_goal.json,popNode(),popNode,org.graphstream.graph.Path,This methods pops the 2 stacks (edgePath and nodePath) and returns the removed node.,FreeText,,0
766,gs,org.graphstream.graph.Path_goal.json,getEdgeIterator(),getEdgeIterator,org.graphstream.graph.Path,,FreeText,,0
767,gs,org.graphstream.graph.Path_goal.json,getNodeSet(),getNodeSet,org.graphstream.graph.Path,,FreeText,,0
768,gs,org.graphstream.graph.Structure_goal.json,getEdgeSet(),getEdgeSet,org.graphstream.graph.Structure,"Unmodifiable view of the set of edges. This method is implicitly generic and returns a Collection of something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call :  Collection<ExtendedEdge> c = struct.getEdgeSet();  the method will return a Collection<ExtendedEdge>. If no left part exists, method will just return a Collection<Edge>.",FreeText,,0
769,gs,org.graphstream.graph.Structure_goal.json,getNodeSet(),getNodeSet,org.graphstream.graph.Structure,"Unmodifiable view of the set of nodes. This method is implicitly generic and returns a Collection of something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call :  Collection<ExtendedNode> c = struct.getNodeSet();  the method will return a Collection<ExtendedNode>. If no left part exists, method will just return a Collection<Node>.",FreeText,,0
770,gs,org.graphstream.graph.Structure_goal.json,getEdgeCount(),getEdgeCount,org.graphstream.graph.Structure,Number of edges in this graph.,FreeText,,0
771,gs,org.graphstream.graph.Structure_goal.json,getNodeCount(),getNodeCount,org.graphstream.graph.Structure,Number of nodes in this graph.,FreeText,,0
772,gs,org.graphstream.graph.Structure_goal.json,getNodeIterator(),getNodeIterator,org.graphstream.graph.Structure,"Iterator on the set of nodes, in an undefined order. This method is implicitly generic and returns an Iterator over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call :  Iterator<ExtendedNode> ite = graph.getNodeIterator();  the method will return an Iterator<ExtendedNode>. If no left part exists, method will just return an Iterator<Node>.",FreeText,,0
773,gs,org.graphstream.graph.Structure_goal.json,getEdgeIterator(),getEdgeIterator,org.graphstream.graph.Structure,"Iterator on the set of edges, in an undefined order. This method is implicitly generic and returns an Iterator over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call :  Iterator<ExtendedEdge> ite = graph.getEdgeIterator();  the method will return an Iterator<ExtendedEdge>. If no left part exists, method will just return an Iterator<Edge>.",FreeText,,0
774,gs,org.graphstream.graph.Structure_goal.json,getEachEdge(),getEachEdge,org.graphstream.graph.Structure,"Set of edges usable in a for-each instruction. This method is implicitly generic and returns an Iterable over something which extends Edge. The return type is the one of the left part of the assignment. For example, in the following call :  Iterable<ExtendedNEdge> ite = struct.getEachEdge();  the method will return an Iterable<ExtendedEdge>. If no left part exists, method will just return an Iterable<Edge>. It is possible to use it in a for-each loop by giving the parameter :  for (ExtendedEdge e : struct.<ExtendedEdge> getEachEdge()) { // ... }",FreeText,,0
775,gs,org.graphstream.graph.Structure_goal.json,getEachNode(),getEachNode,org.graphstream.graph.Structure,"Set of nodes usable in a for-each instruction. This method is implicitly generic and returns an Iterable over something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call :  Iterable<ExtendedNode> ite = struct.getEachNode();  the method will return an Iterable<ExtendedNode>. If no left part exists, method will just return an Iterable<Node>. It is possible to use it in a for-each loop by giving the parameter :  for (ExtendedNode n : struct.<ExtendedNode> getEachNode()) { // ... }",FreeText,,0
776,gs,org.graphstream.ui.geom.Vector2_goal.json,org.graphstream.ui.geom.Vector2(),org.graphstream.ui.geom.Vector2,org.graphstream.ui.geom.Vector2,New zero vector.,FreeText,,0
777,gs,org.graphstream.ui.geom.Vector2_goal.json,equals(java.lang.Object other),equals,org.graphstream.ui.geom.Vector2,Is this equal to other ?,FreeText,,0
778,gs,org.graphstream.ui.geom.Vector2_goal.json,clone(),clone,org.graphstream.ui.geom.Vector2,,FreeText,,0
779,gs,org.graphstream.ui.geom.Vector2_goal.json,"dotProduct(double ox, double oy)",dotProduct,org.graphstream.ui.geom.Vector2,,FreeText,,0
780,gs,org.graphstream.ui.geom.Vector2_goal.json,toString(),toString,org.graphstream.ui.geom.Vector2,,FreeText,,0
781,gs,org.graphstream.ui.geom.Vector2_goal.json,length(),length,org.graphstream.ui.geom.Vector2,Cartesian length.,FreeText,,0
782,gs,org.graphstream.ui.geom.Vector2_goal.json,mult(org.graphstream.ui.geom.Vector2 other),mult,org.graphstream.ui.geom.Vector2,Multiply each element of this by the corresponding element of other.,FreeText,,0
783,gs,org.graphstream.ui.geom.Vector2_goal.json,scalarAdd(double value),scalarAdd,org.graphstream.ui.geom.Vector2,Add value to each element.,FreeText,,0
784,gs,org.graphstream.ui.geom.Vector2_goal.json,scalarMult(double value),scalarMult,org.graphstream.ui.geom.Vector2,Multiply each element by value.,FreeText,,0
785,gs,org.graphstream.ui.geom.Vector2_goal.json,dotProduct(org.graphstream.ui.geom.Vector2 other),dotProduct,org.graphstream.ui.geom.Vector2,Dot product of this and other.,FreeText,,0
786,gs,org.graphstream.ui.geom.Vector2_goal.json,isZero(),isZero,org.graphstream.ui.geom.Vector2,Are all components to zero?.,FreeText,,0
787,gs,org.graphstream.ui.geom.Vector2_goal.json,"set(int i, double value)",set,org.graphstream.ui.geom.Vector2,Explicitly set the i-th component to value.,FreeText,,0
788,gs,org.graphstream.ui.geom.Vector2_goal.json,"org.graphstream.ui.geom.Vector2(org.graphstream.ui.geom.Point2 from, org.graphstream.ui.geom.Point2 to)",org.graphstream.ui.geom.Vector2,org.graphstream.ui.geom.Vector2,,FreeText,,0
789,gs,org.graphstream.ui.geom.Vector2_goal.json,scalarDiv(double value),scalarDiv,org.graphstream.ui.geom.Vector2,Divide each element by value.,FreeText,,0
790,gs,org.graphstream.ui.geom.Vector2_goal.json,add(org.graphstream.ui.geom.Vector2 other),add,org.graphstream.ui.geom.Vector2,Add each element of other to the corresponding element of this.,FreeText,,0
791,gs,org.graphstream.ui.geom.Vector2_goal.json,normalize(),normalize,org.graphstream.ui.geom.Vector2,Transform this into an unit vector.,FreeText,,0
792,gs,org.graphstream.ui.geom.Vector2_goal.json,at(int i),at,org.graphstream.ui.geom.Vector2,i-th element.,FreeText,,0
793,gs,org.graphstream.ui.geom.Vector2_goal.json,sub(org.graphstream.ui.geom.Vector2 other),sub,org.graphstream.ui.geom.Vector2,Subtract each element of other to the corresponding element of this.,FreeText,,0
794,gs,org.graphstream.ui.geom.Vector2_goal.json,copy(org.graphstream.ui.geom.Vector2 other),copy,org.graphstream.ui.geom.Vector2,Make this a copy of other.,FreeText,,0
795,gs,org.graphstream.ui.geom.Vector2_goal.json,hashCode(),hashCode,org.graphstream.ui.geom.Vector2,,FreeText,,0
796,gs,org.graphstream.ui.geom.Vector2_goal.json,org.graphstream.ui.geom.Vector2(org.graphstream.ui.geom.Vector2 other),org.graphstream.ui.geom.Vector2,org.graphstream.ui.geom.Vector2,New vector copy of other.,FreeText,,0
797,gs,org.graphstream.ui.geom.Vector2_goal.json,fill(double value),fill,org.graphstream.ui.geom.Vector2,Assign value to all elements.,FreeText,,0
798,gs,org.graphstream.ui.geom.Vector2_goal.json,validComponent(int i),validComponent,org.graphstream.ui.geom.Vector2,"Is i the index of a component ? In other words, is i >= 0 && < than #count() ?",FreeText,,0
799,gs,org.graphstream.ui.geom.Vector2_goal.json,scalarSub(double value),scalarSub,org.graphstream.ui.geom.Vector2,Substract value to each element.,FreeText,,0
800,gs,org.graphstream.ui.geom.Vector2_goal.json,"set(double x, double y)",set,org.graphstream.ui.geom.Vector2,Explicitly set the three components.,FreeText,,0
801,gs,org.graphstream.ui.geom.Vector2_goal.json,x(),x,org.graphstream.ui.geom.Vector2,,FreeText,,0
802,gs,org.graphstream.ui.geom.Vector2_goal.json,copy(org.graphstream.ui.geom.Point2 point),copy,org.graphstream.ui.geom.Vector2,Make this a copy of point.,FreeText,,0
803,gs,org.graphstream.ui.geom.Vector2_goal.json,org.graphstream.ui.geom.Vector2(org.graphstream.ui.geom.Point2 point),org.graphstream.ui.geom.Vector2,org.graphstream.ui.geom.Vector2,New vector copy of point.,FreeText,,0
804,gs,org.graphstream.ui.geom.Vector2_goal.json,"org.graphstream.ui.geom.Vector2(double x, double y)",org.graphstream.ui.geom.Vector2,org.graphstream.ui.geom.Vector2,"New (x,y) vector.",FreeText,,0
805,gs,org.graphstream.ui.geom.Vector2_goal.json,y(),y,org.graphstream.ui.geom.Vector2,,FreeText,,0
806,gs,org.graphstream.ui.geom.Vector3_goal.json,org.graphstream.ui.geom.Vector3(),org.graphstream.ui.geom.Vector3,org.graphstream.ui.geom.Vector3,New zero vector.,FreeText,,0
807,gs,org.graphstream.ui.geom.Vector3_goal.json,length(),length,org.graphstream.ui.geom.Vector3,Cartesian length.,FreeText,,0
808,gs,org.graphstream.ui.geom.Vector3_goal.json,crossProduct(org.graphstream.ui.geom.Vector3 other),crossProduct,org.graphstream.ui.geom.Vector3,Set this to the cross product of this and other.,FreeText,,0
809,gs,org.graphstream.ui.geom.Vector3_goal.json,add(org.graphstream.ui.geom.Vector3 other),add,org.graphstream.ui.geom.Vector3,Add each element of other to the corresponding element of this.,FreeText,,0
810,gs,org.graphstream.ui.geom.Vector3_goal.json,"crossProduct(org.graphstream.ui.geom.Vector3 A, org.graphstream.ui.geom.Vector3 B)",crossProduct,org.graphstream.ui.geom.Vector3,Set this to the cross product of A and B.,FreeText,,0
811,gs,org.graphstream.ui.geom.Vector3_goal.json,scalarDiv(double value),scalarDiv,org.graphstream.ui.geom.Vector3,Divide each element by value.,FreeText,,0
812,gs,org.graphstream.ui.geom.Vector3_goal.json,toString(),toString,org.graphstream.ui.geom.Vector3,,FreeText,,0
813,gs,org.graphstream.ui.geom.Vector3_goal.json,sub(org.graphstream.ui.geom.Vector3 other),sub,org.graphstream.ui.geom.Vector3,Substract each element of other to the corresponding element of this.,FreeText,,0
814,gs,org.graphstream.ui.geom.Vector3_goal.json,org.graphstream.ui.geom.Vector3(org.graphstream.ui.geom.Vector3 other),org.graphstream.ui.geom.Vector3,org.graphstream.ui.geom.Vector3,New vector copy of other.,FreeText,,0
815,gs,org.graphstream.ui.geom.Vector3_goal.json,"dotProduct(double ox, double oy, double oz)",dotProduct,org.graphstream.ui.geom.Vector3,,FreeText,,0
816,gs,org.graphstream.ui.geom.Vector3_goal.json,fill(double value),fill,org.graphstream.ui.geom.Vector3,Assign value to all elements.,FreeText,,0
817,gs,org.graphstream.ui.geom.Vector3_goal.json,copy(org.graphstream.ui.geom.Vector3 other),copy,org.graphstream.ui.geom.Vector3,Make this a copy of other.,FreeText,,0
818,gs,org.graphstream.ui.geom.Vector3_goal.json,validComponent(int i),validComponent,org.graphstream.ui.geom.Vector3,"Is i the index of a component ? In other words, is i >= 0 && < than #count() ?",FreeText,,0
819,gs,org.graphstream.ui.geom.Vector3_goal.json,"set(int i, double value)",set,org.graphstream.ui.geom.Vector3,Explicitly set the i-th component to value.,FreeText,,0
820,gs,org.graphstream.ui.geom.Vector3_goal.json,scalarSub(double value),scalarSub,org.graphstream.ui.geom.Vector3,Substract value to each element.,FreeText,,0
821,gs,org.graphstream.ui.geom.Vector3_goal.json,isZero(),isZero,org.graphstream.ui.geom.Vector3,Are all components to zero?.,FreeText,,0
822,gs,org.graphstream.ui.geom.Vector3_goal.json,clone(),clone,org.graphstream.ui.geom.Vector3,,FreeText,,0
823,gs,org.graphstream.ui.geom.Vector3_goal.json,org.graphstream.ui.geom.Vector3(org.graphstream.ui.geom.Point3 point),org.graphstream.ui.geom.Vector3,org.graphstream.ui.geom.Vector3,New vector copy of point.,FreeText,,0
824,gs,org.graphstream.ui.geom.Vector3_goal.json,"org.graphstream.ui.geom.Vector3(double x, double y, double z)",org.graphstream.ui.geom.Vector3,org.graphstream.ui.geom.Vector3,"New (x,y,z) vector.",FreeText,,0
825,gs,org.graphstream.ui.geom.Vector3_goal.json,copy(org.graphstream.ui.geom.Point3 point),copy,org.graphstream.ui.geom.Vector3,Make this a copy of point.,FreeText,,0
826,gs,org.graphstream.ui.geom.Vector3_goal.json,equals(java.lang.Object other),equals,org.graphstream.ui.geom.Vector3,Is this equal to other ?,FreeText,,0
827,gs,org.graphstream.ui.geom.Vector3_goal.json,"set(double x, double y, double z)",set,org.graphstream.ui.geom.Vector3,Explicitly set the three components.,FreeText,,0
828,gs,org.graphstream.ui.geom.Vector3_goal.json,normalize(),normalize,org.graphstream.ui.geom.Vector3,Transform this into an unit vector.,FreeText,,0
829,gs,org.graphstream.ui.geom.Vector3_goal.json,mult(org.graphstream.ui.geom.Vector3 other),mult,org.graphstream.ui.geom.Vector3,Multiply each element of this by the corresponding element of other.,FreeText,,0
830,gs,org.graphstream.ui.geom.Vector3_goal.json,scalarAdd(double value),scalarAdd,org.graphstream.ui.geom.Vector3,Add value to each element.,FreeText,,0
831,gs,org.graphstream.ui.geom.Vector3_goal.json,dotProduct(org.graphstream.ui.geom.Vector3 other),dotProduct,org.graphstream.ui.geom.Vector3,Dot product of this and other.,FreeText,,0
832,gs,org.graphstream.ui.geom.Vector3_goal.json,scalarMult(double value),scalarMult,org.graphstream.ui.geom.Vector3,Multiply each element by value.,FreeText,,0
833,gs,org.graphstream.ui.geom.Vector3_goal.json,z(),z,org.graphstream.ui.geom.Vector3,,FreeText,,0
834,guava,com.google.common.base.CharMatcher_goal.json,apply(java.lang.Character character),apply,com.google.common.base.CharMatcher,@deprecated Provided only to satisfy the Predicate interface; use matches instead.,FreeText,,0
835,guava,com.google.common.base.CharMatcher_goal.json,and(com.google.common.base.CharMatcher other),and,com.google.common.base.CharMatcher,Returns a matcher that matches any character matched by both this matcher and other.,FreeText,,0
836,guava,com.google.common.base.CharMatcher_goal.json,javaLetterOrDigit(),9,com.google.common.base.CharMatcher,Determines whether a character is a letter or digit according to {@linkplain Character#isLetterOrDigit(char) Java's definition}.,FreeText,,0
837,guava,com.google.common.base.CharMatcher_goal.json,countIn(java.lang.CharSequence sequence),countIn,com.google.common.base.CharMatcher,Returns the number of matching characters found in a character sequence.,FreeText,,0
838,guava,com.google.common.base.CharMatcher_goal.json,ascii(),ascii,com.google.common.base.CharMatcher,"Determines whether a character is ASCII, meaning that its code point is less than 128.",FreeText,,0
839,guava,com.google.common.base.CharMatcher_goal.json,whitespace(),whitespace,com.google.common.base.CharMatcher,"Determines whether a character is whitespace according to the latest Unicode standard, as illustrated here. This is not the same definition used by other Java APIs. (See a comparison of several definitions of ""whitespace"".) <p>Note: as the Unicode definition evolves, we will modify this matcher to keep it up to date.",FreeText,,0
840,guava,com.google.common.base.CharMatcher_goal.json,setBits(java.util.BitSet table),setBits,com.google.common.base.CharMatcher,Sets bits in table matched by this matcher.,FreeText,,0
841,guava,com.google.common.base.CharMatcher_goal.json,indexIn(java.lang.CharSequence sequence),indexIn,com.google.common.base.CharMatcher,"Returns the index of the first matching character in a character sequence, or -1 if no matching character is present. <p>The default implementation iterates over the sequence in forward order calling matches for each character.",FreeText,,0
842,guava,com.google.common.base.CharMatcher_goal.json,noneOf(java.lang.CharSequence sequence),noneOf,com.google.common.base.CharMatcher,Returns a char matcher that matches any character not present in the given character sequence.,FreeText,,0
843,guava,com.google.common.base.CharMatcher_goal.json,matchesNoneOf(java.lang.CharSequence sequence),matchesNoneOf,com.google.common.base.CharMatcher,"Returns true if a character sequence contains no matching characters. Equivalent to !matchesAnyOf(sequence). <p>The default implementation iterates over the sequence, invoking matches for each character, until this returns false or the end is reached.",FreeText,methodResultID==(!receiverObjectClone.matchesAnyOf(args[0])),1
844,guava,com.google.common.base.CharMatcher_goal.json,"collapseFrom(java.lang.CharSequence sequence, char replacement)",collapseFrom,com.google.common.base.CharMatcher,"Returns a string copy of the input character sequence, with each group of consecutive characters that match this matcher replaced by a single replacement character. For example: CharMatcher.anyOf(""eko"").collapseFrom(""bookkeeper"", '-') ... returns ""b-p-r"". <p>The default implementation uses indexIn(CharSequence) to find the first matching character, then iterates the remainder of the sequence calling matches(char) for each character.",FreeText,,0
845,guava,com.google.common.base.CharMatcher_goal.json,trimTrailingFrom(java.lang.CharSequence sequence),trimTrailingFrom,com.google.common.base.CharMatcher,"Returns a substring of the input character sequence that omits all characters this matcher matches from the end of the string. For example: CharMatcher.anyOf(""ab"").trimTrailingFrom(""abacatbab"") ... returns ""abacat"".",FreeText,,0
846,guava,com.google.common.base.CharMatcher_goal.json,breakingWhitespace(),breakingWhitespace,com.google.common.base.CharMatcher,"Determines whether a character is a breaking whitespace (that is, a whitespace which can be interpreted as a break between words for formatting purposes). See whitespace() for a discussion of that term.",FreeText,,0
847,guava,com.google.common.base.CharMatcher_goal.json,javaLowerCase(),javaLowerCase,com.google.common.base.CharMatcher,Determines whether a character is lower case according to {@linkplain Character#isLowerCase(char) Java's definition}.,FreeText,,0
848,guava,com.google.common.base.CharMatcher_goal.json,"inRange(char startInclusive, char endInclusive)",inRange,com.google.common.base.CharMatcher,"Returns a char matcher that matches any character in a given range (both endpoints are inclusive). For example, to match any lowercase letter of the English alphabet, use CharMatcher.inRange('a', 'z').",FreeText,,0
849,guava,com.google.common.base.CharMatcher_goal.json,retainFrom(java.lang.CharSequence sequence),retainFrom,com.google.common.base.CharMatcher,"Returns a string containing all matching characters of a character sequence, in order. For example: CharMatcher.is('a').retainFrom(""bazaar"") ... returns ""aaa"".",FreeText,,0
850,guava,com.google.common.base.CharMatcher_goal.json,"replaceFrom(java.lang.CharSequence sequence, java.lang.CharSequence replacement)",replaceFrom,com.google.common.base.CharMatcher,"Returns a string copy of the input character sequence, with each character that matches this matcher replaced by a given replacement sequence. For example: CharMatcher.is('a').replaceFrom(""yaha"", ""oo"") ... returns ""yoohoo"". <p>Note: If the replacement is a fixed string with only one character, you are better off calling char) directly.",FreeText,,0
851,guava,com.google.common.base.CharMatcher_goal.json,isNot(char match),isNot,com.google.common.base.CharMatcher,"Returns a char matcher that matches any character except the one specified. <p>To negate another CharMatcher, use negate().",FreeText,,0
852,guava,com.google.common.base.CharMatcher_goal.json,precomputed(),precomputed,com.google.common.base.CharMatcher,"Returns a char matcher functionally equivalent to this one, but which may be faster to query than the original; your mileage may vary. Precomputation takes time and is likely to be worthwhile only if the precomputed matcher is queried many thousands of times. <p>This method has no effect (returns this) when called in GWT: it's unclear whether a precomputed matcher is faster, but it certainly consumes more memory, which doesn't seem like a worthwhile tradeoff in a browser.",FreeText,,0
853,guava,com.google.common.base.CharMatcher_goal.json,removeFrom(java.lang.CharSequence sequence),removeFrom,com.google.common.base.CharMatcher,"Returns a string containing all non-matching characters of a character sequence, in order. For example: CharMatcher.is('a').removeFrom(""bazaar"") ... returns ""bzr"".",FreeText,,0
854,guava,com.google.common.base.CharMatcher_goal.json,trimLeadingFrom(java.lang.CharSequence sequence),trimLeadingFrom,com.google.common.base.CharMatcher,"Returns a substring of the input character sequence that omits all characters this matcher matches from the beginning of the string. For example: CharMatcher.anyOf(""ab"").trimLeadingFrom(""abacatbab"") ... returns ""catbab"".",FreeText,,0
855,guava,com.google.common.base.CharMatcher_goal.json,singleWidth(),singleWidth,com.google.common.base.CharMatcher,"Determines whether a character is single-width (not double-width). When in doubt, this matcher errs on the side of returning false (that is, it tends to assume a character is double-width). <p>Note: as the reference file evolves, we will modify this matcher to keep it up to date.",FreeText,,0
856,guava,com.google.common.base.CharMatcher_goal.json,toString(),toString,com.google.common.base.CharMatcher,"Returns a string representation of this CharMatcher, such as CharMatcher.or(WHITESPACE, JAVA_DIGIT).",FreeText,,0
857,guava,com.google.common.base.CharMatcher_goal.json,none(),none,com.google.common.base.CharMatcher,Matches no characters.,FreeText,,0
858,guava,com.google.common.base.CharMatcher_goal.json,matchesAllOf(java.lang.CharSequence sequence),matchesAllOf,com.google.common.base.CharMatcher,"Returns true if a character sequence contains only matching characters. <p>The default implementation iterates over the sequence, invoking matches for each character, until this returns false or the end is reached.",FreeText,,0
859,guava,com.google.common.base.CharMatcher_goal.json,lastIndexIn(java.lang.CharSequence sequence),lastIndexIn,com.google.common.base.CharMatcher,"Returns the index of the last matching character in a character sequence, or -1 if no matching character is present. <p>The default implementation iterates over the sequence in reverse order calling matches for each character.",FreeText,,0
860,guava,com.google.common.base.CharMatcher_goal.json,javaDigit(),javaDigit,com.google.common.base.CharMatcher,"Determines whether a character is a digit according to {@linkplain Character#isDigit(char) Java's definition}. If you only care to match ASCII digits, you can use inRange('0', '9').",FreeText,,0
861,guava,com.google.common.base.CharMatcher_goal.json,matchesAnyOf(java.lang.CharSequence sequence),matchesAnyOf,com.google.common.base.CharMatcher,"Returns true if a character sequence contains at least one matching character. Equivalent to !matchesNoneOf(sequence). <p>The default implementation iterates over the sequence, invoking matches for each character, until this returns true or the end is reached.",FreeText,methodResultID==(!receiverObjectClone.matchesNoneOf(args[0])),1
862,guava,com.google.common.base.CharMatcher_goal.json,com.google.common.base.CharMatcher(),com.google.common.base.CharMatcher,com.google.common.base.CharMatcher,"Constructor for use by subclasses. When subclassing, you may want to override toString() to provide a useful description.",FreeText,,0
863,guava,com.google.common.base.CharMatcher_goal.json,any(),any,com.google.common.base.CharMatcher,Matches any character.,FreeText,,0
864,guava,com.google.common.base.CharMatcher_goal.json,javaLetter(),javaLetter,com.google.common.base.CharMatcher,"Determines whether a character is a letter according to {@linkplain Character#isLetter(char) Java's definition}. If you only care to match letters of the Latin alphabet, you can use inRange('a', 'z').or(inRange('A', 'Z')).",FreeText,,0
865,guava,com.google.common.base.CharMatcher_goal.json,is(char match),is,com.google.common.base.CharMatcher,Returns a char matcher that matches only one specified character.,FreeText,,0
866,guava,com.google.common.base.CharMatcher_goal.json,digit(),digit,com.google.common.base.CharMatcher,"Determines whether a character is a digit according to Unicode. If you only care to match ASCII digits, you can use inRange('0', '9').",FreeText,,0
867,guava,com.google.common.base.CharMatcher_goal.json,invisible(),invisible,com.google.common.base.CharMatcher,"Determines whether a character is invisible; that is, if its Unicode category is any of SPACE_SEPARATOR, LINE_SEPARATOR, PARAGRAPH_SEPARATOR, CONTROL, FORMAT, SURROGATE, and PRIVATE_USE according to ICU4J.",FreeText,,0
868,guava,com.google.common.base.CharMatcher_goal.json,"indexIn(java.lang.CharSequence sequence, int start)",indexIn,com.google.common.base.CharMatcher,"Returns the index of the first matching character in a character sequence, starting from a given position, or -1 if no character matches after that position. <p>The default implementation iterates over the sequence in forward order, beginning at start, calling matches for each character.",FreeText,,0
869,guava,com.google.common.base.CharMatcher_goal.json,forPredicate(com.google.common.base.Predicate<? super java.lang.Character> predicate),forPredicate,com.google.common.base.CharMatcher,"Returns a matcher with identical behavior to the given Character-based predicate, but which operates on primitive char instances instead.",FreeText,,0
870,guava,com.google.common.base.CharMatcher_goal.json,or(com.google.common.base.CharMatcher other),or,com.google.common.base.CharMatcher,Returns a matcher that matches any character matched by either this matcher or other.,FreeText,,0
871,guava,com.google.common.base.CharMatcher_goal.json,javaIsoControl(),javaIsoControl,com.google.common.base.CharMatcher,Determines whether a character is an ISO control character as specified by Character#isISOControl(char).,FreeText,,0
872,guava,com.google.common.base.CharMatcher_goal.json,negate(),negate,com.google.common.base.CharMatcher,Returns a matcher that matches any character not matched by this matcher.,FreeText,,0
873,guava,com.google.common.base.CharMatcher_goal.json,trimFrom(java.lang.CharSequence sequence),trimFrom,com.google.common.base.CharMatcher,"Returns a substring of the input character sequence that omits all characters this matcher matches from the beginning and from the end of the string. For example: CharMatcher.anyOf(""ab"").trimFrom(""abacatbab"") ... returns ""cat"". <p>Note that: CharMatcher.inRange('\0', ' ').trimFrom(str) ... is equivalent to String#trim().",FreeText,,0
874,guava,com.google.common.base.CharMatcher_goal.json,anyOf(java.lang.CharSequence sequence),anyOf,com.google.common.base.CharMatcher,Returns a char matcher that matches any character present in the given character sequence.,FreeText,,0
875,guava,com.google.common.base.CharMatcher_goal.json,javaUpperCase(),javaUpperCase,com.google.common.base.CharMatcher,Determines whether a character is upper case according to {@linkplain Character#isUpperCase(char) Java's definition}.,FreeText,,0
876,guava,com.google.common.base.CharMatcher_goal.json,matches(char c),matches,com.google.common.base.CharMatcher,.,FreeText,,0
877,guava,com.google.common.base.CharMatcher_goal.json,precomputedInternal(),precomputedInternal,com.google.common.base.CharMatcher,"This is the actual implementation of precomputed, but we bounce calls through a method on Platform so that we can have different behavior in GWT. <p>This implementation tries to be smart in a number of ways. It recognizes cases where the negation is cheaper to precompute than the matcher itself; it tries to build small hash tables for matchers that only match a few characters, and so on. In the worst-case scenario, it constructs an eight-kilobyte bit array and queries that. In many situations this produces a matcher which is faster to query than the original.",FreeText,,0
878,guava,com.google.common.base.CharMatcher_goal.json,"trimAndCollapseFrom(java.lang.CharSequence sequence, char replacement)",trimAndCollapseFrom,com.google.common.base.CharMatcher,"Collapses groups of matching characters exactly as collapseFrom does, except that groups of matching characters at the start or end of the sequence are removed without replacement.",FreeText,,0
879,guava,com.google.common.base.CharMatcher_goal.json,"replaceFrom(java.lang.CharSequence sequence, char replacement)",replaceFrom,com.google.common.base.CharMatcher,"Returns a string copy of the input character sequence, with each character that matches this matcher replaced by a given replacement character. For example: CharMatcher.is('a').replaceFrom(""radar"", 'o') ... returns ""rodor"". <p>The default implementation uses indexIn(CharSequence) to find the first matching character, then iterates the remainder of the sequence calling matches(char) for each character.",FreeText,,0
880,guava,com.google.common.base.Predicates_goal.json,or(java.lang.Iterable<? extends com.google.common.base.Predicate<? super T>> components),or,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if any one of its components evaluates to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a true predicate is found. It defensively copies the iterable passed in, so future changes to it won't alter the behavior of this predicate. If components is empty, the returned predicate will always evaluate to false.",FreeText,,0
881,guava,com.google.common.base.Predicates_goal.json,or(com.google.common.base.Predicate<? super T>... components),or,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if any one of its components evaluates to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a true predicate is found. It defensively copies the array passed in, so future changes to it won't alter the behavior of this predicate. If components is empty, the returned predicate will always evaluate to false.",FreeText,,0
882,guava,com.google.common.base.Predicates_goal.json,and(java.lang.Iterable<? extends com.google.common.base.Predicate<? super T>> components),and,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if each of its components evaluates to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a false predicate is found. It defensively copies the iterable passed in, so future changes to it won't alter the behavior of this predicate. If components is empty, the returned predicate will always evaluate to true.",FreeText,,0
883,guava,com.google.common.base.Predicates_goal.json,and(com.google.common.base.Predicate<? super T>... components),and,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if each of its components evaluates to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a false predicate is found. It defensively copies the array passed in, so future changes to it won't alter the behavior of this predicate. If components is empty, the returned predicate will always evaluate to true.",FreeText,,0
884,guava,com.google.common.base.Predicates_goal.json,"or(com.google.common.base.Predicate<? super T> first, com.google.common.base.Predicate<? super T> second)",or,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if either of its components evaluates to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a true predicate is found.",FreeText,,0
885,guava,com.google.common.base.Predicates_goal.json,in(java.util.Collection<? extends T> target),in,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if the object reference being tested is a member of the given collection. It does not defensively copy the collection passed in, so future changes to it will alter the behavior of the predicate. <p>This method can technically accept any Collection<?>, but using a typed collection helps prevent bugs. This approach doesn't block any potential users since it is always possible to use Predicates.<Object>in().",FreeText,,0
886,guava,com.google.common.base.Predicates_goal.json,"and(com.google.common.base.Predicate<? super T> first, com.google.common.base.Predicate<? super T> second)",and,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if both of its components evaluate to true. The components are evaluated in order, and evaluation will be ""short-circuited"" as soon as a false predicate is found.",FreeText,,0
887,guava,com.google.common.base.Predicates_goal.json,defensiveCopy(java.lang.Iterable<T> iterable),defensiveCopy,com.google.common.base.Predicates,.,FreeText,,0
888,guava,com.google.common.base.Predicates_goal.json,containsPattern(java.lang.String pattern),containsPattern,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the CharSequence being tested contains any match for the given regular expression pattern. The test used is equivalent to Pattern.compile(pattern).matcher(arg).find().,FreeText,,0
889,guava,com.google.common.base.Predicates_goal.json,instanceOf(java.lang.Class<?> clazz),instanceOf,com.google.common.base.Predicates,"Returns a predicate that evaluates to true if the object being tested is an instance of the given class. If the object being tested is null this predicate evaluates to false. <p>If you want to filter an Iterable to narrow its type, consider using Class) in preference. <p>Warning: contrary to the typical assumptions about predicates (as documented at Predicate#apply), the returned predicate may not be consistent with equals. For example, instanceOf(ArrayList.class) will yield different results for the two equal instances Lists.newArrayList(1) and Arrays.asList(1).",FreeText,,0
890,guava,com.google.common.base.Predicates_goal.json,alwaysTrue(),alwaysTrue,com.google.common.base.Predicates,Returns a predicate that always evaluates to true.,FreeText,,0
891,guava,com.google.common.base.Predicates_goal.json,not(com.google.common.base.Predicate<T> predicate),not,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the given predicate evaluates to false.,FreeText,,0
892,guava,com.google.common.base.Predicates_goal.json,contains(java.util.regex.Pattern pattern),contains,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the CharSequence being tested contains any match for the given regular expression pattern. The test used is equivalent to pattern.matcher(arg).find().,FreeText,,0
893,guava,com.google.common.base.Predicates_goal.json,notNull(),notNull,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the object reference being tested is not null.,FreeText,,0
894,guava,com.google.common.base.Predicates_goal.json,equalTo(T target),equalTo,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the object being tested equals() the given target or both are null.,FreeText,,0
895,guava,com.google.common.base.Predicates_goal.json,alwaysFalse(),alwaysFalse,com.google.common.base.Predicates,Returns a predicate that always evaluates to false.,FreeText,,0
896,guava,com.google.common.base.Predicates_goal.json,assignableFrom(java.lang.Class<?> clazz),assignableFrom,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the class being tested is assignable from the given class. The returned predicate does not allow null inputs.,FreeText,,0
897,guava,com.google.common.base.Predicates_goal.json,"compose(com.google.common.base.Predicate<B> predicate, com.google.common.base.Function<A, ? extends B> function)",compose,com.google.common.base.Predicates,"Returns the composition of a function and a predicate. For every x, the generated predicate returns predicate(function(x)).",FreeText,,0
898,guava,com.google.common.base.Predicates_goal.json,isNull(),isNull,com.google.common.base.Predicates,Returns a predicate that evaluates to true if the object reference being tested is null.,FreeText,,0
899,guava,com.google.common.base.Splitter_goal.json,on(java.lang.String separator),on,com.google.common.base.Splitter,"Returns a splitter that uses the given fixed string as a separator. For example, Splitter.on("", "").split(""foo, bar,baz"") returns an iterable containing [""foo"", ""bar,baz""].",FreeText,,0
900,guava,com.google.common.base.Splitter_goal.json,withKeyValueSeparator(java.lang.String separator),withKeyValueSeparator,com.google.common.base.Splitter,"Returns a MapSplitter which splits entries based on this splitter, and splits entries into keys and values using the specified separator.",FreeText,,0
901,guava,com.google.common.base.Splitter_goal.json,withKeyValueSeparator(char separator),withKeyValueSeparator,com.google.common.base.Splitter,"Returns a MapSplitter which splits entries based on this splitter, and splits entries into keys and values using the specified separator.",FreeText,,0
902,guava,com.google.common.base.Splitter_goal.json,trimResults(),trimResults,com.google.common.base.Splitter,"Returns a splitter that behaves equivalently to this splitter, but automatically removes leading and trailing {@linkplain CharMatcher#WHITESPACE whitespace} from each returned substring; equivalent to trimResults(CharMatcher.WHITESPACE). For example, Splitter.on(',').trimResults().split("" a, b ,c "") returns an iterable containing [""a"", ""b"", ""c""].",FreeText,methodResultID.equals(receiverObjectClone.trimResults(com.google.common.base.CharMatcher.WHITESPACE)),1
903,guava,com.google.common.base.Splitter_goal.json,limit(int limit),limit,com.google.common.base.Splitter,"Returns a splitter that behaves equivalently to this splitter but stops splitting after it reaches the limit. The limit defines the maximum number of items returned by the iterator, or the maximum size of the list returned by splitToList. <p>For example, Splitter.on(',').limit(3).split(""a,b,c,d"") returns an iterable containing [""a"", ""b"", ""c,d""]. When omitting empty strings, the omitted strings do no count. Hence, Splitter.on(',').limit(3).omitEmptyStrings().split(""a,,,b,,,c,d"") returns an iterable containing [""a"", ""b"", ""c,d"". When trim is requested, all entries, including the last are trimmed. Hence Splitter.on(',').limit(3).trimResults().split("" a , b , c , d "") results in [""a"", ""b"", ""c , d""].",FreeText,,0
904,guava,com.google.common.base.Splitter_goal.json,withKeyValueSeparator(com.google.common.base.Splitter keyValueSplitter),withKeyValueSeparator,com.google.common.base.Splitter,"Returns a MapSplitter which splits entries based on this splitter, and splits entries into keys and values using the specified key-value splitter.",FreeText,,0
905,guava,com.google.common.base.Splitter_goal.json,omitEmptyStrings(),omitEmptyStrings,com.google.common.base.Splitter,"Returns a splitter that behaves equivalently to this splitter, but automatically omits empty strings from the results. For example, Splitter.on(',').omitEmptyStrings().split("",a,,,b,c,,"") returns an iterable containing only [""a"", ""b"", ""c""]. <p>If either trimResults option is also specified when creating a splitter, that splitter always trims results first before checking for emptiness. So, for example, Splitter.on(':').omitEmptyStrings().trimResults().split("": : : "") returns an empty iterable. <p>Note that it is ordinarily not possible for split(CharSequence) to return an empty iterable, but when using this option, it can (if the input sequence consists of nothing but separators).",FreeText,,0
906,guava,com.google.common.base.Splitter_goal.json,onPattern(java.lang.String separatorPattern),onPattern,com.google.common.base.Splitter,"Returns a splitter that considers any subsequence matching a given pattern (regular expression) to be a separator. For example, Splitter.onPattern(""\r?\n"").split(entireFile) splits a string into lines whether it uses DOS-style or UNIX-style line terminators. This is equivalent to Splitter.on(Pattern.compile(pattern)).",FreeText,methodResultID.equals(Splitter.on(java.util.regex.Pattern.compile(args[0]))),1
907,guava,com.google.common.base.Splitter_goal.json,split(java.lang.CharSequence sequence),split,com.google.common.base.Splitter,"Splits sequence into string components and makes them available through an Iterator, which may be lazily evaluated. If you want an eagerly computed List, use splitToList(CharSequence).",FreeText,,0
908,guava,com.google.common.base.Splitter_goal.json,trimResults(com.google.common.base.CharMatcher trimmer),trimResults,com.google.common.base.Splitter,.,FreeText,,0
909,guava,com.google.common.base.Splitter_goal.json,on(com.google.common.base.CharMatcher separatorMatcher),on,com.google.common.base.Splitter,"Returns a splitter that considers any single character matched by the given CharMatcher to be a separator. For example, Splitter.on(CharMatcher.anyOf("";,"")).split(""foo,;bar,quux"") returns an iterable containing [""foo"", """", ""bar"", ""quux""].",FreeText,,0
910,guava,com.google.common.base.Splitter_goal.json,on(java.util.regex.Pattern separatorPattern),on,com.google.common.base.Splitter,"Returns a splitter that considers any subsequence matching pattern to be a separator. For example, Splitter.on(Pattern.compile(""\r?\n"")).split(entireFile) splits a string into lines whether it uses DOS-style or UNIX-style line terminators.",FreeText,,0
911,guava,com.google.common.base.Splitter_goal.json,on(char separator),on,com.google.common.base.Splitter,"Returns a splitter that uses the given single-character separator. For example, Splitter.on(',').split(""foo,,bar"") returns an iterable containing [""foo"", """", ""bar""].",FreeText,,0
912,guava,com.google.common.base.Splitter_goal.json,fixedLength(int length),fixedLength,com.google.common.base.Splitter,"Returns a splitter that divides strings into pieces of the given length. For example, Splitter.fixedLength(2).split(""abcde"") returns an iterable containing [""ab"", ""cd"", ""e""]. The last piece can be smaller than length but will never be empty. <p>Exception: for consistency with separator-based splitters, split("""") does not yield an empty iterable, but an iterable containing """". This is the only case in which Iterables.size(split(input)) does not equal IntMath.divide(input.length(), length, CEILING). To avoid this behavior, use omitEmptyStrings.",FreeText,,0
913,guava,com.google.common.base.Splitter_goal.json,splitToList(java.lang.CharSequence sequence),splitToList,com.google.common.base.Splitter,"Splits sequence into string components and returns them as an immutable list. If you want an Iterable which may be lazily evaluated, use split(CharSequence).",FreeText,,0
914,guava,com.google.common.base.Utf8_goal.json,encodedLength(java.lang.CharSequence sequence),encodedLength,com.google.common.base.Utf8,"Returns the number of bytes in the UTF-8-encoded form of sequence. For a string, this method is equivalent to string.getBytes(UTF_8).length, but is more efficient in both time and space.",FreeText,,0
915,guava,com.google.common.base.Utf8_goal.json,"isWellFormed(byte[] bytes, int off, int len)",isWellFormed,com.google.common.base.Utf8,"Returns whether the given byte array slice is a well-formed UTF-8 byte sequence, as defined by isWellFormed(byte[]). Note that this can be false even when isWellFormed(bytes) is true.",FreeText,,0
916,guava,com.google.common.base.Utf8_goal.json,isWellFormed(byte[] bytes),isWellFormed,com.google.common.base.Utf8,"Returns true if bytes is a well-formed UTF-8 byte sequence according to Unicode 6.0. Note that this is a stronger criterion than simply whether the bytes can be decoded. For example, some versions of the JDK decoder will accept ""non-shortest form"" byte sequences, but encoding never reproduces these. Such byte sequences are not considered well-formed. <p>This method returns true if and only if Arrays.equals(bytes, new String(bytes, UTF_8).getBytes(UTF_8)) does, but is more efficient in both time and space.",FreeText,,0
917,guava,com.google.common.cache.LongAdder_goal.json,"fn(long v, long x)",fn,com.google.common.cache.LongAdder,Version of plus for use in retryUpdate.,FreeText,,0
918,guava,com.google.common.cache.LongAdder_goal.json,intValue(),intValue,com.google.common.cache.LongAdder,Returns the sum as an int after a narrowing primitive conversion.,FreeText,,0
919,guava,com.google.common.cache.LongAdder_goal.json,sumThenReset(),sumThenReset,com.google.common.cache.LongAdder,"Equivalent in effect to sum followed by reset. This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is not guaranteed to be the final value occurring before the reset.",FreeText,,0
920,guava,com.google.common.cache.LongAdder_goal.json,sum(),sum,com.google.common.cache.LongAdder,"Returns the current sum. The returned value is NOT an atomic snapshot; invocation in the absence of concurrent updates returns an accurate result, but concurrent updates that occur while the sum is being calculated might not be incorporated.",FreeText,,0
921,guava,com.google.common.cache.LongAdder_goal.json,add(long x),add,com.google.common.cache.LongAdder,Adds the given value.,FreeText,,0
922,guava,com.google.common.cache.LongAdder_goal.json,doubleValue(),doubleValue,com.google.common.cache.LongAdder,Returns the sum as a double after a widening primitive conversion.,FreeText,,0
923,guava,com.google.common.cache.LongAdder_goal.json,floatValue(),floatValue,com.google.common.cache.LongAdder,Returns the sum as a float after a widening primitive conversion.,FreeText,,0
924,guava,com.google.common.cache.LongAdder_goal.json,com.google.common.cache.LongAdder(),com.google.common.cache.LongAdder,com.google.common.cache.LongAdder,Creates a new adder with initial sum of zero.,FreeText,,0
925,guava,com.google.common.cache.LongAdder_goal.json,decrement(),decrement,com.google.common.cache.LongAdder,Equivalent to add(-1).,FreeText,receiverObjectClone.add(-1); receiverObjectClone.equals(receiverObjectID),1
926,guava,com.google.common.cache.LongAdder_goal.json,toString(),toString,com.google.common.cache.LongAdder,Returns the String representation of the sum.,FreeText,,0
927,guava,com.google.common.cache.LongAdder_goal.json,increment(),increment,com.google.common.cache.LongAdder,Equivalent to add(1).,FreeText, receiverObjectClone.add(1); receiverObjectClone.equals(receiverObjectID),1
928,guava,com.google.common.cache.LongAdder_goal.json,longValue(),longValue,com.google.common.cache.LongAdder,Equivalent to sum.,FreeText,methodResultID ==(receiverObjectClone.sum()),1
929,guava,com.google.common.cache.LongAdder_goal.json,reset(),reset,com.google.common.cache.LongAdder,"Resets variables maintaining the sum to zero. This method may be a useful alternative to creating a new adder, but is only effective if there are no concurrent updates. Because this method is intrinsically racy, it should only be used when it is known that no threads are concurrently updating.",FreeText,,0
930,guava,com.google.common.collect.AbstractListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
931,guava,com.google.common.collect.AbstractListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
932,guava,com.google.common.collect.AbstractListMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractListMultimap,"Compares the specified object to this multimap for equality. Two ListMultimap instances are equal if, for each key, they contain the same values in the same order. If the value orderings disagree, the multimaps will not be considered equal.",FreeText,,0
933,guava,com.google.common.collect.AbstractListMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
934,guava,com.google.common.collect.AbstractListMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has List values.",FreeText,,0
935,guava,com.google.common.collect.AbstractListMultimap_goal.json,"com.google.common.collect.AbstractListMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractListMultimap,com.google.common.collect.AbstractListMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
936,guava,com.google.common.collect.AbstractListMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractListMultimap,,FreeText,,0
937,guava,com.google.common.collect.AbstractListMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractListMultimap,,FreeText,,0
938,guava,com.google.common.collect.AbstractListMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractListMultimap,Stores a key-value pair in the multimap.,FreeText,,0
939,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is immutable.,FreeText,,0
940,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is not serializable.,FreeText,,0
941,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"setMap(java.util.Map<K, java.util.Collection<V>> map)",setMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
942,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractMapBasedMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values for one key, followed by the values of a second key, and so on. Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the time the entry is returned by a method call to the collection or its iterator.",FreeText,,0
943,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"wrapCollection(K key, java.util.Collection<V> collection)",wrapCollection,com.google.common.collect.AbstractMapBasedMultimap,"Generates a decorated collection that remains consistent with the values in the multimap for the provided key. Changes to the multimap may alter the returned collection, and vice versa.",FreeText,,0
944,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMapBasedMultimap,"Returns an iterator across all key-value map entries, used by entries().iterator() and values().iterator(). The default behavior, which traverses the values for one key, the values for a second key, and so on, suffices for most AbstractMapBasedMultimap implementations.",FreeText,,0
945,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates the collection of values for a single key. Collections with weak, soft, or phantom references are not supported. Each call to createCollection should create a new instance. The returned collection class determines whether duplicate key-value pairs are allowed.",FreeText,,0
946,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,unmodifiableCollectionSubclass(java.util.Collection<V> collection),unmodifiableCollectionSubclass,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
947,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
948,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
949,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates an unmodifiable, empty collection of values. This is used in #removeAll on an empty key.",FreeText,,0
950,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,size(),size,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
951,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,values(),values,com.google.common.collect.AbstractMapBasedMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values for one key, followed by the values of a second key, and so on.",FreeText,,0
952,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is immutable.,FreeText,,0
953,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
954,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,clear(),clear,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
955,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"com.google.common.collect.AbstractMapBasedMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractMapBasedMultimap,com.google.common.collect.AbstractMapBasedMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
956,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
957,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
958,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
959,guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates the collection of values for an explicitly provided key. By default, it simply calls #createCollection(), which is the correct behavior for most implementations. The LinkedHashMultimap class overrides it.",FreeText,,0
960,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.AbstractMapBasedMultiset,"{@inheritDoc} Invoking Multiset.Entry#getCount on an entry in the returned set always returns the current count of that element in the multiset, as opposed to the count at the time the entry was retrieved.",FreeText,,0
961,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
962,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.AbstractMapBasedMultiset,{@inheritDoc},FreeText,,0
963,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
964,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
965,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"setBackingMap(java.util.Map<E, com.google.common.collect.Count> backingMap)",setBackingMap,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
966,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"com.google.common.collect.AbstractMapBasedMultiset(java.util.Map<E, com.google.common.collect.Count> backingMap)",com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
967,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
968,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
969,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,clear(),clear,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
970,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,size(),size,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
971,guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,iterator(),iterator,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
972,guava,com.google.common.collect.AbstractMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMultimap,,FreeText,,0
973,guava,com.google.common.collect.AbstractMultimap_goal.json,createValues(),createValues,com.google.common.collect.AbstractMultimap,,FreeText,,0
974,guava,com.google.common.collect.AbstractMultimap_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractMultimap,"Returns the hash code for this multimap. The hash code of a multimap is defined as the hash code of the map view, as returned by Multimap#asMap. @see Map#hashCode",FreeText,,0
975,guava,com.google.common.collect.AbstractMultimap_goal.json,keySet(),keySet,com.google.common.collect.AbstractMultimap,,FreeText,,0
976,guava,com.google.common.collect.AbstractMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractMultimap,,FreeText,,0
977,guava,com.google.common.collect.AbstractMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractMultimap,,FreeText,,0
978,guava,com.google.common.collect.AbstractMultimap_goal.json,keys(),keys,com.google.common.collect.AbstractMultimap,,FreeText,,0
979,guava,com.google.common.collect.AbstractMultimap_goal.json,values(),values,com.google.common.collect.AbstractMultimap,,FreeText,,0
980,guava,com.google.common.collect.AbstractMultimap_goal.json,toString(),toString,com.google.common.collect.AbstractMultimap,"Returns a string representation of the multimap, generated by calling toString on the map returned by Multimap#asMap.",FreeText,,0
981,guava,com.google.common.collect.AbstractMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.AbstractMultimap,,FreeText,,0
982,guava,com.google.common.collect.AbstractMultimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractMultimap,,FreeText,,0
983,guava,com.google.common.collect.AbstractMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.AbstractMultimap,,FreeText,,0
984,guava,com.google.common.collect.AbstractMultimap_goal.json,createKeys(),createKeys,com.google.common.collect.AbstractMultimap,,FreeText,,0
985,guava,com.google.common.collect.AbstractMultimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.AbstractMultimap,,FreeText,,0
986,guava,com.google.common.collect.AbstractMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.AbstractMultimap,,FreeText,,0
987,guava,com.google.common.collect.AbstractMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractMultimap,,FreeText,,0
988,guava,com.google.common.collect.AbstractMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.AbstractMultimap,,FreeText,,0
989,guava,com.google.common.collect.AbstractMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.AbstractMultimap,,FreeText,,0
990,guava,com.google.common.collect.AbstractMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractMultimap,,FreeText,,0
991,guava,com.google.common.collect.AbstractMultimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.AbstractMultimap,,FreeText,,0
992,guava,com.google.common.collect.AbstractMultimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.AbstractMultimap,,FreeText,,0
993,guava,com.google.common.collect.AbstractMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractMultimap,,FreeText,,0
994,guava,com.google.common.collect.AbstractMultimap_goal.json,"containsEntry(java.lang.Object key, java.lang.Object value)",containsEntry,com.google.common.collect.AbstractMultimap,,FreeText,,0
995,guava,com.google.common.collect.AbstractMultiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractMultiset,"{@inheritDoc} This implementation returns true if object is a multiset of the same size and if, for each element, the two multisets have the same count.",FreeText,,0
996,guava,com.google.common.collect.AbstractMultiset_goal.json,addAll(java.util.Collection<? extends E> elementsToAdd),addAll,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation is highly efficient when elementsToAdd is itself a Multiset.,FreeText,,0
997,guava,com.google.common.collect.AbstractMultiset_goal.json,add(E element),add,com.google.common.collect.AbstractMultiset,,FreeText,,0
998,guava,com.google.common.collect.AbstractMultiset_goal.json,remove(java.lang.Object element),remove,com.google.common.collect.AbstractMultiset,,FreeText,,0
999,guava,com.google.common.collect.AbstractMultiset_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation returns the hash code of Multiset#entrySet().,FreeText,,0
1000,guava,com.google.common.collect.AbstractMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.AbstractMultiset,,FreeText,,0
1001,guava,com.google.common.collect.AbstractMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.AbstractMultiset,,FreeText,,0
1002,guava,com.google.common.collect.AbstractMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.AbstractMultiset,,FreeText,,0
1003,guava,com.google.common.collect.AbstractMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMultiset,,FreeText,,0
1004,guava,com.google.common.collect.AbstractMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.AbstractMultiset,,FreeText,,0
1005,guava,com.google.common.collect.AbstractMultiset_goal.json,iterator(),iterator,com.google.common.collect.AbstractMultiset,,FreeText,,0
1006,guava,com.google.common.collect.AbstractMultiset_goal.json,clear(),clear,com.google.common.collect.AbstractMultiset,,FreeText,,0
1007,guava,com.google.common.collect.AbstractMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.AbstractMultiset,"Creates a new instance of this multiset's element set, which will be returned by #elementSet().",FreeText,,0
1008,guava,com.google.common.collect.AbstractMultiset_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractMultiset,,FreeText,,0
1009,guava,com.google.common.collect.AbstractMultiset_goal.json,toString(),toString,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation returns the result of invoking toString on Multiset#entrySet().,FreeText,,0
1010,guava,com.google.common.collect.AbstractMultiset_goal.json,size(),size,com.google.common.collect.AbstractMultiset,,FreeText,,0
1011,guava,com.google.common.collect.AbstractMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.AbstractMultiset,,FreeText,,0
1012,guava,com.google.common.collect.AbstractMultiset_goal.json,removeAll(java.util.Collection<?> elementsToRemove),removeAll,com.google.common.collect.AbstractMultiset,,FreeText,,0
1013,guava,com.google.common.collect.AbstractMultiset_goal.json,retainAll(java.util.Collection<?> elementsToRetain),retainAll,com.google.common.collect.AbstractMultiset,,FreeText,,0
1014,guava,com.google.common.collect.AbstractMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.AbstractMultiset,,FreeText,,0
1015,guava,com.google.common.collect.AbstractMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.AbstractMultiset,,FreeText,,0
1016,guava,com.google.common.collect.AbstractMultiset_goal.json,contains(java.lang.Object element),contains,com.google.common.collect.AbstractMultiset,,FreeText,,0
1017,guava,com.google.common.collect.AbstractMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.AbstractMultiset,,FreeText,,0
1018,guava,com.google.common.collect.AbstractMultiset_goal.json,createEntrySet(),createEntrySet,com.google.common.collect.AbstractMultiset,,FreeText,,0
1019,guava,com.google.common.collect.AbstractSetMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractSetMultimap,,FreeText,,0
1020,guava,com.google.common.collect.AbstractSetMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
1021,guava,com.google.common.collect.AbstractSetMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractSetMultimap,,FreeText,,0
1022,guava,com.google.common.collect.AbstractSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
1023,guava,com.google.common.collect.AbstractSetMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractSetMultimap,Stores a key-value pair in the multimap.,FreeText,,0
1024,guava,com.google.common.collect.AbstractSetMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
1025,guava,com.google.common.collect.AbstractSetMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractSetMultimap,"Compares the specified object to this multimap for equality. Two SetMultimap instances are equal if, for each key, they contain the same values. Equality does not depend on the ordering of keys or values.",FreeText,,0
1026,guava,com.google.common.collect.AbstractSetMultimap_goal.json,"com.google.common.collect.AbstractSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSetMultimap,com.google.common.collect.AbstractSetMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
1027,guava,com.google.common.collect.AbstractSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has Set values.",FreeText,,0
1028,guava,com.google.common.collect.AbstractSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
1029,guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
1030,guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,"com.google.common.collect.AbstractSortedKeySortedSetMultimap(java.util.SortedMap<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSortedKeySortedSetMultimap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
1031,guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
1032,guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,keySet(),keySet,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
1033,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,pollLastEntry(),pollLastEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1034,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,com.google.common.collect.AbstractSortedMultiset(),com.google.common.collect.AbstractSortedMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1035,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,pollFirstEntry(),pollFirstEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1036,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,"subMultiset(E fromElement, com.google.common.collect.BoundType fromBoundType, E toElement, com.google.common.collect.BoundType toBoundType)",subMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1037,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1038,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,com.google.common.collect.AbstractSortedMultiset(java.util.Comparator<? super E> comparator),com.google.common.collect.AbstractSortedMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1039,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,firstEntry(),firstEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1040,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingMultiset(),descendingMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1041,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,createDescendingMultiset(),createDescendingMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1042,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1043,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,lastEntry(),lastEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1044,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,comparator(),comparator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1045,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingIterator(),descendingIterator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1046,guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingEntryIterator(),descendingEntryIterator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
1047,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,"com.google.common.collect.AbstractSortedSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSortedSetMultimap,com.google.common.collect.AbstractSortedSetMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
1048,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractSortedSetMultimap,"Returns a collection view of all values associated with a key. If no mappings in the multimap have the provided key, an empty collection is returned. Changes to the returned collection will update the underlying multimap, and vice versa. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface.",FreeText,,0
1049,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractSortedSetMultimap,,FreeText,,0
1050,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractSortedSetMultimap,"Stores a collection of values with the same key, replacing any existing values for that key. The returned collection is immutable. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
1051,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractSortedSetMultimap,,FreeText,,0
1052,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSortedSetMultimap,"Returns a map view that associates each key with the corresponding values in the multimap. Changes to the returned map, such as element removal, will update the underlying multimap. The map does not support setValue on its entries, put, or putAll. When passed a key that is present in the map, asMap().get(Object) has the same behavior as #get, returning a live collection. When passed a key that is not present, however, asMap().get(Object) returns null instead of an empty collection. Though the method signature doesn't say so explicitly, the returned map has SortedSet values.",FreeText,,0
1053,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractSortedSetMultimap,"Removes all values associated with a given key. The returned collection is immutable. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface.",FreeText,,0
1054,guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,values(),values,com.google.common.collect.AbstractSortedSetMultimap,"{@inheritDoc} Consequently, the values do not follow their natural ordering or the ordering of the value comparator.",FreeText,,0
1055,guava,com.google.common.collect.AbstractTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.AbstractTable,,FreeText,,0
1056,guava,com.google.common.collect.AbstractTable_goal.json,clear(),clear,com.google.common.collect.AbstractTable,,FreeText,,0
1057,guava,com.google.common.collect.AbstractTable_goal.json,createValues(),createValues,com.google.common.collect.AbstractTable,,FreeText,,0
1058,guava,com.google.common.collect.AbstractTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.AbstractTable,,FreeText,,0
1059,guava,com.google.common.collect.AbstractTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.AbstractTable,,FreeText,,0
1060,guava,com.google.common.collect.AbstractTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.AbstractTable,,FreeText,,0
1061,guava,com.google.common.collect.AbstractTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.AbstractTable,,FreeText,,0
1062,guava,com.google.common.collect.AbstractTable_goal.json,createCellSet(),createCellSet,com.google.common.collect.AbstractTable,,FreeText,,0
1063,guava,com.google.common.collect.AbstractTable_goal.json,valuesIterator(),valuesIterator,com.google.common.collect.AbstractTable,,FreeText,,0
1064,guava,com.google.common.collect.AbstractTable_goal.json,values(),values,com.google.common.collect.AbstractTable,,FreeText,,0
1065,guava,com.google.common.collect.AbstractTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.AbstractTable,,FreeText,,0
1066,guava,com.google.common.collect.AbstractTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.AbstractTable,,FreeText,,0
1067,guava,com.google.common.collect.AbstractTable_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractTable,,FreeText,,0
1068,guava,com.google.common.collect.AbstractTable_goal.json,cellSet(),cellSet,com.google.common.collect.AbstractTable,,FreeText,,0
1069,guava,com.google.common.collect.AbstractTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.AbstractTable,,FreeText,,0
1070,guava,com.google.common.collect.AbstractTable_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.AbstractTable,,FreeText,,0
1071,guava,com.google.common.collect.AbstractTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.AbstractTable,,FreeText,,0
1072,guava,com.google.common.collect.AbstractTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.AbstractTable,,FreeText,,0
1073,guava,com.google.common.collect.AbstractTable_goal.json,toString(),toString,com.google.common.collect.AbstractTable,Returns the string representation rowMap().toString().,FreeText,,0
1074,guava,com.google.common.collect.AbstractTable_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractTable,,FreeText,,0
1075,guava,com.google.common.collect.AbstractTable_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.AbstractTable,,FreeText,,0
1076,guava,com.google.common.collect.ArrayListMultimap_goal.json,create(),create,com.google.common.collect.ArrayListMultimap,"Creates a new, empty ArrayListMultimap with the default initial capacities.",FreeText,,0
1077,guava,com.google.common.collect.ArrayListMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.ArrayListMultimap,Constructs an ArrayListMultimap with the same mappings as the specified multimap.,FreeText,,0
1078,guava,com.google.common.collect.ArrayListMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.ArrayListMultimap,"Creates a new, empty ArrayList to hold the collection of values for an arbitrary key.",FreeText,,0
1079,guava,com.google.common.collect.ArrayListMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.ArrayListMultimap,Constructs an empty ArrayListMultimap with enough capacity to hold the specified numbers of keys and values without resizing.,FreeText,,0
1080,guava,com.google.common.collect.ArrayListMultimap_goal.json,trimToSize(),trimToSize,com.google.common.collect.ArrayListMultimap,"Reduces the memory used by this ArrayListMultimap, if feasible.",FreeText,,0
1081,guava,com.google.common.collect.ArrayTable_goal.json,column(C columnKey),column,com.google.common.collect.ArrayTable,"Returns a view of all mappings that have the given column key. If the column key isn't in columnKeySet(), an empty immutable map is returned. <p>Otherwise, for each row key in rowKeySet(), the returned map associates the row key with the corresponding value in the table. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
1082,guava,com.google.common.collect.ArrayTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.ArrayTable,Returns true if the provided keys are among the keys provided when the table was constructed.,FreeText,,0
1083,guava,com.google.common.collect.ArrayTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.ArrayTable,{@inheritDoc}.,FreeText,,0
1084,guava,com.google.common.collect.ArrayTable_goal.json,cellSet(),cellSet,com.google.common.collect.ArrayTable,"Returns an unmodifiable set of all row key / column key / value triplets. Changes to the table will update the returned set. <p>The returned set's iterator traverses the mappings with the first row key, the mappings with the second row key, and so on. <p>The value in the returned cells may change if the table subsequently changes.",FreeText,,0
1085,guava,com.google.common.collect.ArrayTable_goal.json,"create(com.google.common.collect.Table<R, C, V> table)",create,com.google.common.collect.ArrayTable,"Creates an ArrayTable with the mappings in the provided table. <p>If table includes a mapping with row key r and a separate mapping with column key c, the returned table contains a mapping with row key r and column key c. If that row key / column key pair in not in table, the pair maps to null in the generated table. <p>The returned table allows subsequent put calls with the row keys in table.rowKeySet() and the column keys in table.columnKeySet(). Calling put with other keys leads to an IllegalArgumentException. <p>The ordering of table.rowKeySet() and table.columnKeySet() determines the row and column iteration ordering of the returned table.",FreeText,,0
1086,guava,com.google.common.collect.ArrayTable_goal.json,"at(int rowIndex, int columnIndex)",at,com.google.common.collect.ArrayTable,"Returns the value corresponding to the specified row and column indices. The same value is returned by get(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex)), but this method runs more quickly.",FreeText,,0
1087,guava,com.google.common.collect.ArrayTable_goal.json,rowKeyList(),rowKeyList,com.google.common.collect.ArrayTable,"Returns, as an immutable list, the row keys provided when the table was constructed, including those that are mapped to null values only.",FreeText,,0
1088,guava,com.google.common.collect.ArrayTable_goal.json,"set(int rowIndex, int columnIndex, V value)",set,com.google.common.collect.ArrayTable,"Associates value with the specified row and column indices. The logic put(rowKeyList().get(rowIndex), columnKeyList().get(columnIndex), value) has the same behavior, but this method runs more quickly.",FreeText,"methodResultID.equals[receiverObjectClone.put(receiverObjectClone.rowKeyList().get(args[0]), receiverObjectClone.columnKeyList().get(args[1]), args[2]);]",1
1089,guava,com.google.common.collect.ArrayTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.ArrayTable,"Returns an immutable set of the valid row keys, including those that are associated with null values only.",FreeText,,0
1090,guava,com.google.common.collect.ArrayTable_goal.json,"create(java.lang.Iterable<? extends R> rowKeys, java.lang.Iterable<? extends C> columnKeys)",create,com.google.common.collect.ArrayTable,Creates an empty ArrayTable.,FreeText,,0
1091,guava,com.google.common.collect.ArrayTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.ArrayTable,.,FreeText,,0
1092,guava,com.google.common.collect.ArrayTable_goal.json,eraseAll(),eraseAll,com.google.common.collect.ArrayTable,Associates the value null with every pair of allowed row and column keys.,FreeText,,0
1093,guava,com.google.common.collect.ArrayTable_goal.json,clear(),clear,com.google.common.collect.ArrayTable,Not supported. Use eraseAll instead.,FreeText,receiverObjectClone.eraseAll();receiverObjectClone.equals(receiverObjectID),1
1094,guava,com.google.common.collect.ArrayTable_goal.json,toArray(java.lang.Class<V> valueClass),toArray,com.google.common.collect.ArrayTable,"Returns a two-dimensional array with the table contents. The row and column indices correspond to the positions of the row and column in the iterables provided during table construction. If the table lacks a mapping for a given row and column, the corresponding array element is null. <p>Subsequent table changes will not modify the array, and vice versa.",FreeText,,0
1095,guava,com.google.common.collect.ArrayTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.ArrayTable,Returns true if the provided row key is among the row keys provided when the table was constructed.,FreeText,,0
1096,guava,com.google.common.collect.ArrayTable_goal.json,row(R rowKey),row,com.google.common.collect.ArrayTable,"Returns a view of all mappings that have the given row key. If the row key isn't in rowKeySet(), an empty immutable map is returned. <p>Otherwise, for each column key in columnKeySet(), the returned map associates the column key with the corresponding value in the table. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
1097,guava,com.google.common.collect.ArrayTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.ArrayTable,.,FreeText,,0
1098,guava,com.google.common.collect.ArrayTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.ArrayTable,Returns true if the provided column key is among the column keys provided when the table was constructed.,FreeText,,0
1099,guava,com.google.common.collect.ArrayTable_goal.json,"erase(java.lang.Object rowKey, java.lang.Object columnKey)",erase,com.google.common.collect.ArrayTable,"Associates the value null with the specified keys, assuming both keys are valid. If either key is null or isn't among the keys provided during construction, this method has no effect. <p>This method is equivalent to put(rowKey, columnKey, null) when both provided keys are valid.",FreeText,"methodResultID.equals(receiverObjectClone.put(args[0],args[1],null))",1
1100,guava,com.google.common.collect.ArrayTable_goal.json,isEmpty(),isEmpty,com.google.common.collect.ArrayTable,Always returns false.,FreeText,,0
1101,guava,com.google.common.collect.ArrayTable_goal.json,columnKeyList(),columnKeyList,com.google.common.collect.ArrayTable,"Returns, as an immutable list, the column keys provided when the table was constructed, including those that are mapped to null values only.",FreeText,,0
1102,guava,com.google.common.collect.ArrayTable_goal.json,size(),size,com.google.common.collect.ArrayTable,.,FreeText,,0
1103,guava,com.google.common.collect.ArrayTable_goal.json,rowMap(),rowMap,com.google.common.collect.ArrayTable,.,FreeText,,0
1104,guava,com.google.common.collect.ArrayTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.ArrayTable,.,FreeText,,0
1105,guava,com.google.common.collect.ArrayTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.ArrayTable,Not supported. Use erase instead.,FreeText,"methodResultID.equals(receiverObjectClone.erase(args[0],args[1]))",1
1106,guava,com.google.common.collect.ArrayTable_goal.json,values(),values,com.google.common.collect.ArrayTable,"Returns an unmodifiable collection of all values, which may contain duplicates. Changes to the table will update the returned collection. <p>The returned collection's iterator traverses the values of the first row key, the values of the second row key, and so on.",FreeText,,0
1107,guava,com.google.common.collect.ArrayTable_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.ArrayTable,"{@inheritDoc} <p>If table is an ArrayTable, its null values will be stored in this table, possibly replacing values that were previously non-null.",FreeText,,0
1108,guava,com.google.common.collect.ArrayTable_goal.json,columnMap(),columnMap,com.google.common.collect.ArrayTable,.,FreeText,,0
1109,guava,com.google.common.collect.ArrayTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.ArrayTable,"Returns an immutable set of the valid column keys, including those that are associated with null values only.",FreeText,,0
1110,guava,com.google.common.collect.Collections2_goal.json,"safeContains(java.util.Collection<?> collection, java.lang.Object object)",safeContains,com.google.common.collect.Collections2,Delegates to Collection#contains. Returns false if the contains method throws a ClassCastException or NullPointerException.,FreeText,,0
1111,guava,com.google.common.collect.Collections2_goal.json,orderedPermutations(java.lang.Iterable<E> elements),orderedPermutations,com.google.common.collect.Collections2,"Returns a Collection of all the permutations of the specified Iterable. <p>Notes: This is an implementation of the algorithm for Lexicographical Permutations Generation, described in Knuth's ""The Art of Computer Programming"", Volume 4, Chapter 7, Section 7.2.1.2. The iteration order follows the lexicographical order. This means that the first permutation will be in ascending order, and the last will be in descending order. <p>Duplicate elements are considered equal. For example, the list [1, 1] will have only one permutation, instead of two. This is why the elements have to implement Comparable. <p>An empty iterable has only one permutation, which is an empty list. <p>This method is equivalent to Collections2.orderedPermutations(list, Ordering.natural()).",FreeText,"methodResultID.equals(Collections2.orderedPermutations(list, Ordering.natural()))",1
1112,guava,com.google.common.collect.Collections2_goal.json,"safeRemove(java.util.Collection<?> collection, java.lang.Object object)",safeRemove,com.google.common.collect.Collections2,Delegates to Collection#remove. Returns false if the remove method throws a ClassCastException or NullPointerException.,FreeText,,0
1113,guava,com.google.common.collect.Collections2_goal.json,"containsAllImpl(java.util.Collection<?> self, java.util.Collection<?> c)",containsAllImpl,com.google.common.collect.Collections2,"Returns true if the collection self contains all of the elements in the collection c. <p>This method iterates over the specified collection c, checking each element returned by the iterator in turn to see if it is contained in the specified collection self. If all elements are so contained, true is returned, otherwise false.",FreeText,,0
1114,guava,com.google.common.collect.Collections2_goal.json,permutations(java.util.Collection<E> elements),permutations,com.google.common.collect.Collections2,"Returns a Collection of all the permutations of the specified Collection. <p>Notes: This is an implementation of the Plain Changes algorithm for permutations generation, described in Knuth's ""The Art of Computer Programming"", Volume 4, Chapter 7, Section 7.2.1.2. <p>If the input list contains equal elements, some of the generated permutations will be equal. <p>An empty collection has only one permutation, which is an empty list.",FreeText,,0
1115,guava,com.google.common.collect.Collections2_goal.json,"filter(java.util.Collection<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Collections2,.,FreeText,,0
1116,guava,com.google.common.collect.Collections2_goal.json,newStringBuilderForCollection(int size),newStringBuilderForCollection,com.google.common.collect.Collections2,Returns best-effort-sized StringBuilder based on the given collection size.,FreeText,,0
1117,guava,com.google.common.collect.Collections2_goal.json,"orderedPermutations(java.lang.Iterable<E> elements, java.util.Comparator<? super E> comparator)",orderedPermutations,com.google.common.collect.Collections2,"Returns a Collection of all the permutations of the specified Iterable using the specified Comparator for establishing the lexicographical ordering. <p>Examples: for (List<String> perm : orderedPermutations(asList(""b"", ""c"", ""a""))) { println(perm); // -> [""a"", ""b"", ""c""] // -> [""a"", ""c"", ""b""] // -> [""b"", ""a"", ""c""] // -> [""b"", ""c"", ""a""] // -> [""c"", ""a"", ""b""] // -> [""c"", ""b"", ""a""] for (List<Integer> perm : orderedPermutations(asList(1, 2, 2, 1))) { println(perm); } // -> [1, 1, 2, 2] // -> [1, 2, 1, 2] // -> [1, 2, 2, 1] // -> [2, 1, 1, 2] // -> [2, 1, 2, 1] // -> [2, 2, 1, 1]} <p>Notes: This is an implementation of the algorithm for Lexicographical Permutations Generation, described in Knuth's ""The Art of Computer Programming"", Volume 4, Chapter 7, Section 7.2.1.2. The iteration order follows the lexicographical order. This means that the first permutation will be in ascending order, and the last will be in descending order. <p>Elements that compare equal are considered equal and no new permutations are created by swapping them. <p>An empty iterable has only one permutation, which is an empty list.",FreeText,,0
1118,guava,com.google.common.collect.Collections2_goal.json,cast(java.lang.Iterable<T> iterable),cast,com.google.common.collect.Collections2,Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557.,FreeText,,0
1119,guava,com.google.common.collect.Collections2_goal.json,toStringImpl(java.util.Collection<?> collection),toStringImpl,com.google.common.collect.Collections2,An implementation of Collection#toString().,FreeText,,0
1120,guava,com.google.common.collect.Collections2_goal.json,"transform(java.util.Collection<F> fromCollection, com.google.common.base.Function<? super F, T> function)",transform,com.google.common.collect.Collections2,"Returns a collection that applies function to each element of fromCollection. The returned collection is a live view of fromCollection; changes to one affect the other. <p>The returned collection's add() and addAll() methods throw an UnsupportedOperationException. All other collection methods are supported, as long as fromCollection supports them. <p>The returned collection isn't threadsafe or serializable, even if fromCollection is. <p>When a live view is not needed, it may be faster to copy the transformed collection and use the copy. <p>If the input Collection is known to be a List, consider Lists#transform. If only an Iterable is available, use Iterables#transform.",FreeText,,0
1121,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.ConcurrentHashMultiset,"Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed.",FreeText,,0
1122,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"setCount(E element, int expectedOldCount, int newCount)",setCount,com.google.common.collect.ConcurrentHashMultiset,"Sets the number of occurrences of element to newCount, but only if the count is currently expectedOldCount. If element does not appear in the multiset exactly expectedOldCount times, no changes will be made.",FreeText,,0
1123,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,createEntrySet(),createEntrySet,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1124,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,toArray(T[] array),toArray,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1125,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1126,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,clear(),clear,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1127,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.ConcurrentHashMultiset,Returns the number of occurrences of element in this multiset.,FreeText,,0
1128,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new ConcurrentHashMultiset containing the specified elements, using the default initial capacity, load factor, and concurrency settings. This implementation is highly efficient when elements is itself a Multiset.",FreeText,,0
1129,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,size(),size,com.google.common.collect.ConcurrentHashMultiset,"{@inheritDoc} If the data in the multiset is modified by any other threads during this method, it is undefined which (if any) of these modifications will be reflected in the result.",FreeText,,0
1130,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,isEmpty(),isEmpty,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1131,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1132,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,toArray(),toArray,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1133,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"com.google.common.collect.ConcurrentHashMultiset(java.util.concurrent.ConcurrentMap<E, java.util.concurrent.atomic.AtomicInteger> countMap)",com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset,"Creates an instance using countMap to store elements and their counts. This instance will assume ownership of countMap, and other code should not maintain references to the map or modify it in any way.",FreeText,,0
1134,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
1135,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(com.google.common.collect.MapMaker mapMaker),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new, empty ConcurrentHashMultiset using mapMaker to construct the internal backing map. If this MapMaker is configured to use entry eviction of any kind, this eviction applies to all occurrences of a given element as a single unit. However, most updates to the multiset do not count as map updates at all, since we're usually just mutating the value stored in the map, so MapMaker#expireAfterAccess makes sense (evict the entry that was queried or updated longest ago), but MapMaker#expireAfterWrite doesn't, because the eviction time is measured from when we saw the first occurrence of the object. The returned multiset is serializable but any serialization caveats given in MapMaker apply. Finally, soft/weak values can be used but are not very useful: the values are created internally and not exposed externally, so no one else will have a strong reference to the values. Weak keys on the other hand can be useful in some scenarios.",FreeText,,0
1136,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.ConcurrentHashMultiset,Adds a number of occurrences of the specified element to this multiset.,FreeText,,0
1137,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new, empty ConcurrentHashMultiset using the default initial capacity, load factor, and concurrency settings.",FreeText,,0
1138,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"removeExactly(java.lang.Object element, int occurrences)",removeExactly,com.google.common.collect.ConcurrentHashMultiset,"Removes exactly the specified number of occurrences of element, or makes no change if this is not possible. This method, in contrast to #remove(Object, int), has no effect when the element count is smaller than occurrences.",FreeText,,0
1139,guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.ConcurrentHashMultiset,Adds or removes occurrences of element such that the #count of the element becomes count.,FreeText,,0
1140,guava,com.google.common.collect.ContiguousSet_goal.json,"headSetImpl(C toElement, boolean inclusive)",headSetImpl,com.google.common.collect.ContiguousSet,.,FreeText,,0
1141,guava,com.google.common.collect.ContiguousSet_goal.json,intersection(com.google.common.collect.ContiguousSet<C> other),intersection,com.google.common.collect.ContiguousSet,Returns the set of values that are contained in both this set and the other. <p>This method should always be used instead of Sets#intersection for ContiguousSet instances.,FreeText,,0
1142,guava,com.google.common.collect.ContiguousSet_goal.json,"range(com.google.common.collect.BoundType lowerBoundType, com.google.common.collect.BoundType upperBoundType)",range,com.google.common.collect.ContiguousSet,"Returns the minimal range with the given boundary types for which all values in this set are {@linkplain Range#contains(Comparable) contained} within the range. <p>Note that this method will return ranges with unbounded endpoints if BoundType#OPEN is requested for a domain minimum or maximum. For example, if set was created from the range [1..Integer.MAX_VALUE] then set.range(CLOSED, OPEN) must return [1..âˆž).",FreeText,,0
1143,guava,com.google.common.collect.ContiguousSet_goal.json,range(),range,com.google.common.collect.ContiguousSet,"Returns a range, closed on both ends, whose endpoints are the minimum and maximum values contained in this set. This is equivalent to range(CLOSED, CLOSED).",FreeText,"methodResultID.equals(receiverObjectClone.range(com.google.common.collect.BoundType.CLOSED,com.google.common.collect.BoundType.CLOSED))",1
1144,guava,com.google.common.collect.ContiguousSet_goal.json,"subSet(C fromElement, boolean fromInclusive, C toElement, boolean toInclusive)",subSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1145,guava,com.google.common.collect.ContiguousSet_goal.json,com.google.common.collect.ContiguousSet(com.google.common.collect.DiscreteDomain<C> domain),com.google.common.collect.ContiguousSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1146,guava,com.google.common.collect.ContiguousSet_goal.json,"subSet(C fromElement, C toElement)",subSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1147,guava,com.google.common.collect.ContiguousSet_goal.json,tailSet(C fromElement),tailSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1148,guava,com.google.common.collect.ContiguousSet_goal.json,"tailSetImpl(C fromElement, boolean inclusive)",tailSetImpl,com.google.common.collect.ContiguousSet,.,FreeText,,0
1149,guava,com.google.common.collect.ContiguousSet_goal.json,toString(),toString,com.google.common.collect.ContiguousSet,.,FreeText,,0
1150,guava,com.google.common.collect.ContiguousSet_goal.json,"headSet(C toElement, boolean inclusive)",headSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1151,guava,com.google.common.collect.ContiguousSet_goal.json,builder(),builder,com.google.common.collect.ContiguousSet,Not supported. ContiguousSet instances are constructed with create. This method exists only to hide ImmutableSet#builder from consumers of ContiguousSet.,FreeText,,0
1152,guava,com.google.common.collect.ContiguousSet_goal.json,"create(com.google.common.collect.Range<C> range, com.google.common.collect.DiscreteDomain<C> domain)",create,com.google.common.collect.ContiguousSet,Returns a ContiguousSet containing the same values in the given domain {@linkplain Range#contains contained} by the range.,FreeText,,0
1153,guava,com.google.common.collect.ContiguousSet_goal.json,"tailSet(C fromElement, boolean inclusive)",tailSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1154,guava,com.google.common.collect.ContiguousSet_goal.json,"subSetImpl(C fromElement, boolean fromInclusive, C toElement, boolean toInclusive)",subSetImpl,com.google.common.collect.ContiguousSet,.,FreeText,,0
1155,guava,com.google.common.collect.ContiguousSet_goal.json,headSet(C toElement),headSet,com.google.common.collect.ContiguousSet,.,FreeText,,0
1156,guava,com.google.common.collect.FluentIterable_goal.json,filter(java.lang.Class<T> type),filter,com.google.common.collect.FluentIterable,Returns the elements from this fluent iterable that are instances of class type.,FreeText,,0
1157,guava,com.google.common.collect.FluentIterable_goal.json,get(int position),get,com.google.common.collect.FluentIterable,.,FreeText,,0
1158,guava,com.google.common.collect.FluentIterable_goal.json,anyMatch(com.google.common.base.Predicate<? super E> predicate),anyMatch,com.google.common.collect.FluentIterable,Returns true if any element in this fluent iterable satisfies the predicate. <p>Stream equivalent: stream.anyMatch(predicate) (same).,FreeText,,0
1159,guava,com.google.common.collect.FluentIterable_goal.json,toSet(),toSet,com.google.common.collect.FluentIterable,Returns an ImmutableSet containing all of the elements from this fluent iterable with duplicates removed. <p>Stream equivalent: ImmutableSet.copyOf(stream.iterator()).,FreeText,,0
1160,guava,com.google.common.collect.FluentIterable_goal.json,of(E[] elements),of,com.google.common.collect.FluentIterable,Returns a fluent iterable containing elements in the specified order. <p>Stream equivalent: Stream.of(elements) or Arrays.stream(elements).,FreeText,,0
1161,guava,com.google.common.collect.FluentIterable_goal.json,toArray(java.lang.Class<E> type),toArray,com.google.common.collect.FluentIterable,"Returns an array containing all of the elements from this fluent iterable in iteration order. <p>Stream equivalent: if an object array is acceptable, use stream.toArray(); if type is a class literal such as MyType.class, use stream.toArray(MyType[]::new). Otherwise use stream.toArray( len -> (E[]) Array.newInstance(type, len)).",FreeText,,0
1162,guava,com.google.common.collect.FluentIterable_goal.json,toSortedList(java.util.Comparator<? super E> comparator),toSortedList,com.google.common.collect.FluentIterable,"Returns an ImmutableList containing all of the elements from this FluentIterable in the order specified by comparator. To produce an ImmutableList sorted by its natural ordering, use toSortedList(Ordering.natural()). <p>Stream equivalent: ImmutableList.copyOf(stream.sorted(comparator).iterator()).",FreeText,,0
1163,guava,com.google.common.collect.FluentIterable_goal.json,"toMap(com.google.common.base.Function<? super E, V> valueFunction)",toMap,com.google.common.collect.FluentIterable,"Returns an immutable map whose keys are the distinct elements of this FluentIterable and whose value for each key was computed by valueFunction. The map's iteration order is the order of the first appearance of each key in this iterable. <p>When there are multiple instances of a key in this iterable, it is unspecified whether valueFunction will be applied to more than one instance of that key and, if it is, which result will be mapped to that key in the returned map. <p>Stream equivalent: ImmutableMap.copyOf(stream.collect(Collectors.toMap(k -> k, valueFunction))) (but note that this may not preserve the order of entries).",FreeText,,0
1164,guava,com.google.common.collect.FluentIterable_goal.json,size(),size,com.google.common.collect.FluentIterable,Returns the number of elements in this fluent iterable. <p>Stream equivalent: stream.count().,FreeText,,0
1165,guava,com.google.common.collect.FluentIterable_goal.json,append(E... elements),append,com.google.common.collect.FluentIterable,"Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable, followed by elements. <p>Stream equivalent: Stream.concat(thisStream, Stream.of(elements)).",FreeText,,0
1166,guava,com.google.common.collect.FluentIterable_goal.json,allMatch(com.google.common.base.Predicate<? super E> predicate),allMatch,com.google.common.collect.FluentIterable,"Returns true if every element in this fluent iterable satisfies the predicate. If this fluent iterable is empty, true is returned. <p>Stream equivalent: stream.allMatch(predicate) (same).",FreeText,,0
1167,guava,com.google.common.collect.FluentIterable_goal.json,cycle(),cycle,com.google.common.collect.FluentIterable,"Returns a fluent iterable whose Iterator cycles indefinitely over the elements of this fluent iterable. <p>That iterator supports remove() if iterable.iterator() does. After remove() is called, subsequent cycles omit the removed element, which is no longer in this fluent iterable. The iterator's hasNext() method returns true until this fluent iterable is empty. <p>Warning: Typical uses of the resulting iterator may produce an infinite loop. You should use an explicit break or be certain that you will eventually remove all the elements. <p>Stream equivalent: if the source iterable has only a single element element, use Stream.generate(() -> element). Otherwise, if the source iterable has a stream method (for example, if it is a Collection), use Stream.generate(iterable::stream).flatMap(s -> s).",FreeText,,0
1168,guava,com.google.common.collect.FluentIterable_goal.json,com.google.common.collect.FluentIterable(java.lang.Iterable<E> iterable),com.google.common.collect.FluentIterable,com.google.common.collect.FluentIterable,.,FreeText,,0
1169,guava,com.google.common.collect.FluentIterable_goal.json,"transformAndConcat(com.google.common.base.Function<? super E, ? extends java.lang.Iterable<? extends T>> function)",transformAndConcat,com.google.common.collect.FluentIterable,"Applies function to each element of this fluent iterable and returns a fluent iterable with the concatenated combination of results. function returns an Iterable of results. <p>The returned fluent iterable's iterator supports remove() if this function-returned iterables' iterator does. After a successful remove() call, the returned fluent iterable no longer contains the corresponding element. <p>Stream equivalent: stream.flatMap(function) (using a function that produces streams, not iterables).",FreeText,,0
1170,guava,com.google.common.collect.FluentIterable_goal.json,first(),first,com.google.common.collect.FluentIterable,"Returns an Optional containing the first element in this fluent iterable. If the iterable is empty, Optional.absent() is returned. <p>Stream equivalent: if the goal is to obtain any element, stream.findAny(); if it must specifically be the first element, stream.findFirst().",FreeText,,0
1171,guava,com.google.common.collect.FluentIterable_goal.json,toMultiset(),toMultiset,com.google.common.collect.FluentIterable,Returns an ImmutableMultiset containing all of the elements from this fluent iterable. <p>Stream equivalent: ImmutableMultiset.copyOf(stream.iterator()).,FreeText,,0
1172,guava,com.google.common.collect.FluentIterable_goal.json,isEmpty(),isEmpty,com.google.common.collect.FluentIterable,Determines whether this fluent iterable is empty. <p>Stream equivalent: !stream.findAny().isPresent().,FreeText,,0
1173,guava,com.google.common.collect.FluentIterable_goal.json,"uniqueIndex(com.google.common.base.Function<? super E, K> keyFunction)",uniqueIndex,com.google.common.collect.FluentIterable,"Returns a map with the contents of this FluentIterable as its values, indexed by keys derived from those values. In other words, each input value produces an entry in the map whose key is the result of applying keyFunction to that value. These entries appear in the same order as they appeared in this fluent iterable. Example usage: Color red = new Color(""red"", 255, 0, 0); ... FluentIterable<Color> allColors = FluentIterable.from(ImmutableSet.of(red, green, blue)); Map<String, Color> colorForName = allColors.uniqueIndex(toStringFunction()); assertThat(colorForName).containsEntry(""red"", red); <p>If your index may associate multiple values with each key, use index. <p>Stream equivalent: ImmutableMap.copyOf(stream.collect(Collectors.toMap(keyFunction, v -> v))) (but note that this may not preserve the order of entries).",FreeText,,0
1174,guava,com.google.common.collect.FluentIterable_goal.json,skip(int numberToSkip),skip,com.google.common.collect.FluentIterable,"Returns a view of this fluent iterable that skips its first numberToSkip elements. If this fluent iterable contains fewer than numberToSkip elements, the returned fluent iterable skips all of its elements. <p>Modifications to this fluent iterable before a call to iterator() are reflected in the returned fluent iterable. That is, the its iterator skips the first numberToSkip elements that exist when the iterator is created, not when skip() is called. <p>The returned fluent iterable's iterator supports remove() if the Iterator of this fluent iterable supports it. Note that it is not possible to delete the last skipped element by immediately calling remove() on the returned fluent iterable's iterator, as the Iterator contract states that a call to * remove() before a call to next() will throw an IllegalStateException. <p>Stream equivalent: stream.skip(numberToSkip) (same).",FreeText,,0
1175,guava,com.google.common.collect.FluentIterable_goal.json,last(),last,com.google.common.collect.FluentIterable,"Returns an Optional containing the last element in this fluent iterable. If the iterable is empty, Optional.absent() is returned. <p>Stream equivalent: stream.reduce((a, b) -> b).",FreeText,,0
1176,guava,com.google.common.collect.FluentIterable_goal.json,append(java.lang.Iterable<? extends E> other),append,com.google.common.collect.FluentIterable,"Returns a fluent iterable whose iterators traverse first the elements of this fluent iterable, followed by those of other. The iterators are not polled until necessary. <p>The returned iterable's Iterator supports remove() when the corresponding Iterator supports it. <p>Stream equivalent: Stream.concat(thisStream, otherStream).",FreeText,,0
1177,guava,com.google.common.collect.FluentIterable_goal.json,com.google.common.collect.FluentIterable(),com.google.common.collect.FluentIterable,com.google.common.collect.FluentIterable,.,FreeText,,0
1178,guava,com.google.common.collect.FluentIterable_goal.json,"transform(com.google.common.base.Function<? super E, T> function)",transform,com.google.common.collect.FluentIterable,"Returns a fluent iterable that applies function to each element of this fluent iterable. <p>The returned fluent iterable's iterator supports remove() if this iterable's iterator does. After a successful remove() call, this fluent iterable no longer contains the corresponding element. <p>Stream equivalent: stream.map(function).",FreeText,,0
1179,guava,com.google.common.collect.FluentIterable_goal.json,copyInto(C collection),copyInto,com.google.common.collect.FluentIterable,"Copies all the elements from this fluent iterable to collection. This is equivalent to calling Iterables.addAll(collection, this). <p>Stream equivalent: stream.forEachOrdered(collection::add) or stream.forEach(collection::add).",FreeText,,0
1180,guava,com.google.common.collect.FluentIterable_goal.json,"index(com.google.common.base.Function<? super E, K> keyFunction)",index,com.google.common.collect.FluentIterable,"Creates an index ImmutableListMultimap that contains the results of applying a specified function to each item in this FluentIterable of values. Each element of this iterable will be stored as a value in the resulting multimap, yielding a multimap with the same size as this iterable. The key used to store that value in the multimap will be the result of calling the function on that value. The resulting multimap is created as an immutable snapshot. In the returned multimap, keys appear in the order they are first encountered, and the values corresponding to each key appear in the same order as they are encountered.",FreeText,,0
1181,guava,com.google.common.collect.FluentIterable_goal.json,contains(java.lang.Object target),contains,com.google.common.collect.FluentIterable,Returns true if this fluent iterable contains any object for which equals(target) is true. <p>Stream equivalent: stream.anyMatch(Predicate.isEqual(target)).,FreeText,,0
1182,guava,com.google.common.collect.FluentIterable_goal.json,toSortedSet(java.util.Comparator<? super E> comparator),toSortedSet,com.google.common.collect.FluentIterable,"Returns an ImmutableSortedSet containing all of the elements from this FluentIterable in the order specified by comparator, with duplicates (determined by comparator.compare(x, y) == 0) removed. To produce an ImmutableSortedSet sorted by its natural ordering, use toSortedSet(Ordering.natural()). <p>Stream equivalent: ImmutableSortedSet.copyOf(comparator, stream.iterator()).",FreeText,,0
1183,guava,com.google.common.collect.FluentIterable_goal.json,firstMatch(com.google.common.base.Predicate<? super E> predicate),firstMatch,com.google.common.collect.FluentIterable,"Returns an Optional containing the first element in this fluent iterable that satisfies the given predicate, if such an element exists. <p>Warning: avoid using a predicate that matches null. If null is matched in this fluent iterable, a NullPointerException will be thrown. <p>Stream equivalent: stream.filter(predicate).findFirst().",FreeText,,0
1184,guava,com.google.common.collect.FluentIterable_goal.json,join(com.google.common.base.Joiner joiner),join,com.google.common.collect.FluentIterable,"Returns a String containing all of the elements of this fluent iterable joined with joiner. <p>Stream equivalent: joiner.join(stream.iterator()), or, if you are not using any optional Joiner features, stream.collect(Collectors.joining(delimiter).",FreeText,,0
1185,guava,com.google.common.collect.FluentIterable_goal.json,from(java.lang.Iterable<E> iterable),from,com.google.common.collect.FluentIterable,"Returns a fluent iterable that wraps iterable, or iterable itself if it is already a FluentIterable. <p>Stream equivalent: iterable.stream() if iterable is a Collection; StreamSupport.stream(iterable.spliterator(), false) otherwise.",FreeText,,0
1186,guava,com.google.common.collect.FluentIterable_goal.json,from(com.google.common.collect.FluentIterable<E> iterable),from,com.google.common.collect.FluentIterable,"Construct a fluent iterable from another fluent iterable. This is obviously never necessary, but is intended to help call out cases where one migration from Iterable to FluentIterable has obviated the need to explicitly convert to a FluentIterable. @deprecated instances of FluentIterable don't need to be converted to FluentIterable.",FreeText,,0
1187,guava,com.google.common.collect.FluentIterable_goal.json,filter(com.google.common.base.Predicate<? super E> predicate),filter,com.google.common.collect.FluentIterable,Returns the elements from this fluent iterable that satisfy a predicate. The resulting fluent iterable's iterator does not support remove(). <p>Stream equivalent: stream.filter(predicate) (same).,FreeText,,0
1188,guava,com.google.common.collect.FluentIterable_goal.json,toList(),toList,com.google.common.collect.FluentIterable,Returns an ImmutableList containing all of the elements from this fluent iterable in proper sequence. <p>Stream equivalent: ImmutableList.copyOf(stream.iterator()).,FreeText,,0
1189,guava,com.google.common.collect.FluentIterable_goal.json,limit(int maxSize),limit,com.google.common.collect.FluentIterable,"Creates a fluent iterable with the first size elements of this fluent iterable. If this fluent iterable does not contain that many elements, the returned fluent iterable will have the same behavior as this fluent iterable. The returned fluent iterable's iterator supports remove() if this fluent iterable's iterator does. <p>Stream equivalent: stream.limit(maxSize) (same).",FreeText,,0
1190,guava,com.google.common.collect.FluentIterable_goal.json,toString(),toString,com.google.common.collect.FluentIterable,"Returns a string representation of this fluent iterable, with the format [e1, e2, ..., en]. <p>Stream equivalent: stream.collect(Collectors.joining("", "", ""["", ""]"")) or (less efficiently) collect(Collectors.toList()).toString().",FreeText,,0
1191,guava,com.google.common.collect.HashBasedTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.HashBasedTable,,FreeText,,0
1192,guava,com.google.common.collect.HashBasedTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.HashBasedTable,,FreeText,,0
1193,guava,com.google.common.collect.HashBasedTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.HashBasedTable,,FreeText,,0
1194,guava,com.google.common.collect.HashBasedTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.HashBasedTable,,FreeText,,0
1195,guava,com.google.common.collect.HashBasedTable_goal.json,"com.google.common.collect.HashBasedTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.collect.HashBasedTable$Factory<C, V> factory)",com.google.common.collect.HashBasedTable,com.google.common.collect.HashBasedTable,,FreeText,,0
1196,guava,com.google.common.collect.HashBasedTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.HashBasedTable,,FreeText,,0
1197,guava,com.google.common.collect.HashBasedTable_goal.json,"create(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",create,com.google.common.collect.HashBasedTable,Creates a HashBasedTable with the same mappings as the specified table.,FreeText,,0
1198,guava,com.google.common.collect.HashBasedTable_goal.json,create(),create,com.google.common.collect.HashBasedTable,Creates an empty HashBasedTable.,FreeText,,0
1199,guava,com.google.common.collect.HashBasedTable_goal.json,"create(int expectedRows, int expectedCellsPerRow)",create,com.google.common.collect.HashBasedTable,Creates an empty HashBasedTable with the specified map sizes.,FreeText,,0
1200,guava,com.google.common.collect.HashBasedTable_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.HashBasedTable,,FreeText,,0
1201,guava,com.google.common.collect.HashBasedTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.HashBasedTable,,FreeText,,0
1202,guava,com.google.common.collect.HashMultimap_goal.json,create(),create,com.google.common.collect.HashMultimap,"Creates a new, empty HashMultimap with the default initial capacities.",FreeText,,0
1203,guava,com.google.common.collect.HashMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.HashMultimap,{@inheritDoc} Creates an empty HashSet for a collection of values for one key.,FreeText,,0
1204,guava,com.google.common.collect.HashMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.HashMultimap,"Constructs a HashMultimap with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap.",FreeText,,0
1205,guava,com.google.common.collect.HashMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.HashMultimap,Constructs an empty HashMultimap with enough capacity to hold the specified numbers of keys and values without rehashing.,FreeText,,0
1206,guava,com.google.common.collect.HashMultiset_goal.json,create(int distinctElements),create,com.google.common.collect.HashMultiset,"Creates a new, empty HashMultiset with the specified expected number of distinct elements.",FreeText,,0
1207,guava,com.google.common.collect.HashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.HashMultiset,Creates a new HashMultiset containing the specified elements. This implementation is highly efficient when elements is itself a Multiset.,FreeText,,0
1208,guava,com.google.common.collect.HashMultiset_goal.json,create(),create,com.google.common.collect.HashMultiset,"Creates a new, empty HashMultiset using the default initial capacity.",FreeText,,0
1209,guava,com.google.common.collect.ImmutableCollection_goal.json,toArray(T[] other),toArray,com.google.common.collect.ImmutableCollection,,FreeText,,0
1210,guava,com.google.common.collect.ImmutableCollection_goal.json,com.google.common.collect.ImmutableCollection(),com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableCollection,,FreeText,,0
1211,guava,com.google.common.collect.ImmutableCollection_goal.json,removeAll(java.util.Collection<?> oldElements),removeAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1212,guava,com.google.common.collect.ImmutableCollection_goal.json,addAll(java.util.Collection<? extends E> newElements),addAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1213,guava,com.google.common.collect.ImmutableCollection_goal.json,remove(java.lang.Object object),remove,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1214,guava,com.google.common.collect.ImmutableCollection_goal.json,clear(),clear,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1215,guava,com.google.common.collect.ImmutableCollection_goal.json,asList(),asList,com.google.common.collect.ImmutableCollection,"Returns an ImmutableList containing the same elements, in the same order, as this collection. Performance note: in most cases this method can return quickly without actually copying anything. The exact circumstances under which the copy is performed are undefined and subject to change.",FreeText,,0
1216,guava,com.google.common.collect.ImmutableCollection_goal.json,contains(java.lang.Object object),contains,com.google.common.collect.ImmutableCollection,,FreeText,,0
1217,guava,com.google.common.collect.ImmutableCollection_goal.json,add(E e),add,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1218,guava,com.google.common.collect.ImmutableCollection_goal.json,retainAll(java.util.Collection<?> elementsToKeep),retainAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1219,guava,com.google.common.collect.ImmutableCollection_goal.json,isPartialView(),isPartialView,com.google.common.collect.ImmutableCollection,Returns true if this immutable collection's implementation contains references to user-created objects that aren't accessible via this collection's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.,FreeText,,0
1220,guava,com.google.common.collect.ImmutableCollection_goal.json,iterator(),iterator,com.google.common.collect.ImmutableCollection,Returns an unmodifiable iterator across the elements in this collection.,FreeText,,0
1221,guava,com.google.common.collect.ImmutableCollection_goal.json,"copyIntoArray(java.lang.Object[] dst, int offset)",copyIntoArray,com.google.common.collect.ImmutableCollection,Copies the contents of this immutable collection into the specified array at the specified offset. Returns offset + size().,FreeText,,0
1222,guava,com.google.common.collect.ImmutableCollection_goal.json,writeReplace(),writeReplace,com.google.common.collect.ImmutableCollection,,FreeText,,0
1223,guava,com.google.common.collect.ImmutableCollection_goal.json,toArray(),toArray,com.google.common.collect.ImmutableCollection,,FreeText,,0
1224,guava,com.google.common.collect.ImmutableCollection_goal.json,createAsList(),createAsList,com.google.common.collect.ImmutableCollection,,FreeText,,0
1225,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
1226,guava,com.google.common.collect.ImmutableListMultimap_goal.json,builder(),builder,com.google.common.collect.ImmutableListMultimap,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
1227,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1)",of,com.google.common.collect.ImmutableListMultimap,Returns an immutable multimap containing a single entry.,FreeText,,0
1228,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
1229,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",copyOf,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the same mappings as multimap. The generated multimap's key and value orderings correspond to the iteration ordering of the multimap.asMap() view. Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",FreeText,,0
1230,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ImmutableListMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1231,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"com.google.common.collect.ImmutableListMultimap(com.google.common.collect.ImmutableMap<K, com.google.common.collect.ImmutableList<V>> map, int size)",com.google.common.collect.ImmutableListMultimap,com.google.common.collect.ImmutableListMultimap,,FreeText,,0
1232,guava,com.google.common.collect.ImmutableListMultimap_goal.json,get(K key),get,com.google.common.collect.ImmutableListMultimap,"Returns an immutable list of the values for the given key. If no mappings in the multimap have the provided key, an empty immutable list is returned. The values are in the same order as the parameters used to build this multimap.",FreeText,,0
1233,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",copyOf,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the specified entries. The returned multimap iterates over keys in the order they were first encountered in the input, and the values for each key are iterated in the order they were encountered.",FreeText,,0
1234,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
1235,guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
1236,guava,com.google.common.collect.ImmutableListMultimap_goal.json,of(),of,com.google.common.collect.ImmutableListMultimap,,FreeText,,0
1237,guava,com.google.common.collect.ImmutableListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ImmutableListMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1238,guava,com.google.common.collect.ImmutableListMultimap_goal.json,inverse(),inverse,com.google.common.collect.ImmutableListMultimap,"{@inheritDoc} Because an inverse of a list multimap can contain multiple pairs with the same key and value, this method returns an ImmutableListMultimap rather than the ImmutableMultimap specified in the ImmutableMultimap class.",FreeText,,0
1239,guava,com.google.common.collect.ImmutableMultimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1240,guava,com.google.common.collect.ImmutableMultimap_goal.json,values(),values,com.google.common.collect.ImmutableMultimap,"Returns an immutable collection of the values in this multimap. Its iterator traverses the values for the first key, the values for the second key, and so on.",FreeText,,0
1241,guava,com.google.common.collect.ImmutableMultimap_goal.json,createKeys(),createKeys,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1242,guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
1243,guava,com.google.common.collect.ImmutableMultimap_goal.json,inverse(),inverse,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap which is the inverse of this one. For every key-value mapping in the original, the result will have a mapping with key and value reversed.",FreeText,,0
1244,guava,com.google.common.collect.ImmutableMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1245,guava,com.google.common.collect.ImmutableMultimap_goal.json,get(K key),get,com.google.common.collect.ImmutableMultimap,"Returns an immutable collection of the values for the given key. If no mappings in the multimap have the provided key, an empty immutable collection is returned. The values are in the same order as the parameters used to build this multimap.",FreeText,,0
1246,guava,com.google.common.collect.ImmutableMultimap_goal.json,of(),of,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1247,guava,com.google.common.collect.ImmutableMultimap_goal.json,"copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",copyOf,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the specified entries. The returned multimap iterates over keys in the order they were first encountered in the input, and the values for each key are iterated in the order they were encountered.",FreeText,,0
1248,guava,com.google.common.collect.ImmutableMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1249,guava,com.google.common.collect.ImmutableMultimap_goal.json,"copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",copyOf,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the same mappings as multimap, in the ""key-grouped"" iteration order described in the class documentation. Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",FreeText,,0
1250,guava,com.google.common.collect.ImmutableMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1251,guava,com.google.common.collect.ImmutableMultimap_goal.json,keys(),keys,com.google.common.collect.ImmutableMultimap,"Returns an immutable multiset containing all the keys in this multimap, in the same order and with the same frequencies as they appear in this multimap; to get only a single occurrence of each key, use #keySet.",FreeText,,0
1252,guava,com.google.common.collect.ImmutableMultimap_goal.json,asMap(),asMap,com.google.common.collect.ImmutableMultimap,Returns an immutable map that associates each key with its corresponding values in the multimap. Keys and values appear in the same order as in this multimap.,FreeText,,0
1253,guava,com.google.common.collect.ImmutableMultimap_goal.json,createValues(),createValues,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1254,guava,com.google.common.collect.ImmutableMultimap_goal.json,"com.google.common.collect.ImmutableMultimap(com.google.common.collect.ImmutableMap<K, ? extends com.google.common.collect.ImmutableCollection<V>> map, int size)",com.google.common.collect.ImmutableMultimap,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1255,guava,com.google.common.collect.ImmutableMultimap_goal.json,isPartialView(),isPartialView,com.google.common.collect.ImmutableMultimap,Returns true if this immutable multimap's implementation contains references to user-created objects that aren't accessible via this multimap's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.,FreeText,,0
1256,guava,com.google.common.collect.ImmutableMultimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1257,guava,com.google.common.collect.ImmutableMultimap_goal.json,keySet(),keySet,com.google.common.collect.ImmutableMultimap,"Returns an immutable set of the distinct keys in this multimap, in the same order as they appear in this multimap.",FreeText,,0
1258,guava,com.google.common.collect.ImmutableMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1259,guava,com.google.common.collect.ImmutableMultimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1260,guava,com.google.common.collect.ImmutableMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1261,guava,com.google.common.collect.ImmutableMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1262,guava,com.google.common.collect.ImmutableMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1263,guava,com.google.common.collect.ImmutableMultimap_goal.json,size(),size,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1264,guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1)",of,com.google.common.collect.ImmutableMultimap,Returns an immutable multimap containing a single entry.,FreeText,,0
1265,guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
1266,guava,com.google.common.collect.ImmutableMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.ImmutableMultimap,,FreeText,,0
1267,guava,com.google.common.collect.ImmutableMultimap_goal.json,entries(),entries,com.google.common.collect.ImmutableMultimap,Returns an immutable collection of all key-value pairs in the multimap.,FreeText,,0
1268,guava,com.google.common.collect.ImmutableMultimap_goal.json,builder(),builder,com.google.common.collect.ImmutableMultimap,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
1269,guava,com.google.common.collect.ImmutableMultimap_goal.json,clear(),clear,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1270,guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
1271,guava,com.google.common.collect.ImmutableMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
1272,guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
1273,guava,com.google.common.collect.ImmutableMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1274,guava,com.google.common.collect.ImmutableMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1275,guava,com.google.common.collect.ImmutableMultiset_goal.json,getEntry(int index),getEntry,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1276,guava,com.google.common.collect.ImmutableMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1277,guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1278,guava,com.google.common.collect.ImmutableMultiset_goal.json,of(),of,com.google.common.collect.ImmutableMultiset,Returns the empty immutable multiset.,FreeText,,0
1279,guava,com.google.common.collect.ImmutableMultiset_goal.json,builder(),builder,com.google.common.collect.ImmutableMultiset,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
1280,guava,com.google.common.collect.ImmutableMultiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1281,guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1282,guava,com.google.common.collect.ImmutableMultiset_goal.json,of(E element),of,com.google.common.collect.ImmutableMultiset,Returns an immutable multiset containing a single element.,FreeText,,0
1283,guava,com.google.common.collect.ImmutableMultiset_goal.json,toString(),toString,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1284,guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1285,guava,com.google.common.collect.ImmutableMultiset_goal.json,copyFromEntries(java.util.Collection<? extends com.google.common.collect.Multiset$Entry<? extends E>> entries),copyFromEntries,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1286,guava,com.google.common.collect.ImmutableMultiset_goal.json,"copyIntoArray(java.lang.Object[] dst, int offset)",copyIntoArray,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1287,guava,com.google.common.collect.ImmutableMultiset_goal.json,com.google.common.collect.ImmutableMultiset(),com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1288,guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in order.",FreeText,,0
1289,guava,com.google.common.collect.ImmutableMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1290,guava,com.google.common.collect.ImmutableMultiset_goal.json,iterator(),iterator,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1291,guava,com.google.common.collect.ImmutableMultiset_goal.json,writeReplace(),writeReplace,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1292,guava,com.google.common.collect.ImmutableMultiset_goal.json,contains(java.lang.Object object),contains,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1293,guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(E[] elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1294,guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(java.lang.Iterable<? extends E> elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1295,guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(java.util.Iterator<? extends E> elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1296,guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4, E e5)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
1297,guava,com.google.common.collect.ImmutableMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
1298,guava,com.google.common.collect.ImmutableMultiset_goal.json,hashCode(),hashCode,com.google.common.collect.ImmutableMultiset,,FreeText,,0
1299,guava,com.google.common.collect.ImmutableRangeSet_goal.json,add(com.google.common.collect.Range<C> range),add,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1300,guava,com.google.common.collect.ImmutableRangeSet_goal.json,removeAll(com.google.common.collect.RangeSet<C> other),removeAll,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1301,guava,com.google.common.collect.ImmutableRangeSet_goal.json,encloses(com.google.common.collect.Range<C> otherRange),encloses,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1302,guava,com.google.common.collect.ImmutableRangeSet_goal.json,span(),span,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1303,guava,com.google.common.collect.ImmutableRangeSet_goal.json,of(com.google.common.collect.Range<C> range),of,com.google.common.collect.ImmutableRangeSet,"Returns an immutable range set containing the specified single range. If range.isEmpty(), this is equivalent to ImmutableRangeSet#of().",FreeText,args[0].isEmpty() ? methodResultID.equals(receiverObjectClone.of()),1
1304,guava,com.google.common.collect.ImmutableRangeSet_goal.json,rangeContaining(C value),rangeContaining,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1305,guava,com.google.common.collect.ImmutableRangeSet_goal.json,asRanges(),asRanges,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1306,guava,com.google.common.collect.ImmutableRangeSet_goal.json,asSet(com.google.common.collect.DiscreteDomain<C> domain),asSet,com.google.common.collect.ImmutableRangeSet,"Returns an ImmutableSortedSet containing the same values in the given domain {@linkplain RangeSet#contains contained} by this range set. <p>Note: a.asSet(d).equals(b.asSet(d)) does not imply a.equals(b)! For example, a and b could be [2..4] and (1..5), or the empty ranges [3..3) and [4..4). <p>Warning: Be extremely careful what you do with the asSet view of a large range set (such as ImmutableRangeSet.of(Range.greaterThan(0))). Certain operations on such a set can be performed efficiently, but others (such as Set#hashCode or Collections#frequency) can cause major performance problems. <p>The returned set's Object#toString method returns a short-hand form of the set's contents, such as ""[1..100]""}.",FreeText,,0
1307,guava,com.google.common.collect.ImmutableRangeSet_goal.json,asDescendingSetOfRanges(),asDescendingSetOfRanges,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1308,guava,com.google.common.collect.ImmutableRangeSet_goal.json,all(),all,com.google.common.collect.ImmutableRangeSet,Returns an immutable range set containing the single range Range#all().,FreeText,,0
1309,guava,com.google.common.collect.ImmutableRangeSet_goal.json,complement(),complement,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1310,guava,com.google.common.collect.ImmutableRangeSet_goal.json,addAll(com.google.common.collect.RangeSet<C> other),addAll,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1311,guava,com.google.common.collect.ImmutableRangeSet_goal.json,subRangeSet(com.google.common.collect.Range<C> range),subRangeSet,com.google.common.collect.ImmutableRangeSet,Returns a view of the intersection of this range set with the given range.,FreeText,,0
1312,guava,com.google.common.collect.ImmutableRangeSet_goal.json,com.google.common.collect.ImmutableRangeSet(com.google.common.collect.ImmutableList<com.google.common.collect.Range<C>> ranges),com.google.common.collect.ImmutableRangeSet,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1313,guava,com.google.common.collect.ImmutableRangeSet_goal.json,isEmpty(),isEmpty,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1314,guava,com.google.common.collect.ImmutableRangeSet_goal.json,isPartialView(),isPartialView,com.google.common.collect.ImmutableRangeSet,Returns true if this immutable range set's implementation contains references to user-created objects that aren't accessible via this range set's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.,FreeText,,0
1315,guava,com.google.common.collect.ImmutableRangeSet_goal.json,copyOf(com.google.common.collect.RangeSet<C> rangeSet),copyOf,com.google.common.collect.ImmutableRangeSet,Returns an immutable copy of the specified RangeSet.,FreeText,,0
1316,guava,com.google.common.collect.ImmutableRangeSet_goal.json,writeReplace(),writeReplace,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1317,guava,com.google.common.collect.ImmutableRangeSet_goal.json,of(),of,com.google.common.collect.ImmutableRangeSet,Returns an empty immutable range set.,FreeText,,0
1318,guava,com.google.common.collect.ImmutableRangeSet_goal.json,builder(),builder,com.google.common.collect.ImmutableRangeSet,Returns a new builder for an immutable range set.,FreeText,,0
1319,guava,com.google.common.collect.ImmutableRangeSet_goal.json,remove(com.google.common.collect.Range<C> range),remove,com.google.common.collect.ImmutableRangeSet,.,FreeText,,0
1320,guava,com.google.common.collect.ImmutableTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.ImmutableTable,.,FreeText,,0
1321,guava,com.google.common.collect.ImmutableTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.ImmutableTable,Guaranteed to throw an exception and leave the table unmodified.,FreeText,,0
1322,guava,com.google.common.collect.ImmutableTable_goal.json,row(R rowKey),row,com.google.common.collect.ImmutableTable,{@inheritDoc}.,FreeText,,0
1323,guava,com.google.common.collect.ImmutableTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.ImmutableTable,.,FreeText,,0
1324,guava,com.google.common.collect.ImmutableTable_goal.json,"copyOf(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",copyOf,com.google.common.collect.ImmutableTable,"Returns an immutable copy of the provided table. <p>The Table#cellSet() iteration order of the provided table determines the iteration ordering of all views in the returned table. Note that some views of the original table and the copied table may have different iteration orders. For more control over the ordering, create a Builder and call Builder#orderRowsBy, Builder#orderColumnsBy, and Builder#putAll <p>Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",FreeText,,0
1325,guava,com.google.common.collect.ImmutableTable_goal.json,cellSet(),cellSet,com.google.common.collect.ImmutableTable,.,FreeText,,0
1326,guava,com.google.common.collect.ImmutableTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.ImmutableTable,.,FreeText,,0
1327,guava,com.google.common.collect.ImmutableTable_goal.json,"of(R rowKey, C columnKey, V value)",of,com.google.common.collect.ImmutableTable,.,FreeText,,0
1328,guava,com.google.common.collect.ImmutableTable_goal.json,values(),values,com.google.common.collect.ImmutableTable,.,FreeText,,0
1329,guava,com.google.common.collect.ImmutableTable_goal.json,builder(),builder,com.google.common.collect.ImmutableTable,Returns a new builder. The generated builder is equivalent to the builder created by the Builder#ImmutableTable.Builder() constructor.,FreeText,methodResultID.equals(ImmutableTable.Builder.ImmutableTable.Builder()),1
1330,guava,com.google.common.collect.ImmutableTable_goal.json,createValues(),createValues,com.google.common.collect.ImmutableTable,.,FreeText,,0
1331,guava,com.google.common.collect.ImmutableTable_goal.json,columnMap(),columnMap,com.google.common.collect.ImmutableTable,"{@inheritDoc} <p>The value Map<R, V> instances in the returned map are ImmutableMap instances as well.",FreeText,,0
1332,guava,com.google.common.collect.ImmutableTable_goal.json,column(C columnKey),column,com.google.common.collect.ImmutableTable,{@inheritDoc}.,FreeText,,0
1333,guava,com.google.common.collect.ImmutableTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.ImmutableTable,.,FreeText,,0
1334,guava,com.google.common.collect.ImmutableTable_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.ImmutableTable,Guaranteed to throw an exception and leave the table unmodified.,FreeText,,0
1335,guava,com.google.common.collect.ImmutableTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.ImmutableTable,.,FreeText,,0
1336,guava,com.google.common.collect.ImmutableTable_goal.json,of(),of,com.google.common.collect.ImmutableTable,.,FreeText,,0
1337,guava,com.google.common.collect.ImmutableTable_goal.json,"cellOf(R rowKey, C columnKey, V value)",cellOf,com.google.common.collect.ImmutableTable,"Verifies that rowKey, columnKey and value are non-null, and returns a new entry with those values.",FreeText,,0
1338,guava,com.google.common.collect.ImmutableTable_goal.json,rowMap(),rowMap,com.google.common.collect.ImmutableTable,"{@inheritDoc} <p>The value Map<C, V> instances in the returned map are ImmutableMap instances as well.",FreeText,,0
1339,guava,com.google.common.collect.ImmutableTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.ImmutableTable,Guaranteed to throw an exception and leave the table unmodified.,FreeText,,0
1340,guava,com.google.common.collect.ImmutableTable_goal.json,com.google.common.collect.ImmutableTable(),com.google.common.collect.ImmutableTable,com.google.common.collect.ImmutableTable,.,FreeText,,0
1341,guava,com.google.common.collect.ImmutableTable_goal.json,createCellSet(),createCellSet,com.google.common.collect.ImmutableTable,.,FreeText,,0
1342,guava,com.google.common.collect.ImmutableTable_goal.json,valuesIterator(),valuesIterator,com.google.common.collect.ImmutableTable,.,FreeText,,0
1343,guava,com.google.common.collect.ImmutableTable_goal.json,clear(),clear,com.google.common.collect.ImmutableTable,Guaranteed to throw an exception and leave the table unmodified.,FreeText,,0
1344,guava,com.google.common.collect.Iterables_goal.json,"toArray(java.lang.Iterable<? extends T> iterable, java.lang.Class<T> type)",toArray,com.google.common.collect.Iterables,Copies an iterable's elements into an array.,FreeText,,0
1345,guava,com.google.common.collect.Iterables_goal.json,"frequency(java.lang.Iterable<?> iterable, java.lang.Object element)",frequency,com.google.common.collect.Iterables,Returns the number of elements in the specified iterable that equal the specified object. This implementation avoids a full iteration when the iterable is a Multiset or Set. @see Collections#frequency.,FreeText,,0
1346,guava,com.google.common.collect.Iterables_goal.json,"filter(java.lang.Iterable<?> unfiltered, java.lang.Class<T> type)",filter,com.google.common.collect.Iterables,Returns all instances of class type in unfiltered. The returned iterable has elements whose class is type or a subclass of type. The returned iterable's iterator does not support remove().,FreeText,,0
1347,guava,com.google.common.collect.Iterables_goal.json,"get(java.lang.Iterable<T> iterable, int position)",get,com.google.common.collect.Iterables,Returns the element at the specified position in an iterable.,FreeText,,0
1348,guava,com.google.common.collect.Iterables_goal.json,consumingIterable(java.lang.Iterable<T> iterable),consumingIterable,com.google.common.collect.Iterables,"Returns a view of the supplied iterable that wraps each generated Iterator through Iterators#consumingIterator(Iterator). <p>Note: If iterable is a Queue, the returned iterable will get entries from Queue#remove() since Queue's iteration order is undefined. Calling Iterator#hasNext() on a generated iterator from the returned iterable may cause an item to be immediately dequeued for return on a subsequent call to Iterator#next().",FreeText,,0
1349,guava,com.google.common.collect.Iterables_goal.json,"skip(java.lang.Iterable<T> iterable, int numberToSkip)",skip,com.google.common.collect.Iterables,"Returns a view of iterable that skips its first numberToSkip elements. If iterable contains fewer than numberToSkip elements, the returned iterable skips all of its elements. <p>Modifications to the underlying Iterable before a call to iterator() are reflected in the returned iterator. That is, the iterator skips the first numberToSkip elements that exist when the Iterator is created, not when skip() is called. <p>The returned iterable's iterator supports remove() if the iterator of the underlying iterable supports it. Note that it is not possible to delete the last skipped element by immediately calling remove() on that iterator, as the Iterator contract states that a call to remove() before a call to next() will throw an IllegalStateException.",FreeText,,0
1350,guava,com.google.common.collect.Iterables_goal.json,"limit(java.lang.Iterable<T> iterable, int limitSize)",limit,com.google.common.collect.Iterables,"Creates an iterable with the first limitSize elements of the given iterable. If the original iterable does not contain that many elements, the returned iterable will have the same behavior as the original iterable. The returned iterable's iterator supports remove() if the original iterator does.",FreeText,,0
1351,guava,com.google.common.collect.Iterables_goal.json,"get(java.lang.Iterable<? extends T> iterable, int position, T defaultValue)",get,com.google.common.collect.Iterables,Returns the element at the specified position in an iterable or a default value otherwise.,FreeText,,0
1352,guava,com.google.common.collect.Iterables_goal.json,"filter(java.lang.Iterable<T> unfiltered, com.google.common.base.Predicate<? super T> predicate)",filter,com.google.common.collect.Iterables,Returns the elements of unfiltered that satisfy a predicate. The resulting iterable's iterator does not support remove().,FreeText,,0
1353,guava,com.google.common.collect.Iterables_goal.json,"any(java.lang.Iterable<T> iterable, com.google.common.base.Predicate<? super T> predicate)",any,com.google.common.collect.Iterables,Returns true if any element in iterable satisfies the predicate.,FreeText,,0
1354,guava,com.google.common.collect.Iterables_goal.json,"transform(java.lang.Iterable<F> fromIterable, com.google.common.base.Function<? super F, ? extends T> function)",transform,com.google.common.collect.Iterables,"Returns an iterable that applies function to each element of fromIterable. <p>The returned iterable's iterator supports remove() if the provided iterator does. After a successful remove() call, fromIterable no longer contains the corresponding element. <p>If the input Iterable is known to be a List or other Collection, consider Lists#transform and Collections2#transform.",FreeText,,0
1355,guava,com.google.common.collect.Iterables_goal.json,isEmpty(java.lang.Iterable<?> iterable),isEmpty,com.google.common.collect.Iterables,"Determines if the given iterable contains no elements. <p>There is no precise Iterator equivalent to this method, since one can only ask an iterator whether it has any elements remaining (which one does using Iterator#hasNext).",FreeText,,0
1356,guava,com.google.common.collect.Iterables_goal.json,"removeFirstMatching(java.lang.Iterable<T> removeFrom, com.google.common.base.Predicate<? super T> predicate)",removeFirstMatching,com.google.common.collect.Iterables,"Removes and returns the first matching element, or returns null if there is none.",FreeText,,0
1357,guava,com.google.common.collect.Iterables_goal.json,"indexOf(java.lang.Iterable<T> iterable, com.google.common.base.Predicate<? super T> predicate)",indexOf,com.google.common.collect.Iterables,"Returns the index in iterable of the first element that satisfies the provided predicate, or -1 if the Iterable has no such elements. <p>More formally, returns the lowest index i such that predicate.apply(Iterables.get(iterable, i)) returns true, or -1 if there is no such index.",FreeText,,0
1358,guava,com.google.common.collect.Iterables_goal.json,concat(java.lang.Iterable<? extends java.lang.Iterable<? extends T>> inputs),concat,com.google.common.collect.Iterables,Combines multiple iterables into a single iterable. The returned iterable has an iterator that traverses the elements of each iterable in inputs. The input iterators are not polled until necessary. <p>The returned iterable's iterator supports remove() when the corresponding input iterator supports it. The methods of the returned iterable may throw NullPointerException if any of the input iterators is null.,FreeText,,0
1359,guava,com.google.common.collect.Iterables_goal.json,"concat(java.lang.Iterable<? extends T> a, java.lang.Iterable<? extends T> b)",concat,com.google.common.collect.Iterables,"Combines two iterables into a single iterable. The returned iterable has an iterator that traverses the elements in a, followed by the elements in b. The source iterators are not polled until necessary. <p>The returned iterable's iterator supports remove() when the corresponding input iterator supports it.",FreeText,,0
1360,guava,com.google.common.collect.Iterables_goal.json,"find(java.lang.Iterable<T> iterable, com.google.common.base.Predicate<? super T> predicate)",find,com.google.common.collect.Iterables,"Returns the first element in iterable that satisfies the given predicate; use this method only when such an element is known to exist. If it is possible that no element will match, use tryFind or Predicate, Object) instead.",FreeText,,0
1361,guava,com.google.common.collect.Iterables_goal.json,"contains(java.lang.Iterable<?> iterable, java.lang.Object element)",contains,com.google.common.collect.Iterables,Returns true if iterable contains any object for which equals(element) is true.,FreeText,,0
1362,guava,com.google.common.collect.Iterables_goal.json,"getLast(java.lang.Iterable<? extends T> iterable, T defaultValue)",getLast,com.google.common.collect.Iterables,Returns the last element of iterable or defaultValue if the iterable is empty.,FreeText,,0
1363,guava,com.google.common.collect.Iterables_goal.json,cycle(T... elements),cycle,com.google.common.collect.Iterables,"Returns an iterable whose iterators cycle indefinitely over the provided elements. <p>After remove is invoked on a generated iterator, the removed element will no longer appear in either that iterator or any other iterator created from the same source iterable. That is, this method behaves exactly as Iterables.cycle(Lists.newArrayList(elements)). The iterator's hasNext method returns true until all of the original elements have been removed. <p>Warning: Typical uses of the resulting iterator may produce an infinite loop. You should use an explicit break or be certain that you will eventually remove all the elements. <p>To cycle over the elements n times, use the following: Iterables.concat(Collections.nCopies(n, Arrays.asList(elements))).",FreeText,methodResultID.equals(Iterables.cycle(com.google.common.collect.Lists.newArrayList(args[0]))),1
1364,guava,com.google.common.collect.Iterables_goal.json,"partition(java.lang.Iterable<T> iterable, int size)",partition,com.google.common.collect.Iterables,"Divides an iterable into unmodifiable sublists of the given size (the final iterable may be smaller). For example, partitioning an iterable containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e]] -- an outer iterable containing two inner lists of three and two elements, all in the original order. <p>Iterators returned by the returned iterable do not support the Iterator#remove() method. The returned lists implement RandomAccess, whether or not the input list does. <p>Note: if iterable is a List, use int) instead.",FreeText,,0
1365,guava,com.google.common.collect.Iterables_goal.json,cycle(java.lang.Iterable<T> iterable),cycle,com.google.common.collect.Iterables,"Returns an iterable whose iterators cycle indefinitely over the elements of iterable. <p>That iterator supports remove() if iterable.iterator() does. After remove() is called, subsequent cycles omit the removed element, which is no longer in iterable. The iterator's hasNext() method returns true until iterable is empty. <p>Warning: Typical uses of the resulting iterator may produce an infinite loop. You should use an explicit break or be certain that you will eventually remove all the elements. <p>To cycle over the iterable n times, use the following: Iterables.concat(Collections.nCopies(n, iterable)).",FreeText,,0
1366,guava,com.google.common.collect.Iterables_goal.json,"removeAll(java.lang.Iterable<?> removeFrom, java.util.Collection<?> elementsToRemove)",removeAll,com.google.common.collect.Iterables,"Removes, from an iterable, every element that belongs to the provided collection. <p>This method calls Collection#removeAll if iterable is a collection, and Iterators#removeAll otherwise.",FreeText,,0
1367,guava,com.google.common.collect.Iterables_goal.json,unmodifiableIterable(java.lang.Iterable<T> iterable),unmodifiableIterable,com.google.common.collect.Iterables,.,FreeText,,0
1368,guava,com.google.common.collect.Iterables_goal.json,unmodifiableIterable(com.google.common.collect.ImmutableCollection<E> iterable),unmodifiableIterable,com.google.common.collect.Iterables,Simply returns its argument. @deprecated no need to use this.,FreeText,,0
1369,guava,com.google.common.collect.Iterables_goal.json,"removeIf(java.lang.Iterable<T> removeFrom, com.google.common.base.Predicate<? super T> predicate)",removeIf,com.google.common.collect.Iterables,"Removes, from an iterable, every element that satisfies the provided predicate.",FreeText,,0
1370,guava,com.google.common.collect.Iterables_goal.json,getOnlyElement(java.lang.Iterable<T> iterable),getOnlyElement,com.google.common.collect.Iterables,Returns the single element contained in iterable.,FreeText,,0
1371,guava,com.google.common.collect.Iterables_goal.json,"toArray(java.lang.Iterable<? extends T> iterable, T[] array)",toArray,com.google.common.collect.Iterables,.,FreeText,,0
1372,guava,com.google.common.collect.Iterables_goal.json,"addAll(java.util.Collection<T> addTo, java.lang.Iterable<? extends T> elementsToAdd)",addAll,com.google.common.collect.Iterables,Adds all elements in iterable to collection.,FreeText,,0
1373,guava,com.google.common.collect.Iterables_goal.json,"mergeSorted(java.lang.Iterable<? extends java.lang.Iterable<? extends T>> iterables, java.util.Comparator<? super T> comparator)",mergeSorted,com.google.common.collect.Iterables,"Returns an iterable over the merged contents of all given iterables. Equivalent entries will not be de-duplicated. <p>Callers must ensure that the source iterables are in non-descending order as this method does not sort its input. <p>For any equivalent elements across all iterables, it is undefined which element is returned first.",FreeText,,0
1374,guava,com.google.common.collect.Iterables_goal.json,"all(java.lang.Iterable<T> iterable, com.google.common.base.Predicate<? super T> predicate)",all,com.google.common.collect.Iterables,"Returns true if every element in iterable satisfies the predicate. If iterable is empty, true is returned.",FreeText,,0
1375,guava,com.google.common.collect.Iterables_goal.json,toArray(java.lang.Iterable<?> iterable),toArray,com.google.common.collect.Iterables,Copies an iterable's elements into an array.,FreeText,,0
1376,guava,com.google.common.collect.Iterables_goal.json,"paddedPartition(java.lang.Iterable<T> iterable, int size)",paddedPartition,com.google.common.collect.Iterables,"Divides an iterable into unmodifiable sublists of the given size, padding the final iterable with null values if necessary. For example, partitioning an iterable containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e, null]] -- an outer iterable containing two inner lists of three elements each, all in the original order. <p>Iterators returned by the returned iterable do not support the Iterator#remove() method.",FreeText,,0
1377,guava,com.google.common.collect.Iterables_goal.json,"getFirst(java.lang.Iterable<? extends T> iterable, T defaultValue)",getFirst,com.google.common.collect.Iterables,"Returns the first element in iterable or defaultValue if the iterable is empty. The Iterators analog to this method is Iterators#getNext. <p>If no default value is desired (and the caller instead wants a NoSuchElementException to be thrown), it is recommended that iterable.iterator().next() is used instead.",FreeText,,0
1378,guava,com.google.common.collect.Iterables_goal.json,concat(java.lang.Iterable<? extends T>... inputs),concat,com.google.common.collect.Iterables,Combines multiple iterables into a single iterable. The returned iterable has an iterator that traverses the elements of each iterable in inputs. The input iterators are not polled until necessary. <p>The returned iterable's iterator supports remove() when the corresponding input iterator supports it.,FreeText,,0
1379,guava,com.google.common.collect.Iterables_goal.json,"elementsEqual(java.lang.Iterable<?> iterable1, java.lang.Iterable<?> iterable2)",elementsEqual,com.google.common.collect.Iterables,"Determines whether two iterables contain equal elements in the same order. More specifically, this method returns true if iterable1 and iterable2 contain the same number of elements and every element of iterable1 is equal to the corresponding element of iterable2.",FreeText,,0
1380,guava,com.google.common.collect.Iterables_goal.json,toString(java.lang.Iterable<?> iterable),toString,com.google.common.collect.Iterables,"Returns a string representation of iterable, with the format [e1, e2, ..., en] (that is, identical to Arrays.toString(Iterables.toArray(iterable))). Note that for most implementations of Collection, collection.toString() also gives the same result, but that behavior is not generally guaranteed.",FreeText,methodResultID.equals(Arrays.toString(Iterables.toArray(args[0])),1
1381,guava,com.google.common.collect.Iterables_goal.json,"concat(java.lang.Iterable<? extends T> a, java.lang.Iterable<? extends T> b, java.lang.Iterable<? extends T> c, java.lang.Iterable<? extends T> d)",concat,com.google.common.collect.Iterables,"Combines four iterables into a single iterable. The returned iterable has an iterator that traverses the elements in a, followed by the elements in b, followed by the elements in c, followed by the elements in d. The source iterators are not polled until necessary. <p>The returned iterable's iterator supports remove() when the corresponding input iterator supports it.",FreeText,,0
1382,guava,com.google.common.collect.Iterables_goal.json,"find(java.lang.Iterable<? extends T> iterable, com.google.common.base.Predicate<? super T> predicate, T defaultValue)",find,com.google.common.collect.Iterables,"Returns the first element in iterable that satisfies the given predicate, or defaultValue if none found. Note that this can usually be handled more naturally using tryFind(iterable, predicate).or(defaultValue).",FreeText,,0
1383,guava,com.google.common.collect.Iterables_goal.json,getLast(java.lang.Iterable<T> iterable),getLast,com.google.common.collect.Iterables,Returns the last element of iterable.,FreeText,,0
1384,guava,com.google.common.collect.Iterables_goal.json,"concat(java.lang.Iterable<? extends T> a, java.lang.Iterable<? extends T> b, java.lang.Iterable<? extends T> c)",concat,com.google.common.collect.Iterables,"Combines three iterables into a single iterable. The returned iterable has an iterator that traverses the elements in a, followed by the elements in b, followed by the elements in c. The source iterators are not polled until necessary. <p>The returned iterable's iterator supports remove() when the corresponding input iterator supports it.",FreeText,,0
1385,guava,com.google.common.collect.Iterables_goal.json,"retainAll(java.lang.Iterable<?> removeFrom, java.util.Collection<?> elementsToRetain)",retainAll,com.google.common.collect.Iterables,"Removes, from an iterable, every element that does not belong to the provided collection. <p>This method calls Collection#retainAll if iterable is a collection, and Iterators#retainAll otherwise.",FreeText,,0
1386,guava,com.google.common.collect.Iterables_goal.json,"getOnlyElement(java.lang.Iterable<? extends T> iterable, T defaultValue)",getOnlyElement,com.google.common.collect.Iterables,"Returns the single element contained in iterable, or defaultValue if the iterable is empty.",FreeText,,0
1387,guava,com.google.common.collect.Iterables_goal.json,size(java.lang.Iterable<?> iterable),size,com.google.common.collect.Iterables,Returns the number of elements in iterable.,FreeText,,0
1388,guava,com.google.common.collect.Iterables_goal.json,"tryFind(java.lang.Iterable<T> iterable, com.google.common.base.Predicate<? super T> predicate)",tryFind,com.google.common.collect.Iterables,"Returns an Optional containing the first element in iterable that satisfies the given predicate, if such an element exists. <p>Warning: avoid using a predicate that matches null. If null is matched in iterable, a NullPointerException will be thrown.",FreeText,,0
1389,guava,com.google.common.collect.Iterators_goal.json,forEnumeration(java.util.Enumeration<T> enumeration),forEnumeration,com.google.common.collect.Iterators,"Adapts an Enumeration to the Iterator interface. <p>This method has no equivalent in Iterables because viewing an Enumeration as an Iterable is impossible. However, the contents can be copied into a collection using Collections#list.",FreeText,,0
1390,guava,com.google.common.collect.Iterators_goal.json,"forArray(T[] array, int offset, int length, int index)",forArray,com.google.common.collect.Iterators,"Returns a list iterator containing the elements in the specified range of array in order, starting at the specified index. <p>The Iterable equivalent of this method is Arrays.asList(array).subList(offset, offset + length).listIterator(index).",FreeText,"methodResultID.equals(java.util.Arrays.asList(args[0]).subList(args[1], args[1] + args[2]).listIterator(args[3]))",1
1391,guava,com.google.common.collect.Iterators_goal.json,"getLast(java.util.Iterator<? extends T> iterator, T defaultValue)",getLast,com.google.common.collect.Iterators,"Advances iterator to the end, returning the last element or defaultValue if the iterator is empty.",FreeText,,0
1392,guava,com.google.common.collect.Iterators_goal.json,cast(java.util.Iterator<T> iterator),cast,com.google.common.collect.Iterators,Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557.,FreeText,,0
1393,guava,com.google.common.collect.Iterators_goal.json,toString(java.util.Iterator<?> iterator),toString,com.google.common.collect.Iterators,"Returns a string representation of iterator, with the format [e1, e2, ..., en]. The iterator will be left exhausted: its hasNext() method will return false.",FreeText,,0
1394,guava,com.google.common.collect.Iterators_goal.json,peekingIterator(java.util.Iterator<? extends T> iterator),peekingIterator,com.google.common.collect.Iterators,"Returns a PeekingIterator backed by the given iterator. <p>Calls to the peek method with no intervening calls to next do not affect the iteration, and hence return the same object each time. A subsequent call to next is guaranteed to return the same object again. For example: PeekingIterator<String> peekingIterator = Iterators.peekingIterator(Iterators.forArray(""a"", ""b"")); String a1 = peekingIterator.peek(); // returns ""a"" String a2 = peekingIterator.peek(); // also returns ""a"" String a3 = peekingIterator.next(); // also returns ""a"" <p>Any structural changes to the underlying iteration (aside from those performed by the iterator's own PeekingIterator#remove() method) will leave the iterator in an undefined state. <p>The returned iterator does not support removal after peeking, as explained by PeekingIterator#remove(). <p>Note: If the given iterator is already a PeekingIterator, it might be returned to the caller, although this is neither guaranteed to occur nor required to be consistent. For example, this method might choose to pass through recognized implementations of PeekingIterator when the behavior of the implementation is known to meet the contract guaranteed by this method. <p>There is no Iterable equivalent to this method, so use this method to wrap each individual iterator as it is generated.",FreeText,,0
1395,guava,com.google.common.collect.Iterators_goal.json,"advance(java.util.Iterator<?> iterator, int numberToAdvance)",advance,com.google.common.collect.Iterators,"Calls next() on iterator, either numberToAdvance times or until hasNext() returns false, whichever comes first.",FreeText,,0
1396,guava,com.google.common.collect.Iterators_goal.json,"frequency(java.util.Iterator<?> iterator, java.lang.Object element)",frequency,com.google.common.collect.Iterators,Returns the number of elements in the specified iterator that equal the specified object. The iterator will be left exhausted: its hasNext() method will return false. @see Collections#frequency.,FreeText,,0
1397,guava,com.google.common.collect.Iterators_goal.json,"all(java.util.Iterator<T> iterator, com.google.common.base.Predicate<? super T> predicate)",all,com.google.common.collect.Iterators,"Returns true if every element returned by iterator satisfies the given predicate. If iterator is empty, true is returned.",FreeText,,0
1398,guava,com.google.common.collect.Iterators_goal.json,consumingIterator(java.util.Iterator<T> iterator),consumingIterator,com.google.common.collect.Iterators,Returns a view of the supplied iterator that removes each element from the supplied iterator as it is returned. <p>The provided iterator must support Iterator#remove() or else the returned iterator will fail on the first call to next.,FreeText,,0
1399,guava,com.google.common.collect.Iterators_goal.json,"elementsEqual(java.util.Iterator<?> iterator1, java.util.Iterator<?> iterator2)",elementsEqual,com.google.common.collect.Iterators,"Determines whether two iterators contain equal elements in the same order. More specifically, this method returns true if iterator1 and iterator2 contain the same number of elements and every element of iterator1 is equal to the corresponding element of iterator2. <p>Note that this will modify the supplied iterators, since they will have been advanced some number of elements forward.",FreeText,,0
1400,guava,com.google.common.collect.Iterators_goal.json,concat(java.util.Iterator<? extends java.util.Iterator<? extends T>> inputs),concat,com.google.common.collect.Iterators,"Combines multiple iterators into a single iterator. The returned iterator iterates across the elements of each iterator in inputs. The input iterators are not polled until necessary. <p>The returned iterator supports remove() when the corresponding input iterator supports it. The methods of the returned iterator may throw NullPointerException if any of the input iterators is null. <p>Note: the current implementation is not suitable for nested concatenated iterators, i.e. the following should be avoided when in a loop: iterator = Iterators.concat(iterator, suffix);, since iteration over the resulting iterator has a cubic complexity to the depth of the nesting.",FreeText,,0
1401,guava,com.google.common.collect.Iterators_goal.json,"limit(java.util.Iterator<T> iterator, int limitSize)",limit,com.google.common.collect.Iterators,"Creates an iterator returning the first limitSize elements of the given iterator. If the original iterator does not contain that many elements, the returned iterator will have the same behavior as the original iterator. The returned iterator supports remove() if the original iterator does.",FreeText,,0
1402,guava,com.google.common.collect.Iterators_goal.json,"get(java.util.Iterator<? extends T> iterator, int position, T defaultValue)",get,com.google.common.collect.Iterators,"Advances iterator position + 1 times, returning the element at the positionth position or defaultValue otherwise.",FreeText,,0
1403,guava,com.google.common.collect.Iterators_goal.json,"transform(java.util.Iterator<F> fromIterator, com.google.common.base.Function<? super F, ? extends T> function)",transform,com.google.common.collect.Iterators,"Returns an iterator that applies function to each element of fromIterator. <p>The returned iterator supports remove() if the provided iterator does. After a successful remove() call, fromIterator no longer contains the corresponding element.",FreeText,,0
1404,guava,com.google.common.collect.Iterators_goal.json,"any(java.util.Iterator<T> iterator, com.google.common.base.Predicate<? super T> predicate)",any,com.google.common.collect.Iterators,Returns true if one or more elements returned by iterator satisfy the given predicate.,FreeText,,0
1405,guava,com.google.common.collect.Iterators_goal.json,pollNext(java.util.Iterator<T> iterator),pollNext,com.google.common.collect.Iterators,"Deletes and returns the next value from the iterator, or returns null if there is no such value.",FreeText,,0
1406,guava,com.google.common.collect.Iterators_goal.json,"concat(java.util.Iterator<? extends T> a, java.util.Iterator<? extends T> b)",concat,com.google.common.collect.Iterators,"Combines two iterators into a single iterator. The returned iterator iterates across the elements in a, followed by the elements in b. The source iterators are not polled until necessary. <p>The returned iterator supports remove() when the corresponding input iterator supports it. <p>Note: the current implementation is not suitable for nested concatenated iterators, i.e. the following should be avoided when in a loop: iterator = Iterators.concat(iterator, suffix);, since iteration over the resulting iterator has a cubic complexity to the depth of the nesting.",FreeText,,0
1407,guava,com.google.common.collect.Iterators_goal.json,"toArray(java.util.Iterator<? extends T> iterator, java.lang.Class<T> type)",toArray,com.google.common.collect.Iterators,Copies an iterator's elements into an array. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1408,guava,com.google.common.collect.Iterators_goal.json,"filter(java.util.Iterator<T> unfiltered, com.google.common.base.Predicate<? super T> predicate)",filter,com.google.common.collect.Iterators,Returns the elements of unfiltered that satisfy a predicate.,FreeText,,0
1409,guava,com.google.common.collect.Iterators_goal.json,emptyModifiableIterator(),emptyModifiableIterator,com.google.common.collect.Iterators,.,FreeText,,0
1410,guava,com.google.common.collect.Iterators_goal.json,"removeIf(java.util.Iterator<T> removeFrom, com.google.common.base.Predicate<? super T> predicate)",removeIf,com.google.common.collect.Iterators,Removes every element that satisfies the provided predicate from the iterator. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1411,guava,com.google.common.collect.Iterators_goal.json,forArray(T... array),forArray,com.google.common.collect.Iterators,"Returns an iterator containing the elements of array in order. The returned iterator is a view of the array; subsequent changes to the array will be reflected in the iterator. <p>Note: It is often preferable to represent your data using a collection type, for example using Arrays#asList(Object[]), making this method unnecessary. <p>The Iterable equivalent of this method is either Arrays#asList(Object[]), ImmutableList#copyOf(Object[])}, or ImmutableList#of.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])) && methodResultID.equals(ImmutableList#copyOf(args[0])) &&  methodResultID.equals(ImmutableList#of(args[0])),1
1412,guava,com.google.common.collect.Iterators_goal.json,"tryFind(java.util.Iterator<T> iterator, com.google.common.base.Predicate<? super T> predicate)",tryFind,com.google.common.collect.Iterators,"Returns an Optional containing the first element in iterator that satisfies the given predicate, if such an element exists. If no such element is found, an empty Optional will be returned from this method and the iterator will be left exhausted: its hasNext() method will return false. <p>Warning: avoid using a predicate that matches null. If null is matched in iterator, a NullPointerException will be thrown.",FreeText,,0
1413,guava,com.google.common.collect.Iterators_goal.json,"addAll(java.util.Collection<T> addTo, java.util.Iterator<? extends T> iterator)",addAll,com.google.common.collect.Iterators,Adds all elements in iterator to collection. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1414,guava,com.google.common.collect.Iterators_goal.json,"concat(java.util.Iterator<? extends T> a, java.util.Iterator<? extends T> b, java.util.Iterator<? extends T> c)",concat,com.google.common.collect.Iterators,"Combines three iterators into a single iterator. The returned iterator iterates across the elements in a, followed by the elements in b, followed by the elements in c. The source iterators are not polled until necessary. <p>The returned iterator supports remove() when the corresponding input iterator supports it. <p>Note: the current implementation is not suitable for nested concatenated iterators, i.e. the following should be avoided when in a loop: iterator = Iterators.concat(iterator, suffix);, since iteration over the resulting iterator has a cubic complexity to the depth of the nesting.",FreeText,,0
1415,guava,com.google.common.collect.Iterators_goal.json,getLast(java.util.Iterator<T> iterator),getLast,com.google.common.collect.Iterators,"Advances iterator to the end, returning the last element.",FreeText,,0
1416,guava,com.google.common.collect.Iterators_goal.json,emptyListIterator(),emptyListIterator,com.google.common.collect.Iterators,.,FreeText,,0
1417,guava,com.google.common.collect.Iterators_goal.json,"getNext(java.util.Iterator<? extends T> iterator, T defaultValue)",getNext,com.google.common.collect.Iterators,Returns the next element in iterator or defaultValue if the iterator is empty. The Iterables analog to this method is Iterables#getFirst.,FreeText,,0
1418,guava,com.google.common.collect.Iterators_goal.json,clear(java.util.Iterator<?> iterator),clear,com.google.common.collect.Iterators,Clears the iterator using its remove method.,FreeText,,0
1419,guava,com.google.common.collect.Iterators_goal.json,"partition(java.util.Iterator<T> iterator, int size)",partition,com.google.common.collect.Iterators,"Divides an iterator into unmodifiable sublists of the given size (the final list may be smaller). For example, partitioning an iterator containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e]] -- an outer iterator containing two inner lists of three and two elements, all in the original order. <p>The returned lists implement java.util.RandomAccess.",FreeText,,0
1420,guava,com.google.common.collect.Iterators_goal.json,"contains(java.util.Iterator<?> iterator, java.lang.Object element)",contains,com.google.common.collect.Iterators,Returns true if iterator contains element.,FreeText,,0
1421,guava,com.google.common.collect.Iterators_goal.json,"find(java.util.Iterator<T> iterator, com.google.common.base.Predicate<? super T> predicate)",find,com.google.common.collect.Iterators,"Returns the first element in iterator that satisfies the given predicate; use this method only when such an element is known to exist. If no such element is found, the iterator will be left exhausted: its hasNext() method will return false. If it is possible that no element will match, use tryFind or Predicate, Object) instead.",FreeText,,0
1422,guava,com.google.common.collect.Iterators_goal.json,"concat(java.util.Iterator<? extends T> a, java.util.Iterator<? extends T> b, java.util.Iterator<? extends T> c, java.util.Iterator<? extends T> d)",concat,com.google.common.collect.Iterators,"Combines four iterators into a single iterator. The returned iterator iterates across the elements in a, followed by the elements in b, followed by the elements in c, followed by the elements in d. The source iterators are not polled until necessary. <p>The returned iterator supports remove() when the corresponding input iterator supports it. <p>Note: the current implementation is not suitable for nested concatenated iterators, i.e. the following should be avoided when in a loop: iterator = Iterators.concat(iterator, suffix);, since iteration over the resulting iterator has a cubic complexity to the depth of the nesting.",FreeText,,0
1423,guava,com.google.common.collect.Iterators_goal.json,concat(java.util.Iterator<? extends T>... inputs),concat,com.google.common.collect.Iterators,"Combines multiple iterators into a single iterator. The returned iterator iterates across the elements of each iterator in inputs. The input iterators are not polled until necessary. <p>The returned iterator supports remove() when the corresponding input iterator supports it. <p>Note: the current implementation is not suitable for nested concatenated iterators, i.e. the following should be avoided when in a loop: iterator = Iterators.concat(iterator, suffix);, since iteration over the resulting iterator has a cubic complexity to the depth of the nesting.",FreeText,,0
1424,guava,com.google.common.collect.Iterators_goal.json,"removeAll(java.util.Iterator<?> removeFrom, java.util.Collection<?> elementsToRemove)",removeAll,com.google.common.collect.Iterators,Traverses an iterator and removes every element that belongs to the provided collection. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1425,guava,com.google.common.collect.Iterators_goal.json,size(java.util.Iterator<?> iterator),size,com.google.common.collect.Iterators,Returns the number of elements remaining in iterator. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1426,guava,com.google.common.collect.Iterators_goal.json,"getOnlyElement(java.util.Iterator<? extends T> iterator, T defaultValue)",getOnlyElement,com.google.common.collect.Iterators,"Returns the single element contained in iterator, or defaultValue if the iterator is empty.",FreeText,,0
1427,guava,com.google.common.collect.Iterators_goal.json,"paddedPartition(java.util.Iterator<T> iterator, int size)",paddedPartition,com.google.common.collect.Iterators,"Divides an iterator into unmodifiable sublists of the given size, padding the final iterator with null values if necessary. For example, partitioning an iterator containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e, null]] -- an outer iterator containing two inner lists of three elements each, all in the original order. <p>The returned lists implement java.util.RandomAccess.",FreeText,,0
1428,guava,com.google.common.collect.Iterators_goal.json,"find(java.util.Iterator<? extends T> iterator, com.google.common.base.Predicate<? super T> predicate, T defaultValue)",find,com.google.common.collect.Iterators,"Returns the first element in iterator that satisfies the given predicate. If no such element is found, defaultValue will be returned from this method and the iterator will be left exhausted: its hasNext() method will return false. Note that this can usually be handled more naturally using tryFind(iterator, predicate).or(defaultValue).",FreeText,,0
1429,guava,com.google.common.collect.Iterators_goal.json,cycle(java.lang.Iterable<T> iterable),cycle,com.google.common.collect.Iterators,"Returns an iterator that cycles indefinitely over the elements of iterable. <p>The returned iterator supports remove() if the provided iterator does. After remove() is called, subsequent cycles omit the removed element, which is no longer in iterable. The iterator's hasNext() method returns true until iterable is empty. <p>Warning: Typical uses of the resulting iterator may produce an infinite loop. You should use an explicit break or be certain that you will eventually remove all the elements.",FreeText,,0
1430,guava,com.google.common.collect.Iterators_goal.json,emptyIterator(),emptyIterator,com.google.common.collect.Iterators,"Returns the empty iterator. <p>The Iterable equivalent of this method is ImmutableSet#of(). @deprecated Use ImmutableSet.<T>of().iterator() instead; or for Java 7 or later, Collections#emptyIterator. This method is scheduled for removal in May 2016.",FreeText,,0
1431,guava,com.google.common.collect.Iterators_goal.json,getOnlyElement(java.util.Iterator<T> iterator),getOnlyElement,com.google.common.collect.Iterators,Returns the single element contained in iterator.,FreeText,,0
1432,guava,com.google.common.collect.Iterators_goal.json,cycle(T... elements),cycle,com.google.common.collect.Iterators,"Returns an iterator that cycles indefinitely over the provided elements. <p>The returned iterator supports remove(). After remove() is called, subsequent cycles omit the removed element, but elements does not change. The iterator's hasNext() method returns true until all of the original elements have been removed. <p>Warning: Typical uses of the resulting iterator may produce an infinite loop. You should use an explicit break or be certain that you will eventually remove all the elements.",FreeText,,0
1433,guava,com.google.common.collect.Iterators_goal.json,"get(java.util.Iterator<T> iterator, int position)",get,com.google.common.collect.Iterators,"Advances iterator position + 1 times, returning the element at the positionth position.",FreeText,,0
1434,guava,com.google.common.collect.Iterators_goal.json,asEnumeration(java.util.Iterator<T> iterator),asEnumeration,com.google.common.collect.Iterators,"Adapts an Iterator to the Enumeration interface. <p>The Iterable equivalent of this method is either Collections#enumeration (if you have a Collection), or Iterators.asEnumeration(collection.iterator()).",FreeText,,0
1435,guava,com.google.common.collect.Iterators_goal.json,unmodifiableIterator(java.util.Iterator<T> iterator),unmodifiableIterator,com.google.common.collect.Iterators,.,FreeText,,0
1436,guava,com.google.common.collect.Iterators_goal.json,unmodifiableIterator(com.google.common.collect.UnmodifiableIterator<T> iterator),unmodifiableIterator,com.google.common.collect.Iterators,Simply returns its argument. @deprecated no need to use this.,FreeText,,0
1437,guava,com.google.common.collect.Iterators_goal.json,checkNonnegative(int position),checkNonnegative,com.google.common.collect.Iterators,.,FreeText,,0
1438,guava,com.google.common.collect.Iterators_goal.json,singletonIterator(T value),singletonIterator,com.google.common.collect.Iterators,Returns an iterator containing only value. <p>The Iterable equivalent of this method is Collections#singleton.,FreeText,methodResultID.equals(java.util.Collections.singleton(args[0])),1
1439,guava,com.google.common.collect.Iterators_goal.json,peekingIterator(com.google.common.collect.PeekingIterator<T> iterator),peekingIterator,com.google.common.collect.Iterators,Simply returns its argument. @deprecated no need to use this.,FreeText,,0
1440,guava,com.google.common.collect.Iterators_goal.json,"mergeSorted(java.lang.Iterable<? extends java.util.Iterator<? extends T>> iterators, java.util.Comparator<? super T> comparator)",mergeSorted,com.google.common.collect.Iterators,"Returns an iterator over the merged contents of all given iterators, traversing every element of the input iterators. Equivalent entries will not be de-duplicated. <p>Callers must ensure that the source iterators are in non-descending order as this method does not sort its input. <p>For any equivalent elements across all iterators, it is undefined which element is returned first.",FreeText,,0
1441,guava,com.google.common.collect.Iterators_goal.json,"retainAll(java.util.Iterator<?> removeFrom, java.util.Collection<?> elementsToRetain)",retainAll,com.google.common.collect.Iterators,Traverses an iterator and removes every element that does not belong to the provided collection. The iterator will be left exhausted: its hasNext() method will return false.,FreeText,,0
1442,guava,com.google.common.collect.Iterators_goal.json,"filter(java.util.Iterator<?> unfiltered, java.lang.Class<T> type)",filter,com.google.common.collect.Iterators,Returns all instances of class type in unfiltered. The returned iterator has elements whose class is type or a subclass of type.,FreeText,,0
1443,guava,com.google.common.collect.Iterators_goal.json,"indexOf(java.util.Iterator<T> iterator, com.google.common.base.Predicate<? super T> predicate)",indexOf,com.google.common.collect.Iterators,"Returns the index in iterator of the first element that satisfies the provided predicate, or -1 if the Iterator has no such elements. <p>More formally, returns the lowest index i such that predicate.apply(Iterators.get(iterator, i)) returns true, or -1 if there is no such index. <p>If -1 is returned, the iterator will be left exhausted: its hasNext() method will return false. Otherwise, the iterator will be set to the element which satisfies the predicate.",FreeText,,0
1444,guava,com.google.common.collect.LinkedHashMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.LinkedHashMultimap,{@inheritDoc} Creates an empty LinkedHashSet for a collection of values for one key.,FreeText,,0
1445,guava,com.google.common.collect.LinkedHashMultimap_goal.json,values(),values,com.google.common.collect.LinkedHashMultimap,"Returns a collection of all values in the multimap. Changes to the returned collection will update the underlying multimap, and vice versa. The iterator generated by the returned collection traverses the values in the order they were added to the multimap.",FreeText,,0
1446,guava,com.google.common.collect.LinkedHashMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.LinkedHashMultimap,"{@inheritDoc} If values is not empty and the multimap already contains a mapping for key, the keySet() ordering is unchanged. However, the provided values always come last in the #entries() and #values() iteration orderings.",FreeText,,0
1447,guava,com.google.common.collect.LinkedHashMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
1448,guava,com.google.common.collect.LinkedHashMultimap_goal.json,entries(),entries,com.google.common.collect.LinkedHashMultimap,"Returns a set of all key-value pairs. Changes to the returned set will update the underlying multimap, and vice versa. The entries set does not support the add or addAll operations. The iterator generated by the returned set traverses the entries in the order they were added to the multimap. Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the time the entry is returned by a method call to the collection or its iterator.",FreeText,,0
1449,guava,com.google.common.collect.LinkedHashMultimap_goal.json,clear(),clear,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
1450,guava,com.google.common.collect.LinkedHashMultimap_goal.json,create(),create,com.google.common.collect.LinkedHashMultimap,"Creates a new, empty LinkedHashMultimap with the default initial capacities.",FreeText,,0
1451,guava,com.google.common.collect.LinkedHashMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.LinkedHashMultimap,Constructs an empty LinkedHashMultimap with enough capacity to hold the specified numbers of keys and values without rehashing.,FreeText,,0
1452,guava,com.google.common.collect.LinkedHashMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.LinkedHashMultimap,{@inheritDoc} Creates a decorated insertion-ordered set that also keeps track of the order in which key-value pairs are added to the multimap.,FreeText,,0
1453,guava,com.google.common.collect.LinkedHashMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.LinkedHashMultimap,"Constructs a LinkedHashMultimap with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap. The new multimap has the same Multimap#entries() iteration order as the input multimap, except for excluding duplicate mappings.",FreeText,methodResultID.equals(receiverObjectClone.entries()),1
1454,guava,com.google.common.collect.LinkedHashMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
1455,guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(int distinctElements),create,com.google.common.collect.LinkedHashMultiset,"Creates a new, empty LinkedHashMultiset with the specified expected number of distinct elements.",FreeText,,0
1456,guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.LinkedHashMultiset,Creates a new LinkedHashMultiset containing the specified elements. This implementation is highly efficient when elements is itself a Multiset.,FreeText,,0
1457,guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(),create,com.google.common.collect.LinkedHashMultiset,"Creates a new, empty LinkedHashMultiset using the default initial capacity.",FreeText,,0
1458,guava,com.google.common.collect.LinkedListMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1459,guava,com.google.common.collect.LinkedListMultimap_goal.json,size(),size,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1460,guava,com.google.common.collect.LinkedListMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1461,guava,com.google.common.collect.LinkedListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.LinkedListMultimap,{@inheritDoc} The returned list is immutable and implements java.util.RandomAccess.,FreeText,,0
1462,guava,com.google.common.collect.LinkedListMultimap_goal.json,create(int expectedKeys),create,com.google.common.collect.LinkedListMultimap,Constructs an empty LinkedListMultimap with enough capacity to hold the specified number of keys without rehashing.,FreeText,,0
1463,guava,com.google.common.collect.LinkedListMultimap_goal.json,create(),create,com.google.common.collect.LinkedListMultimap,"Creates a new, empty LinkedListMultimap with the default initial capacity.",FreeText,,0
1464,guava,com.google.common.collect.LinkedListMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.LinkedListMultimap,Constructs a LinkedListMultimap with the same mappings as the specified Multimap. The new multimap has the same Multimap#entries() iteration order as the input multimap.,FreeText,methodResultID.equals(receiverObjectClone.entries()),1
1465,guava,com.google.common.collect.LinkedListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} If any entries for the specified key already exist in the multimap, their values are changed in-place without affecting the iteration order. The returned list is immutable and implements java.util.RandomAccess.",FreeText,,0
1466,guava,com.google.common.collect.LinkedListMultimap_goal.json,values(),values,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values in the order they were added to the multimap. Because the values may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the ListMultimap interface.",FreeText,,0
1467,guava,com.google.common.collect.LinkedListMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1468,guava,com.google.common.collect.LinkedListMultimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1469,guava,com.google.common.collect.LinkedListMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1470,guava,com.google.common.collect.LinkedListMultimap_goal.json,createValues(),createValues,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1471,guava,com.google.common.collect.LinkedListMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1472,guava,com.google.common.collect.LinkedListMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1473,guava,com.google.common.collect.LinkedListMultimap_goal.json,clear(),clear,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1474,guava,com.google.common.collect.LinkedListMultimap_goal.json,get(K key),get,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} If the multimap is modified while an iteration over the list is in progress (except through the iterator's own add, set or remove operations) the results of the iteration are undefined. The returned list is not serializable and does not have random access.",FreeText,,0
1475,guava,com.google.common.collect.LinkedListMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.LinkedListMultimap,Stores a key-value pair in the multimap.,FreeText,,0
1476,guava,com.google.common.collect.LinkedListMultimap_goal.json,com.google.common.collect.LinkedListMultimap(),com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap,,FreeText,,0
1477,guava,com.google.common.collect.LinkedListMultimap_goal.json,entries(),entries,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the entries in the order they were added to the multimap. Because the entries may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the ListMultimap interface. An entry's Entry#getKey method always returns the same key, regardless of what happens subsequently. As long as the corresponding key-value mapping is not removed from the multimap, Entry#getValue returns the value from the multimap, which may change over time, and Entry#setValue modifies that value. Removing the mapping from the multimap does not alter the value returned by getValue(), though a subsequent setValue() call won't update the multimap but will lead to a revised value being returned by getValue().",FreeText,methodResultID.equals(receiverObjectClone.keys()),1
1478,guava,com.google.common.collect.ListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1479,guava,com.google.common.collect.ListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1480,guava,com.google.common.collect.ListMultimap_goal.json,asMap(),asMap,com.google.common.collect.ListMultimap,"{@inheritDoc} Note: The returned map's values are guaranteed to be of type List. To obtain this map with the more specific generic type Map<K, List<V>>, call Multimaps#asMap(ListMultimap) instead.",FreeText,,0
1481,guava,com.google.common.collect.ListMultimap_goal.json,get(K key),get,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1482,guava,com.google.common.collect.ListMultimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.ListMultimap,"Compares the specified object to this multimap for equality. Two ListMultimap instances are equal if, for each key, they contain the same values in the same order. If the value orderings disagree, the multimaps will not be considered equal. An empty ListMultimap is equal to any other empty Multimap, including an empty SetMultimap.",FreeText,,0
1483,guava,com.google.common.collect.Lists_goal.json,newArrayList(),newArrayList,com.google.common.collect.Lists,"Creates a mutable, empty ArrayList instance (for Java 6 and earlier). Note: if mutability is not required, use ImmutableList#of() instead. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the ArrayList ArrayList#ArrayList() constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
1484,guava,com.google.common.collect.Lists_goal.json,charactersOf(java.lang.CharSequence sequence),charactersOf,com.google.common.collect.Lists,"Returns a view of the specified CharSequence as a List<Character>, viewing sequence as a sequence of Unicode code units. The view does not support any modification operations, but reflects any changes to the underlying character sequence.",FreeText,,0
1485,guava,com.google.common.collect.Lists_goal.json,"indexOfImpl(java.util.List<?> list, java.lang.Object element)",indexOfImpl,com.google.common.collect.Lists,An implementation of List#indexOf(Object).,FreeText,,0
1486,guava,com.google.common.collect.Lists_goal.json,newCopyOnWriteArrayList(java.lang.Iterable<? extends E> elements),newCopyOnWriteArrayList,com.google.common.collect.Lists,Creates a CopyOnWriteArrayList instance containing the given elements.,FreeText,,0
1487,guava,com.google.common.collect.Lists_goal.json,"asList(E first, E second, E[] rest)",asList,com.google.common.collect.Lists,"Returns an unmodifiable list containing the specified first and second element, and backed by the specified array of additional elements. Changes to the rest array will be reflected in the returned list. Unlike Arrays#asList, the returned list is unmodifiable. This is useful when a varargs method needs to use a signature such as (Foo firstFoo, Foo secondFoo, Foo... moreFoos), in order to avoid overload ambiguity or to enforce a minimum argument count. The returned list is serializable and implements RandomAccess.",FreeText,,0
1488,guava,com.google.common.collect.Lists_goal.json,newArrayList(E... elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements. Note: essentially the only reason to use this method is when you will need to add or remove elements later. Otherwise, for non-null elements use ImmutableList#of() (for varargs) or ImmutableList#copyOf(Object[]) (for an array) instead. If any elements might be null, or you need support for List#set(int, Object), use Arrays#asList. Note that even when you do need the ability to add or remove, this method provides only a tiny bit of syntactic sugar for newArrayList(}Arrays#asList asList{@code (...)), or for creating an empty list then calling Collections#addAll. This method is not actually very useful and will likely be deprecated in the future.",FreeText,,0
1489,guava,com.google.common.collect.Lists_goal.json,newArrayList(java.lang.Iterable<? extends E> elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toList().) Note for Java 7 and later: if elements is a Collection, you don't need this method. Use the ArrayList ArrayList#ArrayList(Collection) constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
1490,guava,com.google.common.collect.Lists_goal.json,newArrayList(java.util.Iterator<? extends E> elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements; a very thin shortcut for creating an empty list and then calling Iterators#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterator) instead.",FreeText,,0
1491,guava,com.google.common.collect.Lists_goal.json,"addAllImpl(java.util.List<E> list, int index, java.lang.Iterable<? extends E> elements)",addAllImpl,com.google.common.collect.Lists,"An implementation of List#addAll(int, Collection).",FreeText,,0
1492,guava,com.google.common.collect.Lists_goal.json,computeArrayListCapacity(int arraySize),computeArrayListCapacity,com.google.common.collect.Lists,,FreeText,,0
1493,guava,com.google.common.collect.Lists_goal.json,newLinkedList(java.lang.Iterable<? extends E> elements),newLinkedList,com.google.common.collect.Lists,"Creates a mutable LinkedList instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toList().) Performance note: ArrayList and java.util.ArrayDeque consistently outperform LinkedList except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead. Note for Java 7 and later: if elements is a Collection, you don't need this method. Use the LinkedList LinkedList#LinkedList(Collection) constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
1494,guava,com.google.common.collect.Lists_goal.json,"asList(E first, E[] rest)",asList,com.google.common.collect.Lists,"Returns an unmodifiable list containing the specified first element and backed by the specified array of additional elements. Changes to the rest array will be reflected in the returned list. Unlike Arrays#asList, the returned list is unmodifiable. This is useful when a varargs method needs to use a signature such as (Foo firstFoo, Foo... moreFoos), in order to avoid overload ambiguity or to enforce a minimum argument count. The returned list is serializable and implements RandomAccess.",FreeText,,0
1495,guava,com.google.common.collect.Lists_goal.json,charactersOf(java.lang.String string),charactersOf,com.google.common.collect.Lists,Returns a view of the specified string as an immutable list of Character values.,FreeText,,0
1496,guava,com.google.common.collect.Lists_goal.json,"lastIndexOfImpl(java.util.List<?> list, java.lang.Object element)",lastIndexOfImpl,com.google.common.collect.Lists,An implementation of List#lastIndexOf(Object).,FreeText,,0
1497,guava,com.google.common.collect.Lists_goal.json,newCopyOnWriteArrayList(),newCopyOnWriteArrayList,com.google.common.collect.Lists,"Creates an empty CopyOnWriteArrayList instance. Note: if you need an immutable empty List, use Collections#emptyList instead.",FreeText,,0
1498,guava,com.google.common.collect.Lists_goal.json,reverse(java.util.List<T> list),reverse,com.google.common.collect.Lists,"Returns a reversed view of the specified list. For example, Lists.reverse(Arrays.asList(1, 2, 3)) returns a list containing 3, 2, 1. The returned list is backed by this list, so changes in the returned list are reflected in this list, and vice-versa. The returned list supports all of the optional list operations supported by this list. The returned list is random-access if the specified list is random access.",FreeText,,0
1499,guava,com.google.common.collect.Lists_goal.json,newLinkedList(),newLinkedList,com.google.common.collect.Lists,"Creates a mutable, empty LinkedList instance (for Java 6 and earlier). Note: if you won't be adding any elements to the list, use ImmutableList#of() instead. Performance note: ArrayList and java.util.ArrayDeque consistently outperform LinkedList except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the LinkedList LinkedList#LinkedList() constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
1500,guava,com.google.common.collect.Lists_goal.json,hashCodeImpl(java.util.List<?> list),hashCodeImpl,com.google.common.collect.Lists,An implementation of List#hashCode().,FreeText,,0
1501,guava,com.google.common.collect.Lists_goal.json,cast(java.lang.Iterable<T> iterable),cast,com.google.common.collect.Lists,Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557,FreeText,,0
1502,guava,com.google.common.collect.Lists_goal.json,"subListImpl(java.util.List<E> list, int fromIndex, int toIndex)",subListImpl,com.google.common.collect.Lists,"An implementation of List#subList(int, int).",FreeText,,0
1503,guava,com.google.common.collect.Lists_goal.json,newArrayListWithExpectedSize(int estimatedSize),newArrayListWithExpectedSize,com.google.common.collect.Lists,"Creates an ArrayList instance to hold estimatedSize elements, plus an unspecified amount of padding; you almost certainly mean to call #newArrayListWithCapacity (see that method for further advice on usage). Note: This method will soon be deprecated. Even in the rare case that you do want some amount of padding, it's best if you choose your desired amount explicitly.",FreeText,,0
1504,guava,com.google.common.collect.Lists_goal.json,"partition(java.util.List<T> list, int size)",partition,com.google.common.collect.Lists,"Returns consecutive List#subList(int, int) sublists of a list, each of the same size (the final list may be smaller). For example, partitioning a list containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e]] -- an outer list containing two inner lists of three and two elements, all in the original order. The outer list is unmodifiable, but reflects the latest state of the source list. The inner lists are sublist views of the original list, produced on demand using List#subList(int, int), and are subject to all the usual caveats about modification as explained in that API.",FreeText,,0
1505,guava,com.google.common.collect.Lists_goal.json,"listIteratorImpl(java.util.List<E> list, int index)",listIteratorImpl,com.google.common.collect.Lists,Returns an implementation of List#listIterator(int).,FreeText,,0
1506,guava,com.google.common.collect.Lists_goal.json,newArrayListWithCapacity(int initialArraySize),newArrayListWithCapacity,com.google.common.collect.Lists,"Creates an ArrayList instance backed by an array with the specified initial size; simply delegates to ArrayList#ArrayList(int). Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use new }ArrayList#ArrayList(int) ArrayList{@code <>(int) directly, taking advantage of the new ""diamond"" syntax. (Unlike here, there is no risk of overload ambiguity, since the ArrayList constructors very wisely did not accept varargs.)",FreeText,,0
1507,guava,com.google.common.collect.Lists_goal.json,cartesianProduct(java.util.List<? extends java.util.List<? extends B>> lists),cartesianProduct,com.google.common.collect.Lists,"Returns every possible list that can be formed by choosing one element from each of the given lists in order; the ""n-ary Cartesian product"" of the lists. For example:  Lists.cartesianProduct(ImmutableList.of( ImmutableList.of(1, 2), ImmutableList.of(""A"", ""B"", ""C""))) returns a list containing six lists in the following order:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : lists.get(0)) { for (B b1 : lists.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input list is empty, the Cartesian product will also be empty. If no lists at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of lists of size m, n, p is a list of size m x n x p, its actual memory consumption is much smaller. When the cartesian product is constructed, the input lists are merely copied. Only as the resulting list is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
1508,guava,com.google.common.collect.Lists_goal.json,cartesianProduct(java.util.List<? extends B>... lists),cartesianProduct,com.google.common.collect.Lists,"Returns every possible list that can be formed by choosing one element from each of the given lists in order; the ""n-ary Cartesian product"" of the lists. For example:  Lists.cartesianProduct(ImmutableList.of( ImmutableList.of(1, 2), ImmutableList.of(""A"", ""B"", ""C""))) returns a list containing six lists in the following order:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : lists.get(0)) { for (B b1 : lists.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input list is empty, the Cartesian product will also be empty. If no lists at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of lists of size m, n, p is a list of size m x n x p, its actual memory consumption is much smaller. When the cartesian product is constructed, the input lists are merely copied. Only as the resulting list is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
1509,guava,com.google.common.collect.Lists_goal.json,"equalsImpl(java.util.List<?> thisList, java.lang.Object other)",equalsImpl,com.google.common.collect.Lists,An implementation of List#equals(Object).,FreeText,,0
1510,guava,com.google.common.collect.Lists_goal.json,"transform(java.util.List<F> fromList, com.google.common.base.Function<? super F, ? extends T> function)",transform,com.google.common.collect.Lists,"Returns a list that applies function to each element of fromList. The returned list is a transformed view of fromList; changes to fromList will be reflected in the returned list and vice versa. Since functions are not reversible, the transform is one-way and new items cannot be stored in the returned list. The add, addAll and set methods are unsupported in the returned list. The function is applied lazily, invoked when needed. This is necessary for the returned list to be a view, but it means that the function will be applied many times for bulk operations like List#contains and List#hashCode. For this to perform well, function should be fast. To avoid lazy evaluation when the returned list doesn't need to be a view, copy the returned list into a new list of your choosing. If fromList implements RandomAccess, so will the returned list. The returned list is threadsafe if the supplied list and function are. If only a Collection or Iterable input is available, use Collections2#transform or Iterables#transform. Note: serializing the returned list is implemented by serializing fromList, its contents, and function -- not by serializing the transformed values. This can lead to surprising behavior, so serializing the returned list is not recommended. Instead, copy the list using ImmutableList#copyOf(Collection) (for example), then serialize the copy. Other methods similar to this do not implement serialization at all for this reason.",FreeText,,0
1511,guava,com.google.common.collect.Maps_goal.json,keyFunction(),keyFunction,com.google.common.collect.Maps,,FreeText,,0
1512,guava,com.google.common.collect.Maps_goal.json,"valueOrNull(java.util.Map$Entry<?, V> entry)",valueOrNull,com.google.common.collect.Maps,,FreeText,,0
1513,guava,com.google.common.collect.Maps_goal.json,"containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>> c, java.lang.Object o)",containsEntryImpl,com.google.common.collect.Maps,"Implements Collection.contains safely for forwarding collections of map entries. If o is an instance of Map.Entry, it is wrapped using #unmodifiableEntry to protect against a possible nefarious equals method. Note that c is the backing (delegate) collection, rather than the forwarding collection.",FreeText,,0
1514,guava,com.google.common.collect.Maps_goal.json,"asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, V1, V2> transformer, K key)",asValueToValueFunction,com.google.common.collect.Maps,,FreeText,,0
1515,guava,com.google.common.collect.Maps_goal.json,"uniqueIndex(java.lang.Iterable<V> values, com.google.common.base.Function<? super V, K> keyFunction)",uniqueIndex,com.google.common.collect.Maps,"Returns a map with the given values, indexed by keys derived from those values. In other words, each input value produces an entry in the map whose key is the result of applying keyFunction to that value. These entries appear in the same order as the input values. Example usage:  Color red = new Color(""red"", 255, 0, 0); ... ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue); Map<String, Color> colorForName = uniqueIndex(allColors, toStringFunction()); assertThat(colorForName).containsEntry(""red"", red); If your index may associate multiple values with each key, use Multimaps#index(Iterable, Function) Multimaps.index.",FreeText,,0
1516,guava,com.google.common.collect.Maps_goal.json,"uniqueIndex(java.util.Iterator<V> values, com.google.common.base.Function<? super V, K> keyFunction)",uniqueIndex,com.google.common.collect.Maps,"Returns a map with the given values, indexed by keys derived from those values. In other words, each input value produces an entry in the map whose key is the result of applying keyFunction to that value. These entries appear in the same order as the input values. Example usage:  Color red = new Color(""red"", 255, 0, 0); ... Iterator<Color> allColors = ImmutableSet.of(red, green, blue).iterator(); Map<String, Color> colorForName = uniqueIndex(allColors, toStringFunction()); assertThat(colorForName).containsEntry(""red"", red); If your index may associate multiple values with each key, use Multimaps#index(Iterator, Function) Multimaps.index.",FreeText,,0
1517,guava,com.google.common.collect.Maps_goal.json,"keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",keyIterator,com.google.common.collect.Maps,,FreeText,,0
1518,guava,com.google.common.collect.Maps_goal.json,valueFunction(),valueFunction,com.google.common.collect.Maps,,FreeText,,0
1519,guava,com.google.common.collect.Maps_goal.json,"immutableEnumMap(java.util.Map<K, ? extends V> map)",immutableEnumMap,com.google.common.collect.Maps,"Returns an immutable map instance containing the given entries. Internally, the returned map will be backed by an EnumMap. The iteration order of the returned map follows the enum's iteration order, not the order in which the elements appear in the given map.",FreeText,,0
1520,guava,com.google.common.collect.Maps_goal.json,"asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",asEntryToValueFunction,com.google.common.collect.Maps,Views an entry transformer as a function from Entry to values.,FreeText,,0
1521,guava,com.google.common.collect.Maps_goal.json,"asConverter(com.google.common.collect.BiMap<A, B> bimap)",asConverter,com.google.common.collect.Maps,"Returns a Converter that converts values using BiMap#get bimap.get(), and whose inverse view converts values using BiMap#inverse bimap.inverse().get(). To use a plain Map as a Function, see com.google.common.base.Functions#forMap(Map) or com.google.common.base.Functions#forMap(Map, Object).",FreeText,,0
1522,guava,com.google.common.collect.Maps_goal.json,"difference(java.util.Map<? extends K, ? extends V> left, java.util.Map<? extends K, ? extends V> right)",difference,com.google.common.collect.Maps,"Computes the difference between two maps. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Since this method uses HashMap instances internally, the keys of the supplied maps must be well-behaved with respect to Object#equals and Object#hashCode. Note:If you only need to know whether two maps have the same mappings, call left.equals(right) instead of this method.",FreeText,,0
1523,guava,com.google.common.collect.Maps_goal.json,"difference(java.util.SortedMap<K, ? extends V> left, java.util.Map<? extends K, ? extends V> right)",difference,com.google.common.collect.Maps,"Computes the difference between two sorted maps, using the comparator of the left map, or Ordering.natural() if the left map uses the natural ordering of its elements. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Since this method uses TreeMap instances internally, the keys of the right map must all compare as distinct according to the comparator of the left map. Note:If you only need to know whether two sorted maps have the same mappings, call left.equals(right) instead of this method.",FreeText,,0
1524,guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.Set<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a live Map view whose keys are the contents of set and whose values are computed on demand using function. To get an immutable copy instead, use #toMap(Iterable, Function). Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
1525,guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.SortedSet<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a view of the sorted set as a map, mapping keys from the set according to the specified function. Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
1526,guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.NavigableSet<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a view of the navigable set as a map, mapping keys from the set according to the specified function. Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
1527,guava,com.google.common.collect.Maps_goal.json,newTreeMap(java.util.Comparator<C> comparator),newTreeMap,com.google.common.collect.Maps,"Creates a mutable, empty TreeMap instance using the given comparator. Note: if mutability is not required, use ImmutableSortedMap.orderedBy(comparator).build() instead.",FreeText,,0
1528,guava,com.google.common.collect.Maps_goal.json,"newEnumMap(java.util.Map<K, ? extends V> map)",newEnumMap,com.google.common.collect.Maps,Creates an EnumMap with the same mappings as the specified map.,FreeText,,0
1529,guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntryIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",unmodifiableEntryIterator,com.google.common.collect.Maps,,FreeText,,0
1530,guava,com.google.common.collect.Maps_goal.json,"synchronizedBiMap(com.google.common.collect.BiMap<K, V> bimap)",synchronizedBiMap,com.google.common.collect.Maps,"Returns a synchronized (thread-safe) bimap backed by the specified bimap. In order to guarantee serial access, it is critical that all access to the backing bimap is accomplished through the returned bimap. It is imperative that the user manually synchronize on the returned map when accessing any of its collection views:  BiMap<Long, String> map = Maps.synchronizedBiMap( HashBiMap.<Long, String>create()); ... Set<Long> set = map.keySet(); // Needn't be in synchronized block ... synchronized (map) { // Synchronizing on map, not set! Iterator<Long> it = set.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned bimap will be serializable if the specified bimap is serializable.",FreeText,,0
1531,guava,com.google.common.collect.Maps_goal.json,"safeGet(java.util.Map<?, V> map, java.lang.Object key)",safeGet,com.google.common.collect.Maps,Delegates to Map#get. Returns null on ClassCastException and NullPointerException.,FreeText,,0
1532,guava,com.google.common.collect.Maps_goal.json,"toStringImpl(java.util.Map<?, ?> map)",toStringImpl,com.google.common.collect.Maps,An implementation of Map#toString.,FreeText,,0
1533,guava,com.google.common.collect.Maps_goal.json,newTreeMap(),newTreeMap,com.google.common.collect.Maps,"Creates a mutable, empty TreeMap instance using the natural ordering of its elements. Note: if mutability is not required, use ImmutableSortedMap#of() instead.",FreeText,,0
1534,guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>> entrySet)",unmodifiableEntrySet,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified set of entries. The Entry#setValue operation throws an UnsupportedOperationException, as do any operations that would modify the returned set.",FreeText,,0
1535,guava,com.google.common.collect.Maps_goal.json,"transformEntry(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer, java.util.Map$Entry<K, V1> entry)",transformEntry,com.google.common.collect.Maps,Returns a view of an entry transformed by the specified transformer.,FreeText,,0
1536,guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
1537,guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
1538,guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
1539,guava,com.google.common.collect.Maps_goal.json,"filterEntries(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered that satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a key/value pair that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have an Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every key/value mapping in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
1540,guava,com.google.common.collect.Maps_goal.json,keyPredicateOnEntries(com.google.common.base.Predicate<? super K> keyPredicate),keyPredicateOnEntries,com.google.common.collect.Maps,,FreeText,,0
1541,guava,com.google.common.collect.Maps_goal.json,"unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V> bimap)",unmodifiableBiMap,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified bimap. This method allows modules to provide users with ""read-only"" access to internal bimaps. Query operations on the returned bimap ""read through"" to the specified bimap, and attempts to modify the returned map, whether direct or via its collection views, result in an UnsupportedOperationException. The returned bimap will be serializable if the specified bimap is serializable.",FreeText,,0
1542,guava,com.google.common.collect.Maps_goal.json,indexMap(java.util.Collection<E> list),indexMap,com.google.common.collect.Maps,Returns a map from the ith element of list to i.,FreeText,,0
1543,guava,com.google.common.collect.Maps_goal.json,newLinkedHashMap(),newLinkedHashMap,com.google.common.collect.Maps,"Creates a mutable, empty, insertion-ordered LinkedHashMap instance. Note: if mutability is not required, use ImmutableMap#of() instead.",FreeText,,0
1544,guava,com.google.common.collect.Maps_goal.json,fromProperties(java.util.Properties properties),fromProperties,com.google.common.collect.Maps,"Creates an ImmutableMap<String, String> from a Properties instance. Properties normally derive from Map<Object, Object>, but they typically contain strings, which is awkward. This method lets you get a plain-old-Map out of a Properties.",FreeText,,0
1545,guava,com.google.common.collect.Maps_goal.json,newLinkedHashMapWithExpectedSize(int expectedSize),newLinkedHashMapWithExpectedSize,com.google.common.collect.Maps,"Creates a LinkedHashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned map.",FreeText,,0
1546,guava,com.google.common.collect.Maps_goal.json,"difference(java.util.Map<? extends K, ? extends V> left, java.util.Map<? extends K, ? extends V> right, com.google.common.base.Equivalence<? super V> valueEquivalence)",difference,com.google.common.collect.Maps,"Computes the difference between two maps. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Values are compared using a provided equivalence, in the case of equality, the value on the 'left' is returned in the difference. Since this method uses HashMap instances internally, the keys of the supplied maps must be well-behaved with respect to Object#equals and Object#hashCode.",FreeText,,0
1547,guava,com.google.common.collect.Maps_goal.json,"newTreeMap(java.util.SortedMap<K, ? extends V> map)",newTreeMap,com.google.common.collect.Maps,"Creates a mutable TreeMap instance with the same mappings as the specified map and using the same ordering as the specified map. Note: if mutability is not required, use ImmutableSortedMap#copyOfSorted(SortedMap) instead.",FreeText,,0
1548,guava,com.google.common.collect.Maps_goal.json,"equalsImpl(java.util.Map<?, ?> map, java.lang.Object object)",equalsImpl,com.google.common.collect.Maps,An implementation of Map#equals.,FreeText,,0
1549,guava,com.google.common.collect.Maps_goal.json,valuePredicateOnEntries(com.google.common.base.Predicate<? super V> valuePredicate),valuePredicateOnEntries,com.google.common.collect.Maps,,FreeText,,0
1550,guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.Map<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a map whose values are derived from the original map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  Map<String, Boolean> options = ImmutableMap.of(""verbose"", true, ""sort"", false); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : ""no"" + key;  }; Map<String, String> transformed = Maps.transformEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {verbose=verbose, sort=nosort}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
1551,guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.SortedMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a sorted map whose values are derived from the original sorted map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  Map<String, Boolean> options = ImmutableSortedMap.of(""verbose"", true, ""sort"", false); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : ""yes"" + key;  }; SortedMap<String, String> transformed = Maps.transformEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {sort=yessort, verbose=verbose}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
1552,guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.NavigableMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a navigable map whose values are derived from the original navigable map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  NavigableMap<String, Boolean> options = Maps.newTreeMap(); options.put(""verbose"", false); options.put(""sort"", true); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : (""yes"" + key);  }; NavigableMap<String, String> transformed = LabsMaps.transformNavigableEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {sort=yessort, verbose=verbose}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
1553,guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntry(java.util.Map$Entry<? extends K, ? extends V> entry)",unmodifiableEntry,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified map entry. The Entry#setValue operation throws an UnsupportedOperationException. This also has the side-effect of redefining equals to comply with the Entry contract, to avoid a possible nefarious implementation of equals.",FreeText,,0
1554,guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1555,guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1556,guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a navigable map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1557,guava,com.google.common.collect.Maps_goal.json,"filterValues(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered whose values satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a value that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the provided value doesn't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every value in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
1558,guava,com.google.common.collect.Maps_goal.json,"unmodifiableNavigableMap(java.util.NavigableMap<K, V> map)",unmodifiableNavigableMap,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified navigable map. Query operations on the returned map read through to the specified map, and attempts to modify the returned map, whether direct or via its views, result in an UnsupportedOperationException. The returned navigable map will be serializable if the specified navigable map is serializable.",FreeText,,0
1559,guava,com.google.common.collect.Maps_goal.json,"safeRemove(java.util.Map<?, V> map, java.lang.Object key)",safeRemove,com.google.common.collect.Maps,Delegates to Map#remove. Returns null on ClassCastException and NullPointerException.,FreeText,,0
1560,guava,com.google.common.collect.Maps_goal.json,newHashMap(),newHashMap,com.google.common.collect.Maps,"Creates a mutable, empty HashMap instance. Note: if mutability is not required, use ImmutableMap#of() instead. Note: if K is an enum type, use #newEnumMap instead.",FreeText,,0
1561,guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1562,guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1563,guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a navigable map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
1564,guava,com.google.common.collect.Maps_goal.json,"filterKeys(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered whose keys satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a key that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every key in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
1565,guava,com.google.common.collect.Maps_goal.json,"newHashMap(java.util.Map<? extends K, ? extends V> map)",newHashMap,com.google.common.collect.Maps,"Creates a mutable HashMap instance with the same mappings as the specified map. Note: if mutability is not required, use ImmutableMap#copyOf(Map) instead. Note: if K is an Enum type, use #newEnumMap instead.",FreeText,,0
1566,guava,com.google.common.collect.Maps_goal.json,"removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>> c, java.lang.Object o)",removeEntryImpl,com.google.common.collect.Maps,"Implements Collection.remove safely for forwarding collections of map entries. If o is an instance of Map.Entry, it is wrapped using #unmodifiableEntry to protect against a possible nefarious equals method. Note that c is backing (delegate) collection, rather than the forwarding collection.",FreeText,,0
1567,guava,com.google.common.collect.Maps_goal.json,"valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",valueIterator,com.google.common.collect.Maps,,FreeText,,0
1568,guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.Map<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  Map<String, Integer> map = ImmutableMap.of(""a"", 4, ""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; Map<String, Double> transformed = Maps.transformValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
1569,guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.SortedMap<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a sorted map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  SortedMap<String, Integer> map = ImmutableSortedMap.of(""a"", 4, ""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; SortedMap<String, Double> transformed = Maps.transformValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
1570,guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.NavigableMap<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a navigable map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  NavigableMap<String, Integer> map = Maps.newTreeMap(); map.put(""a"", 4); map.put(""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; NavigableMap<String, Double> transformed = Maps.transformNavigableValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
1571,guava,com.google.common.collect.Maps_goal.json,capacity(int expectedSize),capacity,com.google.common.collect.Maps,Returns a capacity that is sufficient to keep the map from being resized as long as it grows no larger than expectedSize and the load factor is >= its default (0.75).,FreeText,,0
1572,guava,com.google.common.collect.Maps_goal.json,"asMapSortedIgnoreNavigable(java.util.SortedSet<K> set, com.google.common.base.Function<? super K, V> function)",asMapSortedIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
1573,guava,com.google.common.collect.Maps_goal.json,newEnumMap(java.lang.Class<K> type),newEnumMap,com.google.common.collect.Maps,Creates an EnumMap instance.,FreeText,,0
1574,guava,com.google.common.collect.Maps_goal.json,"toMap(java.lang.Iterable<K> keys, com.google.common.base.Function<? super K, V> valueFunction)",toMap,com.google.common.collect.Maps,"Returns an immutable map whose keys are the distinct elements of keys and whose value for each key was computed by valueFunction. The map's iteration order is the order of the first appearance of each key in keys. When there are multiple instances of a key in keys, it is unspecified whether valueFunction will be applied to more than one instance of that key and, if it is, which result will be mapped to that key in the returned map. If keys is a Set, a live view can be obtained instead of a copy using Maps#asMap(Set, Function).",FreeText,,0
1575,guava,com.google.common.collect.Maps_goal.json,"toMap(java.util.Iterator<K> keys, com.google.common.base.Function<? super K, V> valueFunction)",toMap,com.google.common.collect.Maps,"Returns an immutable map whose keys are the distinct elements of keys and whose value for each key was computed by valueFunction. The map's iteration order is the order of the first appearance of each key in keys. When there are multiple instances of a key in keys, it is unspecified whether valueFunction will be applied to more than one instance of that key and, if it is, which result will be mapped to that key in the returned map.",FreeText,,0
1576,guava,com.google.common.collect.Maps_goal.json,newConcurrentMap(),newConcurrentMap,com.google.common.collect.Maps,"Returns a general-purpose instance of ConcurrentMap, which supports all optional operations of the ConcurrentMap interface. It does not permit null keys or values. It is serializable. This is currently accomplished by calling MapMaker#makeMap(). It is preferable to use MapMaker directly (rather than through this method), as it presents numerous useful configuration options, such as the concurrency level, load factor, key/value reference types, and value computation.",FreeText,,0
1577,guava,com.google.common.collect.Maps_goal.json,"keyOrNull(java.util.Map$Entry<K, ?> entry)",keyOrNull,com.google.common.collect.Maps,,FreeText,,0
1578,guava,com.google.common.collect.Maps_goal.json,"safeContainsKey(java.util.Map<?, ?> map, java.lang.Object key)",safeContainsKey,com.google.common.collect.Maps,Delegates to Map#containsKey. Returns false on ClassCastException and NullPointerException.,FreeText,,0
1579,guava,com.google.common.collect.Maps_goal.json,"immutableEntry(K key, V value)",immutableEntry,com.google.common.collect.Maps,Returns an immutable map entry with the specified key and value. The Entry#setValue operation throws an UnsupportedOperationException. The returned entry is serializable.,FreeText,,0
1580,guava,com.google.common.collect.Maps_goal.json,"asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",asEntryToEntryFunction,com.google.common.collect.Maps,Views an entry transformer as a function from entries to entries.,FreeText,,0
1581,guava,com.google.common.collect.Maps_goal.json,"newLinkedHashMap(java.util.Map<? extends K, ? extends V> map)",newLinkedHashMap,com.google.common.collect.Maps,"Creates a mutable, insertion-ordered LinkedHashMap instance with the same mappings as the specified map. Note: if mutability is not required, use ImmutableMap#copyOf(Map) instead.",FreeText,,0
1582,guava,com.google.common.collect.Maps_goal.json,"transformEntriesIgnoreNavigable(java.util.SortedMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntriesIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
1583,guava,com.google.common.collect.Maps_goal.json,"containsValueImpl(java.util.Map<?, ?> map, java.lang.Object value)",containsValueImpl,com.google.common.collect.Maps,An implementation of Map#containsValue.,FreeText,,0
1584,guava,com.google.common.collect.Maps_goal.json,"synchronizedNavigableMap(java.util.NavigableMap<K, V> navigableMap)",synchronizedNavigableMap,com.google.common.collect.Maps,"Returns a synchronized (thread-safe) navigable map backed by the specified navigable map. In order to guarantee serial access, it is critical that all access to the backing navigable map is accomplished through the returned navigable map (or its views). It is imperative that the user manually synchronize on the returned navigable map when iterating over any of its collection views, or the collections views of any of its descendingMap, subMap, headMap or tailMap views.  NavigableMap<K, V> map = synchronizedNavigableMap(new TreeMap<K, V>()); // Needn't be in synchronized block NavigableSet<K> set = map.navigableKeySet(); synchronized (map) { // Synchronizing on map, not set! Iterator<K> it = set.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} or:  NavigableMap<K, V> map = synchronizedNavigableMap(new TreeMap<K, V>()); NavigableMap<K, V> map2 = map.subMap(foo, false, bar, true); // Needn't be in synchronized block NavigableSet<K> set2 = map2.descendingKeySet(); synchronized (map) { // Synchronizing on map, not map2 or set2! Iterator<K> it = set2.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned navigable map will be serializable if the specified navigable map is serializable.",FreeText,,0
1585,guava,com.google.common.collect.Maps_goal.json,orNaturalOrder(java.util.Comparator<? super E> comparator),orNaturalOrder,com.google.common.collect.Maps,Returns the specified comparator if not null; otherwise returns Ordering.natural(). This method is an abomination of generics; the only purpose of this method is to contain the ugly type-casting in one place.,FreeText,,0
1586,guava,com.google.common.collect.Maps_goal.json,"asEntryTransformer(com.google.common.base.Function<? super V1, V2> function)",asEntryTransformer,com.google.common.collect.Maps,Views a function as an entry transformer that ignores the entry key.,FreeText,,0
1587,guava,com.google.common.collect.Maps_goal.json,newHashMapWithExpectedSize(int expectedSize),newHashMapWithExpectedSize,com.google.common.collect.Maps,"Creates a HashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned map.",FreeText,,0
1588,guava,com.google.common.collect.Maps_goal.json,"containsKeyImpl(java.util.Map<?, ?> map, java.lang.Object key)",containsKeyImpl,com.google.common.collect.Maps,An admittedly inefficient implementation of Map#containsKey.,FreeText,,0
1589,guava,com.google.common.collect.Maps_goal.json,"filterSortedIgnoreNavigable(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterSortedIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
1590,guava,com.google.common.collect.Maps_goal.json,"asMapEntryIterator(java.util.Set<K> set, com.google.common.base.Function<? super K, V> function)",asMapEntryIterator,com.google.common.collect.Maps,,FreeText,,0
1591,guava,com.google.common.collect.Maps_goal.json,"putAllImpl(java.util.Map<K, V> self, java.util.Map<? extends K, ? extends V> map)",putAllImpl,com.google.common.collect.Maps,An implementation of Map#putAll.,FreeText,,0
1592,guava,com.google.common.collect.Maps_goal.json,newIdentityHashMap(),newIdentityHashMap,com.google.common.collect.Maps,Creates an IdentityHashMap instance.,FreeText,,0
1593,guava,com.google.common.collect.Multimap_goal.json,"put(K key, V value)",put,com.google.common.collect.Multimap,"Stores a key-value pair in this multimap. <p>Some multimap implementations allow duplicate key-value pairs, in which case put always adds a new key-value pair and increases the multimap size by 1. Other implementations prohibit duplicates, and storing a key-value pair that's already in the multimap has no effect.",FreeText,,0
1594,guava,com.google.common.collect.Multimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.Multimap,"Removes a single key-value pair with the key key and the value value from this multimap, if such exists. If multiple key-value pairs in the multimap fit this description, which one is removed is unspecified.",FreeText,,0
1595,guava,com.google.common.collect.Multimap_goal.json,entries(),entries,com.google.common.collect.Multimap,"Returns a view collection of all key-value pairs contained in this multimap, as Map.Entry instances. <p>Changes to the returned collection or the entries it contains will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
1596,guava,com.google.common.collect.Multimap_goal.json,values(),values,com.google.common.collect.Multimap,"Returns a view collection containing the value from each key-value pair contained in this multimap, without collapsing duplicates (so values().size() == size()). <p>Changes to the returned collection will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
1597,guava,com.google.common.collect.Multimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.Multimap,"Returns true if this multimap contains no key-value pairs. Equivalent to size() == 0, but can in some cases be more efficient.",FreeText,methodResultID == (receiverObjectClone.size() == 0),1
1598,guava,com.google.common.collect.Multimap_goal.json,size(),size,com.google.common.collect.Multimap,"Returns the number of key-value pairs in this multimap. <p>Note: this method does not return the number of distinct keys in the multimap, which is given by keySet().size() or asMap().size(). See the opening section of the Multimap class documentation for clarification.",FreeText,,0
1599,guava,com.google.common.collect.Multimap_goal.json,clear(),clear,com.google.common.collect.Multimap,"Removes all key-value pairs from the multimap, leaving it {@linkplain #isEmpty empty}.",FreeText,,0
1600,guava,com.google.common.collect.Multimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.Multimap,"Stores a key-value pair in this multimap for each of values, all using the same key, key. Equivalent to (but expected to be more efficient than): for (V value : values) { put(key, value); } <p>In particular, this is a no-op if values is empty.",FreeText,"methodResultID.equals[ for (V value : args[1]) { receiverObjectClone.put(args[0], value);} ]",1
1601,guava,com.google.common.collect.Multimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the value value.,FreeText,,0
1602,guava,com.google.common.collect.Multimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.Multimap,"Stores a collection of values with the same key, replacing any existing values for that key. <p>If values is empty, this is equivalent to removeAll(key).",FreeText,if(!args[1].iterator().hasNext()) {methodResultID.equals(receiverObjectClone.removeAll(args[0]))},1
1603,guava,com.google.common.collect.Multimap_goal.json,get(K key),get,com.google.common.collect.Multimap,"Returns a view collection of the values associated with key in this multimap, if any. Note that when containsKey(key) is false, this returns an empty collection, not null. <p>Changes to the returned collection will update the underlying multimap, and vice versa.",FreeText,,0
1604,guava,com.google.common.collect.Multimap_goal.json,hashCode(),hashCode,com.google.common.collect.Multimap,"Returns the hash code for this multimap. <p>The hash code of a multimap is defined as the hash code of the map view, as returned by Multimap#asMap. <p>In general, two multimaps with identical key-value mappings may or may not have the same hash codes, depending on the implementation. For example, two SetMultimap instances with the same key-value mappings will have the same hashCode, but the hashCode of ListMultimap instances depends on the ordering of the values for each key.",FreeText,,0
1605,guava,com.google.common.collect.Multimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.Multimap,"Stores all key-value pairs of multimap in this multimap, in the order returned by multimap.entries().",FreeText,,0
1606,guava,com.google.common.collect.Multimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the key key.,FreeText,,0
1607,guava,com.google.common.collect.Multimap_goal.json,asMap(),asMap,com.google.common.collect.Multimap,"Returns a view of this multimap as a Map from each distinct key to the nonempty collection of that key's associated values. Note that this.asMap().get(k) is equivalent to this.get(k) only when k is a key contained in the multimap; otherwise it returns null as opposed to an empty collection. <p>Changes to the returned map or the collections that serve as its values will update the underlying multimap, and vice versa. The map does not support put or putAll, nor do its entries support setValue.",FreeText,,0
1608,guava,com.google.common.collect.Multimap_goal.json,keySet(),keySet,com.google.common.collect.Multimap,"Returns a view collection of all distinct keys contained in this multimap. Note that the key set contains a key if and only if this multimap maps that key to at least one value. <p>Changes to the returned set will update the underlying multimap, and vice versa. However, adding to the returned set is not possible.",FreeText,,0
1609,guava,com.google.common.collect.Multimap_goal.json,keys(),keys,com.google.common.collect.Multimap,"Returns a view collection containing the key from each key-value pair in this multimap, without collapsing duplicates. This collection has the same size as this multimap, and keys().count(k) == get(k).size() for all k. <p>Changes to the returned multiset will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
1610,guava,com.google.common.collect.Multimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.Multimap,"Compares the specified object with this multimap for equality. Two multimaps are equal when their map views, as returned by asMap, are also equal. <p>In general, two multimaps with identical key-value mappings may or may not be equal, depending on the implementation. For example, two SetMultimap instances with the same key-value mappings are equal, but equality of two ListMultimap instances depends on the ordering of the values for each key. <p>A non-empty SetMultimap cannot be equal to a non-empty ListMultimap, since their asMap views contain unequal collections as values. However, any two empty multimaps are equal, because they both have empty asMap views.",FreeText,,0
1611,guava,com.google.common.collect.Multimap_goal.json,"containsEntry(java.lang.Object key, java.lang.Object value)",containsEntry,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the key key and the value value.,FreeText,,0
1612,guava,com.google.common.collect.Multimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.Multimap,"Removes all values associated with the key key. <p>Once this method returns, key will not be mapped to any values, so it will not appear in keySet(), asMap(), or any other views.",FreeText,,0
1613,guava,com.google.common.collect.Multisets_goal.json,unmodifiableMultiset(com.google.common.collect.Multiset<? extends E> multiset),unmodifiableMultiset,com.google.common.collect.Multisets,"Returns an unmodifiable view of the specified multiset. Query operations on the returned multiset ""read through"" to the specified multiset, and attempts to modify the returned multiset result in an UnsupportedOperationException. <p>The returned multiset will be serializable if the specified multiset is serializable.",FreeText,,0
1614,guava,com.google.common.collect.Multisets_goal.json,"retainAllImpl(com.google.common.collect.Multiset<?> self, java.util.Collection<?> elementsToRetain)",retainAllImpl,com.google.common.collect.Multisets,An implementation of Multiset#retainAll.,FreeText,,0
1615,guava,com.google.common.collect.Multisets_goal.json,"union(com.google.common.collect.Multiset<? extends E> multiset1, com.google.common.collect.Multiset<? extends E> multiset2)",union,com.google.common.collect.Multisets,"Returns an unmodifiable view of the union of two multisets. In the returned multiset, the count of each element is the maximum of its counts in the two backing multisets. The iteration order of the returned multiset matches that of the element set of multiset1 followed by the members of the element set of multiset2 that are not contained in multiset1, with repeated occurrences of the same element appearing consecutively. <p>Results are undefined if multiset1 and multiset2 are based on different equivalence relations (as HashMultiset and TreeMultiset are).",FreeText,,0
1616,guava,com.google.common.collect.Multisets_goal.json,"removeAllImpl(com.google.common.collect.Multiset<?> self, java.util.Collection<?> elementsToRemove)",removeAllImpl,com.google.common.collect.Multisets,An implementation of Multiset#removeAll.,FreeText,,0
1617,guava,com.google.common.collect.Multisets_goal.json,"addAllImpl(com.google.common.collect.Multiset<E> self, java.util.Collection<? extends E> elements)",addAllImpl,com.google.common.collect.Multisets,An implementation of Multiset#addAll.,FreeText,,0
1618,guava,com.google.common.collect.Multisets_goal.json,"intersection(com.google.common.collect.Multiset<E> multiset1, com.google.common.collect.Multiset<?> multiset2)",intersection,com.google.common.collect.Multisets,"Returns an unmodifiable view of the intersection of two multisets. In the returned multiset, the count of each element is the minimum of its counts in the two backing multisets, with elements that would have a count of 0 not included. The iteration order of the returned multiset matches that of the element set of multiset1, with repeated occurrences of the same element appearing consecutively. <p>Results are undefined if multiset1 and multiset2 are based on different equivalence relations (as HashMultiset and TreeMultiset are).",FreeText,,0
1619,guava,com.google.common.collect.Multisets_goal.json,cast(java.lang.Iterable<T> iterable),cast,com.google.common.collect.Multisets,Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557.,FreeText,,0
1620,guava,com.google.common.collect.Multisets_goal.json,"retainOccurrences(com.google.common.collect.Multiset<?> multisetToModify, com.google.common.collect.Multiset<?> multisetToRetain)",retainOccurrences,com.google.common.collect.Multisets,"Modifies multisetToModify so that its count for an element e is at most multisetToRetain.count(e). <p>To be precise, multisetToModify.count(e) is set to Math.min(multisetToModify.count(e), multisetToRetain.count(e)). This is similar to Multiset) intersection (multisetToModify, multisetToRetain), but mutates multisetToModify instead of returning a view. <p>In contrast, multisetToModify.retainAll(multisetToRetain) keeps all occurrences of elements that appear at all in multisetToRetain, and deletes all occurrences of all other elements.",FreeText,,0
1621,guava,com.google.common.collect.Multisets_goal.json,"equalsImpl(com.google.common.collect.Multiset<?> multiset, java.lang.Object object)",equalsImpl,com.google.common.collect.Multisets,An implementation of Multiset#equals.,FreeText,,0
1622,guava,com.google.common.collect.Multisets_goal.json,unmodifiableMultiset(com.google.common.collect.ImmutableMultiset<E> multiset),unmodifiableMultiset,com.google.common.collect.Multisets,Simply returns its argument. @deprecated no need to use this.,FreeText,,0
1623,guava,com.google.common.collect.Multisets_goal.json,inferDistinctElements(java.lang.Iterable<?> elements),inferDistinctElements,com.google.common.collect.Multisets,Returns the expected number of distinct elements given the specified elements. The number of distinct elements is only computed if elements is an instance of Multiset; otherwise the default value of 11 is returned.,FreeText,,0
1624,guava,com.google.common.collect.Multisets_goal.json,sizeImpl(com.google.common.collect.Multiset<?> multiset),sizeImpl,com.google.common.collect.Multisets,An implementation of Multiset#size.,FreeText,,0
1625,guava,com.google.common.collect.Multisets_goal.json,"setCountImpl(com.google.common.collect.Multiset<E> self, E element, int count)",setCountImpl,com.google.common.collect.Multisets,An implementation of int).,FreeText,,0
1626,guava,com.google.common.collect.Multisets_goal.json,unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset<E> sortedMultiset),unmodifiableSortedMultiset,com.google.common.collect.Multisets,"Returns an unmodifiable view of the specified sorted multiset. Query operations on the returned multiset ""read through"" to the specified multiset, and attempts to modify the returned multiset result in an UnsupportedOperationException. <p>The returned multiset will be serializable if the specified multiset is serializable.",FreeText,,0
1627,guava,com.google.common.collect.Multisets_goal.json,"immutableEntry(E e, int n)",immutableEntry,com.google.common.collect.Multisets,Returns an immutable multiset entry with the specified element and count. The entry will be serializable if e is.,FreeText,,0
1628,guava,com.google.common.collect.Multisets_goal.json,"filter(com.google.common.collect.Multiset<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Multisets,"Returns a view of the elements of unfiltered that satisfy a predicate. The returned multiset is a live view of unfiltered; changes to one affect the other. <p>The resulting multiset's iterators, and those of its entrySet() and elementSet(), do not support remove(). However, all other multiset methods supported by unfiltered are supported by the returned multiset. When given an element that doesn't satisfy the predicate, the multiset's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered multiset, only elements that satisfy the filter will be removed from the underlying multiset. <p>The returned multiset isn't threadsafe or serializable, even if unfiltered is. <p>Many of the filtered multiset's methods, such as size(), iterate across every element in the underlying multiset and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy the returned multiset and use the copy. <p>Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Class) for related functionality.).",FreeText,,0
1629,guava,com.google.common.collect.Multisets_goal.json,iteratorImpl(com.google.common.collect.Multiset<E> multiset),iteratorImpl,com.google.common.collect.Multisets,An implementation of Multiset#iterator.,FreeText,,0
1630,guava,com.google.common.collect.Multisets_goal.json,"setCountImpl(com.google.common.collect.Multiset<E> self, E element, int oldCount, int newCount)",setCountImpl,com.google.common.collect.Multisets,"An implementation of int, int).",FreeText,,0
1631,guava,com.google.common.collect.Multisets_goal.json,"containsOccurrences(com.google.common.collect.Multiset<?> superMultiset, com.google.common.collect.Multiset<?> subMultiset)",containsOccurrences,com.google.common.collect.Multisets,Returns true if subMultiset.count(o) <= superMultiset.count(o) for all o.,FreeText,,0
1632,guava,com.google.common.collect.Multisets_goal.json,copyHighestCountFirst(com.google.common.collect.Multiset<E> multiset),copyHighestCountFirst,com.google.common.collect.Multisets,"Returns a copy of multiset as an ImmutableMultiset whose iteration order is highest count first, with ties broken by the iteration order of the original multiset.",FreeText,,0
1633,guava,com.google.common.collect.Multisets_goal.json,"sum(com.google.common.collect.Multiset<? extends E> multiset1, com.google.common.collect.Multiset<? extends E> multiset2)",sum,com.google.common.collect.Multisets,"Returns an unmodifiable view of the sum of two multisets. In the returned multiset, the count of each element is the sum of its counts in the two backing multisets. The iteration order of the returned multiset matches that of the element set of multiset1 followed by the members of the element set of multiset2 that are not contained in multiset1, with repeated occurrences of the same element appearing consecutively. <p>Results are undefined if multiset1 and multiset2 are based on different equivalence relations (as HashMultiset and TreeMultiset are).",FreeText,,0
1634,guava,com.google.common.collect.Multisets_goal.json,"removeOccurrences(com.google.common.collect.Multiset<?> multisetToModify, java.lang.Iterable<?> occurrencesToRemove)",removeOccurrences,com.google.common.collect.Multisets,"For each occurrence of an element e in occurrencesToRemove, removes one occurrence of e in multisetToModify. <p>Equivalently, this method modifies multisetToModify so that multisetToModify.count(e) is set to Math.max(0, multisetToModify.count(e) - Iterables.frequency(occurrencesToRemove, e)). <p>This is not the same as multisetToModify. removeAll(occurrencesToRemove), which removes all occurrences of elements that appear in occurrencesToRemove. However, this operation is equivalent to, albeit sometimes more efficient than, the following: for (E e : occurrencesToRemove) { multisetToModify.remove(e); }.",FreeText,methodResultID.equals[ for (Object e : args[1]) { args[0].remove(e);} ],1
1635,guava,com.google.common.collect.Multisets_goal.json,"removeOccurrences(com.google.common.collect.Multiset<?> multisetToModify, com.google.common.collect.Multiset<?> occurrencesToRemove)",removeOccurrences,com.google.common.collect.Multisets,"For each occurrence of an element e in occurrencesToRemove, removes one occurrence of e in multisetToModify. <p>Equivalently, this method modifies multisetToModify so that multisetToModify.count(e) is set to Math.max(0, multisetToModify.count(e) - occurrencesToRemove.count(e)). <p>This is not the same as multisetToModify. removeAll(occurrencesToRemove), which removes all occurrences of elements that appear in occurrencesToRemove. However, this operation is equivalent to, albeit sometimes more efficient than, the following: for (E e : occurrencesToRemove) { multisetToModify.remove(e); }.",FreeText,methodResultID.equals[ for (Object e : args[1]) { args[0].remove(e);} ],1
1636,guava,com.google.common.collect.Multisets_goal.json,"difference(com.google.common.collect.Multiset<E> multiset1, com.google.common.collect.Multiset<?> multiset2)",difference,com.google.common.collect.Multisets,"Returns an unmodifiable view of the difference of two multisets. In the returned multiset, the count of each element is the result of the zero-truncated subtraction of its count in the second multiset from its count in the first multiset, with elements that would have a count of 0 not included. The iteration order of the returned multiset matches that of the element set of multiset1, with repeated occurrences of the same element appearing consecutively. <p>Results are undefined if multiset1 and multiset2 are based on different equivalence relations (as HashMultiset and TreeMultiset are).",FreeText,,0
1637,guava,com.google.common.collect.Multiset_goal.json,add(E element),add,com.google.common.collect.Multiset,"Adds a single occurrence of the specified element to this multiset. <p>This method refines Collection#add, which only ensures the presence of the element, to further specify that a successful call must always increment the count of the element, and the overall size of the collection, by one. <p>To both add the element and obtain the previous count of that element, use int) add(element, 1) instead.",FreeText,,0
1638,guava,com.google.common.collect.Multiset_goal.json,iterator(),iterator,com.google.common.collect.Multiset,"{@inheritDoc} <p>Elements that occur multiple times in the multiset will appear multiple times in this iterator, though not necessarily sequentially.",FreeText,,0
1639,guava,com.google.common.collect.Multiset_goal.json,entrySet(),entrySet,com.google.common.collect.Multiset,"Returns a view of the contents of this multiset, grouped into Multiset.Entry instances, each providing an element of the multiset and the count of that element. This set contains exactly one entry for each distinct element in the multiset (thus it always has the same size as the elementSet). The order of the elements in the element set is unspecified. <p>The entry set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. However, multiset changes may or may not be reflected in any Entry instances already retrieved from the entry set (this is implementation-dependent). Furthermore, implementations are not required to support modifications to the entry set at all, and the Entry instances themselves don't even have methods for modification. See the specific implementation class for more details on how its entry set handles modifications.",FreeText,,0
1640,guava,com.google.common.collect.Multiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.Multiset,Adds or removes the necessary occurrences of an element such that the element attains the desired count.,FreeText,,0
1641,guava,com.google.common.collect.Multiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.Multiset,"Conditionally sets the count of an element to a new value, as described in int), provided that the element has the expected current count. If the current count is not oldCount, no change is made.",FreeText,,0
1642,guava,com.google.common.collect.Multiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.Multiset,"Compares the specified object with this multiset for equality. Returns true if the given object is also a multiset and contains equal elements with equal counts, regardless of order.",FreeText,,0
1643,guava,com.google.common.collect.Multiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.Multiset,"Returns the number of occurrences of an element in this multiset (the count of the element). Note that for an Object#equals-based multiset, this gives the same result as Collections#frequency (which would presumably perform more poorly). <p>Note: the utility method Iterables#frequency generalizes this operation; it correctly delegates to this method when dealing with a multiset, but it can also accept any other iterable type.",FreeText,,0
1644,guava,com.google.common.collect.Multiset_goal.json,contains(java.lang.Object element),contains,com.google.common.collect.Multiset,Determines whether this multiset contains the specified element. <p>This method refines Collection#contains to further specify that it may not throw an exception in response to element being null or of the wrong type.,FreeText,,0
1645,guava,com.google.common.collect.Multiset_goal.json,retainAll(java.util.Collection<?> c),retainAll,com.google.common.collect.Multiset,"{@inheritDoc} <p>Note: This method ignores how often any element might appear in c, and only cares whether or not an element appears at all. If you wish to remove one occurrence in this multiset for every occurrence in c, see Multiset). <p>This method refines Collection#retainAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type. @see Multisets#retainOccurrences(Multiset, Multiset).",FreeText,,0
1646,guava,com.google.common.collect.Multiset_goal.json,elementSet(),elementSet,com.google.common.collect.Multiset,"Returns the set of distinct elements contained in this multiset. The element set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. The order of the elements in the element set is unspecified. <p>If the element set supports any removal operations, these necessarily cause all occurrences of the removed element(s) to be removed from the multiset. Implementations are not expected to support the add operations, although this is possible. <p>A common use for the element set is to find the number of distinct elements in the multiset: elementSet().size().",FreeText,,0
1647,guava,com.google.common.collect.Multiset_goal.json,remove(java.lang.Object element),remove,com.google.common.collect.Multiset,"Removes a single occurrence of the specified element from this multiset, if present. <p>This method refines Collection#remove to further specify that it may not throw an exception in response to element being null or of the wrong type. <p>To both remove the element and obtain the previous count of that element, use int) remove(element, 1) instead.",FreeText,,0
1648,guava,com.google.common.collect.Multiset_goal.json,toString(),toString,com.google.common.collect.Multiset,"{@inheritDoc} <p>It is recommended, though not mandatory, that this method return the result of invoking toString on the entrySet, yielding a result such as [a x 3, c, d x 2, e].",FreeText,,0
1649,guava,com.google.common.collect.Multiset_goal.json,removeAll(java.util.Collection<?> c),removeAll,com.google.common.collect.Multiset,"{@inheritDoc} <p>Note: This method ignores how often any element might appear in c, and only cares whether or not an element appears at all. If you wish to remove one occurrence in this multiset for every occurrence in c, see Multiset). <p>This method refines Collection#removeAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type.",FreeText,,0
1650,guava,com.google.common.collect.Multiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.Multiset,"Adds a number of occurrences of an element to this multiset. Note that if occurrences == 1, this method has the identical effect to add(Object). This method is functionally equivalent (except in the case of overflow) to the call addAll(Collections.nCopies(element, occurrences)), which would presumably perform much more poorly.",FreeText,"if(args[1] == 1) {receiverObjectClone.add(args[0]); receiverObjectClone.equals(receiverObjectID)} && methodResultID.equals[receiverObjectClone.addAll(java.util.Collections.nCopies( args[1],args[0]));]",1
1651,guava,com.google.common.collect.Multiset_goal.json,hashCode(),hashCode,com.google.common.collect.Multiset,Returns the hash code for this multiset. This is defined as the sum of ((element == null) ? 0 : element.hashCode()) ^ count(element) <p>over all distinct elements in the multiset. It follows that a multiset and its entry set always have the same hash code.,FreeText,,0
1652,guava,com.google.common.collect.Multiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.Multiset,"Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed. Note that if occurrences == 1, this is functionally equivalent to the call remove(element).",FreeText,if(args[1] == 1) {receiverObjectClone.remove(args[0]); receiverObjectClone.equals(receiverObjectID)},1
1653,guava,com.google.common.collect.Multiset_goal.json,containsAll(java.util.Collection<?> elements),containsAll,com.google.common.collect.Multiset,"Returns true if this multiset contains at least one occurrence of each element in the specified collection. <p>This method refines Collection#containsAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type. <p>Note: this method does not take into account the occurrence count of an element in the two collections; it may still return true even if elements contains several occurrences of an element and this multiset contains only one. This is no different than any other collection type like List, but it may be unexpected to the user of a multiset.",FreeText,,0
1654,guava,com.google.common.collect.Ordering_goal.json,reverse(),reverse,com.google.common.collect.Ordering,.,FreeText,,0
1655,guava,com.google.common.collect.Ordering_goal.json,max(java.util.Iterator<E> iterator),max,com.google.common.collect.Ordering,"Returns the greatest of the specified values according to this ordering. If there are multiple greatest values, the first of those is returned. The iterator will be left exhausted: its hasNext() method will return false.",FreeText,,0
1656,guava,com.google.common.collect.Ordering_goal.json,com.google.common.collect.Ordering(),com.google.common.collect.Ordering,com.google.common.collect.Ordering,"Constructs a new instance of this class (only invokable by the subclass constructor, typically implicit).",FreeText,,0
1657,guava,com.google.common.collect.Ordering_goal.json,min(java.lang.Iterable<E> iterable),min,com.google.common.collect.Ordering,"Returns the least of the specified values according to this ordering. If there are multiple least values, the first of those is returned.",FreeText,,0
1658,guava,com.google.common.collect.Ordering_goal.json,"max(E a, E b, E c, E... rest)",max,com.google.common.collect.Ordering,"Returns the greatest of the specified values according to this ordering. If there are multiple greatest values, the first of those is returned.",FreeText,,0
1659,guava,com.google.common.collect.Ordering_goal.json,"compare(T left, T right)",compare,com.google.common.collect.Ordering,.,FreeText,,0
1660,guava,com.google.common.collect.Ordering_goal.json,natural(),natural,com.google.common.collect.Ordering,"Returns a serializable ordering that uses the natural order of the values. The ordering throws a NullPointerException when passed a null parameter. <p>The type specification is <C extends Comparable>, instead of the technically correct <C extends Comparable<? super C>>, to support legacy types from before Java 5.",FreeText,,0
1661,guava,com.google.common.collect.Ordering_goal.json,explicit(java.util.List<T> valuesInOrder),explicit,com.google.common.collect.Ordering,"Returns an ordering that compares objects according to the order in which they appear in the given list. Only objects present in the list (according to Object#equals) may be compared. This comparator imposes a ""partial ordering"" over the type T. Subsequent changes to the valuesInOrder list will have no effect on the returned comparator. Null values in the list are not supported. <p>The returned comparator throws an ClassCastException when it receives an input parameter that isn't among the provided values. <p>The generated comparator is serializable if all the provided values are serializable.",FreeText,,0
1662,guava,com.google.common.collect.Ordering_goal.json,min(java.util.Iterator<E> iterator),min,com.google.common.collect.Ordering,"Returns the least of the specified values according to this ordering. If there are multiple least values, the first of those is returned. The iterator will be left exhausted: its hasNext() method will return false.",FreeText,,0
1663,guava,com.google.common.collect.Ordering_goal.json,"binarySearch(java.util.List<? extends T> sortedList, T key)",binarySearch,com.google.common.collect.Ordering,"Object, Comparator) Searches sortedList for key using the binary search algorithm. The list must be sorted using this ordering.",FreeText,,0
1664,guava,com.google.common.collect.Ordering_goal.json,"greatestOf(java.util.Iterator<E> iterator, int k)",greatestOf,com.google.common.collect.Ordering,"Returns the k greatest elements from the given iterator according to this ordering, in order from greatest to least. If there are fewer than k elements present, all will be included. <p>The implementation does not necessarily use a stable sorting algorithm; when multiple elements are equivalent, it is undefined which will come first.",FreeText,,0
1665,guava,com.google.common.collect.Ordering_goal.json,lexicographical(),lexicographical,com.google.common.collect.Ordering,"Returns a new ordering which sorts iterables by comparing corresponding elements pairwise until a nonzero result is found; imposes ""dictionary order"". If the end of one iterable is reached, but not the other, the shorter iterable is considered to be less than the longer one. For example, a lexicographical natural ordering over integers considers [] < [1] < [1, 1] < [1, 2] < [2]. <p>Note that ordering.lexicographical().reverse() is not equivalent to ordering.reverse().lexicographical() (consider how each would order [1] and [1, 1]).",FreeText,,0
1666,guava,com.google.common.collect.Ordering_goal.json,from(java.util.Comparator<T> comparator),from,com.google.common.collect.Ordering,"Returns an ordering based on an existing comparator instance. Note that it is unnecessary to create a new anonymous inner class implementing Comparator just to pass it in here. Instead, simply subclass Ordering and implement its compare method directly.",FreeText,,0
1667,guava,com.google.common.collect.Ordering_goal.json,"leastOf(java.util.Iterator<E> elements, int k)",leastOf,com.google.common.collect.Ordering,"Returns the k least elements from the given iterator according to this ordering, in order from least to greatest. If there are fewer than k elements present, all will be included. <p>The implementation does not necessarily use a stable sorting algorithm; when multiple elements are equivalent, it is undefined which will come first.",FreeText,,0
1668,guava,com.google.common.collect.Ordering_goal.json,compound(java.lang.Iterable<? extends java.util.Comparator<? super T>> comparators),compound,com.google.common.collect.Ordering,"Returns an ordering which tries each given comparator in order until a non-zero result is found, returning that result, and returning zero only if all comparators return zero. The returned ordering is based on the state of the comparators iterable at the time it was provided to this method. <p>The returned ordering is equivalent to that produced using Ordering.from(comp1).compound(comp2).compound(comp3) . . .. <p>Warning: Supplying an argument with undefined iteration order, such as a HashSet, will produce non-deterministic results.",FreeText,,0
1669,guava,com.google.common.collect.Ordering_goal.json,usingToString(),usingToString,com.google.common.collect.Ordering,Returns an ordering that compares objects by the natural ordering of their string representations as returned by toString(). It does not support null values. <p>The comparator is serializable.,FreeText,,0
1670,guava,com.google.common.collect.Ordering_goal.json,nullsFirst(),nullsFirst,com.google.common.collect.Ordering,.,FreeText,,0
1671,guava,com.google.common.collect.Ordering_goal.json,isStrictlyOrdered(java.lang.Iterable<? extends T> iterable),isStrictlyOrdered,com.google.common.collect.Ordering,"Returns true if each element in iterable after the first is strictly greater than the element that preceded it, according to this ordering. Note that this is always true when the iterable has fewer than two elements.",FreeText,,0
1672,guava,com.google.common.collect.Ordering_goal.json,nullsLast(),nullsLast,com.google.common.collect.Ordering,.,FreeText,,0
1673,guava,com.google.common.collect.Ordering_goal.json,isOrdered(java.lang.Iterable<? extends T> iterable),isOrdered,com.google.common.collect.Ordering,"Returns true if each element in iterable after the first is greater than or equal to the element that preceded it, according to this ordering. Note that this is always true when the iterable has fewer than two elements.",FreeText,,0
1674,guava,com.google.common.collect.Ordering_goal.json,immutableSortedCopy(java.lang.Iterable<E> elements),immutableSortedCopy,com.google.common.collect.Ordering,"Returns an immutable list containing elements sorted by this ordering. The input is not modified. <p>Unlike Sets#newTreeSet(Iterable), this method does not discard elements that are duplicates according to the comparator. The sort performed is stable, meaning that such elements will appear in the returned list in the same order they appeared in elements. <p>Performance note: According to our benchmarking on Open JDK 7, this method is the most efficient way to make a sorted copy of a collection.",FreeText,,0
1675,guava,com.google.common.collect.Ordering_goal.json,allEqual(),allEqual,com.google.common.collect.Ordering,"Returns an ordering which treats all values as equal, indicating ""no ordering."" Passing this ordering to any stable sort algorithm results in no change to the order of elements. Note especially that sortedCopy and immutableSortedCopy are stable, and in the returned instance these are implemented by simply copying the source list. <p>Example: Ordering.allEqual().nullsLast().sortedCopy( asList(t, null, e, s, null, t, null)) <p>Assuming t, e and s are non-null, this returns [t, e, s, t, null, null, null] regardlesss of the true comparison order of those three values (which might not even implement Comparable at all). <p>Warning: by definition, this comparator is not consistent with equals (as defined {@linkplain Comparator here}). Avoid its use in APIs, such as TreeSet#TreeSet(Comparator), where such consistency is expected. <p>The returned comparator is serializable.",FreeText,,0
1676,guava,com.google.common.collect.Ordering_goal.json,"explicit(T leastValue, T... remainingValuesInOrder)",explicit,com.google.common.collect.Ordering,"Returns an ordering that compares objects according to the order in which they are given to this method. Only objects present in the argument list (according to Object#equals) may be compared. This comparator imposes a ""partial ordering"" over the type T. Null values in the argument list are not supported. <p>The returned comparator throws a ClassCastException when it receives an input parameter that isn't among the provided values. <p>The generated comparator is serializable if all the provided values are serializable.",FreeText,,0
1677,guava,com.google.common.collect.Ordering_goal.json,"min(E a, E b)",min,com.google.common.collect.Ordering,"Returns the lesser of the two values according to this ordering. If the values compare as 0, the first is returned. <p>Implementation note: this method is invoked by the default implementations of the other min overloads, so overriding it will affect their behavior.",FreeText,,0
1678,guava,com.google.common.collect.Ordering_goal.json,arbitrary(),arbitrary,com.google.common.collect.Ordering,"Returns an arbitrary ordering over all objects, for which compare(a, b) == 0 implies a == b (identity equality). There is no meaning whatsoever to the order imposed, but it is constant for the life of the VM. <p>Because the ordering is identity-based, it is not ""consistent with Object#equals(Object)"" as defined by Comparator. Use caution when building a SortedSet or SortedMap from it, as the resulting collection will not behave exactly according to spec. <p>This ordering is not serializable, as its implementation relies on System#identityHashCode(Object), so its behavior cannot be preserved across serialization.",FreeText,,0
1679,guava,com.google.common.collect.Ordering_goal.json,onKeys(),onKeys,com.google.common.collect.Ordering,.,FreeText,,0
1680,guava,com.google.common.collect.Ordering_goal.json,from(com.google.common.collect.Ordering<T> ordering),from,com.google.common.collect.Ordering,Simply returns its argument. @deprecated no need to use this.,FreeText,,0
1681,guava,com.google.common.collect.Ordering_goal.json,sortedCopy(java.lang.Iterable<E> elements),sortedCopy,com.google.common.collect.Ordering,"Returns a mutable list containing elements sorted by this ordering; use this only when the resulting list may need further modification, or may contain null. The input is not modified. The returned list is serializable and has random access. <p>Unlike Sets#newTreeSet(Iterable), this method does not discard elements that are duplicates according to the comparator. The sort performed is stable, meaning that such elements will appear in the returned list in the same order they appeared in elements. <p>Performance note: According to our benchmarking on Open JDK 7, immutableSortedCopy generally performs better (in both time and space) than this method, and this method in turn generally performs better than copying the list and calling Collections#sort(List).",FreeText,,0
1682,guava,com.google.common.collect.Ordering_goal.json,"onResultOf(com.google.common.base.Function<F, ? extends T> function)",onResultOf,com.google.common.collect.Ordering,"Returns a new ordering on F which orders elements by first applying a function to them, then comparing those results using this. For example, to compare objects by their string forms, in a case-insensitive manner, use: Ordering.from(String.CASE_INSENSITIVE_ORDER) .onResultOf(Functions.toStringFunction()).",FreeText,,0
1683,guava,com.google.common.collect.Ordering_goal.json,"max(E a, E b)",max,com.google.common.collect.Ordering,"Returns the greater of the two values according to this ordering. If the values compare as 0, the first is returned. <p>Implementation note: this method is invoked by the default implementations of the other max overloads, so overriding it will affect their behavior.",FreeText,,0
1684,guava,com.google.common.collect.Ordering_goal.json,"greatestOf(java.lang.Iterable<E> iterable, int k)",greatestOf,com.google.common.collect.Ordering,"Returns the k greatest elements of the given iterable according to this ordering, in order from greatest to least. If there are fewer than k elements present, all will be included. <p>The implementation does not necessarily use a stable sorting algorithm; when multiple elements are equivalent, it is undefined which will come first.",FreeText,,0
1685,guava,com.google.common.collect.Ordering_goal.json,"leastOf(java.lang.Iterable<E> iterable, int k)",leastOf,com.google.common.collect.Ordering,"Returns the k least elements of the given iterable according to this ordering, in order from least to greatest. If there are fewer than k elements present, all will be included. <p>The implementation does not necessarily use a stable sorting algorithm; when multiple elements are equivalent, it is undefined which will come first.",FreeText,,0
1686,guava,com.google.common.collect.Ordering_goal.json,max(java.lang.Iterable<E> iterable),max,com.google.common.collect.Ordering,"Returns the greatest of the specified values according to this ordering. If there are multiple greatest values, the first of those is returned.",FreeText,,0
1687,guava,com.google.common.collect.Ordering_goal.json,"min(E a, E b, E c, E... rest)",min,com.google.common.collect.Ordering,"Returns the least of the specified values according to this ordering. If there are multiple least values, the first of those is returned.",FreeText,,0
1688,guava,com.google.common.collect.Ordering_goal.json,compound(java.util.Comparator<? super U> secondaryComparator),compound,com.google.common.collect.Ordering,"Returns an ordering which first uses the ordering this, but which in the event of a ""tie"", then delegates to secondaryComparator. For example, to sort a bug list first by status and second by priority, you might use byStatus.compound(byPriority). For a compound ordering with three or more components, simply chain multiple calls to this method. <p>An ordering produced by this method, or a chain of calls to this method, is equivalent to one created using Ordering#compound(Iterable) on the same component comparators.",FreeText,,0
1689,guava,com.google.common.collect.RangeMap_goal.json,toString(),toString,com.google.common.collect.RangeMap,Returns a readable string representation of this range map.,FreeText,,0
1690,guava,com.google.common.collect.RangeMap_goal.json,hashCode(),hashCode,com.google.common.collect.RangeMap,Returns asMapOfRanges().hashCode().,FreeText,,0
1691,guava,com.google.common.collect.RangeMap_goal.json,clear(),clear,com.google.common.collect.RangeMap,Removes all associations from this range map (optional operation).,FreeText,,0
1692,guava,com.google.common.collect.RangeMap_goal.json,span(),span,com.google.common.collect.RangeMap,Returns the minimal range {@linkplain Range#encloses(Range) enclosing} the ranges in this RangeMap.,FreeText,,0
1693,guava,com.google.common.collect.RangeMap_goal.json,getEntry(K key),getEntry,com.google.common.collect.RangeMap,"Returns the range containing this key and its associated value, if such a range is present in the range map, or null otherwise.",FreeText,,0
1694,guava,com.google.common.collect.RangeMap_goal.json,asDescendingMapOfRanges(),asDescendingMapOfRanges,com.google.common.collect.RangeMap,"Returns a view of this range map as an unmodifiable Map<Range<K>, V>. Modifications to this range map are guaranteed to read through to the returned Map. <p>The returned Map iterates over entries in descending order of the bounds of the Range entries. <p>It is guaranteed that no empty ranges will be in the returned Map.",FreeText,,0
1695,guava,com.google.common.collect.RangeMap_goal.json,"putAll(com.google.common.collect.RangeMap<K, V> rangeMap)",putAll,com.google.common.collect.RangeMap,Puts all the associations from rangeMap into this range map (optional operation).,FreeText,,0
1696,guava,com.google.common.collect.RangeMap_goal.json,get(K key),get,com.google.common.collect.RangeMap,"Returns the value associated with the specified key, or null if there is no such value. <p>Specifically, if any range in this range map contains the specified key, the value associated with that range is returned.",FreeText,,0
1697,guava,com.google.common.collect.RangeMap_goal.json,asMapOfRanges(),asMapOfRanges,com.google.common.collect.RangeMap,"Returns a view of this range map as an unmodifiable Map<Range<K>, V>. Modifications to this range map are guaranteed to read through to the returned Map. <p>The returned Map iterates over entries in ascending order of the bounds of the Range entries. <p>It is guaranteed that no empty ranges will be in the returned Map.",FreeText,,0
1698,guava,com.google.common.collect.RangeMap_goal.json,subRangeMap(com.google.common.collect.Range<K> range),subRangeMap,com.google.common.collect.RangeMap,"Returns a view of the part of this range map that intersects with range. <p>For example, if rangeMap had the entries [1, 5] => ""foo"", (6, 8) => ""bar"", (10, \u2025) => ""baz"" then rangeMap.subRangeMap(Range.open(3, 12)) would return a range map with the entries (3, 5) => ""foo"", (6, 8) => ""bar"", (10, 12) => ""baz"". <p>The returned range map supports all optional operations that this range map supports, except for asMapOfRanges().iterator().remove(). <p>The returned range map will throw an IllegalArgumentException on an attempt to insert a range not {@linkplain Range#encloses(Range) enclosed} by range.",FreeText,,0
1699,guava,com.google.common.collect.RangeMap_goal.json,equals(java.lang.Object o),equals,com.google.common.collect.RangeMap,Returns true if obj is another RangeMap that has an equivalent asMapOfRanges().,FreeText,,0
1700,guava,com.google.common.collect.RangeMap_goal.json,remove(com.google.common.collect.Range<K> range),remove,com.google.common.collect.RangeMap,"Removes all associations from this range map in the specified range (optional operation). <p>If !range.contains(k), get(k) will return the same result before and after a call to remove(range). If range.contains(k), then after a call to remove(range), get(k) will return null.",FreeText,,0
1701,guava,com.google.common.collect.RangeMap_goal.json,"put(com.google.common.collect.Range<K> range, V value)",put,com.google.common.collect.RangeMap,"Maps a range to a specified value (optional operation). <p>Specifically, after a call to put(range, value), if range.contains(k), then get(k) will return value. <p>If range {@linkplain Range#isEmpty() is empty}, then this is a no-op.",FreeText,,0
1702,guava,com.google.common.collect.RangeSet_goal.json,asDescendingSetOfRanges(),asDescendingSetOfRanges,com.google.common.collect.RangeSet,"Returns a descending view of the {@linkplain Range#isConnected disconnected} ranges that make up this range set. The returned set may be empty. The iterators returned by its Iterable#iterator method return the ranges in decreasing order of lower bound (equivalently, of upper bound).",FreeText,,0
1703,guava,com.google.common.collect.RangeSet_goal.json,complement(),complement,com.google.common.collect.RangeSet,"Returns a view of the complement of this RangeSet. <p>The returned view supports the add operation if this RangeSet supports remove, and vice versa.",FreeText,,0
1704,guava,com.google.common.collect.RangeSet_goal.json,remove(com.google.common.collect.Range<C> range),remove,com.google.common.collect.RangeSet,"Removes the specified range from this RangeSet (optional operation). After this operation, if range.contains(c), this.contains(c) will return false. <p>If range is empty, this is a no-op.",FreeText,,0
1705,guava,com.google.common.collect.RangeSet_goal.json,isEmpty(),isEmpty,com.google.common.collect.RangeSet,Returns true if this range set contains no ranges.,FreeText,,0
1706,guava,com.google.common.collect.RangeSet_goal.json,enclosesAll(com.google.common.collect.RangeSet<C> other),enclosesAll,com.google.common.collect.RangeSet,Returns true if for each member range in other there exists a member range in this range set which {@linkplain Range#encloses encloses} it. It follows that this.contains(value) whenever other.contains(value). Returns true if other is empty. <p>This is equivalent to checking if this range set encloses each of the ranges in other.,FreeText,,0
1707,guava,com.google.common.collect.RangeSet_goal.json,removeAll(com.google.common.collect.RangeSet<C> other),removeAll,com.google.common.collect.RangeSet,"Removes all of the ranges from the specified range set from this range set (optional operation). After this operation, if other.contains(c), this.contains(c) will return false. <p>This is equivalent to calling remove on each of the ranges in other in turn.",FreeText,,0
1708,guava,com.google.common.collect.RangeSet_goal.json,toString(),toString,com.google.common.collect.RangeSet,"Returns a readable string representation of this range set. For example, if this RangeSet consisted of Range.closed(1, 3) and Range.greaterThan(4), this might return "" [1â€¥3](4â€¥+âˆž)""}.",FreeText,,0
1709,guava,com.google.common.collect.RangeSet_goal.json,span(),span,com.google.common.collect.RangeSet,Returns the minimal range which {@linkplain Range#encloses(Range) encloses} all ranges in this range set.,FreeText,,0
1710,guava,com.google.common.collect.RangeSet_goal.json,contains(C value),contains,com.google.common.collect.RangeSet,Determines whether any of this range set's member ranges contains value.,FreeText,,0
1711,guava,com.google.common.collect.RangeSet_goal.json,rangeContaining(C value),rangeContaining,com.google.common.collect.RangeSet,"Returns the unique range from this range set that {@linkplain Range#contains contains} value, or null if this range set does not contain value.",FreeText,,0
1712,guava,com.google.common.collect.RangeSet_goal.json,addAll(com.google.common.collect.RangeSet<C> other),addAll,com.google.common.collect.RangeSet,"Adds all of the ranges from the specified range set to this range set (optional operation). After this operation, this range set is the minimal range set that {@linkplain #enclosesAll(RangeSet) encloses} both the original range set and other. <p>This is equivalent to calling add on each of the ranges in other in turn.",FreeText,,0
1713,guava,com.google.common.collect.RangeSet_goal.json,hashCode(),hashCode,com.google.common.collect.RangeSet,Returns asRanges().hashCode().,FreeText,,0
1714,guava,com.google.common.collect.RangeSet_goal.json,asRanges(),asRanges,com.google.common.collect.RangeSet,"Returns a view of the {@linkplain Range#isConnected disconnected} ranges that make up this range set. The returned set may be empty. The iterators returned by its Iterable#iterator method return the ranges in increasing order of lower bound (equivalently, of upper bound).",FreeText,,0
1715,guava,com.google.common.collect.RangeSet_goal.json,add(com.google.common.collect.Range<C> range),add,com.google.common.collect.RangeSet,"Adds the specified range to this RangeSet (optional operation). That is, for equal range sets a and b, the result of a.add(range) is that a will be the minimal range set for which both a.enclosesAll(b) and a.encloses(range). <p>Note that range will be {@linkplain Range#span(Range) coalesced} with any ranges in the range set that are {@linkplain Range#isConnected(Range) connected} with it. Moreover, if range is empty, this is a no-op.",FreeText,,0
1716,guava,com.google.common.collect.RangeSet_goal.json,encloses(com.google.common.collect.Range<C> otherRange),encloses,com.google.common.collect.RangeSet,Returns true if there exists a member range in this range set which {@linkplain Range#encloses encloses} the specified range.,FreeText,,0
1717,guava,com.google.common.collect.RangeSet_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.RangeSet,Returns true if obj is another RangeSet that contains the same ranges according to Range#equals(Object).,FreeText,,0
1718,guava,com.google.common.collect.RangeSet_goal.json,clear(),clear,com.google.common.collect.RangeSet,"Removes all ranges from this RangeSet (optional operation). After this operation, this.contains(c) will return false for all c. <p>This is equivalent to remove(Range.all()).",FreeText,,0
1719,guava,com.google.common.collect.RangeSet_goal.json,subRangeSet(com.google.common.collect.Range<C> view),subRangeSet,com.google.common.collect.RangeSet,"Returns a view of the intersection of this RangeSet with the specified range. <p>The returned view supports all optional operations supported by this RangeSet, with the caveat that an IllegalArgumentException is thrown on an attempt to {@linkplain #add(Range) add} any range not {@linkplain Range#encloses(Range) enclosed} by view.",FreeText,,0
1720,guava,com.google.common.collect.RowSortedTable_goal.json,rowMap(),rowMap,com.google.common.collect.RowSortedTable,"{@inheritDoc} This method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
1721,guava,com.google.common.collect.RowSortedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.RowSortedTable,"{@inheritDoc} This method returns a SortedSet, instead of the Set specified in the Table interface.",FreeText,,0
1722,guava,com.google.common.collect.SetMultimap_goal.json,asMap(),asMap,com.google.common.collect.SetMultimap,"{@inheritDoc} Note: The returned map's values are guaranteed to be of type Set. To obtain this map with the more specific generic type Map<K, Set<V>>, call Multimaps#asMap(SetMultimap) instead.",FreeText,,0
1723,guava,com.google.common.collect.SetMultimap_goal.json,entries(),entries,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1724,guava,com.google.common.collect.SetMultimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.SetMultimap,"Compares the specified object to this multimap for equality. Two SetMultimap instances are equal if, for each key, they contain the same values. Equality does not depend on the ordering of keys or values. An empty SetMultimap is equal to any other empty Multimap, including an empty ListMultimap.",FreeText,,0
1725,guava,com.google.common.collect.SetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1726,guava,com.google.common.collect.SetMultimap_goal.json,get(K key),get,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1727,guava,com.google.common.collect.SetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
1728,guava,com.google.common.collect.Sets_goal.json,"union(java.util.Set<? extends E> set1, java.util.Set<? extends E> set2)",union,com.google.common.collect.Sets,"Returns an unmodifiable view of the union of two sets. The returned set contains all elements that are contained in either backing set. Iterating over the returned set iterates first over all the elements of set1, then over each element of set2, in order, that is not contained in set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the Map#keySet of an IdentityHashMap all are). Note: The returned view performs better when set1 is the smaller of the two sets. If you have reason to believe one of your sets will generally be smaller than the other, pass it first. Further, note that the current implementation is not suitable for nested union views, i.e. the following should be avoided when in a loop: union = Sets.union(union, anotherSet);, since iterating over the resulting set has a cubic complexity to the depth of the nesting.",FreeText,,0
1729,guava,com.google.common.collect.Sets_goal.json,newLinkedHashSet(),newLinkedHashSet,com.google.common.collect.Sets,"Creates a mutable, empty LinkedHashSet instance. Note: if mutability is not required, use ImmutableSet#of() instead.",FreeText,,0
1730,guava,com.google.common.collect.Sets_goal.json,synchronizedNavigableSet(java.util.NavigableSet<E> navigableSet),synchronizedNavigableSet,com.google.common.collect.Sets,"Returns a synchronized (thread-safe) navigable set backed by the specified navigable set. In order to guarantee serial access, it is critical that all access to the backing navigable set is accomplished through the returned navigable set (or its views). It is imperative that the user manually synchronize on the returned sorted set when iterating over it or any of its descendingSet, subSet, headSet, or tailSet views.  NavigableSet<E> set = synchronizedNavigableSet(new TreeSet<E>()); ... synchronized (set) { // Must be in the synchronized block Iterator<E> it = set.iterator(); while (it.hasNext()) { foo(it.next());  }} or:  NavigableSet<E> set = synchronizedNavigableSet(new TreeSet<E>()); NavigableSet<E> set2 = set.descendingSet().headSet(foo); ... synchronized (set) { // Note: set, not set2!!! // Must be in the synchronized block Iterator<E> it = set2.descendingIterator(); while (it.hasNext()) foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned navigable set will be serializable if the specified navigable set is serializable.",FreeText,,0
1731,guava,com.google.common.collect.Sets_goal.json,"intersection(java.util.Set<E> set1, java.util.Set<?> set2)",intersection,com.google.common.collect.Sets,"Returns an unmodifiable view of the intersection of two sets. The returned set contains all elements that are contained by both backing sets. The iteration order of the returned set matches that of set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are). Note: The returned view performs slightly better when set1 is the smaller of the two sets. If you have reason to believe one of your sets will generally be smaller than the other, pass it first. Unfortunately, since this method sets the generic type of the returned set based on the type of the first set passed, this could in rare cases force you to make a cast, for example:  Set<Object> aFewBadObjects = ... Set<String> manyBadStrings = ... // impossible for a non-String to be in the intersection SuppressWarnings(""unchecked"") Set<String> badStrings = (Set) Sets.intersection( aFewBadObjects, manyBadStrings); This is unfortunate, but should come up only very rarely.",FreeText,,0
1732,guava,com.google.common.collect.Sets_goal.json,"newSetFromMap(java.util.Map<E, java.lang.Boolean> map)",newSetFromMap,com.google.common.collect.Sets,"Returns a set backed by the specified map. The resulting set displays the same ordering, concurrency, and performance characteristics as the backing map. In essence, this factory method provides a Set implementation corresponding to any Map implementation. There is no need to use this method on a Map implementation that already has a corresponding Set implementation (such as java.util.HashMap or java.util.TreeMap). Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its keySet view, with one exception. The addAll method is implemented as a sequence of put invocations on the backing map. The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment:  Set<Object> identityHashSet = Sets.newSetFromMap( new IdentityHashMap<Object, Boolean>()); The returned set is serializable if the backing map is.",FreeText,,0
1733,guava,com.google.common.collect.Sets_goal.json,newTreeSet(),newTreeSet,com.google.common.collect.Sets,"Creates a mutable, empty TreeSet instance sorted by the natural sort ordering of its elements. Note: if mutability is not required, use ImmutableSortedSet#of() instead.",FreeText,,0
1734,guava,com.google.common.collect.Sets_goal.json,newLinkedHashSetWithExpectedSize(int expectedSize),newLinkedHashSetWithExpectedSize,com.google.common.collect.Sets,"Creates a LinkedHashSet instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.6. It also can't be guaranteed that the method isn't inadvertently oversizing the returned set.",FreeText,,0
1735,guava,com.google.common.collect.Sets_goal.json,newHashSet(),newHashSet,com.google.common.collect.Sets,"Creates a mutable, initially empty HashSet instance. Note: if mutability is not required, use ImmutableSet#of() instead. If E is an Enum type, use EnumSet#noneOf instead. Otherwise, strongly consider using a LinkedHashSet instead, at the cost of increased memory footprint, to get deterministic iteration behavior. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the HashSet constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
1736,guava,com.google.common.collect.Sets_goal.json,newConcurrentHashSet(java.lang.Iterable<? extends E> elements),newConcurrentHashSet,com.google.common.collect.Sets,"Creates a thread-safe set backed by a hash map and containing the given elements. The set is backed by a ConcurrentHashMap instance, and thus carries the same concurrency guarantees. Unlike HashSet, this class does NOT allow null to be used as an element. The set is serializable.",FreeText,,0
1737,guava,com.google.common.collect.Sets_goal.json,newTreeSet(java.lang.Iterable<? extends E> elements),newTreeSet,com.google.common.collect.Sets,"Creates a mutable TreeSet instance containing the given elements sorted by their natural ordering. Note: if mutability is not required, use ImmutableSortedSet#copyOf(Iterable) instead. Note: If elements is a SortedSet with an explicit comparator, this method has different behavior than TreeSet#TreeSet(SortedSet), which returns a TreeSet with that comparator.",FreeText,,0
1738,guava,com.google.common.collect.Sets_goal.json,newLinkedHashSet(java.lang.Iterable<? extends E> elements),newLinkedHashSet,com.google.common.collect.Sets,"Creates a mutable LinkedHashSet instance containing the given elements in order. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead.",FreeText,,0
1739,guava,com.google.common.collect.Sets_goal.json,powerSet(java.util.Set<E> set),powerSet,com.google.common.collect.Sets,"Returns the set of all possible subsets of set. For example, powerSet(ImmutableSet.of(1, 2)) returns the set {{, {1}, {2}, {1, 2}}}. Elements appear in these subsets in the same iteration order as they appeared in the input set. The order in which these subsets appear in the outer set is undefined. Note that the power set of the empty set is not the empty set, but a one-element set containing the empty set. The returned set and its constituent sets use equals to decide whether two elements are identical, even if the input set uses a different concept of equivalence. Performance notes: while the power set of a set with size n is of size 2^n, its memory usage is only O(n). When the power set is constructed, the input set is merely copied. Only as the power set is iterated are the individual subsets created, and these subsets themselves occupy only a small constant amount of memory.",FreeText,,0
1740,guava,com.google.common.collect.Sets_goal.json,"removeAllImpl(java.util.Set<?> set, java.util.Iterator<?> iterator)",removeAllImpl,com.google.common.collect.Sets,Remove each element in an iterable from a set.,FreeText,,0
1741,guava,com.google.common.collect.Sets_goal.json,newHashSet(E... elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance initially containing the given elements. Note: if elements are non-null and won't be added or removed after this point, use ImmutableSet#of() or ImmutableSet#copyOf(Object[]) instead. If E is an Enum type, use EnumSet#of(Enum, Enum[]) instead. Otherwise, strongly consider using a LinkedHashSet instead, at the cost of increased memory footprint, to get deterministic iteration behavior. This method is just a small convenience, either for newHashSet(}Arrays#asList asList{@code (...)), or for creating an empty set then calling Collections#addAll. This method is not actually very useful and will likely be deprecated in the future.",FreeText,,0
1742,guava,com.google.common.collect.Sets_goal.json,newHashSet(java.lang.Iterable<? extends E> elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance containing the given elements. A very thin convenience for creating an empty set then calling Collection#addAll or Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toSet().) Note: if E is an Enum type, use #newEnumSet(Iterable, Class) instead. Note for Java 7 and later: if elements is a Collection, you don't need this method. Instead, use the HashSet constructor directly, taking advantage of the new ""diamond"" syntax. Overall, this method is not very useful and will likely be deprecated in the future.",FreeText,,0
1743,guava,com.google.common.collect.Sets_goal.json,newHashSet(java.util.Iterator<? extends E> elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance containing the given elements. A very thin convenience for creating an empty set and then calling Iterators#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterator) instead. Note: if E is an Enum type, you should create an EnumSet instead. Overall, this method is not very useful and will likely be deprecated in the future.",FreeText,,0
1744,guava,com.google.common.collect.Sets_goal.json,"filter(java.util.Set<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of unfiltered that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
1745,guava,com.google.common.collect.Sets_goal.json,"filter(java.util.SortedSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of a SortedSet, unfiltered, that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
1746,guava,com.google.common.collect.Sets_goal.json,"filterSortedIgnoreNavigable(java.util.SortedSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filterSortedIgnoreNavigable,com.google.common.collect.Sets,,FreeText,,0
1747,guava,com.google.common.collect.Sets_goal.json,"filter(java.util.NavigableSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of a NavigableSet, unfiltered, that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
1748,guava,com.google.common.collect.Sets_goal.json,"immutableEnumSet(E anElement, E... otherElements)",immutableEnumSet,com.google.common.collect.Sets,"Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an EnumSet. The iteration order of the returned set follows the enum's iteration order, not the order in which the elements are provided to the method.",FreeText,,0
1749,guava,com.google.common.collect.Sets_goal.json,newIdentityHashSet(),newIdentityHashSet,com.google.common.collect.Sets,"Creates an empty Set that uses identity to determine equality. It compares object references, instead of calling equals, to determine whether a provided object matches an element in the set. For example, contains returns false when passed an object that equals a set member, but isn't the same instance. This behavior is similar to the way IdentityHashMap handles key lookups.",FreeText,,0
1750,guava,com.google.common.collect.Sets_goal.json,immutableEnumSet(java.lang.Iterable<E> elements),immutableEnumSet,com.google.common.collect.Sets,"Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an EnumSet. The iteration order of the returned set follows the enum's iteration order, not the order in which the elements appear in the given collection.",FreeText,,0
1751,guava,com.google.common.collect.Sets_goal.json,newCopyOnWriteArraySet(),newCopyOnWriteArraySet,com.google.common.collect.Sets,"Creates an empty CopyOnWriteArraySet instance. Note: if you need an immutable empty Set, use Collections#emptySet instead.",FreeText,,0
1752,guava,com.google.common.collect.Sets_goal.json,newCopyOnWriteArraySet(java.lang.Iterable<? extends E> elements),newCopyOnWriteArraySet,com.google.common.collect.Sets,Creates a CopyOnWriteArraySet instance containing the given elements.,FreeText,,0
1753,guava,com.google.common.collect.Sets_goal.json,"symmetricDifference(java.util.Set<? extends E> set1, java.util.Set<? extends E> set2)",symmetricDifference,com.google.common.collect.Sets,"Returns an unmodifiable view of the symmetric difference of two sets. The returned set contains all elements that are contained in either set1 or set2 but not in both. The iteration order of the returned set is undefined. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are).",FreeText,,0
1754,guava,com.google.common.collect.Sets_goal.json,"removeAllImpl(java.util.Set<?> set, java.util.Collection<?> collection)",removeAllImpl,com.google.common.collect.Sets,,FreeText,,0
1755,guava,com.google.common.collect.Sets_goal.json,complementOf(java.util.Collection<E> collection),complementOf,com.google.common.collect.Sets,"Creates an EnumSet consisting of all enum values that are not in the specified collection. If the collection is an EnumSet, this method has the same behavior as EnumSet#complementOf. Otherwise, the specified collection must contain at least one element, in order to determine the element type. If the collection could be empty, use #complementOf(Collection, Class) instead of this method.",FreeText,if(args[0] instanceof EnumSet) {methodResultID.equals(java.util.EnumSet.complementOf(args[0]))},1
1756,guava,com.google.common.collect.Sets_goal.json,cartesianProduct(java.util.List<? extends java.util.Set<? extends B>> sets),cartesianProduct,com.google.common.collect.Sets,"Returns every possible list that can be formed by choosing one element from each of the given sets in order; the ""n-ary Cartesian product"" of the sets. For example:  Sets.cartesianProduct(ImmutableList.of( ImmutableSet.of(1, 2), ImmutableSet.of(""A"", ""B"", ""C""))) returns a set containing six lists:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : sets.get(0)) { for (B b1 : sets.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input set is empty, the Cartesian product will also be empty. If no sets at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of sets of size m, n, p is a set of size m x n x p, its actual memory consumption is much smaller. When the cartesian set is constructed, the input sets are merely copied. Only as the resulting set is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
1757,guava,com.google.common.collect.Sets_goal.json,cartesianProduct(java.util.Set<? extends B>... sets),cartesianProduct,com.google.common.collect.Sets,"Returns every possible list that can be formed by choosing one element from each of the given sets in order; the ""n-ary Cartesian product"" of the sets. For example:  Sets.cartesianProduct( ImmutableSet.of(1, 2), ImmutableSet.of(""A"", ""B"", ""C"")) returns a set containing six lists:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : sets.get(0)) { for (B b1 : sets.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input set is empty, the Cartesian product will also be empty. If no sets at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of sets of size m, n, p is a set of size m x n x p, its actual memory consumption is much smaller. When the cartesian set is constructed, the input sets are merely copied. Only as the resulting set is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
1758,guava,com.google.common.collect.Sets_goal.json,"difference(java.util.Set<E> set1, java.util.Set<?> set2)",difference,com.google.common.collect.Sets,"Returns an unmodifiable view of the difference of two sets. The returned set contains all elements that are contained by set1 and not contained by set2. set2 may also contain elements not present in set1; these are simply ignored. The iteration order of the returned set matches that of set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are).",FreeText,,0
1759,guava,com.google.common.collect.Sets_goal.json,"equalsImpl(java.util.Set<?> s, java.lang.Object object)",equalsImpl,com.google.common.collect.Sets,An implementation for Set#equals(Object).,FreeText,,0
1760,guava,com.google.common.collect.Sets_goal.json,newTreeSet(java.util.Comparator<? super E> comparator),newTreeSet,com.google.common.collect.Sets,"Creates a mutable, empty TreeSet instance with the given comparator. Note: if mutability is not required, use ImmutableSortedSet.orderedBy(comparator).build() instead.",FreeText,,0
1761,guava,com.google.common.collect.Sets_goal.json,"newEnumSet(java.lang.Iterable<E> iterable, java.lang.Class<E> elementType)",newEnumSet,com.google.common.collect.Sets,"Returns a new, mutable EnumSet instance containing the given elements in their natural order. This method behaves identically to EnumSet#copyOf(Collection), but also accepts non-Collection iterables and empty iterables.",FreeText,,0
1762,guava,com.google.common.collect.Sets_goal.json,newConcurrentHashSet(),newConcurrentHashSet,com.google.common.collect.Sets,"Creates a thread-safe set backed by a hash map. The set is backed by a ConcurrentHashMap instance, and thus carries the same concurrency guarantees. Unlike HashSet, this class does NOT allow null to be used as an element. The set is serializable.",FreeText,,0
1763,guava,com.google.common.collect.Sets_goal.json,hashCodeImpl(java.util.Set<?> s),hashCodeImpl,com.google.common.collect.Sets,An implementation for Set#hashCode().,FreeText,,0
1764,guava,com.google.common.collect.Sets_goal.json,newHashSetWithExpectedSize(int expectedSize),newHashSetWithExpectedSize,com.google.common.collect.Sets,"Creates a HashSet instance, with a high enough initial table size that it should hold expectedSize elements without resizing. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned set.",FreeText,,0
1765,guava,com.google.common.collect.Sets_goal.json,"complementOf(java.util.Collection<E> collection, java.lang.Class<E> type)",complementOf,com.google.common.collect.Sets,"Creates an EnumSet consisting of all enum values that are not in the specified collection. This is equivalent to EnumSet#complementOf, but can act on any input collection, as long as the elements are of enum type.",FreeText,if(args[0] instanceof EnumSet) {methodResultID.equals(java.util.EnumSet.complementOf(args[0]))},1
1766,guava,com.google.common.collect.Sets_goal.json,unmodifiableNavigableSet(java.util.NavigableSet<E> set),unmodifiableNavigableSet,com.google.common.collect.Sets,"Returns an unmodifiable view of the specified navigable set. This method allows modules to provide users with ""read-only"" access to internal navigable sets. Query operations on the returned set ""read through"" to the specified set, and attempts to modify the returned set, whether direct or via its collection views, result in an UnsupportedOperationException. The returned navigable set will be serializable if the specified navigable set is serializable.",FreeText,,0
1767,guava,com.google.common.collect.SortedIterable_goal.json,comparator(),comparator,com.google.common.collect.SortedIterable,"Returns the Comparator by which the elements of this iterable are ordered, or Ordering.natural() if the elements are ordered by their natural ordering.",FreeText,,0
1768,guava,com.google.common.collect.SortedIterable_goal.json,iterator(),iterator,com.google.common.collect.SortedIterable,Returns an iterator over elements of type T. The elements are returned in nondecreasing order according to the associated #comparator.,FreeText,,0
1769,guava,com.google.common.collect.SortedLists_goal.json,"binarySearch(java.util.List<E> list, com.google.common.base.Function<? super E, K> keyFunction, K key, java.util.Comparator<? super K> keyComparator, com.google.common.collect.SortedLists$KeyPresentBehavior presentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior absentBehavior)",binarySearch,com.google.common.collect.SortedLists,"Binary searches the list for the specified key, using the specified key function. <p>Equivalent to Object, Comparator, KeyPresentBehavior, KeyAbsentBehavior) using Function) Lists.transform(list, keyFunction).",FreeText,,0
1770,guava,com.google.common.collect.SortedLists_goal.json,"binarySearch(java.util.List<E> list, com.google.common.base.Function<? super E, K> keyFunction, K key, com.google.common.collect.SortedLists$KeyPresentBehavior presentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior absentBehavior)",binarySearch,com.google.common.collect.SortedLists,"Binary searches the list for the specified key, using the specified key function. <p>Equivalent to Function, Object, Comparator, KeyPresentBehavior, KeyAbsentBehavior) using Ordering#natural.",FreeText,,0
1771,guava,com.google.common.collect.SortedLists_goal.json,"binarySearch(java.util.List<? extends E> list, E e, com.google.common.collect.SortedLists$KeyPresentBehavior presentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior absentBehavior)",binarySearch,com.google.common.collect.SortedLists,"Searches the specified naturally ordered list for the specified object using the binary search algorithm. <p>Equivalent to Function, Object, Comparator, KeyPresentBehavior, KeyAbsentBehavior) using Ordering#natural.",FreeText,,0
1772,guava,com.google.common.collect.SortedLists_goal.json,"binarySearch(java.util.List<? extends E> list, E key, java.util.Comparator<? super E> comparator, com.google.common.collect.SortedLists$KeyPresentBehavior presentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior absentBehavior)",binarySearch,com.google.common.collect.SortedLists,"Searches the specified list for the specified object using the binary search algorithm. The list must be sorted into ascending order according to the specified comparator (as by the Comparator) Collections.sort(List, Comparator) method), prior to making this call. If it is not sorted, the results are undefined. <p>If there are elements in the list which compare as equal to the key, the choice of KeyPresentBehavior decides which index is returned. If no elements compare as equal to the key, the choice of KeyAbsentBehavior decides which index is returned. <p>This method runs in log(n) time on random-access lists, which offer near-constant-time access to each list element.",FreeText,,0
1773,guava,com.google.common.collect.SortedMultisetBridge_goal.json,elementSet(),elementSet,com.google.common.collect.SortedMultisetBridge,,FreeText,,0
1774,guava,com.google.common.collect.SortedMultiset_goal.json,"headMultiset(E upperBound, com.google.common.collect.BoundType boundType)",headMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the elements less than upperBound, optionally including upperBound itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range.",FreeText,,0
1775,guava,com.google.common.collect.SortedMultiset_goal.json,"tailMultiset(E lowerBound, com.google.common.collect.BoundType boundType)",tailMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the elements greater than lowerBound, optionally including lowerBound itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range.",FreeText,,0
1776,guava,com.google.common.collect.SortedMultiset_goal.json,lastEntry(),lastEntry,com.google.common.collect.SortedMultiset,"Returns the entry of the last element in this multiset, or null if this multiset is empty.",FreeText,,0
1777,guava,com.google.common.collect.SortedMultiset_goal.json,pollFirstEntry(),pollFirstEntry,com.google.common.collect.SortedMultiset,"Returns and removes the entry associated with the lowest element in this multiset, or returns null if this multiset is empty.",FreeText,,0
1778,guava,com.google.common.collect.SortedMultiset_goal.json,firstEntry(),firstEntry,com.google.common.collect.SortedMultiset,"Returns the entry of the first element in this multiset, or null if this multiset is empty.",FreeText,,0
1779,guava,com.google.common.collect.SortedMultiset_goal.json,pollLastEntry(),pollLastEntry,com.google.common.collect.SortedMultiset,"Returns and removes the entry associated with the greatest element in this multiset, or returns null if this multiset is empty.",FreeText,,0
1780,guava,com.google.common.collect.SortedMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.SortedMultiset,Returns a NavigableSet view of the distinct elements in this multiset.,FreeText,,0
1781,guava,com.google.common.collect.SortedMultiset_goal.json,iterator(),iterator,com.google.common.collect.SortedMultiset,{@inheritDoc} <p>The iterator returns the elements in ascending order according to this multiset's comparator.,FreeText,,0
1782,guava,com.google.common.collect.SortedMultiset_goal.json,descendingMultiset(),descendingMultiset,com.google.common.collect.SortedMultiset,Returns a descending view of this multiset. Modifications made to either map will be reflected in the other.,FreeText,,0
1783,guava,com.google.common.collect.SortedMultiset_goal.json,"subMultiset(E lowerBound, com.google.common.collect.BoundType lowerBoundType, E upperBound, com.google.common.collect.BoundType upperBoundType)",subMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the range between lowerBound and upperBound. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range. <p>This method is equivalent to tailMultiset(lowerBound, lowerBoundType).headMultiset(upperBound, upperBoundType).",FreeText,"methodResultID.equals[receiverObjectClone.tailMultiset(args[0],args[1]).headMultiset(args[2],args[3]);]",1
1784,guava,com.google.common.collect.SortedMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.SortedMultiset,{@inheritDoc} <p>The entrySet's iterator returns entries in ascending element order according to the this multiset's comparator.,FreeText,,0
1785,guava,com.google.common.collect.SortedMultiset_goal.json,comparator(),comparator,com.google.common.collect.SortedMultiset,"Returns the comparator that orders this multiset, or Ordering#natural() if the natural ordering of the elements is used.",FreeText,,0
1786,guava,com.google.common.collect.SortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.SortedSetMultimap,"Returns a map view that associates each key with the corresponding values in the multimap. Changes to the returned map, such as element removal, will update the underlying multimap. The map does not support setValue() on its entries, put, or putAll. When passed a key that is present in the map, asMap().get(Object) has the same behavior as #get, returning a live collection. When passed a key that is not present, however, asMap().get(Object) returns null instead of an empty collection. Note: The returned map's values are guaranteed to be of type SortedSet. To obtain this map with the more specific generic type Map<K, SortedSet<V>>, call Multimaps#asMap(SortedSetMultimap) instead.",FreeText,,0
1787,guava,com.google.common.collect.SortedSetMultimap_goal.json,valueComparator(),valueComparator,com.google.common.collect.SortedSetMultimap,"Returns the comparator that orders the multimap values, with null indicating that natural ordering is used.",FreeText,,0
1788,guava,com.google.common.collect.SortedSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.SortedSetMultimap,"Stores a collection of values with the same key, replacing any existing values for that key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
1789,guava,com.google.common.collect.SortedSetMultimap_goal.json,get(K key),get,com.google.common.collect.SortedSetMultimap,"Returns a collection view of all values associated with a key. If no mappings in the multimap have the provided key, an empty collection is returned. Changes to the returned collection will update the underlying multimap, and vice versa. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1790,guava,com.google.common.collect.SortedSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.SortedSetMultimap,"Removes all values associated with a given key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
1791,guava,com.google.common.collect.StandardRowSortedTable_goal.json,"com.google.common.collect.StandardRowSortedTable(java.util.SortedMap<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",com.google.common.collect.StandardRowSortedTable,com.google.common.collect.StandardRowSortedTable,,FreeText,,0
1792,guava,com.google.common.collect.StandardRowSortedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.StandardRowSortedTable,"{@inheritDoc} This method returns a SortedSet, instead of the Set specified in the Table interface.",FreeText,,0
1793,guava,com.google.common.collect.StandardRowSortedTable_goal.json,createRowMap(),createRowMap,com.google.common.collect.StandardRowSortedTable,,FreeText,,0
1794,guava,com.google.common.collect.StandardRowSortedTable_goal.json,rowMap(),rowMap,com.google.common.collect.StandardRowSortedTable,"{@inheritDoc} This method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
1795,guava,com.google.common.collect.StandardTable_goal.json,size(),size,com.google.common.collect.StandardTable,,FreeText,,0
1796,guava,com.google.common.collect.StandardTable_goal.json,clear(),clear,com.google.common.collect.StandardTable,,FreeText,,0
1797,guava,com.google.common.collect.StandardTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.StandardTable,,FreeText,,0
1798,guava,com.google.common.collect.StandardTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.StandardTable,,FreeText,,0
1799,guava,com.google.common.collect.StandardTable_goal.json,rowMap(),rowMap,com.google.common.collect.StandardTable,,FreeText,,0
1800,guava,com.google.common.collect.StandardTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.StandardTable,,FreeText,,0
1801,guava,com.google.common.collect.StandardTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.StandardTable,,FreeText,,0
1802,guava,com.google.common.collect.StandardTable_goal.json,cellSet(),cellSet,com.google.common.collect.StandardTable,"{@inheritDoc} The set's iterator traverses the mappings for the first row, the mappings for the second row, and so on. Each cell is an immutable snapshot of a row key / column key / value mapping, taken at the time the cell is returned by a method call to the set or its iterator.",FreeText,,0
1803,guava,com.google.common.collect.StandardTable_goal.json,values(),values,com.google.common.collect.StandardTable,"{@inheritDoc} The collection's iterator traverses the values for the first row, the values for the second row, and so on.",FreeText,,0
1804,guava,com.google.common.collect.StandardTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.StandardTable,,FreeText,,0
1805,guava,com.google.common.collect.StandardTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.StandardTable,,FreeText,,0
1806,guava,com.google.common.collect.StandardTable_goal.json,isEmpty(),isEmpty,com.google.common.collect.StandardTable,,FreeText,,0
1807,guava,com.google.common.collect.StandardTable_goal.json,createRowMap(),createRowMap,com.google.common.collect.StandardTable,,FreeText,,0
1808,guava,com.google.common.collect.StandardTable_goal.json,createColumnKeyIterator(),createColumnKeyIterator,com.google.common.collect.StandardTable,Creates an iterator that returns each column value with duplicates omitted.,FreeText,,0
1809,guava,com.google.common.collect.StandardTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.StandardTable,,FreeText,,0
1810,guava,com.google.common.collect.StandardTable_goal.json,row(R rowKey),row,com.google.common.collect.StandardTable,,FreeText,,0
1811,guava,com.google.common.collect.StandardTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.StandardTable,,FreeText,,0
1812,guava,com.google.common.collect.StandardTable_goal.json,columnMap(),columnMap,com.google.common.collect.StandardTable,,FreeText,,0
1813,guava,com.google.common.collect.StandardTable_goal.json,column(C columnKey),column,com.google.common.collect.StandardTable,{@inheritDoc} The returned map's views have iterators that don't support remove().,FreeText,,0
1814,guava,com.google.common.collect.StandardTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.StandardTable,,FreeText,,0
1815,guava,com.google.common.collect.StandardTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.StandardTable,"{@inheritDoc} The returned set has an iterator that does not support remove(). The set's iterator traverses the columns of the first row, the columns of the second row, etc., skipping any columns that have appeared previously.",FreeText,,0
1816,guava,com.google.common.collect.StandardTable_goal.json,"com.google.common.collect.StandardTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",com.google.common.collect.StandardTable,com.google.common.collect.StandardTable,,FreeText,,0
1817,guava,com.google.common.collect.Table_goal.json,cellSet(),cellSet,com.google.common.collect.Table,"Returns a set of all row key / column key / value triplets. Changes to the returned set will update the underlying table, and vice versa. The cell set does not support the add or addAll methods.",FreeText,,0
1818,guava,com.google.common.collect.Table_goal.json,columnMap(),columnMap,com.google.common.collect.Table,"Returns a view that associates each column key with the corresponding map from row keys to values. Changes to the returned map will update this table. The returned map does not support put() or putAll(), or setValue() on its entries. In contrast, the maps returned by columnMap().get() have the same behavior as those returned by #column. Those maps may support setValue(), put(), and putAll().",FreeText,,0
1819,guava,com.google.common.collect.Table_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.Table,Copies all mappings from the specified table to this table. The effect is equivalent to calling #put with each row key / column key / value mapping in table.,FreeText,,0
1820,guava,com.google.common.collect.Table_goal.json,column(C columnKey),column,com.google.common.collect.Table,"Returns a view of all mappings that have the given column key. For each row key / column key / value mapping in the table with that column key, the returned map associates the row key with the value. If no mappings in the table have the provided column key, an empty map is returned. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
1821,guava,com.google.common.collect.Table_goal.json,clear(),clear,com.google.common.collect.Table,,FreeText,,0
1822,guava,com.google.common.collect.Table_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified column.,FreeText,,0
1823,guava,com.google.common.collect.Table_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.Table,"Removes the mapping, if any, associated with the given keys.",FreeText,,0
1824,guava,com.google.common.collect.Table_goal.json,values(),values,com.google.common.collect.Table,"Returns a collection of all values, which may contain duplicates. Changes to the returned collection will update the underlying table, and vice versa.",FreeText,,0
1825,guava,com.google.common.collect.Table_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified row and column keys.,FreeText,,0
1826,guava,com.google.common.collect.Table_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.Table,"Returns a set of row keys that have one or more values in the table. Changes to the set will update the underlying table, and vice versa.",FreeText,,0
1827,guava,com.google.common.collect.Table_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.Table,"Associates the specified value with the specified keys. If the table already contained a mapping for those keys, the old value is replaced with the specified value.",FreeText,,0
1828,guava,com.google.common.collect.Table_goal.json,rowMap(),rowMap,com.google.common.collect.Table,"Returns a view that associates each row key with the corresponding map from column keys to values. Changes to the returned map will update this table. The returned map does not support put() or putAll(), or setValue() on its entries. In contrast, the maps returned by rowMap().get() have the same behavior as those returned by #row. Those maps may support setValue(), put(), and putAll().",FreeText,,0
1829,guava,com.google.common.collect.Table_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified value.,FreeText,,0
1830,guava,com.google.common.collect.Table_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.Table,"Returns the value corresponding to the given row and column keys, or null if no such mapping exists.",FreeText,,0
1831,guava,com.google.common.collect.Table_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.Table,"Returns a set of column keys that have one or more values in the table. Changes to the set will update the underlying table, and vice versa.",FreeText,,0
1832,guava,com.google.common.collect.Table_goal.json,row(R rowKey),row,com.google.common.collect.Table,"Returns a view of all mappings that have the given row key. For each row key / column key / value mapping in the table with that row key, the returned map associates the column key with the value. If no mappings in the table have the provided row key, an empty map is returned. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
1833,guava,com.google.common.collect.Table_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.Table,"Compares the specified object with this table for equality. Two tables are equal when their cell views, as returned by #cellSet, are equal.",FreeText,,0
1834,guava,com.google.common.collect.Table_goal.json,hashCode(),hashCode,com.google.common.collect.Table,"Returns the hash code for this table. The hash code of a table is defined as the hash code of its cell view, as returned by #cellSet.",FreeText,,0
1835,guava,com.google.common.collect.Table_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified row key.,FreeText,,0
1836,guava,com.google.common.collect.Table_goal.json,isEmpty(),isEmpty,com.google.common.collect.Table,,FreeText,,0
1837,guava,com.google.common.collect.Table_goal.json,size(),size,com.google.common.collect.Table,Returns the number of row key / column key / value mappings in the table.,FreeText,,0
1838,guava,com.google.common.collect.TreeBasedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.TreeBasedTable,,FreeText,,0
1839,guava,com.google.common.collect.TreeBasedTable_goal.json,columnComparator(),columnComparator,com.google.common.collect.TreeBasedTable,"Returns the comparator that orders the columns. With natural ordering, Ordering#natural() is returned.",FreeText,,0
1840,guava,com.google.common.collect.TreeBasedTable_goal.json,create(),create,com.google.common.collect.TreeBasedTable,"Creates an empty TreeBasedTable that uses the natural orderings of both row and column keys. The method signature specifies R extends Comparable with a raw Comparable, instead of R extends Comparable<? super R>, and the same for C. That's necessary to support classes defined without generics.",FreeText,,0
1841,guava,com.google.common.collect.TreeBasedTable_goal.json,rowComparator(),rowComparator,com.google.common.collect.TreeBasedTable,"Returns the comparator that orders the rows. With natural ordering, Ordering#natural() is returned.",FreeText,,0
1842,guava,com.google.common.collect.TreeBasedTable_goal.json,row(R rowKey),row,com.google.common.collect.TreeBasedTable,"{@inheritDoc} Because a TreeBasedTable has unique sorted values for a given row, this method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
1843,guava,com.google.common.collect.TreeBasedTable_goal.json,rowMap(),rowMap,com.google.common.collect.TreeBasedTable,,FreeText,,0
1844,guava,com.google.common.collect.TreeBasedTable_goal.json,createColumnKeyIterator(),createColumnKeyIterator,com.google.common.collect.TreeBasedTable,Overridden column iterator to return columns values in globally sorted order.,FreeText,,0
1845,guava,com.google.common.collect.TreeBasedTable_goal.json,"com.google.common.collect.TreeBasedTable(java.util.Comparator<? super R> rowComparator, java.util.Comparator<? super C> columnComparator)",com.google.common.collect.TreeBasedTable,com.google.common.collect.TreeBasedTable,,FreeText,,0
1846,guava,com.google.common.collect.TreeBasedTable_goal.json,"create(java.util.Comparator<? super R> rowComparator, java.util.Comparator<? super C> columnComparator)",create,com.google.common.collect.TreeBasedTable,Creates an empty TreeBasedTable that is ordered by the specified comparators.,FreeText,,0
1847,guava,com.google.common.collect.TreeBasedTable_goal.json,"create(com.google.common.collect.TreeBasedTable<R, C, ? extends V> table)",create,com.google.common.collect.TreeBasedTable,Creates a TreeBasedTable with the same mappings and sort order as the specified TreeBasedTable.,FreeText,,0
1848,guava,com.google.common.collect.TreeMultimap_goal.json,create(),create,com.google.common.collect.TreeMultimap,Creates an empty TreeMultimap ordered by the natural ordering of its keys and values.,FreeText,,0
1849,guava,com.google.common.collect.TreeMultimap_goal.json,unmodifiableCollectionSubclass(java.util.Collection<V> collection),unmodifiableCollectionSubclass,com.google.common.collect.TreeMultimap,,FreeText,,0
1850,guava,com.google.common.collect.TreeMultimap_goal.json,keyComparator(),keyComparator,com.google.common.collect.TreeMultimap,Returns the comparator that orders the multimap keys.,FreeText,,0
1851,guava,com.google.common.collect.TreeMultimap_goal.json,"wrapCollection(K key, java.util.Collection<V> collection)",wrapCollection,com.google.common.collect.TreeMultimap,,FreeText,,0
1852,guava,com.google.common.collect.TreeMultimap_goal.json,asMap(),asMap,com.google.common.collect.TreeMultimap,"{@inheritDoc} Because a TreeMultimap has unique sorted keys, this method returns a NavigableMap, instead of the java.util.Map specified in the Multimap interface.",FreeText,,0
1853,guava,com.google.common.collect.TreeMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.TreeMultimap,,FreeText,,0
1854,guava,com.google.common.collect.TreeMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.TreeMultimap,"Constructs a TreeMultimap, ordered by the natural ordering of its keys and values, with the same mappings as the specified multimap.",FreeText,,0
1855,guava,com.google.common.collect.TreeMultimap_goal.json,valueComparator(),valueComparator,com.google.common.collect.TreeMultimap,,FreeText,,0
1856,guava,com.google.common.collect.TreeMultimap_goal.json,"create(java.util.Comparator<? super K> keyComparator, java.util.Comparator<? super V> valueComparator)",create,com.google.common.collect.TreeMultimap,Creates an empty TreeMultimap instance using explicit comparators. Neither comparator may be null; use Ordering#natural() to specify natural order.,FreeText,,0
1857,guava,com.google.common.collect.TreeMultimap_goal.json,"com.google.common.collect.TreeMultimap(java.util.Comparator<? super K> keyComparator, java.util.Comparator<? super V> valueComparator)",com.google.common.collect.TreeMultimap,com.google.common.collect.TreeMultimap,,FreeText,,0
1858,guava,com.google.common.collect.TreeMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.TreeMultimap,,FreeText,,0
1859,guava,com.google.common.collect.TreeMultimap_goal.json,get(K key),get,com.google.common.collect.TreeMultimap,,FreeText,,0
1860,guava,com.google.common.collect.TreeMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.TreeMultimap,,FreeText,,0
1861,guava,com.google.common.collect.TreeMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.TreeMultimap,{@inheritDoc} Creates an empty TreeSet for a collection of values for one key.,FreeText,,0
1862,guava,com.google.common.collect.TreeMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.TreeMultimap,,FreeText,,0
1863,guava,com.google.common.collect.TreeMultimap_goal.json,keySet(),keySet,com.google.common.collect.TreeMultimap,"{@inheritDoc} Because a TreeMultimap has unique sorted keys, this method returns a NavigableSet, instead of the java.util.Set specified in the Multimap interface.",FreeText,,0
1864,guava,com.google.common.collect.TreeMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.TreeMultiset,,FreeText,,0
1865,guava,com.google.common.collect.TreeMultiset_goal.json,com.google.common.collect.TreeMultiset(java.util.Comparator<? super E> comparator),com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
1866,guava,com.google.common.collect.TreeMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.TreeMultiset,,FreeText,,0
1867,guava,com.google.common.collect.TreeMultiset_goal.json,size(),size,com.google.common.collect.TreeMultiset,,FreeText,,0
1868,guava,com.google.common.collect.TreeMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.TreeMultiset,,FreeText,,0
1869,guava,com.google.common.collect.TreeMultiset_goal.json,"tailMultiset(E lowerBound, com.google.common.collect.BoundType boundType)",tailMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
1870,guava,com.google.common.collect.TreeMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.TreeMultiset,,FreeText,,0
1871,guava,com.google.common.collect.TreeMultiset_goal.json,"headMultiset(E upperBound, com.google.common.collect.BoundType boundType)",headMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
1872,guava,com.google.common.collect.TreeMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.TreeMultiset,,FreeText,,0
1873,guava,com.google.common.collect.TreeMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.TreeMultiset,,FreeText,,0
1874,guava,com.google.common.collect.TreeMultiset_goal.json,create(java.util.Comparator<? super E> comparator),create,com.google.common.collect.TreeMultiset,"Creates a new, empty multiset, sorted according to the specified comparator. All elements inserted into the multiset must be mutually comparable by the specified comparator: comparator.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the multiset. If the user attempts to add an element to the multiset that violates this constraint, the add(Object) call will throw a ClassCastException.",FreeText,,0
1875,guava,com.google.common.collect.TreeMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.TreeMultiset,,FreeText,,0
1876,guava,com.google.common.collect.TreeMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.TreeMultiset,"Creates an empty multiset containing the given initial elements, sorted according to the elements' natural order. This implementation is highly efficient when elements is itself a Multiset. The type specification is <E extends Comparable>, instead of the more specific <E extends Comparable<? super E>>, to support classes defined without generics.",FreeText,,0
1877,guava,com.google.common.collect.TreeMultiset_goal.json,descendingEntryIterator(),descendingEntryIterator,com.google.common.collect.TreeMultiset,,FreeText,,0
1878,guava,com.google.common.collect.TreeMultiset_goal.json,"com.google.common.collect.TreeMultiset(com.google.common.collect.TreeMultiset$Reference<com.google.common.collect.TreeMultiset$AvlNode<E>> rootReference, com.google.common.collect.GeneralRange<E> range, com.google.common.collect.TreeMultiset$AvlNode<E> endLink)",com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
1879,guava,com.google.common.collect.TreeMultiset_goal.json,create(),create,com.google.common.collect.TreeMultiset,"Creates a new, empty multiset, sorted according to the elements' natural order. All elements inserted into the multiset must implement the Comparable interface. Furthermore, all such elements must be mutually comparable: e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the multiset. If the user attempts to add an element to the multiset that violates this constraint (for example, the user attempts to add a string element to a set whose elements are integers), the add(Object) call will throw a ClassCastException. The type specification is <E extends Comparable>, instead of the more specific <E extends Comparable<? super E>>, to support classes defined without generics.",FreeText,,0
1880,guava,com.google.common.collect.TreeMultiset_goal.json,distinctElements(com.google.common.collect.TreeMultiset$AvlNode<?> node),distinctElements,com.google.common.collect.TreeMultiset,,FreeText,,0
1881,guava,com.google.common.hash.Hasher_goal.json,putDouble(double d),putDouble,com.google.common.hash.Hasher,Equivalent to putLong(Double.doubleToRawLongBits(d)).,FreeText,methodResultID.equals[receiverObjectClone.putLong(Double.doubleToRawLongBits(args[0]));],1
1882,guava,com.google.common.hash.Hasher_goal.json,"putObject(T instance, com.google.common.hash.Funnel<? super T> funnel)",putObject,com.google.common.hash.Hasher,"A simple convenience for funnel.funnel(object, this).",FreeText,,0
1883,guava,com.google.common.hash.Hasher_goal.json,putFloat(float f),putFloat,com.google.common.hash.Hasher,Equivalent to putInt(Float.floatToRawIntBits(f)).,FreeText,methodResultID.equals[receiverObjectClone.putInt(Float.floatToRawIntBits(args[0]));],1
1884,guava,com.google.common.hash.Hasher_goal.json,putBytes(byte[] bytes),putBytes,com.google.common.hash.Hasher,.,FreeText,,0
1885,guava,com.google.common.hash.Hasher_goal.json,putShort(short s),putShort,com.google.common.hash.Hasher,.,FreeText,,0
1886,guava,com.google.common.hash.Hasher_goal.json,putLong(long l),putLong,com.google.common.hash.Hasher,.,FreeText,,0
1887,guava,com.google.common.hash.Hasher_goal.json,hashCode(),hashCode,com.google.common.hash.Hasher,{@inheritDoc} @deprecated This returns Object#hashCode(); you almost certainly mean to call hash().asInt().,FreeText,,0
1888,guava,com.google.common.hash.Hasher_goal.json,putByte(byte b),putByte,com.google.common.hash.Hasher,.,FreeText,,0
1889,guava,com.google.common.hash.Hasher_goal.json,putBoolean(boolean b),putBoolean,com.google.common.hash.Hasher,Equivalent to putByte(b ? (byte) 1 : (byte) 0).,FreeText,methodResultID.equals(receiverObjectClone.putByte(args[0] ? (byte) 1 : (byte) 0)),1
1890,guava,com.google.common.hash.Hasher_goal.json,putUnencodedChars(java.lang.CharSequence charSequence),putUnencodedChars,com.google.common.hash.Hasher,"Equivalent to processing each char value in the CharSequence, in order. The input must not be updated while this method is in progress.",FreeText,,0
1891,guava,com.google.common.hash.Hasher_goal.json,putChar(char c),putChar,com.google.common.hash.Hasher,.,FreeText,,0
1892,guava,com.google.common.hash.Hasher_goal.json,"putBytes(byte[] bytes, int off, int len)",putBytes,com.google.common.hash.Hasher,.,FreeText,,0
1893,guava,com.google.common.hash.Hasher_goal.json,putInt(int i),putInt,com.google.common.hash.Hasher,.,FreeText,,0
1894,guava,com.google.common.hash.Hasher_goal.json,"putString(java.lang.CharSequence charSequence, java.nio.charset.Charset charset)",putString,com.google.common.hash.Hasher,Equivalent to putBytes(charSequence.toString().getBytes(charset)).,FreeText,methodResultID.equals[receiverObjectClone.putBytes(args[0].toString().getBytes(args[1]));],1
1895,guava,com.google.common.hash.Hasher_goal.json,hash(),hash,com.google.common.hash.Hasher,Computes a hash code based on the data that have been provided to this hasher. The result is unspecified if this method is called more than once on the same instance.,FreeText,,0
1896,guava,com.google.common.io.ByteSource_goal.json,empty(),empty,com.google.common.io.ByteSource,Returns an immutable ByteSource that contains no bytes.,FreeText,,0
1897,guava,com.google.common.io.ByteSource_goal.json,isEmpty(),isEmpty,com.google.common.io.ByteSource,"Returns whether the source has zero bytes. The default implementation returns true if sizeIfKnown returns zero, falling back to opening a stream and checking for EOF if the size is not known. <p>Note that, in cases where sizeIfKnown returns zero, it is possible that bytes are actually available for reading. (For example, some special files may return a size of 0 despite actually having content when read.) This means that a source may return true from isEmpty() despite having readable content.",FreeText,,0
1898,guava,com.google.common.io.ByteSource_goal.json,hash(com.google.common.hash.HashFunction hashFunction),hash,com.google.common.io.ByteSource,Hashes the contents of this byte source using the given hash function.,FreeText,,0
1899,guava,com.google.common.io.ByteSource_goal.json,com.google.common.io.ByteSource(),com.google.common.io.ByteSource,com.google.common.io.ByteSource,Constructor for use by subclasses.,FreeText,,0
1900,guava,com.google.common.io.ByteSource_goal.json,copyTo(com.google.common.io.ByteSink sink),copyTo,com.google.common.io.ByteSource,Copies the contents of this byte source to the given ByteSink.,FreeText,,0
1901,guava,com.google.common.io.ByteSource_goal.json,openStream(),openStream,com.google.common.io.ByteSource,"Opens a new InputStream for reading from this source. This method should return a new, independent stream each time it is called. <p>The caller is responsible for ensuring that the returned stream is closed.",FreeText,,0
1902,guava,com.google.common.io.ByteSource_goal.json,concat(java.lang.Iterable<? extends com.google.common.io.ByteSource> sources),concat,com.google.common.io.ByteSource,Concatenates multiple ByteSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream.,FreeText,,0
1903,guava,com.google.common.io.ByteSource_goal.json,openBufferedStream(),openBufferedStream,com.google.common.io.ByteSource,"Opens a new buffered InputStream for reading from this source. The returned stream is not required to be a BufferedInputStream in order to allow implementations to simply delegate to openStream() when the stream returned by that method does not benefit from additional buffering (for example, a ByteArrayInputStream). This method should return a new, independent stream each time it is called. <p>The caller is responsible for ensuring that the returned stream is closed.",FreeText,,0
1904,guava,com.google.common.io.ByteSource_goal.json,contentEquals(com.google.common.io.ByteSource other),contentEquals,com.google.common.io.ByteSource,Checks that the contents of this byte source are equal to the contents of the given byte source.,FreeText,,0
1905,guava,com.google.common.io.ByteSource_goal.json,read(),read,com.google.common.io.ByteSource,Reads the full contents of this byte source as a byte array.,FreeText,,0
1906,guava,com.google.common.io.ByteSource_goal.json,size(),size,com.google.common.io.ByteSource,"Returns the size of this source in bytes, even if doing so requires opening and traversing an entire stream. To avoid a potentially expensive operation, see sizeIfKnown. <p>The default implementation calls sizeIfKnown and returns the value if present. If absent, it will fall back to a heavyweight operation that will open a stream, read (or skip, if possible) to the end of the stream and return the total number of bytes that were read. <p>Note that for some sources that implement sizeIfKnown to provide a more efficient implementation, it is possible that this method will return a different number of bytes than would be returned by reading all of the bytes (for example, some special files may return a size of 0 despite actually having content when read). <p>In either case, for mutable sources such as files, a subsequent read may return a different number of bytes if the contents are changed.",FreeText,,0
1907,guava,com.google.common.io.ByteSource_goal.json,wrap(byte[] b),wrap,com.google.common.io.ByteSource,"Returns a view of the given byte array as a ByteSource. To view only a specific range in the array, use ByteSource.wrap(b).slice(offset, length).",FreeText,,0
1908,guava,com.google.common.io.ByteSource_goal.json,asCharSource(java.nio.charset.Charset charset),asCharSource,com.google.common.io.ByteSource,Returns a CharSource view of this byte source that decodes bytes read from this source as characters using the given Charset.,FreeText,,0
1909,guava,com.google.common.io.ByteSource_goal.json,sizeIfKnown(),sizeIfKnown,com.google.common.io.ByteSource,"Returns the size of this source in bytes, if the size can be easily determined without actually opening the data stream. <p>The default implementation returns Optional#absent. Some sources, such as a file, may return a non-absent value. Note that in such cases, it is possible that this method will return a different number of bytes than would be returned by reading all of the bytes (for example, some special files may return a size of 0 despite actually having content when read). <p>Additionally, for mutable sources such as files, a subsequent read may return a different number of bytes if the contents are changed.",FreeText,,0
1910,guava,com.google.common.io.ByteSource_goal.json,copyTo(java.io.OutputStream output),copyTo,com.google.common.io.ByteSource,Copies the contents of this byte source to the given OutputStream. Does not close output.,FreeText,,0
1911,guava,com.google.common.io.ByteSource_goal.json,concat(java.util.Iterator<? extends com.google.common.io.ByteSource> sources),concat,com.google.common.io.ByteSource,Concatenates multiple ByteSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream. <p>Note: The input Iterator will be copied to an ImmutableList when this method is called. This will fail if the iterator is infinite and may cause problems if the iterator eagerly fetches data for each source when iterated (rather than producing sources that only load data through their streams). Prefer using the concat(Iterable) overload if possible.,FreeText,,0
1912,guava,com.google.common.io.ByteSource_goal.json,concat(com.google.common.io.ByteSource... sources),concat,com.google.common.io.ByteSource,Concatenates multiple ByteSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream.,FreeText,,0
1913,guava,com.google.common.io.ByteSource_goal.json,read(com.google.common.io.ByteProcessor<T> processor),read,com.google.common.io.ByteSource,Reads the contents of this byte source using the given processor to process bytes as they are read. Stops when all bytes have been read or the consumer returns false. Returns the result produced by the processor.,FreeText,,0
1914,guava,com.google.common.io.ByteSource_goal.json,"slice(long offset, long length)",slice,com.google.common.io.ByteSource,"Returns a view of a slice of this byte source that is at most length bytes long starting at the given offset. If offset is greater than the size of this source, the returned source will be empty. If offset + length is greater than the size of this source, the returned source will contain the slice starting at offset and ending at the end of this source.",FreeText,,0
1915,guava,com.google.common.io.CharSink_goal.json,write(java.lang.CharSequence charSequence),write,com.google.common.io.CharSink,Writes the given character sequence to this sink.,FreeText,,0
1916,guava,com.google.common.io.CharSink_goal.json,openStream(),openStream,com.google.common.io.CharSink,"Opens a new Writer for writing to this sink. This method should return a new, independent writer each time it is called. <p>The caller is responsible for ensuring that the returned writer is closed.",FreeText,,0
1917,guava,com.google.common.io.CharSink_goal.json,"writeLines(java.lang.Iterable<? extends java.lang.CharSequence> lines, java.lang.String lineSeparator)",writeLines,com.google.common.io.CharSink,Writes the given lines of text to this sink with each line (including the last) terminated with the given line separator.,FreeText,,0
1918,guava,com.google.common.io.CharSink_goal.json,com.google.common.io.CharSink(),com.google.common.io.CharSink,com.google.common.io.CharSink,Constructor for use by subclasses.,FreeText,,0
1919,guava,com.google.common.io.CharSink_goal.json,openBufferedStream(),openBufferedStream,com.google.common.io.CharSink,"Opens a new buffered Writer for writing to this sink. The returned stream is not required to be a BufferedWriter in order to allow implementations to simply delegate to openStream() when the stream returned by that method does not benefit from additional buffering. This method should return a new, independent writer each time it is called. <p>The caller is responsible for ensuring that the returned writer is closed.",FreeText,,0
1920,guava,com.google.common.io.CharSink_goal.json,writeLines(java.lang.Iterable<? extends java.lang.CharSequence> lines),writeLines,com.google.common.io.CharSink,"Writes the given lines of text to this sink with each line (including the last) terminated with the operating system's default line separator. This method is equivalent to writeLines(lines, System.getProperty(""line.separator"")).",FreeText,"methodResultID.equals(receiverObjectClone.writeLines(args[0], System.getProperty(""line.separator""))",1
1921,guava,com.google.common.io.CharSink_goal.json,writeFrom(java.lang.Readable readable),writeFrom,com.google.common.io.CharSink,Writes all the text from the given Readable (such as a Reader) to this sink. Does not close readable if it is Closeable.,FreeText,,0
1922,guava,com.google.common.io.CharSource_goal.json,copyTo(java.lang.Appendable appendable),copyTo,com.google.common.io.CharSource,Appends the contents of this source to the given Appendable (such as a Writer). Does not close appendable if it is Closeable.,FreeText,,0
1923,guava,com.google.common.io.CharSource_goal.json,openStream(),openStream,com.google.common.io.CharSource,"Opens a new Reader for reading from this source. This method should return a new, independent reader each time it is called. <p>The caller is responsible for ensuring that the returned reader is closed.",FreeText,,0
1924,guava,com.google.common.io.CharSource_goal.json,readLines(),readLines,com.google.common.io.CharSource,"Reads all the lines of this source as a list of strings. The returned list will be empty if this source is empty. <p>Like BufferedReader, this method breaks lines on any of \n, \r or \r\n, does not include the line separator in the returned lines and does not consider there to be an extra empty line at the end if the content is terminated with a line separator.",FreeText,,0
1925,guava,com.google.common.io.CharSource_goal.json,isEmpty(),isEmpty,com.google.common.io.CharSource,"Returns whether the source has zero chars. The default implementation returns true if lengthIfKnown returns zero, falling back to opening a stream and checking for EOF if the length is not known. <p>Note that, in cases where lengthIfKnown returns zero, it is possible that chars are actually available for reading. This means that a source may return true from isEmpty() despite having readable content.",FreeText,,0
1926,guava,com.google.common.io.CharSource_goal.json,readFirstLine(),readFirstLine,com.google.common.io.CharSource,"Reads the first link of this source as a string. Returns null if this source is empty. <p>Like BufferedReader, this method breaks lines on any of \n, \r or \r\n, does not include the line separator in the returned line and does not consider there to be an extra empty line at the end if the content is terminated with a line separator.",FreeText,,0
1927,guava,com.google.common.io.CharSource_goal.json,length(),length,com.google.common.io.CharSource,"Returns the length of this source in chars, even if doing so requires opening and traversing an entire stream. To avoid a potentially expensive operation, see lengthIfKnown. <p>The default implementation calls lengthIfKnown and returns the value if present. If absent, it will fall back to a heavyweight operation that will open a stream, skip to the end of the stream, and return the total number of chars that were skipped. <p>Note that for sources that implement lengthIfKnown to provide a more efficient implementation, it is possible that this method will return a different number of chars than would be returned by reading all of the chars. <p>In either case, for mutable sources such as files, a subsequent read may return a different number of chars if the contents are changed.",FreeText,,0
1928,guava,com.google.common.io.CharSource_goal.json,empty(),empty,com.google.common.io.CharSource,Returns an immutable CharSource that contains no characters.,FreeText,,0
1929,guava,com.google.common.io.CharSource_goal.json,concat(java.lang.Iterable<? extends com.google.common.io.CharSource> sources),concat,com.google.common.io.CharSource,Concatenates multiple CharSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream.,FreeText,,0
1930,guava,com.google.common.io.CharSource_goal.json,wrap(java.lang.CharSequence charSequence),wrap,com.google.common.io.CharSource,"Returns a view of the given character sequence as a CharSource. The behavior of the returned CharSource and any Reader instances created by it is unspecified if the charSequence is mutated while it is being read, so don't do that.",FreeText,,0
1931,guava,com.google.common.io.CharSource_goal.json,read(),read,com.google.common.io.CharSource,Reads the contents of this source as a string.,FreeText,,0
1932,guava,com.google.common.io.CharSource_goal.json,com.google.common.io.CharSource(),com.google.common.io.CharSource,com.google.common.io.CharSource,Constructor for use by subclasses.,FreeText,,0
1933,guava,com.google.common.io.CharSource_goal.json,lengthIfKnown(),lengthIfKnown,com.google.common.io.CharSource,"Returns the size of this source in chars, if the size can be easily determined without actually opening the data stream. <p>The default implementation returns Optional#absent. Some sources, such as a CharSequence, may return a non-absent value. Note that in such cases, it is possible that this method will return a different number of chars than would be returned by reading all of the chars. <p>Additionally, for mutable sources such as StringBuilders, a subsequent read may return a different number of chars if the contents are changed.",FreeText,,0
1934,guava,com.google.common.io.CharSource_goal.json,concat(java.util.Iterator<? extends com.google.common.io.CharSource> sources),concat,com.google.common.io.CharSource,Concatenates multiple CharSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream. <p>Note: The input Iterator will be copied to an ImmutableList when this method is called. This will fail if the iterator is infinite and may cause problems if the iterator eagerly fetches data for each source when iterated (rather than producing sources that only load data through their streams). Prefer using the concat(Iterable) overload if possible.,FreeText,,0
1935,guava,com.google.common.io.CharSource_goal.json,concat(com.google.common.io.CharSource... sources),concat,com.google.common.io.CharSource,Concatenates multiple CharSource instances into a single source. Streams returned from the source will contain the concatenated data from the streams of the underlying sources. <p>Only one underlying stream will be open at a time. Closing the concatenated stream will close the open underlying stream.,FreeText,,0
1936,guava,com.google.common.io.CharSource_goal.json,openBufferedStream(),openBufferedStream,com.google.common.io.CharSource,"Opens a new BufferedReader for reading from this source. This method should return a new, independent reader each time it is called. <p>The caller is responsible for ensuring that the returned reader is closed.",FreeText,,0
1937,guava,com.google.common.io.CharSource_goal.json,copyTo(com.google.common.io.CharSink sink),copyTo,com.google.common.io.CharSource,Copies the contents of this source to the given sink.,FreeText,,0
1938,guava,com.google.common.io.CharSource_goal.json,readLines(com.google.common.io.LineProcessor<T> processor),readLines,com.google.common.io.CharSource,"Reads lines of text from this source, processing each line as it is read using the given processor. Stops when all lines have been processed or the processor returns false and returns the result produced by the processor. <p>Like BufferedReader, this method breaks lines on any of \n, \r or \r\n, does not include the line separator in the lines passed to the processor and does not consider there to be an extra empty line at the end if the content is terminated with a line separator.",FreeText,,0
1939,guava,com.google.common.io.Flushables_goal.json,"flush(java.io.Flushable flushable, boolean swallowIOException)",flush,com.google.common.io.Flushables,"Flush a Flushable, with control over whether an IOException may be thrown. <p>If swallowIOException is true, then we don't rethrow IOException, but merely log it.",FreeText,,0
1940,guava,com.google.common.io.Flushables_goal.json,flushQuietly(java.io.Flushable flushable),flushQuietly,com.google.common.io.Flushables,"Equivalent to calling flush(flushable, true), but with no IOException in the signature.",FreeText,"com.google.common.io.Flushables.flush(args[0],true); receiverObjectClone.flushQuietly(args[0]); receiverObjectClone.equals(receiverObjectID)",1
1941,guava,com.google.common.math.DoubleMath_goal.json,mean(double... values),mean,com.google.common.math.DoubleMath,"Returns the arithmetic mean of values. <p>If these values are a sample drawn from a population, this is also an unbiased estimator of the arithmetic mean of the population.",FreeText,,0
1942,guava,com.google.common.math.DoubleMath_goal.json,"log2(double x, java.math.RoundingMode mode)",log2,com.google.common.math.DoubleMath,"Returns the base 2 logarithm of a double value, rounded with the specified rounding mode to an int. <p>Regardless of the rounding mode, this is faster than (int) log2(x).",FreeText,,0
1943,guava,com.google.common.math.DoubleMath_goal.json,"roundToLong(double x, java.math.RoundingMode mode)",roundToLong,com.google.common.math.DoubleMath,"Returns the long value that is equal to x rounded with the specified rounding mode, if possible.",FreeText,,0
1944,guava,com.google.common.math.DoubleMath_goal.json,mean(int... values),mean,com.google.common.math.DoubleMath,"Returns the arithmetic mean of values. <p>If these values are a sample drawn from a population, this is also an unbiased estimator of the arithmetic mean of the population.",FreeText,,0
1945,guava,com.google.common.math.DoubleMath_goal.json,"roundToBigInteger(double x, java.math.RoundingMode mode)",roundToBigInteger,com.google.common.math.DoubleMath,"Returns the BigInteger value that is equal to x rounded with the specified rounding mode, if possible.",FreeText,,0
1946,guava,com.google.common.math.DoubleMath_goal.json,mean(long... values),mean,com.google.common.math.DoubleMath,"Returns the arithmetic mean of values. <p>If these values are a sample drawn from a population, this is also an unbiased estimator of the arithmetic mean of the population.",FreeText,,0
1947,guava,com.google.common.math.DoubleMath_goal.json,"fuzzyEquals(double a, double b, double tolerance)",fuzzyEquals,com.google.common.math.DoubleMath,"Returns true if a and b are within tolerance of each other. <p>Technically speaking, this is equivalent to Math.abs(a - b) <= tolerance || Double.valueOf(a).equals(Double.valueOf(b)). <p>Notable special cases include: <ul> All NaNs are fuzzily equal. <li>If a == b, then a and b are always fuzzily equal. <li>Positive and negative zero are always fuzzily equal. <li>If tolerance is zero, and neither a nor b is NaN, then a and b are fuzzily equal if and only if a == b. <li>With Double#POSITIVE_INFINITY tolerance, all non-NaN values are fuzzily equal. <li>With finite tolerance, Double.POSITIVE_INFINITY and Double.NEGATIVE_INFINITY are fuzzily equal only to themselves. <p>This is reflexive and symmetric, but not transitive, so it is not an equivalence relation and not suitable for use in Object#equals implementations.",FreeText,methodResultID==(Math.abs(args[0] - args[1]) <= args[2] || Double.valueOf(args[0]).equals(Double.valueOf(args[1]))),1
1948,guava,com.google.common.math.DoubleMath_goal.json,"roundToInt(double x, java.math.RoundingMode mode)",roundToInt,com.google.common.math.DoubleMath,"Returns the int value that is equal to x rounded with the specified rounding mode, if possible.",FreeText,,0
1949,guava,com.google.common.math.DoubleMath_goal.json,"fuzzyCompare(double a, double b, double tolerance)",fuzzyCompare,com.google.common.math.DoubleMath,"Compares a and b ""fuzzily,"" with a tolerance for nearly-equal values. <p>This method is equivalent to fuzzyEquals(a, b, tolerance) ? 0 : Double.compare(a, b). In particular, like double), it treats all NaN values as equal and greater than all other values (including Double#POSITIVE_INFINITY). <p>This is not a total ordering and is not suitable for use in Comparable#compareTo implementations. In particular, it is not transitive.",FreeText,"methodResultID==(com.google.common.math.DoubleMath.fuzzyEquals(args[0], args[1], args[2]) ? 0 : Double.compare(args[0], args[1]))",1
1950,guava,com.google.common.math.DoubleMath_goal.json,isPowerOfTwo(double x),isPowerOfTwo,com.google.common.math.DoubleMath,Returns true if x is exactly equal to 2^k for some finite integer k.,FreeText,,0
1951,guava,com.google.common.math.DoubleMath_goal.json,mean(java.lang.Iterable<? extends java.lang.Number> values),mean,com.google.common.math.DoubleMath,"Returns the arithmetic mean of values. <p>If these values are a sample drawn from a population, this is also an unbiased estimator of the arithmetic mean of the population.",FreeText,,0
1952,guava,com.google.common.math.DoubleMath_goal.json,mean(java.util.Iterator<? extends java.lang.Number> values),mean,com.google.common.math.DoubleMath,"Returns the arithmetic mean of values. <p>If these values are a sample drawn from a population, this is also an unbiased estimator of the arithmetic mean of the population.",FreeText,,0
1953,guava,com.google.common.math.DoubleMath_goal.json,"roundIntermediate(double x, java.math.RoundingMode mode)",roundIntermediate,com.google.common.math.DoubleMath,.,FreeText,,0
1954,guava,com.google.common.math.DoubleMath_goal.json,log2(double x),log2,com.google.common.math.DoubleMath,"Returns the base 2 logarithm of a double value. <p>Special cases: <li>If x is NaN or less than zero, the result is NaN. <li>If x is positive infinity, the result is positive infinity. <li>If x is positive or negative zero, the result is negative infinity. <p>The computed result is within 1 ulp of the exact result. <p>If the result of this method will be immediately rounded to an int, RoundingMode) is faster.",FreeText,,0
1955,guava,com.google.common.math.DoubleMath_goal.json,isMathematicalInteger(double x),isMathematicalInteger,com.google.common.math.DoubleMath,"Returns true if x represents a mathematical integer. <p>This is equivalent to, but not necessarily implemented as, the expression !Double.isNaN(x) && !Double.isInfinite(x) && x == Math.rint(x).",FreeText,methodResultID==(!Double.isNaN(args[0])&&!Double.isInfinite(args[0])&&args[0]==Math.rint(args[0])),1
1956,guava,com.google.common.math.DoubleMath_goal.json,factorial(int n),factorial,com.google.common.math.DoubleMath,"Returns n!, that is, the product of the first n positive integers, 1 if n == 0, or n!, or Double#POSITIVE_INFINITY if n! > Double.MAX_VALUE. <p>The result is within 1 ulp of the true value.",FreeText,,0
1957,guava,com.google.common.net.InternetDomainName_goal.json,topPrivateDomain(),topPrivateDomain,com.google.common.net.InternetDomainName,"Returns the portion of this domain name that is one level beneath the public suffix. For example, for x.adwords.google.co.uk it returns google.co.uk, since co.uk is a public suffix. <p>If isTopPrivateDomain() is true, the current domain name instance is returned. <p>This method should not be used to determine the topmost parent domain which is addressable as a host, as many public suffixes are also addressable hosts. For example, the domain foo.bar.uk.com has a public suffix of uk.com, so it would return bar.uk.com from this method. But uk.com is itself an addressable host. <p>This method can be used to determine the probable highest level parent domain for which cookies may be set, though even that depends on individual browsers' implementations of cookie controls.",FreeText,,0
1958,guava,com.google.common.net.InternetDomainName_goal.json,toString(),toString,com.google.common.net.InternetDomainName,"Returns the domain name, normalized to all lower case.",FreeText,,0
1959,guava,com.google.common.net.InternetDomainName_goal.json,hasParent(),hasParent,com.google.common.net.InternetDomainName,Indicates whether this domain is composed of two or more parts.,FreeText,,0
1960,guava,com.google.common.net.InternetDomainName_goal.json,child(java.lang.String leftParts),child,com.google.common.net.InternetDomainName,"Creates and returns a new InternetDomainName by prepending the argument and a dot to the current name. For example, InternetDomainName.from(""foo.com"").child(""www.bar"") returns a new InternetDomainName with the value www.bar.foo.com. Only lenient validation is performed, as described here.",FreeText,,0
1961,guava,com.google.common.net.InternetDomainName_goal.json,isTopPrivateDomain(),isTopPrivateDomain,com.google.common.net.InternetDomainName,"Indicates whether this domain name is composed of exactly one subdomain component followed by a {@linkplain #isPublicSuffix() public suffix}. For example, returns true for google.com and foo.co.uk, but not for www.google.com or co.uk. <p>Warning: A true result from this method does not imply that the domain is at the highest level which is addressable as a host, as many public suffixes are also addressable hosts. For example, the domain bar.uk.com has a public suffix of uk.com, so it would return true from this method. But uk.com is itself an addressable host. <p>This method can be used to determine whether a domain is probably the highest level for which cookies may be set, though even that depends on individual browsers' implementations of cookie controls. See RFC 2109 for details.",FreeText,,0
1962,guava,com.google.common.net.InternetDomainName_goal.json,equals(java.lang.Object object),equals,com.google.common.net.InternetDomainName,"Equality testing is based on the text supplied by the caller, after normalization as described in the class documentation. For example, a non-ASCII Unicode domain name and the Punycode version of the same domain name would not be considered equal.",FreeText,,0
1963,guava,com.google.common.net.InternetDomainName_goal.json,isUnderPublicSuffix(),isUnderPublicSuffix,com.google.common.net.InternetDomainName,"Indicates whether this domain name ends in a {@linkplain #isPublicSuffix() public suffix}, while not being a public suffix itself. For example, returns true for www.google.com, foo.co.uk and bar.ca.us, but not for google, com, or google.foo. <p>Warning: a false result from this method does not imply that the domain does not represent an addressable host, as many public suffixes are also addressable hosts. Use hasPublicSuffix() for that test. <p>This method can be used to determine whether it will probably be possible to set cookies on the domain, though even that depends on individual browsers' implementations of cookie controls. See RFC 2109 for details.",FreeText,,0
1964,guava,com.google.common.net.InternetDomainName_goal.json,parent(),parent,com.google.common.net.InternetDomainName,"Returns an InternetDomainName that is the immediate ancestor of this one; that is, the current domain with the leftmost part removed. For example, the parent of www.google.com is google.com.",FreeText,,0
1965,guava,com.google.common.net.InternetDomainName_goal.json,publicSuffix(),publicSuffix,com.google.common.net.InternetDomainName,"Returns the {@linkplain #isPublicSuffix() public suffix} portion of the domain name, or null if no public suffix is present.",FreeText,,0
1966,guava,com.google.common.net.InternetDomainName_goal.json,isValid(java.lang.String name),isValid,com.google.common.net.InternetDomainName,"Indicates whether the argument is a syntactically valid domain name using lenient validation. Specifically, validation against RFC 3490 (""Internationalizing Domain Names in Applications"") is skipped. <p>The following two code snippets are equivalent: domainName = InternetDomainName.isValid(name) ? InternetDomainName.from(name) : DEFAULT_DOMAIN; try { domainName = InternetDomainName.from(name); catch (IllegalArgumentException e) { domainName = DEFAULT_DOMAIN; }}.",FreeText,,0
1967,guava,com.google.common.net.InternetDomainName_goal.json,parts(),parts,com.google.common.net.InternetDomainName,"Returns the individual components of this domain name, normalized to all lower case. For example, for the domain name mail.google.com, this method returns the list [""mail"", ""google"", ""com""].",FreeText,,0
1968,guava,com.google.common.net.InternetDomainName_goal.json,hasPublicSuffix(),hasPublicSuffix,com.google.common.net.InternetDomainName,"Indicates whether this domain name ends in a {@linkplain #isPublicSuffix() public suffix}, including if it is a public suffix itself. For example, returns true for www.google.com, foo.co.uk and com, but not for google or google.foo. This is the recommended method for determining whether a domain is potentially an addressable host.",FreeText,,0
1969,guava,com.google.common.net.InternetDomainName_goal.json,hashCode(),hashCode,com.google.common.net.InternetDomainName,.,FreeText,,0
1970,guava,com.google.common.net.InternetDomainName_goal.json,from(java.lang.String domain),from,com.google.common.net.InternetDomainName,"Returns an instance of InternetDomainName after lenient validation. Specifically, validation against RFC 3490 (""Internationalizing Domain Names in Applications"") is skipped, while validation against RFC 1035 is relaxed in the following ways: <li>Any part containing non-ASCII characters is considered valid. <li>Underscores ('_') are permitted wherever dashes ('-') are permitted. <li>Parts other than the final part may start with a digit.",FreeText,,0
1971,guava,com.google.common.net.InternetDomainName_goal.json,isPublicSuffix(),isPublicSuffix,com.google.common.net.InternetDomainName,"Indicates whether this domain name represents a public suffix, as defined by the Mozilla Foundation's Public Suffix List (PSL). A public suffix is one under which Internet users can directly register names, such as com, co.uk or pvt.k12.wy.us. Examples of domain names that are not public suffixes include google, google.com and foo.co.uk.",FreeText,,0
1972,guava,com.google.common.net.InternetDomainName_goal.json,com.google.common.net.InternetDomainName(java.lang.String name),com.google.common.net.InternetDomainName,com.google.common.net.InternetDomainName,"Constructor used to implement from(String), and from subclasses.",FreeText,,0
1973,guava,com.google.common.primitives.Booleans_goal.json,toArray(java.util.Collection<java.lang.Boolean> collection),toArray,com.google.common.primitives.Booleans,Copies a collection of Boolean instances into a new array of primitive boolean values. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method. <p>Note: consider representing the collection as a java.util.BitSet instead.,FreeText,,0
1974,guava,com.google.common.primitives.Booleans_goal.json,countTrue(boolean... values),countTrue,com.google.common.primitives.Booleans,Returns the number of values that are true.,FreeText,,0
1975,guava,com.google.common.primitives.Booleans_goal.json,"join(java.lang.String separator, boolean... array)",join,com.google.common.primitives.Booleans,"Returns a string containing the supplied boolean values separated by separator. For example, join(""-"", false, true, false) returns the string ""false-true-false"".",FreeText,,0
1976,guava,com.google.common.primitives.Booleans_goal.json,"compare(boolean a, boolean b)",compare,com.google.common.primitives.Booleans,Compares the two specified boolean values in the standard way (false is considered less than true). The sign of the value returned is the same as that of ((Boolean) a).compareTo(b). <p>Note for Java 7 and later: this method should be treated as deprecated; use the equivalent Boolean#compare method instead.,FreeText,methodResultID==( ((Boolean) args[0]).compareTo(args[1]) ),1
1977,guava,com.google.common.primitives.Booleans_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Booleans,"Returns a comparator that compares two boolean arrays lexicographically. That is, it compares, using boolean)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [false] < [false, true] < [true]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with boolean[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
1978,guava,com.google.common.primitives.Booleans_goal.json,"indexOf(boolean[] array, boolean[] target)",indexOf,com.google.common.primitives.Booleans,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target.",FreeText,,0
1979,guava,com.google.common.primitives.Booleans_goal.json,"ensureCapacity(boolean[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Booleans,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
1980,guava,com.google.common.primitives.Booleans_goal.json,concat(boolean[]... arrays),concat,com.google.common.primitives.Booleans,"Returns the values from each provided array combined into a single array. For example, concat(new boolean[] {a, b, new boolean[] {}, new boolean[] {c}} returns the array {a, b, c}.",FreeText,,0
1981,guava,com.google.common.primitives.Booleans_goal.json,asList(boolean... backingArray),asList,com.google.common.primitives.Booleans,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Boolean objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
1982,guava,com.google.common.primitives.Booleans_goal.json,hashCode(boolean value),hashCode,com.google.common.primitives.Booleans,Returns a hash code for value; equal to the result of invoking ((Boolean) value).hashCode().,FreeText,methodResultID==(((Boolean) args[0]).hashCode()),1
1983,guava,com.google.common.primitives.Booleans_goal.json,"lastIndexOf(boolean[] array, boolean target)",lastIndexOf,com.google.common.primitives.Booleans,Returns the index of the last appearance of the value target in array.,FreeText,,0
1984,guava,com.google.common.primitives.Booleans_goal.json,"contains(boolean[] array, boolean target)",contains,com.google.common.primitives.Booleans,"Returns true if target is present as an element anywhere in array. <p>Note: consider representing the array as a java.util.BitSet instead, replacing Booleans.contains(array, true) with !bitSet.isEmpty() and Booleans.contains(array, false) with bitSet.nextClearBit(0) == sizeOfBitSet.",FreeText,,0
1985,guava,com.google.common.primitives.Booleans_goal.json,"indexOf(boolean[] array, boolean target)",indexOf,com.google.common.primitives.Booleans,"Returns the index of the first appearance of the value target in array. <p>Note: consider representing the array as a java.util.BitSet instead, and using java.util.BitSet#nextSetBit(int) or java.util.BitSet#nextClearBit(int).",FreeText,,0
1986,guava,com.google.common.primitives.Chars_goal.json,checkedCast(long value),checkedCast,com.google.common.primitives.Chars,"Returns the char value that is equal to value, if possible.",FreeText,,0
1987,guava,com.google.common.primitives.Chars_goal.json,min(char... array),min,com.google.common.primitives.Chars,Returns the least value present in array.,FreeText,,0
1988,guava,com.google.common.primitives.Chars_goal.json,"fromBytes(byte b1, byte b2)",fromBytes,com.google.common.primitives.Chars,"Returns the char value whose byte representation is the given 2 bytes, in big-endian order; equivalent to Chars.fromByteArray(new byte[] {b1, b2)}.",FreeText,"methodResultID==(Chars.fromByteArray(new byte[] {args[0], args[1]}))",1
1989,guava,com.google.common.primitives.Chars_goal.json,"compare(char a, char b)",compare,com.google.common.primitives.Chars,Compares the two specified char values. The sign of the value returned is the same as that of ((Character) a).compareTo(b). <p>Note for Java 7 and later: this method should be treated as deprecated; use the equivalent Character#compare method instead.,FreeText,methodResultID==( ((Character) args[0]).compareTo(args[1]) ),1
1990,guava,com.google.common.primitives.Chars_goal.json,"join(java.lang.String separator, char... array)",join,com.google.common.primitives.Chars,"Returns a string containing the supplied char values separated by separator. For example, join(""-"", '1', '2', '3') returns the string ""1-2-3"".",FreeText,,0
1991,guava,com.google.common.primitives.Chars_goal.json,toArray(java.util.Collection<java.lang.Character> collection),toArray,com.google.common.primitives.Chars,Copies a collection of Character instances into a new array of primitive char values. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.,FreeText,,0
1992,guava,com.google.common.primitives.Chars_goal.json,"indexOf(char[] array, char[] target)",indexOf,com.google.common.primitives.Chars,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target.",FreeText,,0
1993,guava,com.google.common.primitives.Chars_goal.json,asList(char... backingArray),asList,com.google.common.primitives.Chars,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Character objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
1994,guava,com.google.common.primitives.Chars_goal.json,saturatedCast(long value),saturatedCast,com.google.common.primitives.Chars,Returns the char nearest in value to value.,FreeText,,0
1995,guava,com.google.common.primitives.Chars_goal.json,concat(char[]... arrays),concat,com.google.common.primitives.Chars,"Returns the values from each provided array combined into a single array. For example, concat(new char[] {a, b, new char[] {}, new char[] {c}} returns the array {a, b, c}.",FreeText,,0
1996,guava,com.google.common.primitives.Chars_goal.json,"ensureCapacity(char[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Chars,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
1997,guava,com.google.common.primitives.Chars_goal.json,"contains(char[] array, char target)",contains,com.google.common.primitives.Chars,Returns true if target is present as an element anywhere in array.,FreeText,,0
1998,guava,com.google.common.primitives.Chars_goal.json,fromByteArray(byte[] bytes),fromByteArray,com.google.common.primitives.Chars,"Returns the char value whose big-endian representation is stored in the first 2 bytes of bytes; equivalent to ByteBuffer.wrap(bytes).getChar(). For example, the input byte array {0x54, 0x32} would yield the char value '\\u5432'. <p>Arguably, it's preferable to use java.nio.ByteBuffer; that library exposes much more flexibility at little cost in readability.",FreeText,methodResultID==(java.nio.ByteBuffer.wrap(args[0]).getChar()),1
1999,guava,com.google.common.primitives.Chars_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Chars,"Returns a comparator that compares two char arrays lexicographically. That is, it compares, using char)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < ['a'] < ['a', 'b'] < ['b']. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with char[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2000,guava,com.google.common.primitives.Chars_goal.json,toByteArray(char value),toByteArray,com.google.common.primitives.Chars,"Returns a big-endian representation of value in a 2-element byte array; equivalent to ByteBuffer.allocate(2).putChar(value).array(). For example, the input value '\\u5432' would yield the byte array {0x54, 0x32}. <p>If you need to convert and concatenate several values (possibly even of different types), use a shared java.nio.ByteBuffer instance, or use com.google.common.io.ByteStreams#newDataOutput() to get a growable buffer.",FreeText,"java.util.Arrays.equals(methodResultID, java.nio.ByteBuffer.allocate(2).putChar(args[0]).array())",1
2001,guava,com.google.common.primitives.Chars_goal.json,hashCode(char value),hashCode,com.google.common.primitives.Chars,Returns a hash code for value; equal to the result of invoking ((Character) value).hashCode().,FreeText,methodResultID==(((Character) args[0]).hashCode()),1
2002,guava,com.google.common.primitives.Chars_goal.json,"lastIndexOf(char[] array, char target)",lastIndexOf,com.google.common.primitives.Chars,Returns the index of the last appearance of the value target in array.,FreeText,,0
2003,guava,com.google.common.primitives.Chars_goal.json,max(char... array),max,com.google.common.primitives.Chars,Returns the greatest value present in array.,FreeText,,0
2004,guava,com.google.common.primitives.Chars_goal.json,"indexOf(char[] array, char target)",indexOf,com.google.common.primitives.Chars,Returns the index of the first appearance of the value target in array.,FreeText,,0
2005,guava,com.google.common.primitives.Doubles_goal.json,tryParse(java.lang.String string),tryParse,com.google.common.primitives.Doubles,"Parses the specified string as a double-precision floating point value. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike Double#parseDouble(String), this method returns null instead of throwing an exception if parsing fails. Valid inputs are exactly those accepted by Double#valueOf(String), except that leading and trailing whitespace is not permitted. <p>This implementation is likely to be faster than Double.parseDouble if many failures are expected.",FreeText,,0
2006,guava,com.google.common.primitives.Doubles_goal.json,max(double... array),max,com.google.common.primitives.Doubles,"Returns the greatest value present in array, using the same rules of comparison as double).",FreeText,,0
2007,guava,com.google.common.primitives.Doubles_goal.json,"compare(double a, double b)",compare,com.google.common.primitives.Doubles,"Compares the two specified double values. The sign of the value returned is the same as that of ((Double) a).{@linkplain Double#compareTo compareTo}(b). As with that method, NaN is treated as greater than all other values, and 0.0 > -0.0. <p>Note: this method simply delegates to the JDK method Double#compare. It is provided for consistency with the other primitive types, whose compare methods were not added to the JDK until JDK 7.",FreeText,,0
2008,guava,com.google.common.primitives.Doubles_goal.json,"join(java.lang.String separator, double... array)",join,com.google.common.primitives.Doubles,"Returns a string containing the supplied double values, converted to strings as specified by Double#toString(double), and separated by separator. For example, join(""-"", 1.0, 2.0, 3.0) returns the string ""1.0-2.0-3.0"". <p>Note that Double#toString(double) formats double differently in GWT sometimes. In the previous example, it returns the string ""1-2-3"".",FreeText,,0
2009,guava,com.google.common.primitives.Doubles_goal.json,"indexOf(double[] array, double[] target)",indexOf,com.google.common.primitives.Doubles,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target. <p>Note that this always returns -1 when target contains NaN.",FreeText,,0
2010,guava,com.google.common.primitives.Doubles_goal.json,concat(double[]... arrays),concat,com.google.common.primitives.Doubles,"Returns the values from each provided array combined into a single array. For example, concat(new double[] {a, b, new double[] {}, new double[] {c}} returns the array {a, b, c}.",FreeText,,0
2011,guava,com.google.common.primitives.Doubles_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Doubles,"Returns a comparator that compares two double arrays lexicographically. That is, it compares, using double)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [1.0] < [1.0, 2.0] < [2.0]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with double[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2012,guava,com.google.common.primitives.Doubles_goal.json,stringConverter(),stringConverter,com.google.common.primitives.Doubles,Returns a serializable converter object that converts between strings and doubles using Double#valueOf and Double#toString().,FreeText,,0
2013,guava,com.google.common.primitives.Doubles_goal.json,toArray(java.util.Collection<? extends java.lang.Number> collection),toArray,com.google.common.primitives.Doubles,"Returns an array containing each value of collection, converted to a double value in the manner of Number#doubleValue. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.",FreeText,,0
2014,guava,com.google.common.primitives.Doubles_goal.json,min(double... array),min,com.google.common.primitives.Doubles,"Returns the least value present in array, using the same rules of comparison as double).",FreeText,,0
2015,guava,com.google.common.primitives.Doubles_goal.json,asList(double... backingArray),asList,com.google.common.primitives.Doubles,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Double objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified. <p>The returned list may have unexpected behavior if it contains NaN, or if NaN is used as a parameter to any of its methods.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
2016,guava,com.google.common.primitives.Doubles_goal.json,"lastIndexOf(double[] array, double target)",lastIndexOf,com.google.common.primitives.Doubles,Returns the index of the last appearance of the value target in array. Note that this always returns -1 when target is NaN.,FreeText,,0
2017,guava,com.google.common.primitives.Doubles_goal.json,"ensureCapacity(double[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Doubles,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
2018,guava,com.google.common.primitives.Doubles_goal.json,"indexOf(double[] array, double target)",indexOf,com.google.common.primitives.Doubles,Returns the index of the first appearance of the value target in array. Note that this always returns -1 when target is NaN.,FreeText,,0
2019,guava,com.google.common.primitives.Doubles_goal.json,isFinite(double value),isFinite,com.google.common.primitives.Doubles,"Returns true if value represents a real number. This is equivalent to, but not necessarily implemented as, !(Double.isInfinite(value) || Double.isNaN(value)).",FreeText,methodResultID==(!(Double.isInfinite(args[0]) || Double.isNaN(args[0]))),1
2020,guava,com.google.common.primitives.Doubles_goal.json,hashCode(double value),hashCode,com.google.common.primitives.Doubles,Returns a hash code for value; equal to the result of invoking ((Double) value).hashCode().,FreeText,methodResultID==(((Double) args[0]).hashCode()),1
2021,guava,com.google.common.primitives.Doubles_goal.json,"contains(double[] array, double target)",contains,com.google.common.primitives.Doubles,Returns true if target is present as an element anywhere in array. Note that this always returns false when target is NaN.,FreeText,,0
2022,guava,com.google.common.primitives.Floats_goal.json,"ensureCapacity(float[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Floats,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
2023,guava,com.google.common.primitives.Floats_goal.json,asList(float... backingArray),asList,com.google.common.primitives.Floats,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Float objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified. <p>The returned list may have unexpected behavior if it contains NaN, or if NaN is used as a parameter to any of its methods.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
2024,guava,com.google.common.primitives.Floats_goal.json,"indexOf(float[] array, float target)",indexOf,com.google.common.primitives.Floats,Returns the index of the first appearance of the value target in array. Note that this always returns -1 when target is NaN.,FreeText,,0
2025,guava,com.google.common.primitives.Floats_goal.json,concat(float[]... arrays),concat,com.google.common.primitives.Floats,"Returns the values from each provided array combined into a single array. For example, concat(new float[] {a, b, new float[] {}, new float[] {c}} returns the array {a, b, c}.",FreeText,,0
2026,guava,com.google.common.primitives.Floats_goal.json,toArray(java.util.Collection<? extends java.lang.Number> collection),toArray,com.google.common.primitives.Floats,"Returns an array containing each value of collection, converted to a float value in the manner of Number#floatValue. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.",FreeText,,0
2027,guava,com.google.common.primitives.Floats_goal.json,stringConverter(),stringConverter,com.google.common.primitives.Floats,Returns a serializable converter object that converts between strings and floats using Float#valueOf and Float#toString().,FreeText,,0
2028,guava,com.google.common.primitives.Floats_goal.json,hashCode(float value),hashCode,com.google.common.primitives.Floats,Returns a hash code for value; equal to the result of invoking ((Float) value).hashCode().,FreeText,methodResultID==(((Float) args[0]).hashCode()),1
2029,guava,com.google.common.primitives.Floats_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Floats,"Returns a comparator that compares two float arrays lexicographically. That is, it compares, using float)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [1.0f] < [1.0f, 2.0f] < [2.0f]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with float[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2030,guava,com.google.common.primitives.Floats_goal.json,max(float... array),max,com.google.common.primitives.Floats,"Returns the greatest value present in array, using the same rules of comparison as float).",FreeText,,0
2031,guava,com.google.common.primitives.Floats_goal.json,"lastIndexOf(float[] array, float target)",lastIndexOf,com.google.common.primitives.Floats,Returns the index of the last appearance of the value target in array. Note that this always returns -1 when target is NaN.,FreeText,,0
2032,guava,com.google.common.primitives.Floats_goal.json,"join(java.lang.String separator, float... array)",join,com.google.common.primitives.Floats,"Returns a string containing the supplied float values, converted to strings as specified by Float#toString(float), and separated by separator. For example, join(""-"", 1.0f, 2.0f, 3.0f) returns the string ""1.0-2.0-3.0"". <p>Note that Float#toString(float) formats float differently in GWT. In the previous example, it returns the string ""1-2-3"".",FreeText,,0
2033,guava,com.google.common.primitives.Floats_goal.json,"contains(float[] array, float target)",contains,com.google.common.primitives.Floats,Returns true if target is present as an element anywhere in array. Note that this always returns false when target is NaN.,FreeText,,0
2034,guava,com.google.common.primitives.Floats_goal.json,"indexOf(float[] array, float[] target)",indexOf,com.google.common.primitives.Floats,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target. <p>Note that this always returns -1 when target contains NaN.",FreeText,,0
2035,guava,com.google.common.primitives.Floats_goal.json,isFinite(float value),isFinite,com.google.common.primitives.Floats,"Returns true if value represents a real number. This is equivalent to, but not necessarily implemented as, !(Float.isInfinite(value) || Float.isNaN(value)).",FreeText,methodResultID==(!(Float.isInfinite(args[0]) || Float.isNaN(args[0]))),1
2036,guava,com.google.common.primitives.Floats_goal.json,tryParse(java.lang.String string),tryParse,com.google.common.primitives.Floats,"Parses the specified string as a single-precision floating point value. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike Float#parseFloat(String), this method returns null instead of throwing an exception if parsing fails. Valid inputs are exactly those accepted by Float#valueOf(String), except that leading and trailing whitespace is not permitted. <p>This implementation is likely to be faster than Float.parseFloat if many failures are expected.",FreeText,,0
2037,guava,com.google.common.primitives.Floats_goal.json,"compare(float a, float b)",compare,com.google.common.primitives.Floats,"Compares the two specified float values using float). You may prefer to invoke that method directly; this method exists only for consistency with the other utilities in this package. <p>Note: this method simply delegates to the JDK method Float#compare. It is provided for consistency with the other primitive types, whose compare methods were not added to the JDK until JDK 7.",FreeText,,0
2038,guava,com.google.common.primitives.Floats_goal.json,min(float... array),min,com.google.common.primitives.Floats,"Returns the least value present in array, using the same rules of comparison as float).",FreeText,,0
2039,guava,com.google.common.primitives.Ints_goal.json,min(int... array),min,com.google.common.primitives.Ints,Returns the least value present in array.,FreeText,,0
2040,guava,com.google.common.primitives.Ints_goal.json,"indexOf(int[] array, int[] target)",indexOf,com.google.common.primitives.Ints,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target.",FreeText,,0
2041,guava,com.google.common.primitives.Ints_goal.json,concat(int[]... arrays),concat,com.google.common.primitives.Ints,"Returns the values from each provided array combined into a single array. For example, concat(new int[] {a, b, new int[] {}, new int[] {c}} returns the array {a, b, c}.",FreeText,,0
2042,guava,com.google.common.primitives.Ints_goal.json,toByteArray(int value),toByteArray,com.google.common.primitives.Ints,"Returns a big-endian representation of value in a 4-element byte array; equivalent to ByteBuffer.allocate(4).putInt(value).array(). For example, the input value 0x12131415 would yield the byte array {0x12, 0x13, 0x14, 0x15}. <p>If you need to convert and concatenate several values (possibly even of different types), use a shared java.nio.ByteBuffer instance, or use com.google.common.io.ByteStreams#newDataOutput() to get a growable buffer.",FreeText,"java.util.Arrays.equals(methodResultID, java.nio.ByteBuffer.allocate(4).putInt(args[0]).array())",1
2043,guava,com.google.common.primitives.Ints_goal.json,"ensureCapacity(int[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Ints,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
2044,guava,com.google.common.primitives.Ints_goal.json,toArray(java.util.Collection<? extends java.lang.Number> collection),toArray,com.google.common.primitives.Ints,"Returns an array containing each value of collection, converted to a int value in the manner of Number#intValue. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.",FreeText,,0
2045,guava,com.google.common.primitives.Ints_goal.json,"fromBytes(byte b1, byte b2, byte b3, byte b4)",fromBytes,com.google.common.primitives.Ints,"Returns the int value whose byte representation is the given 4 bytes, in big-endian order; equivalent to Ints.fromByteArray(new byte[] {b1, b2, b3, b4)}.",FreeText,"methodResultID==(Ints.fromByteArray(new byte[] {args[0], args[1], args[2], args[3]}))",1
2046,guava,com.google.common.primitives.Ints_goal.json,hashCode(int value),hashCode,com.google.common.primitives.Ints,Returns a hash code for value; equal to the result of invoking ((Integer) value).hashCode().,FreeText,methodResultID==(((Integer) args[0]).hashCode()),1
2047,guava,com.google.common.primitives.Ints_goal.json,"compare(int a, int b)",compare,com.google.common.primitives.Ints,Compares the two specified int values. The sign of the value returned is the same as that of ((Integer) a).compareTo(b). <p>Note for Java 7 and later: this method should be treated as deprecated; use the equivalent Integer#compare method instead.,FreeText,methodResultID==( ((Integer) args[0]).compareTo(args[1]) ),1
2048,guava,com.google.common.primitives.Ints_goal.json,max(int... array),max,com.google.common.primitives.Ints,Returns the greatest value present in array.,FreeText,,0
2049,guava,com.google.common.primitives.Ints_goal.json,"join(java.lang.String separator, int... array)",join,com.google.common.primitives.Ints,"Returns a string containing the supplied int values separated by separator. For example, join(""-"", 1, 2, 3) returns the string ""1-2-3"".",FreeText,,0
2050,guava,com.google.common.primitives.Ints_goal.json,stringConverter(),stringConverter,com.google.common.primitives.Ints,Returns a serializable converter object that converts between strings and integers using Integer#decode and Integer#toString().,FreeText,,0
2051,guava,com.google.common.primitives.Ints_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Ints,"Returns a comparator that compares two int arrays lexicographically. That is, it compares, using int)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [1] < [1, 2] < [2]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with int[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2052,guava,com.google.common.primitives.Ints_goal.json,asList(int... backingArray),asList,com.google.common.primitives.Ints,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Integer objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
2053,guava,com.google.common.primitives.Ints_goal.json,saturatedCast(long value),saturatedCast,com.google.common.primitives.Ints,Returns the int nearest in value to value.,FreeText,,0
2054,guava,com.google.common.primitives.Ints_goal.json,"indexOf(int[] array, int target)",indexOf,com.google.common.primitives.Ints,Returns the index of the first appearance of the value target in array.,FreeText,,0
2055,guava,com.google.common.primitives.Ints_goal.json,tryParse(java.lang.String string),tryParse,com.google.common.primitives.Ints,"Parses the specified string as a signed decimal integer value. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike Integer#parseInt(String), this method returns null instead of throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits, and returns null if non-ASCII digits are present in the string. <p>Note that strings prefixed with ASCII '+' are rejected, even under JDK 7, despite the change to Integer#parseInt(String) for that version.",FreeText,,0
2056,guava,com.google.common.primitives.Ints_goal.json,"lastIndexOf(int[] array, int target)",lastIndexOf,com.google.common.primitives.Ints,Returns the index of the last appearance of the value target in array.,FreeText,,0
2057,guava,com.google.common.primitives.Ints_goal.json,fromByteArray(byte[] bytes),fromByteArray,com.google.common.primitives.Ints,"Returns the int value whose big-endian representation is stored in the first 4 bytes of bytes; equivalent to ByteBuffer.wrap(bytes).getInt(). For example, the input byte array {0x12, 0x13, 0x14, 0x15, 0x33} would yield the int value 0x12131415. <p>Arguably, it's preferable to use java.nio.ByteBuffer; that library exposes much more flexibility at little cost in readability.",FreeText,methodResultID==(java.nio.ByteBuffer.wrap(args[0]).getInt()),1
2058,guava,com.google.common.primitives.Ints_goal.json,"tryParse(java.lang.String string, int radix)",tryParse,com.google.common.primitives.Ints,"Parses the specified string as a signed integer value using the specified radix. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike int), this method returns null instead of throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits, and returns null if non-ASCII digits are present in the string. <p>Note that strings prefixed with ASCII '+' are rejected, even under JDK 7, despite the change to int) for that version.",FreeText,,0
2059,guava,com.google.common.primitives.Ints_goal.json,"contains(int[] array, int target)",contains,com.google.common.primitives.Ints,Returns true if target is present as an element anywhere in array.,FreeText,,0
2060,guava,com.google.common.primitives.Ints_goal.json,checkedCast(long value),checkedCast,com.google.common.primitives.Ints,"Returns the int value that is equal to value, if possible.",FreeText,,0
2061,guava,com.google.common.primitives.Longs_goal.json,"indexOf(long[] array, long target)",indexOf,com.google.common.primitives.Longs,Returns the index of the first appearance of the value target in array.,FreeText,,0
2062,guava,com.google.common.primitives.Longs_goal.json,tryParse(java.lang.String string),tryParse,com.google.common.primitives.Longs,"Parses the specified string as a signed decimal long value. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike Long#parseLong(String), this method returns null instead of throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits, and returns null if non-ASCII digits are present in the string. <p>Note that strings prefixed with ASCII '+' are rejected, even under JDK 7, despite the change to Long#parseLong(String) for that version.",FreeText,,0
2063,guava,com.google.common.primitives.Longs_goal.json,asList(long... backingArray),asList,com.google.common.primitives.Longs,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Long objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
2064,guava,com.google.common.primitives.Longs_goal.json,"tryParse(java.lang.String string, int radix)",tryParse,com.google.common.primitives.Longs,"Parses the specified string as a signed long value using the specified radix. The ASCII character '-' ('&#92;u002D') is recognized as the minus sign. <p>Unlike int), this method returns null instead of throwing an exception if parsing fails. Additionally, this method only accepts ASCII digits, and returns null if non-ASCII digits are present in the string. <p>Note that strings prefixed with ASCII '+' are rejected, even under JDK 7, despite the change to int) for that version.",FreeText,,0
2065,guava,com.google.common.primitives.Longs_goal.json,"lastIndexOf(long[] array, long target)",lastIndexOf,com.google.common.primitives.Longs,Returns the index of the last appearance of the value target in array.,FreeText,,0
2066,guava,com.google.common.primitives.Longs_goal.json,"indexOf(long[] array, long[] target)",indexOf,com.google.common.primitives.Longs,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target.",FreeText,,0
2067,guava,com.google.common.primitives.Longs_goal.json,fromByteArray(byte[] bytes),fromByteArray,com.google.common.primitives.Longs,"Returns the long value whose big-endian representation is stored in the first 8 bytes of bytes; equivalent to ByteBuffer.wrap(bytes).getLong(). For example, the input byte array {0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19} would yield the long value 0x1213141516171819L. <p>Arguably, it's preferable to use java.nio.ByteBuffer; that library exposes much more flexibility at little cost in readability.",FreeText,methodResultID==(java.nio.ByteBuffer.wrap(args[0]).getLong()),1
2068,guava,com.google.common.primitives.Longs_goal.json,max(long... array),max,com.google.common.primitives.Longs,Returns the greatest value present in array.,FreeText,,0
2069,guava,com.google.common.primitives.Longs_goal.json,concat(long[]... arrays),concat,com.google.common.primitives.Longs,"Returns the values from each provided array combined into a single array. For example, concat(new long[] {a, b, new long[] {}, new long[] {c}} returns the array {a, b, c}.",FreeText,,0
2070,guava,com.google.common.primitives.Longs_goal.json,"ensureCapacity(long[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Longs,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
2071,guava,com.google.common.primitives.Longs_goal.json,"compare(long a, long b)",compare,com.google.common.primitives.Longs,Compares the two specified long values. The sign of the value returned is the same as that of ((Long) a).compareTo(b). <p>Note for Java 7 and later: this method should be treated as deprecated; use the equivalent Long#compare method instead.,FreeText,methodResultID==( ((Long) args[0]).compareTo(args[1]) ),1
2072,guava,com.google.common.primitives.Longs_goal.json,min(long... array),min,com.google.common.primitives.Longs,Returns the least value present in array.,FreeText,,0
2073,guava,com.google.common.primitives.Longs_goal.json,stringConverter(),stringConverter,com.google.common.primitives.Longs,Returns a serializable converter object that converts between strings and longs using Long#decode and Long#toString().,FreeText,,0
2074,guava,com.google.common.primitives.Longs_goal.json,"contains(long[] array, long target)",contains,com.google.common.primitives.Longs,Returns true if target is present as an element anywhere in array.,FreeText,,0
2075,guava,com.google.common.primitives.Longs_goal.json,toByteArray(long value),toByteArray,com.google.common.primitives.Longs,"Returns a big-endian representation of value in an 8-element byte array; equivalent to ByteBuffer.allocate(8).putLong(value).array(). For example, the input value 0x1213141516171819L would yield the byte array {0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19}. <p>If you need to convert and concatenate several values (possibly even of different types), use a shared java.nio.ByteBuffer instance, or use com.google.common.io.ByteStreams#newDataOutput() to get a growable buffer.",FreeText,"java.util.Arrays.equals(methodResultID, java.nio.ByteBuffer.allocate(8).putLong(args[0]).array())",1
2076,guava,com.google.common.primitives.Longs_goal.json,"fromBytes(byte b1, byte b2, byte b3, byte b4, byte b5, byte b6, byte b7, byte b8)",fromBytes,com.google.common.primitives.Longs,"Returns the long value whose byte representation is the given 8 bytes, in big-endian order; equivalent to Longs.fromByteArray(new byte[] {b1, b2, b3, b4, b5, b6, b7, b8)}.",FreeText,"methodResultID==(Longs.fromByteArray(new byte[] {args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]}))",1
2077,guava,com.google.common.primitives.Longs_goal.json,hashCode(long value),hashCode,com.google.common.primitives.Longs,"Returns a hash code for value; equal to the result of invoking ((Long) value).hashCode(). <p>This method always return the value specified by Long#hashCode() in java, which might be different from ((Long) value).hashCode() in GWT because Long#hashCode() in GWT does not obey the JRE contract.",FreeText,methodResultID==(((Long) args[0]).hashCode()),1
2078,guava,com.google.common.primitives.Longs_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Longs,"Returns a comparator that compares two long arrays lexicographically. That is, it compares, using long)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [1L] < [1L, 2L] < [2L]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with long[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2079,guava,com.google.common.primitives.Longs_goal.json,"join(java.lang.String separator, long... array)",join,com.google.common.primitives.Longs,"Returns a string containing the supplied long values separated by separator. For example, join(""-"", 1L, 2L, 3L) returns the string ""1-2-3"".",FreeText,,0
2080,guava,com.google.common.primitives.Longs_goal.json,toArray(java.util.Collection<? extends java.lang.Number> collection),toArray,com.google.common.primitives.Longs,"Returns an array containing each value of collection, converted to a long value in the manner of Number#longValue. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.",FreeText,,0
2081,guava,com.google.common.primitives.Shorts_goal.json,"indexOf(short[] array, short target)",indexOf,com.google.common.primitives.Shorts,Returns the index of the first appearance of the value target in array.,FreeText,,0
2082,guava,com.google.common.primitives.Shorts_goal.json,fromByteArray(byte[] bytes),fromByteArray,com.google.common.primitives.Shorts,"Returns the short value whose big-endian representation is stored in the first 2 bytes of bytes; equivalent to ByteBuffer.wrap(bytes).getShort(). For example, the input byte array {0x54, 0x32} would yield the short value 0x5432. <p>Arguably, it's preferable to use java.nio.ByteBuffer; that library exposes much more flexibility at little cost in readability.",FreeText,methodResultID==(java.nio.ByteBuffer.wrap(args[0]).getShort()),1
2083,guava,com.google.common.primitives.Shorts_goal.json,"join(java.lang.String separator, short... array)",join,com.google.common.primitives.Shorts,"Returns a string containing the supplied short values separated by separator. For example, join(""-"", (short) 1, (short) 2, (short) 3) returns the string ""1-2-3"".",FreeText,,0
2084,guava,com.google.common.primitives.Shorts_goal.json,lexicographicalComparator(),lexicographicalComparator,com.google.common.primitives.Shorts,"Returns a comparator that compares two short arrays lexicographically. That is, it compares, using short)), the first pair of values that follow any common prefix, or when one array is a prefix of the other, treats the shorter array as the lesser. For example, [] < [(short) 1] < [(short) 1, (short) 2] < [(short) 2]. <p>The returned comparator is inconsistent with Object#equals(Object) (since arrays support only identity equality), but it is consistent with short[]). @see Lexicographical order article at Wikipedia.",FreeText,,0
2085,guava,com.google.common.primitives.Shorts_goal.json,"indexOf(short[] array, short[] target)",indexOf,com.google.common.primitives.Shorts,"Returns the start position of the first occurrence of the specified target within array, or -1 if there is no such occurrence. <p>More formally, returns the lowest index i such that java.util.Arrays.copyOfRange(array, i, i + target.length) contains exactly the same elements as target.",FreeText,,0
2086,guava,com.google.common.primitives.Shorts_goal.json,max(short... array),max,com.google.common.primitives.Shorts,Returns the greatest value present in array.,FreeText,,0
2087,guava,com.google.common.primitives.Shorts_goal.json,"compare(short a, short b)",compare,com.google.common.primitives.Shorts,Compares the two specified short values. The sign of the value returned is the same as that of ((Short) a).compareTo(b). <p>Note for Java 7 and later: this method should be treated as deprecated; use the equivalent Short#compare method instead.,FreeText,methodResultID==( ((Short) args[0]).compareTo(args[1]) ),1
2088,guava,com.google.common.primitives.Shorts_goal.json,checkedCast(long value),checkedCast,com.google.common.primitives.Shorts,"Returns the short value that is equal to value, if possible.",FreeText,,0
2089,guava,com.google.common.primitives.Shorts_goal.json,toArray(java.util.Collection<? extends java.lang.Number> collection),toArray,com.google.common.primitives.Shorts,"Returns an array containing each value of collection, converted to a short value in the manner of Number#shortValue. <p>Elements are copied from the argument collection as if by collection.toArray(). Calling this method is as thread-safe as calling that method.",FreeText,,0
2090,guava,com.google.common.primitives.Shorts_goal.json,"ensureCapacity(short[] array, int minLength, int padding)",ensureCapacity,com.google.common.primitives.Shorts,"Returns an array containing the same values as array, but guaranteed to be of a specified minimum length. If array already has a length of at least minLength, it is returned directly. Otherwise, a new array of size minLength + padding is returned, containing the values of array, and zeroes in the remaining places.",FreeText,,0
2091,guava,com.google.common.primitives.Shorts_goal.json,hashCode(short value),hashCode,com.google.common.primitives.Shorts,Returns a hash code for value; equal to the result of invoking ((Short) value).hashCode().,FreeText,methodResultID==(((Short) args[0]).hashCode()),1
2092,guava,com.google.common.primitives.Shorts_goal.json,saturatedCast(long value),saturatedCast,com.google.common.primitives.Shorts,Returns the short nearest in value to value.,FreeText,,0
2093,guava,com.google.common.primitives.Shorts_goal.json,concat(short[]... arrays),concat,com.google.common.primitives.Shorts,"Returns the values from each provided array combined into a single array. For example, concat(new short[] {a, b, new short[] {}, new short[] {c}} returns the array {a, b, c}.",FreeText,,0
2094,guava,com.google.common.primitives.Shorts_goal.json,"contains(short[] array, short target)",contains,com.google.common.primitives.Shorts,Returns true if target is present as an element anywhere in array.,FreeText,,0
2095,guava,com.google.common.primitives.Shorts_goal.json,stringConverter(),stringConverter,com.google.common.primitives.Shorts,Returns a serializable converter object that converts between strings and shorts using Short#decode and Short#toString().,FreeText,,0
2096,guava,com.google.common.primitives.Shorts_goal.json,"lastIndexOf(short[] array, short target)",lastIndexOf,com.google.common.primitives.Shorts,Returns the index of the last appearance of the value target in array.,FreeText,,0
2097,guava,com.google.common.primitives.Shorts_goal.json,"fromBytes(byte b1, byte b2)",fromBytes,com.google.common.primitives.Shorts,"Returns the short value whose byte representation is the given 2 bytes, in big-endian order; equivalent to Shorts.fromByteArray(new byte[] {b1, b2)}.",FreeText,"methodResultID==(Shorts.fromByteArray(new byte[] {args[0], args[1]}))",1
2098,guava,com.google.common.primitives.Shorts_goal.json,asList(short... backingArray),asList,com.google.common.primitives.Shorts,"Returns a fixed-size list backed by the specified array, similar to Arrays#asList(Object[]). The list supports Object), but any attempt to set a value to null will result in a NullPointerException. <p>The returned list maintains the values, but not the identities, of Short objects written to or read from it. For example, whether list.get(0) == list.get(0) is true for the returned list is unspecified.",FreeText,methodResultID.equals(java.util.Arrays.asList(args[0])),1
2099,guava,com.google.common.primitives.Shorts_goal.json,toByteArray(short value),toByteArray,com.google.common.primitives.Shorts,"Returns a big-endian representation of value in a 2-element byte array; equivalent to ByteBuffer.allocate(2).putShort(value).array(). For example, the input value (short) 0x1234 would yield the byte array {0x12, 0x34}. <p>If you need to convert and concatenate several values (possibly even of different types), use a shared java.nio.ByteBuffer instance, or use com.google.common.io.ByteStreams#newDataOutput() to get a growable buffer.",FreeText,"java.util.Arrays.equals(methodResultID, java.nio.ByteBuffer.allocate(2).putShort(args[0]).array())",1
2100,guava,com.google.common.primitives.Shorts_goal.json,min(short... array),min,com.google.common.primitives.Shorts,Returns the least value present in array.,FreeText,,0
2101,guava,com.google.common.reflect.TypeToInstanceMap_goal.json,"putInstance(com.google.common.reflect.TypeToken<T> type, T value)",putInstance,com.google.common.reflect.TypeToInstanceMap,Maps the specified type to the specified value. Does not associate this value with any of the type's supertypes.,FreeText,,0
2102,guava,com.google.common.reflect.TypeToInstanceMap_goal.json,"putInstance(java.lang.Class<T> type, T value)",putInstance,com.google.common.reflect.TypeToInstanceMap,"Maps the specified class to the specified value. Does not associate this value with any of the class's supertypes. <p>putInstance(Foo.class, foo) is equivalent to putInstance(TypeToken.of(Foo.class), foo).",FreeText,,0
2103,guava,com.google.common.reflect.TypeToInstanceMap_goal.json,getInstance(java.lang.Class<T> type),getInstance,com.google.common.reflect.TypeToInstanceMap,"Returns the value the specified class is mapped to, or null if no entry for this class is present. This will only return a value that was bound to this specific class, not a value that may have been bound to a subtype. <p>getInstance(Foo.class) is equivalent to getInstance(TypeToken.of(Foo.class)).",FreeText,,0
2104,guava,com.google.common.reflect.TypeToInstanceMap_goal.json,getInstance(com.google.common.reflect.TypeToken<T> type),getInstance,com.google.common.reflect.TypeToInstanceMap,"Returns the value the specified type is mapped to, or null if no entry for this type is present. This will only return a value that was bound to this specific type, not a value that may have been bound to a subtype.",FreeText,,0
2105,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,newReentrantReadWriteLock(java.lang.String lockName),newReentrantReadWriteLock,com.google.common.util.concurrent.CycleDetectingLockFactory,"Equivalent to newReentrantReadWriteLock(lockName, false).",FreeText,"methodResultID.equals(receiverObjectClone.newReentrantReadWriteLock(args[0],false))",1
2106,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,"newInstanceWithExplicitOrdering(java.lang.Class<E> enumClass, com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy)",newInstanceWithExplicitOrdering,com.google.common.util.concurrent.CycleDetectingLockFactory,Creates a CycleDetectingLockFactory.WithExplicitOrdering<E>.,FreeText,,0
2107,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,createNodes(java.lang.Class<E> clazz),createNodes,com.google.common.util.concurrent.CycleDetectingLockFactory,"For a given Enum type, creates an immutable map from each of the Enum's values to a corresponding LockGraphNode, with the allowedPriorLocks and disallowedPriorLocks prepopulated with nodes according to the natural ordering of the associated Enum values.",FreeText,,0
2108,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,newReentrantLock(java.lang.String lockName),newReentrantLock,com.google.common.util.concurrent.CycleDetectingLockFactory,"Equivalent to newReentrantLock(lockName, false).",FreeText,"methodResultID.equals(receiverObjectClone.newReentrantLock(args[0],false))",1
2109,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,"newReentrantReadWriteLock(java.lang.String lockName, boolean fair)",newReentrantReadWriteLock,com.google.common.util.concurrent.CycleDetectingLockFactory,Creates a ReentrantReadWriteLock with the given fairness policy. The lockName is used in the warning or exception output to help identify the locks involved in the detected deadlock.,FreeText,,0
2110,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,"newReentrantLock(java.lang.String lockName, boolean fair)",newReentrantLock,com.google.common.util.concurrent.CycleDetectingLockFactory,Creates a ReentrantLock with the given fairness policy. The lockName is used in the warning or exception output to help identify the locks involved in the detected deadlock.,FreeText,,0
2111,guava,com.google.common.util.concurrent.CycleDetectingLockFactory_goal.json,newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy),newInstance,com.google.common.util.concurrent.CycleDetectingLockFactory,Creates a new factory with the specified policy.,FreeText,,0
2112,guava,com.google.common.util.concurrent.JdkFutureAdapters_goal.json,listenInPoolThread(java.util.concurrent.Future<V> future),listenInPoolThread,com.google.common.util.concurrent.JdkFutureAdapters,"Assigns a thread to the given Future to provide ListenableFuture functionality. <p>Warning: If the input future does not already implement ListenableFuture, the returned future will emulate ListenableFuture#addListener by taking a thread from an internal, unbounded pool at the first call to addListener and holding it until the future is {@linkplain Future#isDone() done}. <p>Prefer to create ListenableFuture instances with SettableFuture, java.util.concurrent.ExecutorService), ListenableFutureTask, AbstractFuture, and other utilities over creating plain Future instances to be upgraded to ListenableFuture after the fact.",FreeText,,0
2113,guava,com.google.common.util.concurrent.JdkFutureAdapters_goal.json,"listenInPoolThread(java.util.concurrent.Future<V> future, java.util.concurrent.Executor executor)",listenInPoolThread,com.google.common.util.concurrent.JdkFutureAdapters,"Submits a blocking task for the given Future to provide ListenableFuture functionality. <p>Warning: If the input future does not already implement ListenableFuture, the returned future will emulate ListenableFuture#addListener by submitting a task to the given executor at the first call to addListener. The task must be started by the executor promptly, or else the returned ListenableFuture may fail to work. The task's execution consists of blocking until the input future is {@linkplain Future#isDone() done}, so each call to this method may claim and hold a thread for an arbitrary length of time. Use of bounded executors or other executors that may fail to execute a task promptly may result in deadlocks. <p>Prefer to create ListenableFuture instances with SettableFuture, java.util.concurrent.ExecutorService), ListenableFutureTask, AbstractFuture, and other utilities over creating plain Future instances to be upgraded to ListenableFuture after the fact.",FreeText,,0
2114,guava,com.google.common.util.concurrent.Monitor_goal.json,enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard guard),enterWhenUninterruptibly,com.google.common.util.concurrent.Monitor,Enters this monitor when the guard is satisfied. Blocks indefinitely.,FreeText,,0
2115,guava,com.google.common.util.concurrent.Monitor_goal.json,"enterInterruptibly(long time, java.util.concurrent.TimeUnit unit)",enterInterruptibly,com.google.common.util.concurrent.Monitor,"Enters this monitor. Blocks at most the given time, and may be interrupted.",FreeText,,0
2116,guava,com.google.common.util.concurrent.Monitor_goal.json,waitFor(com.google.common.util.concurrent.Monitor$Guard guard),waitFor,com.google.common.util.concurrent.Monitor,"Waits for the guard to be satisfied. Waits indefinitely, but may be interrupted. May be called only by a thread currently occupying this monitor.",FreeText,,0
2117,guava,com.google.common.util.concurrent.Monitor_goal.json,hasQueuedThreads(),hasQueuedThreads,com.google.common.util.concurrent.Monitor,"Returns whether any threads are waiting to enter this monitor. Note that because cancellations may occur at any time, a true return does not guarantee that any other thread will ever enter this monitor. This method is designed primarily for use in monitoring of the system state.",FreeText,,0
2118,guava,com.google.common.util.concurrent.Monitor_goal.json,hasQueuedThread(java.lang.Thread thread),hasQueuedThread,com.google.common.util.concurrent.Monitor,"Queries whether the given thread is waiting to enter this monitor. Note that because cancellations may occur at any time, a true return does not guarantee that this thread will ever enter this monitor. This method is designed primarily for use in monitoring of the system state.",FreeText,,0
2119,guava,com.google.common.util.concurrent.Monitor_goal.json,leave(),leave,com.google.common.util.concurrent.Monitor,Leaves this monitor. May be called only by a thread currently occupying this monitor.,FreeText,,0
2120,guava,com.google.common.util.concurrent.Monitor_goal.json,com.google.common.util.concurrent.Monitor(boolean fair),com.google.common.util.concurrent.Monitor,com.google.common.util.concurrent.Monitor,Creates a monitor with the given ordering policy.,FreeText,,0
2121,guava,com.google.common.util.concurrent.Monitor_goal.json,"enterWhen(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",enterWhen,com.google.common.util.concurrent.Monitor,"Enters this monitor when the guard is satisfied. Blocks at most the given time, including both the time to acquire the lock and the time to wait for the guard to be satisfied, and may be interrupted.",FreeText,,0
2122,guava,com.google.common.util.concurrent.Monitor_goal.json,isFair(),isFair,com.google.common.util.concurrent.Monitor,Returns whether this monitor is using a fair ordering policy.,FreeText,,0
2123,guava,com.google.common.util.concurrent.Monitor_goal.json,getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard guard),getWaitQueueLength,com.google.common.util.concurrent.Monitor,"Returns an estimate of the number of threads waiting for the given guard to become satisfied. Note that because timeouts and interrupts may occur at any time, the estimate serves only as an upper bound on the actual number of waiters. This method is designed for use in monitoring of the system state, not for synchronization control.",FreeText,,0
2124,guava,com.google.common.util.concurrent.Monitor_goal.json,tryEnter(),tryEnter,com.google.common.util.concurrent.Monitor,Enters this monitor if it is possible to do so immediately. Does not block. <p>Note: This method disregards the fairness setting of this monitor.,FreeText,,0
2125,guava,com.google.common.util.concurrent.Monitor_goal.json,"waitFor(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",waitFor,com.google.common.util.concurrent.Monitor,"Waits for the guard to be satisfied. Waits at most the given time, and may be interrupted. May be called only by a thread currently occupying this monitor.",FreeText,,0
2126,guava,com.google.common.util.concurrent.Monitor_goal.json,tryEnterIf(com.google.common.util.concurrent.Monitor$Guard guard),tryEnterIf,com.google.common.util.concurrent.Monitor,Enters this monitor if it is possible to do so immediately and the guard is satisfied. Does not block acquiring the lock and does not wait for the guard to be satisfied. <p>Note: This method disregards the fairness setting of this monitor.,FreeText,,0
2127,guava,com.google.common.util.concurrent.Monitor_goal.json,enterIf(com.google.common.util.concurrent.Monitor$Guard guard),enterIf,com.google.common.util.concurrent.Monitor,"Enters this monitor if the guard is satisfied. Blocks indefinitely acquiring the lock, but does not wait for the guard to be satisfied.",FreeText,,0
2128,guava,com.google.common.util.concurrent.Monitor_goal.json,"enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",enterIfInterruptibly,com.google.common.util.concurrent.Monitor,"Enters this monitor if the guard is satisfied. Blocks at most the given time acquiring the lock, but does not wait for the guard to be satisfied, and may be interrupted.",FreeText,,0
2129,guava,com.google.common.util.concurrent.Monitor_goal.json,com.google.common.util.concurrent.Monitor(),com.google.common.util.concurrent.Monitor,com.google.common.util.concurrent.Monitor,Creates a monitor with a non-fair (but fast) ordering policy. Equivalent to Monitor(false).,FreeText,new Monitor().equals(new Monitor(false)),1
2130,guava,com.google.common.util.concurrent.Monitor_goal.json,enterInterruptibly(),enterInterruptibly,com.google.common.util.concurrent.Monitor,"Enters this monitor. Blocks indefinitely, but may be interrupted.",FreeText,,0
2131,guava,com.google.common.util.concurrent.Monitor_goal.json,getOccupiedDepth(),getOccupiedDepth,com.google.common.util.concurrent.Monitor,Returns the number of times the current thread has entered this monitor in excess of the number of times it has left. Returns 0 if the current thread is not occupying this monitor.,FreeText,,0
2132,guava,com.google.common.util.concurrent.Monitor_goal.json,"waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",waitForUninterruptibly,com.google.common.util.concurrent.Monitor,Waits for the guard to be satisfied. Waits at most the given time. May be called only by a thread currently occupying this monitor.,FreeText,,0
2133,guava,com.google.common.util.concurrent.Monitor_goal.json,"enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",enterWhenUninterruptibly,com.google.common.util.concurrent.Monitor,"Enters this monitor when the guard is satisfied. Blocks at most the given time, including both the time to acquire the lock and the time to wait for the guard to be satisfied.",FreeText,,0
2134,guava,com.google.common.util.concurrent.Monitor_goal.json,"enter(long time, java.util.concurrent.TimeUnit unit)",enter,com.google.common.util.concurrent.Monitor,Enters this monitor. Blocks at most the given time.,FreeText,,0
2135,guava,com.google.common.util.concurrent.Monitor_goal.json,waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard guard),waitForUninterruptibly,com.google.common.util.concurrent.Monitor,Waits for the guard to be satisfied. Waits indefinitely. May be called only by a thread currently occupying this monitor.,FreeText,,0
2136,guava,com.google.common.util.concurrent.Monitor_goal.json,enter(),enter,com.google.common.util.concurrent.Monitor,Enters this monitor. Blocks indefinitely.,FreeText,,0
2137,guava,com.google.common.util.concurrent.Monitor_goal.json,enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard guard),enterIfInterruptibly,com.google.common.util.concurrent.Monitor,"Enters this monitor if the guard is satisfied. Blocks indefinitely acquiring the lock, but does not wait for the guard to be satisfied, and may be interrupted.",FreeText,,0
2138,guava,com.google.common.util.concurrent.Monitor_goal.json,hasWaiters(com.google.common.util.concurrent.Monitor$Guard guard),hasWaiters,com.google.common.util.concurrent.Monitor,"Queries whether any threads are waiting for the given guard to become satisfied. Note that because timeouts and interrupts may occur at any time, a true return does not guarantee that the guard becoming satisfied in the future will awaken any threads. This method is designed primarily for use in monitoring of the system state.",FreeText,,0
2139,guava,com.google.common.util.concurrent.Monitor_goal.json,"enterIf(com.google.common.util.concurrent.Monitor$Guard guard, long time, java.util.concurrent.TimeUnit unit)",enterIf,com.google.common.util.concurrent.Monitor,"Enters this monitor if the guard is satisfied. Blocks at most the given time acquiring the lock, but does not wait for the guard to be satisfied.",FreeText,,0
2140,guava,com.google.common.util.concurrent.Monitor_goal.json,isOccupiedByCurrentThread(),isOccupiedByCurrentThread,com.google.common.util.concurrent.Monitor,Returns whether the current thread is occupying this monitor (has entered more times than it has left).,FreeText,,0
2141,guava,com.google.common.util.concurrent.Monitor_goal.json,enterWhen(com.google.common.util.concurrent.Monitor$Guard guard),enterWhen,com.google.common.util.concurrent.Monitor,"Enters this monitor when the guard is satisfied. Blocks indefinitely, but may be interrupted.",FreeText,,0
2142,guava,com.google.common.util.concurrent.Monitor_goal.json,getQueueLength(),getQueueLength,com.google.common.util.concurrent.Monitor,"Returns an estimate of the number of threads waiting to enter this monitor. The value is only an estimate because the number of threads may change dynamically while this method traverses internal data structures. This method is designed for use in monitoring of the system state, not for synchronization control.",FreeText,,0
2143,guava,com.google.common.util.concurrent.Monitor_goal.json,isOccupied(),isOccupied,com.google.common.util.concurrent.Monitor,"Returns whether this monitor is occupied by any thread. This method is designed for use in monitoring of the system state, not for synchronization control.",FreeText,,0
2144,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"renamingDecorator(java.util.concurrent.ExecutorService service, com.google.common.base.Supplier<java.lang.String> nameSupplier)",renamingDecorator,com.google.common.util.concurrent.MoreExecutors,"Creates an ExecutorService that renames the threads that its tasks run in. <p>The names are retrieved from the nameSupplier on the thread that is being renamed right before each task is run. The renaming is best effort, if a SecurityManager prevents the renaming then it will be skipped but the tasks will still execute.",FreeText,,0
2145,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"renamingDecorator(java.util.concurrent.ScheduledExecutorService service, com.google.common.base.Supplier<java.lang.String> nameSupplier)",renamingDecorator,com.google.common.util.concurrent.MoreExecutors,"Creates a ScheduledExecutorService that renames the threads that its tasks run in. <p>The names are retrieved from the nameSupplier on the thread that is being renamed right before each task is run. The renaming is best effort, if a SecurityManager prevents the renaming then it will be skipped but the tasks will still execute.",FreeText,,0
2146,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService executorService, java.util.Collection<? extends java.util.concurrent.Callable<T>> tasks, boolean timed, long nanos)",invokeAnyImpl,com.google.common.util.concurrent.MoreExecutors,An implementation of ExecutorService#invokeAny for ListeningExecutorService implementations.,FreeText,,0
2147,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,directExecutor(),directExecutor,com.google.common.util.concurrent.MoreExecutors,"Returns an Executor that runs each task in the thread that invokes execute, as in CallerRunsPolicy. <p>This instance is equivalent to: final class DirectExecutor implements Executor { public void execute(Runnable r) { r.run(); }} <p>This should be preferred to newDirectExecutorService() because the implementing the ExecutorService subinterface necessitates significant performance overhead.",FreeText,,0
2148,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor executor),getExitingExecutorService,com.google.common.util.concurrent.MoreExecutors,"Converts the given ThreadPoolExecutor into an ExecutorService that exits when the application is complete. It does so by using daemon threads and adding a shutdown hook to wait for their completion. <p>This method waits 120 seconds before continuing with JVM termination, even if the executor has not finished its work. <p>This is mainly for fixed thread pools. See Executors#newFixedThreadPool(int).",FreeText,,0
2149,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"shutdownAndAwaitTermination(java.util.concurrent.ExecutorService service, long timeout, java.util.concurrent.TimeUnit unit)",shutdownAndAwaitTermination,com.google.common.util.concurrent.MoreExecutors,"Shuts down the given executor gradually, first disabling new submissions and later cancelling existing tasks. <p>The method takes the following steps: <li>calls ExecutorService#shutdown(), disabling acceptance of new submitted tasks. <li>waits for half of the specified timeout. <li>if the timeout expires, it calls ExecutorService#shutdownNow(), cancelling pending tasks and interrupting running tasks. <li>waits for the other half of the specified timeout. <p>If, at any step of the process, the calling thread is interrupted, the method calls ExecutorService#shutdownNow() and returns.",FreeText,,0
2150,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,listeningDecorator(java.util.concurrent.ExecutorService delegate),listeningDecorator,com.google.common.util.concurrent.MoreExecutors,"Creates an ExecutorService whose submit and invokeAll methods submit ListenableFutureTask instances to the given delegate executor. Those methods, as well as execute and invokeAny, are implemented in terms of calls to delegate.execute. All other methods are forwarded unchanged to the delegate. This implies that the returned ListeningExecutorService never calls the delegate's submit, invokeAll, and invokeAny methods, so any special handling of tasks must be implemented in the delegate's execute method or by wrapping the returned ListeningExecutorService. <p>If the delegate executor was already an instance of ListeningExecutorService, it is returned untouched, and the rest of this documentation does not apply.",FreeText,,0
2151,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,listeningDecorator(java.util.concurrent.ScheduledExecutorService delegate),listeningDecorator,com.google.common.util.concurrent.MoreExecutors,"Creates a ScheduledExecutorService whose submit and invokeAll methods submit ListenableFutureTask instances to the given delegate executor. Those methods, as well as execute and invokeAny, are implemented in terms of calls to delegate.execute. All other methods are forwarded unchanged to the delegate. This implies that the returned ListeningScheduledExecutorService never calls the delegate's submit, invokeAll, and invokeAny methods, so any special handling of tasks must be implemented in the delegate's execute method or by wrapping the returned ListeningScheduledExecutorService. <p>If the delegate executor was already an instance of ListeningScheduledExecutorService, it is returned untouched, and the rest of this documentation does not apply.",FreeText,,0
2152,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"renamingDecorator(java.util.concurrent.Executor executor, com.google.common.base.Supplier<java.lang.String> nameSupplier)",renamingDecorator,com.google.common.util.concurrent.MoreExecutors,"Creates an Executor that renames the threads that its tasks run in. <p>The names are retrieved from the nameSupplier on the thread that is being renamed right before each task is run. The renaming is best effort, if a SecurityManager prevents the renaming then it will be skipped but the tasks will still execute.",FreeText,,0
2153,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor executor, long terminationTimeout, java.util.concurrent.TimeUnit timeUnit)",getExitingExecutorService,com.google.common.util.concurrent.MoreExecutors,Converts the given ThreadPoolExecutor into an ExecutorService that exits when the application is complete. It does so by using daemon threads and adding a shutdown hook to wait for their completion. <p>This is mainly for fixed thread pools. See Executors#newFixedThreadPool(int).,FreeText,,0
2154,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"addDelayedShutdownHook(java.util.concurrent.ExecutorService service, long terminationTimeout, java.util.concurrent.TimeUnit timeUnit)",addDelayedShutdownHook,com.google.common.util.concurrent.MoreExecutors,"Add a shutdown hook to wait for thread completion in the given service. This is useful if the given service uses daemon threads, and we want to keep the JVM from exiting immediately on shutdown, instead giving these daemon threads a chance to terminate normally.",FreeText,,0
2155,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,newDirectExecutorService(),newDirectExecutorService,com.google.common.util.concurrent.MoreExecutors,"Creates an executor service that runs each task in the thread that invokes execute/submit, as in CallerRunsPolicy This applies both to individually submitted tasks and to collections of tasks submitted via invokeAll or invokeAny. In the latter case, tasks will run serially on the calling thread. Tasks are run to completion before a Future is returned to the caller (unless the executor has been shutdown). <p>Although all tasks are immediately executed in the thread that submitted the task, this ExecutorService imposes a small locking overhead on each task submission in order to implement shutdown and termination behavior. <p>The implementation deviates from the ExecutorService specification with regards to the shutdownNow method. First, ""best-effort"" with regards to canceling running tasks is implemented as ""no-effort"". No interrupts or other attempts are made to stop threads executing tasks. Second, the returned list will always be empty, as any submitted task is considered to have started execution. This applies also to tasks given to invokeAll or invokeAny which are pending serial execution, even the subset of the tasks that have not yet started execution. It is unclear from the ExecutorService specification if these should be included, and it's much easier to implement the interpretation that they not be. Finally, a call to shutdown or shutdownNow may result in concurrent calls to invokeAll/invokeAny throwing RejectedExecutionException, although a subset of the tasks may already have been executed.",FreeText,,0
2156,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,sameThreadExecutor(),sameThreadExecutor,com.google.common.util.concurrent.MoreExecutors,"Creates an executor service that runs each task in the thread that invokes execute/submit, as in CallerRunsPolicy. This applies both to individually submitted tasks and to collections of tasks submitted via invokeAll or invokeAny. In the latter case, tasks will run serially on the calling thread. Tasks are run to completion before a Future is returned to the caller (unless the executor has been shutdown). <p>Although all tasks are immediately executed in the thread that submitted the task, this ExecutorService imposes a small locking overhead on each task submission in order to implement shutdown and termination behavior. <p>The implementation deviates from the ExecutorService specification with regards to the shutdownNow method. First, ""best-effort"" with regards to canceling running tasks is implemented as ""no-effort"". No interrupts or other attempts are made to stop threads executing tasks. Second, the returned list will always be empty, as any submitted task is considered to have started execution. This applies also to tasks given to invokeAll or invokeAny which are pending serial execution, even the subset of the tasks that have not yet started execution. It is unclear from the ExecutorService specification if these should be included, and it's much easier to implement the interpretation that they not be. Finally, a call to shutdown or shutdownNow may result in concurrent calls to invokeAll/invokeAny throwing RejectedExecutionException, although a subset of the tasks may already have been executed.",FreeText,,0
2157,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"newThread(java.lang.String name, java.lang.Runnable runnable)",newThread,com.google.common.util.concurrent.MoreExecutors,"Creates a thread using platformThreadFactory, and sets its name to name unless changing the name is forbidden by the security manager.",FreeText,,0
2158,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,"getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor executor, long terminationTimeout, java.util.concurrent.TimeUnit timeUnit)",getExitingScheduledExecutorService,com.google.common.util.concurrent.MoreExecutors,Converts the given ScheduledThreadPoolExecutor into a ScheduledExecutorService that exits when the application is complete. It does so by using daemon threads and adding a shutdown hook to wait for their completion. <p>This is mainly for fixed thread pools. See Executors#newScheduledThreadPool(int).,FreeText,,0
2159,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,platformThreadFactory(),platformThreadFactory,com.google.common.util.concurrent.MoreExecutors,"Returns a default thread factory used to create new threads. <p>On AppEngine, returns ThreadManager.currentRequestThreadFactory(). Otherwise, returns Executors#defaultThreadFactory().",FreeText,,0
2160,guava,com.google.common.util.concurrent.MoreExecutors_goal.json,getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor executor),getExitingScheduledExecutorService,com.google.common.util.concurrent.MoreExecutors,"Converts the given ThreadPoolExecutor into a ScheduledExecutorService that exits when the application is complete. It does so by using daemon threads and adding a shutdown hook to wait for their completion. <p>This method waits 120 seconds before continuing with JVM termination, even if the executor has not finished its work. <p>This is mainly for fixed thread pools. See Executors#newScheduledThreadPool(int).",FreeText,,0
2161,guava,com.google.common.util.concurrent.RateLimiter_goal.json,acquire(),acquire,com.google.common.util.concurrent.RateLimiter,"Acquires a single permit from this RateLimiter, blocking until the request can be granted. Tells the amount of time slept, if any. <p>This method is equivalent to acquire(1).",FreeText,methodResultID==(receiverObjectClone.acquire(1)),1
2162,guava,com.google.common.util.concurrent.RateLimiter_goal.json,toString(),toString,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2163,guava,com.google.common.util.concurrent.RateLimiter_goal.json,tryAcquire(int permits),tryAcquire,com.google.common.util.concurrent.RateLimiter,"Acquires permits from this RateLimiter if it can be acquired immediately without delay. <p> This method is equivalent to tryAcquire(permits, 0, anyUnit).",FreeText,,0
2164,guava,com.google.common.util.concurrent.RateLimiter_goal.json,tryAcquire(),tryAcquire,com.google.common.util.concurrent.RateLimiter,Acquires a permit from this RateLimiter if it can be acquired immediately without delay. <p> This method is equivalent to tryAcquire(1).,FreeText,methodResultID==(receiverObjectClone.tryAcquire(1)),1
2165,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"reserveAndGetWaitLength(int permits, long nowMicros)",reserveAndGetWaitLength,com.google.common.util.concurrent.RateLimiter,Reserves next ticket and returns the wait time that the caller must wait for.,FreeText,,0
2166,guava,com.google.common.util.concurrent.RateLimiter_goal.json,getRate(),getRate,com.google.common.util.concurrent.RateLimiter,"Returns the stable rate (as permits per seconds) with which this RateLimiter is configured with. The initial value of this is the same as the permitsPerSecond argument passed in the factory method that produced this RateLimiter, and it is only updated after invocations to {@linkplain #setRate}.",FreeText,,0
2167,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"tryAcquire(long timeout, java.util.concurrent.TimeUnit unit)",tryAcquire,com.google.common.util.concurrent.RateLimiter,"Acquires a permit from this RateLimiter if it can be obtained without exceeding the specified timeout, or returns false immediately (without waiting) if the permit would not have been granted before the timeout expired. <p>This method is equivalent to tryAcquire(1, timeout, unit).",FreeText,"methodResultID==(receiverObjectClone.tryAcquire(1,args[0],args[1]))",1
2168,guava,com.google.common.util.concurrent.RateLimiter_goal.json,com.google.common.util.concurrent.RateLimiter(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch stopwatch),com.google.common.util.concurrent.RateLimiter,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2169,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"tryAcquire(int permits, long timeout, java.util.concurrent.TimeUnit unit)",tryAcquire,com.google.common.util.concurrent.RateLimiter,"Acquires the given number of permits from this RateLimiter if it can be obtained without exceeding the specified timeout, or returns false immediately (without waiting) if the permits would not have been granted before the timeout expired.",FreeText,,0
2170,guava,com.google.common.util.concurrent.RateLimiter_goal.json,queryEarliestAvailable(long nowMicros),queryEarliestAvailable,com.google.common.util.concurrent.RateLimiter,Returns the earliest time that permits are available (with one caveat).,FreeText,,0
2171,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"doSetRate(double permitsPerSecond, long nowMicros)",doSetRate,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2172,guava,com.google.common.util.concurrent.RateLimiter_goal.json,doGetRate(),doGetRate,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2173,guava,com.google.common.util.concurrent.RateLimiter_goal.json,acquire(int permits),acquire,com.google.common.util.concurrent.RateLimiter,"Acquires the given number of permits from this RateLimiter, blocking until the request can be granted. Tells the amount of time slept, if any.",FreeText,,0
2174,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"reserveEarliestAvailable(int permits, long nowMicros)",reserveEarliestAvailable,com.google.common.util.concurrent.RateLimiter,Reserves the requested number of permits and returns the time that those permits can be used (with one caveat).,FreeText,,0
2175,guava,com.google.common.util.concurrent.RateLimiter_goal.json,create(double permitsPerSecond),create,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2176,guava,com.google.common.util.concurrent.RateLimiter_goal.json,reserve(int permits),reserve,com.google.common.util.concurrent.RateLimiter,"Reserves the given number of permits from this RateLimiter for future use, returning the number of microseconds until the reservation can be consumed.",FreeText,,0
2177,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"create(double permitsPerSecond, long warmupPeriod, java.util.concurrent.TimeUnit unit)",create,com.google.common.util.concurrent.RateLimiter,"Creates a RateLimiter with the specified stable throughput, given as ""permits per second"" (commonly referred to as QPS, queries per second), and a warmup period, during which the RateLimiter smoothly ramps up its rate, until it reaches its maximum rate at the end of the period (as long as there are enough requests to saturate it). Similarly, if the RateLimiter is left unused for a duration of warmupPeriod, it will gradually return to its ""cold"" state, i.e. it will go through the same warming up process as when it was first created. <p>The returned RateLimiter is intended for cases where the resource that actually fulfills the requests (e.g., a remote server) needs ""warmup"" time, rather than being immediately accessed at the stable (maximum) rate. <p>The returned RateLimiter starts in a ""cold"" state (i.e. the warmup period will follow), and if it is left unused for long enough, it will return to that state.",FreeText,,0
2178,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"create(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch stopwatch, double permitsPerSecond, long warmupPeriod, java.util.concurrent.TimeUnit unit, double coldFactor)",create,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2179,guava,com.google.common.util.concurrent.RateLimiter_goal.json,setRate(double permitsPerSecond),setRate,com.google.common.util.concurrent.RateLimiter,"Updates the stable rate of this RateLimiter, that is, the permitsPerSecond argument provided in the factory method that constructed the RateLimiter. Currently throttled threads will not be awakened as a result of this invocation, thus they do not observe the new rate; only subsequent requests will. <p>Note though that, since each request repays (by waiting, if necessary) the cost of the previous request, this means that the very next request after an invocation to setRate will not be affected by the new rate; it will pay the cost of the previous request, which is in terms of the previous rate. <p>The behavior of the RateLimiter is not modified in any other way, e.g. if the RateLimiter was configured with a warmup period of 20 seconds, it still has a warmup period of 20 seconds after this method invocation.",FreeText,,0
2180,guava,com.google.common.util.concurrent.RateLimiter_goal.json,"create(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch stopwatch, double permitsPerSecond)",create,com.google.common.util.concurrent.RateLimiter,.,FreeText,,0
2181,gwt,com.google.gwt.animation.client.Animation_goal.json,cancel(),cancel,com.google.gwt.animation.client.Animation,"Immediately cancel this animation. If the animation is running or is scheduled to run, #onCancel() will be called.",FreeText,,0
2182,gwt,com.google.gwt.animation.client.Animation_goal.json,"run(int duration, double startTime)",run,com.google.gwt.animation.client.Animation,"Run this animation at the given startTime. If the startTime has already passed, the animation will run synchronously as if it started at the specified start time. If the animation is already running, it will be canceled first.  This is equivalent to run(duration, startTime, null).",FreeText,"receiverObjectClone.run(args[0],args[1],null); receiverObjectClone.equals(receiverObjectID)",1
2183,gwt,com.google.gwt.animation.client.Animation_goal.json,interpolate(double progress),interpolate,com.google.gwt.animation.client.Animation,"Interpolate the linear progress into a more natural easing function. Depending on the Animation, the return value of this method can be less than 0.0 or greater than 1.0.",FreeText,,0
2184,gwt,com.google.gwt.animation.client.Animation_goal.json,com.google.gwt.animation.client.Animation(com.google.gwt.animation.client.AnimationScheduler scheduler),com.google.gwt.animation.client.Animation,com.google.gwt.animation.client.Animation,Construct a new AnimationScheduler using the specified scheduler to sheduler request frames.,FreeText,,0
2185,gwt,com.google.gwt.animation.client.Animation_goal.json,run(int duration),run,com.google.gwt.animation.client.Animation,"Immediately run this animation. If the animation is already running, it will be canceled first.  This is equivalent to run(duration, null).",FreeText,"receiverObjectClone.run(args[0],null); receiverObjectClone.equals(receiverObjectID)",1
2186,gwt,com.google.gwt.animation.client.Animation_goal.json,"run(int duration, com.google.gwt.dom.client.Element element)",run,com.google.gwt.animation.client.Animation,"Immediately run this animation. If the animation is already running, it will be canceled first.  If the element is not null, the #onUpdate(double) method might be called only if the element may be visible (generally left at the appreciation of the browser). Otherwise, it will be called unconditionally.",FreeText,,0
2187,gwt,com.google.gwt.animation.client.Animation_goal.json,"run(int duration, double startTime, com.google.gwt.dom.client.Element element)",run,com.google.gwt.animation.client.Animation,"Run this animation at the given startTime. If the startTime has already passed, the animation will run synchronously as if it started at the specified start time. If the animation is already running, it will be canceled first.  If the element is not null, the #onUpdate(double) method might be called only if the element may be visible (generally left at the appreciation of the browser). Otherwise, it will be called unconditionally.",FreeText,,0
2188,gwt,com.google.gwt.animation.client.Animation_goal.json,onStart(),onStart,com.google.gwt.animation.client.Animation,Called immediately before the animation starts.,FreeText,,0
2189,gwt,com.google.gwt.animation.client.Animation_goal.json,onComplete(),onComplete,com.google.gwt.animation.client.Animation,Called immediately after the animation completes.,FreeText,,0
2190,gwt,com.google.gwt.animation.client.Animation_goal.json,com.google.gwt.animation.client.Animation(),com.google.gwt.animation.client.Animation,com.google.gwt.animation.client.Animation,Construct a new Animation.,FreeText,,0
2191,gwt,com.google.gwt.animation.client.Animation_goal.json,onCancel(),onCancel,com.google.gwt.animation.client.Animation,Called immediately after the animation is canceled. The default implementation of this method calls #onComplete() only if the animation has actually started running.,FreeText,,0
2192,gwt,com.google.gwt.animation.client.Animation_goal.json,onUpdate(double progress),onUpdate,com.google.gwt.animation.client.Animation,"Called when the animation should be updated. The value of progress is between 0.0 and 1.0 (inclusive) (unless you override the #interpolate(double) method to provide a wider range of values). There is no guarantee that #onUpdate(double) is called with 0.0 or 1.0. If you need to perform setup or tear down procedures, you can override #onStart() and #onComplete().",FreeText,,0
2193,gwt,com.google.gwt.core.client.impl.WeakMapping_goal.json,"get(java.lang.Object instance, java.lang.String key)",get,com.google.gwt.core.client.impl.WeakMapping,"Returns the Object associated with the given key in the (key, value) mapping associated with the given Object instance.",FreeText,,0
2194,gwt,com.google.gwt.core.client.impl.WeakMapping_goal.json,"set(java.lang.Object instance, java.lang.String key, java.lang.Object value)",set,com.google.gwt.core.client.impl.WeakMapping,"Associates a value with a given key in the (key, value) mapping associated with the given Object instance. Note that the key space is module-wide, so some care should be taken to choose sufficiently unique identifiers.  Due to restrictions of the Production Mode implementation, the instance argument must not be a String.",FreeText,,0
2195,gwt,com.google.gwt.core.client.impl.WeakMapping_goal.json,"setWeak(java.lang.Object instance, java.lang.String key, java.lang.Object value)",setWeak,com.google.gwt.core.client.impl.WeakMapping,"Like #set(Object, String, Object), but doesn't guarantee that value can be retrieved.",FreeText,,0
2196,gwt,com.google.gwt.core.client.JsDate_goal.json,toDateString(),toDateString,com.google.gwt.core.client.JsDate,Returns a date string in the local time zone.,FreeText,,0
2197,gwt,com.google.gwt.core.client.JsDate_goal.json,toLocaleDateString(),toLocaleDateString,com.google.gwt.core.client.JsDate,Returns a date string in the local time zone according to local formatting conventions.,FreeText,,0
2198,gwt,com.google.gwt.core.client.JsDate_goal.json,toLocaleTimeString(),toLocaleTimeString,com.google.gwt.core.client.JsDate,Returns a time string in the local time zone according to local formatting conventions.,FreeText,,0
2199,gwt,com.google.gwt.core.client.JsDate_goal.json,getTimezoneOffset(),getTimezoneOffset,com.google.gwt.core.client.JsDate,"Returns the difference, in minutes, between the local and UTC representations of this date. The value returned is affected by whether or not daylight savings time would be in effect on specified date.",FreeText,,0
2200,gwt,com.google.gwt.core.client.JsDate_goal.json,setTime(double milliseconds),setTime,com.google.gwt.core.client.JsDate,Sets the internal date representation. Returns the milliseconds argument.,FreeText,,0
2201,gwt,com.google.gwt.core.client.JsDate_goal.json,setYear(int year),setYear,com.google.gwt.core.client.JsDate,Sets a two-digit year. @deprecated Use #setFullYear(int).,FreeText,methodResultID==(receiverObjectClone.setFullYear(args[0])),1
2202,gwt,com.google.gwt.core.client.JsDate_goal.json,getTime(),getTime,com.google.gwt.core.client.JsDate,"Returns the internal millisecond representation of the date, the number of milliseconds since midnight on January 1st, 1970. This is the same representation returned by #getTime().",FreeText,,0
2203,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCMonth(int month),setUTCMonth,com.google.gwt.core.client.JsDate,"Sets the month, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2204,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCHours(),getUTCHours,com.google.gwt.core.client.JsDate,"Returns the hour, between 0 (midnight) and 23, in UTC.",FreeText,,0
2205,gwt,com.google.gwt.core.client.JsDate_goal.json,"UTC(int year, int month, int dayOfMonth, int hours, int minutes, int seconds, int millis)",UTC,com.google.gwt.core.client.JsDate,Returns the internal millisecond representation of the specified UTC date and time.,FreeText,,0
2206,gwt,com.google.gwt.core.client.JsDate_goal.json,getMilliseconds(),getMilliseconds,com.google.gwt.core.client.JsDate,"Returns the milliseconds, between 0 and 999.",FreeText,,0
2207,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month, int dayOfMonth, int hours, int minutes)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2208,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month, int dayOfMonth, int hours, int minutes, int seconds, int millis)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2209,gwt,com.google.gwt.core.client.JsDate_goal.json,"setHours(int hours, int mins, int secs, int ms)",setHours,com.google.gwt.core.client.JsDate,"Sets the hour, minutes, seconds, and milliseconds. Returns the millisecond representation of the adjusted date.",FreeText,,0
2210,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCMilliseconds(),getUTCMilliseconds,com.google.gwt.core.client.JsDate,"Returns the milliseconds, between 0 and 999, in UTC.",FreeText,,0
2211,gwt,com.google.gwt.core.client.JsDate_goal.json,getYear(),getYear,com.google.gwt.core.client.JsDate,Returns the year minus 1900. @deprecated Use #getFullYear().,FreeText,methodResultID==(receiverObjectClone.getFullYear()),1
2212,gwt,com.google.gwt.core.client.JsDate_goal.json,"setHours(int hours, int mins, int secs)",setHours,com.google.gwt.core.client.JsDate,"Sets the hour, minutes, and seconds. Returns the millisecond representation of the adjusted date.",FreeText,,0
2213,gwt,com.google.gwt.core.client.JsDate_goal.json,getHours(),getHours,com.google.gwt.core.client.JsDate,"Returns the hour, between 0 (midnight) and 23.",FreeText,,0
2214,gwt,com.google.gwt.core.client.JsDate_goal.json,setDate(int dayOfMonth),setDate,com.google.gwt.core.client.JsDate,Sets the day of the month. Returns the millisecond representation of the adjusted date.,FreeText,,0
2215,gwt,com.google.gwt.core.client.JsDate_goal.json,"setMinutes(int minutes, int seconds, int millis)",setMinutes,com.google.gwt.core.client.JsDate,"Sets the minutes, seconds, and milliseconds. Returns the millisecond representation of the adjusted date.",FreeText,,0
2216,gwt,com.google.gwt.core.client.JsDate_goal.json,"setMinutes(int minutes, int seconds)",setMinutes,com.google.gwt.core.client.JsDate,Sets the minutes and seconds. Returns the millisecond representation of the adjusted date.,FreeText,,0
2217,gwt,com.google.gwt.core.client.JsDate_goal.json,getDate(),getDate,com.google.gwt.core.client.JsDate,Returns the day of the month.,FreeText,,0
2218,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCHours(int hours),setUTCHours,com.google.gwt.core.client.JsDate,"Sets the hour, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2219,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCHours(int hours, int mins, int secs)",setUTCHours,com.google.gwt.core.client.JsDate,"Sets the hour, minutes, and seconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2220,gwt,com.google.gwt.core.client.JsDate_goal.json,setFullYear(int year),setFullYear,com.google.gwt.core.client.JsDate,Sets the year. Returns the millisecond representation of the adjusted date.,FreeText,,0
2221,gwt,com.google.gwt.core.client.JsDate_goal.json,setSeconds(int seconds),setSeconds,com.google.gwt.core.client.JsDate,Sets the seconds. Returns the millisecond representation of the adjusted date.,FreeText,,0
2222,gwt,com.google.gwt.core.client.JsDate_goal.json,getFullYear(),getFullYear,com.google.gwt.core.client.JsDate,Returns the four-digit year.,FreeText,,0
2223,gwt,com.google.gwt.core.client.JsDate_goal.json,"setFullYear(int year, int month, int day)",setFullYear,com.google.gwt.core.client.JsDate,"Sets the year, month, and day. Returns the millisecond representation of the adjusted date.",FreeText,,0
2224,gwt,com.google.gwt.core.client.JsDate_goal.json,getMinutes(),getMinutes,com.google.gwt.core.client.JsDate,"Returns the minutes, between 0 and 59.",FreeText,,0
2225,gwt,com.google.gwt.core.client.JsDate_goal.json,"setSeconds(int seconds, int millis)",setSeconds,com.google.gwt.core.client.JsDate,Sets the seconds and milliseconds. Returns the millisecond representation of the adjusted date.,FreeText,,0
2226,gwt,com.google.gwt.core.client.JsDate_goal.json,"setFullYear(int year, int month)",setFullYear,com.google.gwt.core.client.JsDate,Sets the year and month. Returns the millisecond representation of the adjusted date.,FreeText,,0
2227,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCMinutes(int minutes, int seconds, int millis)",setUTCMinutes,com.google.gwt.core.client.JsDate,"Sets the minutes, seconds, and milliseconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2228,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCDay(),getUTCDay,com.google.gwt.core.client.JsDate,"Returns the day of the week, from 0 (Sunday) to 6 Saturday, in UTC.",FreeText,,0
2229,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCSeconds(int seconds),setUTCSeconds,com.google.gwt.core.client.JsDate,"Sets the seconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2230,gwt,com.google.gwt.core.client.JsDate_goal.json,create(double milliseconds),create,com.google.gwt.core.client.JsDate,"Creates a new date with the specified internal representation, which is the number of milliseconds since midnight on January 1st, 1970. This is the same representation returned by #getTime().",FreeText,methodResultID.equals(receiverObjectClone.getTime()),1
2231,gwt,com.google.gwt.core.client.JsDate_goal.json,getDay(),getDay,com.google.gwt.core.client.JsDate,"Returns the day of the week, from 0 (Sunday) to 6 Saturday.",FreeText,,0
2232,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCSeconds(),getUTCSeconds,com.google.gwt.core.client.JsDate,"Returns the seconds, between 0 and 59, in UTC.",FreeText,,0
2233,gwt,com.google.gwt.core.client.JsDate_goal.json,com.google.gwt.core.client.JsDate(),com.google.gwt.core.client.JsDate,com.google.gwt.core.client.JsDate,"Non directly instantiable, use one of the #create() methods.",FreeText,,0
2234,gwt,com.google.gwt.core.client.JsDate_goal.json,parse(java.lang.String dateString),parse,com.google.gwt.core.client.JsDate,"Parses a string representation of a date and time and returns the internal millisecond representation. If the string cannot be parsed, the returned value will be NaN. Use Double#isNaN(double) to check the result.",FreeText,,0
2235,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCFullYear(int year, int month, int day)",setUTCFullYear,com.google.gwt.core.client.JsDate,"Sets the year, month, and day, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2236,gwt,com.google.gwt.core.client.JsDate_goal.json,toLocaleString(),toLocaleString,com.google.gwt.core.client.JsDate,Returns a date and time string in the local time zone according to local formatting conventions.,FreeText,,0
2237,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCFullYear(int year),setUTCFullYear,com.google.gwt.core.client.JsDate,"Sets the year, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2238,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCMinutes(int minutes),setUTCMinutes,com.google.gwt.core.client.JsDate,"Sets the minutes, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2239,gwt,com.google.gwt.core.client.JsDate_goal.json,getMonth(),getMonth,com.google.gwt.core.client.JsDate,"Returns the month, from 0 (January) to 6 December.",FreeText,,0
2240,gwt,com.google.gwt.core.client.JsDate_goal.json,setMonth(int month),setMonth,com.google.gwt.core.client.JsDate,Sets the month. Returns the millisecond representation of the adjusted date.,FreeText,,0
2241,gwt,com.google.gwt.core.client.JsDate_goal.json,getSeconds(),getSeconds,com.google.gwt.core.client.JsDate,"Returns the seconds, between 0 and 59.",FreeText,,0
2242,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCDate(),getUTCDate,com.google.gwt.core.client.JsDate,"Returns the day of the month, in UTC.",FreeText,,0
2243,gwt,com.google.gwt.core.client.JsDate_goal.json,valueOf(),valueOf,com.google.gwt.core.client.JsDate,"Returns the millisecond representation, as #getTime().",FreeText,methodResultID==(receiverObjectClone.getTime()),1
2244,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCMonth(),getUTCMonth,com.google.gwt.core.client.JsDate,"Returns the month, from 0 (January) to 6 December, in UTC.",FreeText,,0
2245,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month, int dayOfMonth, int hours)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2246,gwt,com.google.gwt.core.client.JsDate_goal.json,setUTCDate(int dayOfMonth),setUTCDate,com.google.gwt.core.client.JsDate,"Sets the day of the month, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2247,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2248,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCFullYear(),getUTCFullYear,com.google.gwt.core.client.JsDate,"Returns the four-digit year, in UTC.",FreeText,,0
2249,gwt,com.google.gwt.core.client.JsDate_goal.json,toTimeString(),toTimeString,com.google.gwt.core.client.JsDate,Returns a time string in the local time zone.,FreeText,,0
2250,gwt,com.google.gwt.core.client.JsDate_goal.json,create(java.lang.String dateString),create,com.google.gwt.core.client.JsDate,Creates a new date from a string to be parsed.,FreeText,,0
2251,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month, int dayOfMonth)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2252,gwt,com.google.gwt.core.client.JsDate_goal.json,"setMonth(int month, int dayOfMonth)",setMonth,com.google.gwt.core.client.JsDate,Sets the month and day. Returns the millisecond representation of the adjusted date.,FreeText,,0
2253,gwt,com.google.gwt.core.client.JsDate_goal.json,toUTCString(),toUTCString,com.google.gwt.core.client.JsDate,Returns a date and time string in UTC.,FreeText,,0
2254,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCMonth(int month, int dayOfMonth)",setUTCMonth,com.google.gwt.core.client.JsDate,"Sets the month and day, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2255,gwt,com.google.gwt.core.client.JsDate_goal.json,"setHours(int hours, int mins)",setHours,com.google.gwt.core.client.JsDate,Sets the hour and minutes. Returns the millisecond representation of the adjusted date.,FreeText,,0
2256,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCHours(int hours, int mins, int secs, int ms)",setUTCHours,com.google.gwt.core.client.JsDate,"Sets the hour, minutes, seconds, and milliseconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2257,gwt,com.google.gwt.core.client.JsDate_goal.json,create(),create,com.google.gwt.core.client.JsDate,Creates a new date with the current time.,FreeText,,0
2258,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCHours(int hours, int mins)",setUTCHours,com.google.gwt.core.client.JsDate,"Sets the hour and minutes, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2259,gwt,com.google.gwt.core.client.JsDate_goal.json,toGMTString(),toGMTString,com.google.gwt.core.client.JsDate,Returns a date and time string in GMT. @deprecated Use #toUTCString().,FreeText,methodResultID.equals(receiverObjectClone.toUTCString()),1
2260,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCFullYear(int year, int month)",setUTCFullYear,com.google.gwt.core.client.JsDate,"Sets the year and month, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2261,gwt,com.google.gwt.core.client.JsDate_goal.json,"create(int year, int month, int dayOfMonth, int hours, int minutes, int seconds)",create,com.google.gwt.core.client.JsDate,Creates a new date using the specified values.,FreeText,,0
2262,gwt,com.google.gwt.core.client.JsDate_goal.json,setHours(int hours),setHours,com.google.gwt.core.client.JsDate,Sets the hour. Returns the millisecond representation of the adjusted date.,FreeText,,0
2263,gwt,com.google.gwt.core.client.JsDate_goal.json,setMinutes(int minutes),setMinutes,com.google.gwt.core.client.JsDate,Sets the minutes. Returns the millisecond representation of the adjusted date.,FreeText,,0
2264,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCMinutes(int minutes, int seconds)",setUTCMinutes,com.google.gwt.core.client.JsDate,"Sets the minutes and seconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2265,gwt,com.google.gwt.core.client.JsDate_goal.json,"setUTCSeconds(int seconds, int millis)",setUTCSeconds,com.google.gwt.core.client.JsDate,"Sets the seconds and milliseconds, in UTC. Returns the millisecond representation of the adjusted date.",FreeText,,0
2266,gwt,com.google.gwt.core.client.JsDate_goal.json,getUTCMinutes(),getUTCMinutes,com.google.gwt.core.client.JsDate,"Returns the minutes, between 0 and 59, in UTC.",FreeText,,0
2267,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,addTo(com.google.gwt.i18n.client.AutoDirectionHandler$Target target),addTo,com.google.gwt.i18n.client.AutoDirectionHandler,"Operates like #addTo(Target, DirectionEstimator), but always uses a default DirectionEstimator, com.google.gwt.i18n.shared.WordCountDirectionEstimator.",FreeText,"methodResultID.equals(receiverObjectID.addTo(args[0], com.google.gwt.i18n.shared.WordCountDirectionEstimator))",1
2268,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,setDirectionEstimator(boolean enabled),setDirectionEstimator,com.google.gwt.i18n.client.AutoDirectionHandler,Toggles direction estimation on (using a default estimator) and off.,FreeText,,0
2269,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,"addTo(com.google.gwt.i18n.client.AutoDirectionHandler$Target target, boolean enabled)",addTo,com.google.gwt.i18n.client.AutoDirectionHandler,"Operates like #addTo(Target, DirectionEstimator), but uses a default DirectionEstimator, com.google.gwt.i18n.shared.WordCountDirectionEstimator if enabled, or else a null DirectionEstimator, which means disabling direction estimation.",FreeText,"methodResultID.equals(receiverObjectID.addTo(args[0]), com.google.gwt.i18n.shared.WordCountDirectionEstimator)) ||  methodResultID.equals(receiverObjectID.addTo(args[0]), null))",1
2270,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,getDirectionEstimator(),getDirectionEstimator,com.google.gwt.i18n.client.AutoDirectionHandler,Returns the DirectionEstimator object.,FreeText,,0
2271,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,onKeyUp(com.google.gwt.event.dom.client.KeyUpEvent event),onKeyUp,com.google.gwt.i18n.client.AutoDirectionHandler,Automatically adjusts hasDirection's direction on KeyUpEvent events. Implementation of KeyUpHandler interface method.,FreeText,,0
2272,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,"addTo(com.google.gwt.i18n.client.AutoDirectionHandler$Target target, com.google.gwt.i18n.shared.DirectionEstimator directionEstimator)",addTo,com.google.gwt.i18n.client.AutoDirectionHandler,"Adds auto-direction adjustment to a given object: - Creates an AutoDirectionHandler. - Initializes it with the given DirectionEstimator. - Adds it as an event handler for the relevant events on the given object. - Returns the AutoDirectionHandler, so its setAutoDir() method can be called when the object's text changes by means other than the handled events.",FreeText,,0
2273,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,setDirectionEstimator(com.google.gwt.i18n.shared.DirectionEstimator directionEstimator),setDirectionEstimator,com.google.gwt.i18n.client.AutoDirectionHandler,Sets the DirectionEstimator object.,FreeText,,0
2274,gwt,com.google.gwt.i18n.client.AutoDirectionHandler_goal.json,refreshDirection(),refreshDirection,com.google.gwt.i18n.client.AutoDirectionHandler,Adjusts target's direction according to the estimated direction of the text it supplies.,FreeText,,0
2275,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,getCurrencyCode(),getCurrencyCode,com.google.gwt.i18n.client.CurrencyData,Returns the ISO4217 code for this currency.,FreeText,,0
2276,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,isSymbolPositionFixed(),isSymbolPositionFixed,com.google.gwt.i18n.client.CurrencyData,"Returns true if the position of the currency symbol relative to the number is fixed regardless of locale defaults. In this case, the position will be determined by #isSymbolPrefix().",FreeText,,0
2277,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,getDefaultFractionDigits(),getDefaultFractionDigits,com.google.gwt.i18n.client.CurrencyData,Returns the default number of decimal positions for this currency.,FreeText,,0
2278,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,getPortableCurrencySymbol(),getPortableCurrencySymbol,com.google.gwt.i18n.client.CurrencyData,"Returns the default symbol to use for this currency, intended to be recognizable in most locales. If such a symbol is not available, it is acceptable to return the same value as #getCurrencySymbol().",FreeText,methodResultID.equals(receiverObjectClone.getCurrencySymbol()),1
2279,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,isSymbolPrefix(),isSymbolPrefix,com.google.gwt.i18n.client.CurrencyData,"Returns true if the currency symbol should go before the number, false if it should go after the number. This is ignored unless #isSymbolPositionFixed() is true.",FreeText,,0
2280,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,isSpacingFixed(),isSpacingFixed,com.google.gwt.i18n.client.CurrencyData,"Returns true if the spacing between the currency symbol and the number is fixed regardless of locale defaults. In this case, spacing will be determined by #isSpaceForced().",FreeText,,0
2281,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,getSimpleCurrencySymbol(),getSimpleCurrencySymbol,com.google.gwt.i18n.client.CurrencyData,"Returns the simplest symbol to use for this currency, which is not guaranteed to be unique -- for example, this might return ""$"" for both USD and CAD. It is acceptable to return the same value as #getCurrencySymbol().",FreeText,methodResultID.equals(receiverObjectClone.getCurrencySymbol()),1
2282,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,getCurrencySymbol(),getCurrencySymbol,com.google.gwt.i18n.client.CurrencyData,Returns the default symbol to use for this currency.,FreeText,,0
2283,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,isDeprecated(),isDeprecated,com.google.gwt.i18n.client.CurrencyData,Returns true if this currency is deprecated and should not be returned by default in currency lists.,FreeText,,0
2284,gwt,com.google.gwt.i18n.client.CurrencyData_goal.json,isSpaceForced(),isSpaceForced,com.google.gwt.i18n.client.CurrencyData,"Returns true if there should always be a space between the currency symbol and the number, false if there should be no space. Ignored unless #isSpacingFixed() returns true.",FreeText,,0
2285,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getMatchLocale(),getMatchLocale,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2286,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getRequiredString(java.lang.String key),getRequiredString,com.google.gwt.i18n.rebind.AbstractResource,Get a string and fail if not present.,FreeText,,0
2287,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,setPath(java.lang.String path),setPath,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2288,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getPath(),getPath,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2289,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getString(java.lang.String key),getString,com.google.gwt.i18n.rebind.AbstractResource,Get a key.,FreeText,,0
2290,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,"getExtendedKey(java.lang.String key, java.lang.String extension)",getExtendedKey,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2291,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,"getStringExt(java.lang.String key, java.lang.String extension)",getStringExt,com.google.gwt.i18n.rebind.AbstractResource,Get a key with an extension. Identical to getString() if extension is null.,FreeText,if(extension==null) {methodResultID.equals(getString())},1
2292,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getExtensions(java.lang.String key),getExtensions,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2293,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,com.google.gwt.i18n.rebind.AbstractResource(com.google.gwt.i18n.shared.GwtLocale matchLocale),com.google.gwt.i18n.rebind.AbstractResource,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2294,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,"getRequiredStringExt(java.lang.String key, java.lang.String extension)",getRequiredStringExt,com.google.gwt.i18n.rebind.AbstractResource,Get a string (with optional extension) and fail if not present.,FreeText,,0
2295,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,notEmpty(),notEmpty,com.google.gwt.i18n.rebind.AbstractResource,Returns true if this resource has any keys.,FreeText,,0
2296,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,getEntry(java.lang.String key),getEntry,com.google.gwt.i18n.rebind.AbstractResource,Returns an entry in this resource.,FreeText,,0
2297,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,keySet(),keySet,com.google.gwt.i18n.rebind.AbstractResource,Keys associated with this resource.,FreeText,,0
2298,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,toVerboseString(),toVerboseString,com.google.gwt.i18n.rebind.AbstractResource,A multi-line representation of this object.,FreeText,,0
2299,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,toString(),toString,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2300,gwt,com.google.gwt.i18n.rebind.AbstractResource_goal.json,addToKeySet(java.util.Set<java.lang.String> s),addToKeySet,com.google.gwt.i18n.rebind.AbstractResource,,FreeText,,0
2301,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"unicodeWrapWithKnownDirBase(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml, boolean dirReset)",unicodeWrapWithKnownDirBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#unicodeWrapWithKnownDir(HasDirection.Direction, String, boolean, boolean)",FreeText,,0
2302,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"estimateDirection(java.lang.String str, boolean isHtml)",estimateDirection,com.google.gwt.i18n.shared.BidiFormatterBase,"Estimates the direction of a string using the best known general-purpose method, i.e. using relative word counts. Direction.DEFAULT return value indicates completely neutral input.",FreeText,,0
2303,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"dirAttrBase(java.lang.String str, boolean isHtml)",dirAttrBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#dirAttr(String, boolean)",FreeText,,0
2304,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,knownDirAttrBase(com.google.gwt.i18n.client.HasDirection$Direction dir),knownDirAttrBase,com.google.gwt.i18n.shared.BidiFormatterBase,@see BidiFormatter#knownDirAttr(HasDirection.Direction),FreeText,,0
2305,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"spanWrapBase(java.lang.String str, boolean isHtml, boolean dirReset)",spanWrapBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#spanWrap(String, boolean, boolean)",FreeText,,0
2306,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"com.google.gwt.i18n.shared.BidiFormatterBase(com.google.gwt.i18n.client.HasDirection$Direction contextDir, boolean alwaysSpan)",com.google.gwt.i18n.shared.BidiFormatterBase,com.google.gwt.i18n.shared.BidiFormatterBase,,FreeText,,0
2307,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"spanWrapWithKnownDirBase(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml, boolean dirReset)",spanWrapWithKnownDirBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#spanWrapWithKnownDir(HasDirection.Direction, String, boolean, boolean)",FreeText,,0
2308,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"unicodeWrapBase(java.lang.String str, boolean isHtml, boolean dirReset)",unicodeWrapBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#unicodeWrap(String, boolean, boolean)",FreeText,,0
2309,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,getContextDir(),getContextDir,com.google.gwt.i18n.shared.BidiFormatterBase,Returns the context direction.,FreeText,,0
2310,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,isRtlContext(),isRtlContext,com.google.gwt.i18n.shared.BidiFormatterBase,Returns whether the context direction is RTL.,FreeText,,0
2311,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,getAlwaysSpan(),getAlwaysSpan,com.google.gwt.i18n.shared.BidiFormatterBase,"Returns whether the span structure added by the formatter should be stable, i.e., spans added even when the direction does not need to be declared.",FreeText,,0
2312,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,startEdgeBase(),startEdgeBase,com.google.gwt.i18n.shared.BidiFormatterBase,@see BidiFormatter#startEdge,FreeText,,0
2313,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,markBase(),markBase,com.google.gwt.i18n.shared.BidiFormatterBase,@see BidiFormatter#mark(),FreeText,,0
2314,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,endEdgeBase(),endEdgeBase,com.google.gwt.i18n.shared.BidiFormatterBase,@see BidiFormatter#endEdge,FreeText,,0
2315,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,"markAfterBase(java.lang.String str, boolean isHtml)",markAfterBase,com.google.gwt.i18n.shared.BidiFormatterBase,"@see BidiFormatter#markAfter(String, boolean)",FreeText,,0
2316,gwt,com.google.gwt.i18n.shared.BidiFormatterBase_goal.json,estimateDirection(java.lang.String str),estimateDirection,com.google.gwt.i18n.shared.BidiFormatterBase,"Like #estimateDirection(String, boolean), but assumes isHtml is false.",FreeText,"methodResultID.equals(receiverObjectID.estimateDirection(args[0], false)",1
2317,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"spanWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str)",spanWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Like #spanWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection.Direction, String, boolean, boolean), but assumes isHtml is false and dirReset is true.",FreeText,"methodResultID.equals(spanWrapWithKnownDir(args[0], args[1], false, true))",1
2318,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,getInstance(com.google.gwt.i18n.client.HasDirection$Direction contextDir),getInstance,com.google.gwt.i18n.shared.BidiFormatter,Factory for creating an instance of BidiFormatter given the context direction. The default behavior of #spanWrap and its variations is set to avoid span wrapping unless it's necessary ('dir' attribute needs to be set).,FreeText,,0
2319,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,getInstance(boolean rtlContext),getInstance,com.google.gwt.i18n.shared.BidiFormatter,Factory for creating an instance of BidiFormatter given the context direction. The default behavior of #spanWrap and its variations is set to avoid span wrapping unless it's necessary ('dir' attribute needs to be set).,FreeText,,0
2320,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,mark(),mark,com.google.gwt.i18n.shared.BidiFormatter,"Returns the Unicode BiDi mark matching the context direction (LRM for LTR context direction, RLM for RTL context direction), or the empty string for default / unknown context direction.",FreeText,,0
2321,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,markAfter(java.lang.String str),markAfter,com.google.gwt.i18n.shared.BidiFormatter,"Like #markAfter(String, boolean), but assumes isHtml is false.",FreeText,"methodResultID.equals(markAfter(args[0],false))",1
2322,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"spanWrap(java.lang.String str, boolean isHtml)",spanWrap,com.google.gwt.i18n.shared.BidiFormatter,"Like #spanWrap(String, boolean, boolean), but assumes dirReset is true.",FreeText,"methodResultID.equals(spanWrap(args[0], args[1], true))",1
2323,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,knownDirAttr(com.google.gwt.i18n.client.HasDirection$Direction dir),knownDirAttr,com.google.gwt.i18n.shared.BidiFormatter,"Returns ""dir=ltr"" or ""dir=rtl"", depending on the given direction, if it is not the same as the context direction. Otherwise, returns the empty string.",FreeText,,0
2324,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,endEdge(),endEdge,com.google.gwt.i18n.shared.BidiFormatter,"Returns ""left"" for RTL context direction. Otherwise (LTR or default / unknown context direction) returns ""right"".",FreeText,,0
2325,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,getInstanceForCurrentLocale(boolean alwaysSpan),getInstanceForCurrentLocale,com.google.gwt.i18n.shared.BidiFormatter,"Factory for creating an instance of BidiFormatter whose context direction matches the current locale's direction, and given the desired span wrapping behavior (see below).",FreeText,,0
2326,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"unicodeWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml)",unicodeWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Like #unicodeWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection.Direction, String, boolean, boolean), but assumes dirReset is true.",FreeText,"methodResultID.equals(unicodeWrapWithKnownDir(args[0], args[1], args[2], true))",1
2327,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"unicodeWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str)",unicodeWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Like #unicodeWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection.Direction, String, boolean, boolean), but assumes isHtml is false and dirReset is true.",FreeText,"methodResultID.equals(unicodeWrapWithKnownDir(args[0], args[1], false, true))",1
2328,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"getInstance(com.google.gwt.i18n.client.HasDirection$Direction contextDir, boolean alwaysSpan)",getInstance,com.google.gwt.i18n.shared.BidiFormatter,Factory for creating an instance of BidiFormatter given the context direction and the desired span wrapping behavior (see below).,FreeText,,0
2329,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"spanWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml)",spanWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Like #spanWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection.Direction, String, boolean, boolean), but assumes dirReset is true.",FreeText,"methodResultID.equals(spanWrapWithKnownDir(args[0], args[1], args[2], true))",1
2330,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,startEdge(),startEdge,com.google.gwt.i18n.shared.BidiFormatter,"Returns ""right"" for RTL context direction. Otherwise (LTR or default / unknown context direction) returns ""left"".",FreeText,,0
2331,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,dirAttr(java.lang.String str),dirAttr,com.google.gwt.i18n.shared.BidiFormatter,"Like #dirAttr(String, boolean), but assumes isHtml is false.",FreeText,"methodResultID.equals(dirAttr(args[0], false)",1
2332,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,getInstanceForCurrentLocale(),getInstanceForCurrentLocale,com.google.gwt.i18n.shared.BidiFormatter,Factory for creating an instance of BidiFormatter whose context direction matches the current locale's direction. The default behavior of #spanWrap and its variations is set to avoid span wrapping unless it's necessary ('dir' attribute needs to be set).,FreeText,,0
2333,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,spanWrap(java.lang.String str),spanWrap,com.google.gwt.i18n.shared.BidiFormatter,"Like #spanWrap(String, boolean, boolean), but assumes isHtml is false and dirReset is true.",FreeText,"methodResultID.equals(spanWrap(args[0], false, true))",1
2334,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"unicodeWrap(java.lang.String str, boolean isHtml)",unicodeWrap,com.google.gwt.i18n.shared.BidiFormatter,"Like #unicodeWrap(String, boolean, boolean), but assumes dirReset is true.",FreeText,"methodResultID.equals(unicodeWrap(args[0], args[1], true))",1
2335,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"spanWrap(java.lang.String str, boolean isHtml, boolean dirReset)",spanWrap,com.google.gwt.i18n.shared.BidiFormatter,"Formats a string of unknown direction for use in HTML output of the context direction, so an opposite-direction string is neither garbled nor garbles what follows it.  The algorithm: estimates the direction of input argument str. In case its direction doesn't match the context direction, wraps it with a 'span' tag and adds a ""dir"" attribute (either 'dir=rtl' or 'dir=ltr').  If setAlwaysSpan(true) was used, the input is always wrapped with 'span', skipping just the dir attribute when it's not needed.  If dirReset, and if the overall direction or the exit direction of str are opposite to the context direction, a trailing unicode BiDi mark matching the context direction is appended (LRM or RLM).  If !isHtml, HTML-escapes str regardless of wrapping.",FreeText,,0
2336,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"unicodeWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml, boolean dirReset)",unicodeWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Formats a string of given direction for use in plain-text output of the context direction, so an opposite-direction string is neither garbled nor garbles what follows it. As opposed to #spanWrapWithKnownDir, this makes use of unicode BiDi formatting characters. In HTML, its *only* valid use is inside of elements that do not allow mark-up, e.g. an 'option' tag.  The algorithm: estimates the direction of input argument str. In case it doesn't match the context direction, wraps it with Unicode BiDi formatting characters: RLE+str+PDF for RTL text, or LRE+ str+PDF for LTR text.  If {@code opt_dirReset}, and if the overall direction or the exit direction of str are opposite to the context direction, a trailing unicode BiDi mark matching the context direction is appended (LRM or RLM).  Does *not* do HTML-escaping regardless of the value of isHtml.",FreeText,,0
2337,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"dirAttr(java.lang.String str, boolean isHtml)",dirAttr,com.google.gwt.i18n.shared.BidiFormatter,"Returns ""dir=ltr"" or ""dir=rtl"", depending on {@code str}'s estimated direction, if it is not the same as the context direction. Otherwise, returns the empty string.",FreeText,,0
2338,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,unicodeWrap(java.lang.String str),unicodeWrap,com.google.gwt.i18n.shared.BidiFormatter,"Like #unicodeWrap(String, boolean, boolean), but assumes isHtml is false and dirReset is true.",FreeText,"methodResultID.equals(unicodeWrap(args[0], false, true))",1
2339,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"markAfter(java.lang.String str, boolean isHtml)",markAfter,com.google.gwt.i18n.shared.BidiFormatter,Returns a Unicode BiDi mark matching the context direction (LRM or RLM) if either the direction or the exit direction of str is opposite to the context direction. Otherwise returns the empty string.,FreeText,,0
2340,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"spanWrapWithKnownDir(com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String str, boolean isHtml, boolean dirReset)",spanWrapWithKnownDir,com.google.gwt.i18n.shared.BidiFormatter,"Formats a string of given direction for use in HTML output of the context direction, so an opposite-direction string is neither garbled nor garbles what follows it.  The algorithm: estimates the direction of input argument str. In case its direction doesn't match the context direction, wraps it with a 'span' tag and adds a ""dir"" attribute (either 'dir=rtl' or 'dir=ltr').  If setAlwaysSpan(true) was used, the input is always wrapped with 'span', skipping just the dir attribute when it's not needed.  If dirReset, and if the overall direction or the exit direction of str are opposite to the context direction, a trailing unicode BiDi mark matching the context direction is appended (LRM or RLM).  If !isHtml, HTML-escapes str regardless of wrapping.",FreeText,,0
2341,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"getInstance(boolean rtlContext, boolean alwaysSpan)",getInstance,com.google.gwt.i18n.shared.BidiFormatter,Factory for creating an instance of BidiFormatter given the context direction and the desired span wrapping behavior (see below).,FreeText,,0
2342,gwt,com.google.gwt.i18n.shared.BidiFormatter_goal.json,"unicodeWrap(java.lang.String str, boolean isHtml, boolean dirReset)",unicodeWrap,com.google.gwt.i18n.shared.BidiFormatter,"Formats a string of unknown direction for use in plain-text output of the context direction, so an opposite-direction string is neither garbled nor garbles what follows it. As opposed to #spanWrap, this makes use of Unicode BiDi formatting characters. In HTML, its *only* valid use is inside of elements that do not allow mark-up, e.g. an 'option' tag.  The algorithm: estimates the direction of input argument str. In case it doesn't match the context direction, wraps it with Unicode BiDi formatting characters: RLE+str+PDF for RTL text, or LRE+ str+PDF for LTR text.  If {@code opt_dirReset}, and if the overall direction or the exit direction of str are opposite to the context direction, a trailing unicode BiDi mark matching the context direction is appended (LRM or RLM).  Does *not* do HTML-escaping regardless of the value of isHtml.",FreeText,,0
2343,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"estimateDirection(java.lang.String str, boolean isHtml)",estimateDirection,com.google.gwt.i18n.shared.BidiUtils,"Estimates the directionality of a string based on relative word counts. If the number of RTL words is above a certain percentage of the total number of strongly directional words, returns RTL. Otherwise, if any words are strongly or weakly LTR, returns LTR. Otherwise, returns DEFAULT, which is used to mean ""neutral"". Numbers are counted as weakly LTR.",FreeText,,0
2344,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,startsWithRtl(java.lang.String str),startsWithRtl,com.google.gwt.i18n.shared.BidiUtils,"Like #startsWithRtl(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID==(startsWithRtl(args[0], false))",1
2345,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"endsWithLtr(java.lang.String str, boolean isHtml)",endsWithLtr,com.google.gwt.i18n.shared.BidiUtils,Check whether the last strongly-directional character in the string is LTR.,FreeText,,0
2346,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"endsWithRtl(java.lang.String str, boolean isHtml)",endsWithRtl,com.google.gwt.i18n.shared.BidiUtils,Check whether the last strongly-directional character in the string is RTL.,FreeText,,0
2347,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,startsWithLtr(java.lang.String str),startsWithLtr,com.google.gwt.i18n.shared.BidiUtils,"Like #startsWithLtr(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID.equals(startsWithLtr(args[0], false))",1
2348,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,estimateDirection(java.lang.String str),estimateDirection,com.google.gwt.i18n.shared.BidiUtils,"Like #estimateDirection(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID.equals(estimateDirection(args[0], false))",1
2349,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,get(),get,com.google.gwt.i18n.shared.BidiUtils,Get an instance of BidiUtils.,FreeText,,0
2350,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,endsWithRtl(java.lang.String str),endsWithRtl,com.google.gwt.i18n.shared.BidiUtils,"Like #endsWithRtl(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID.equals(endsWithRtl(args[0], false))",1
2351,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"startsWithLtr(java.lang.String str, boolean isHtml)",startsWithLtr,com.google.gwt.i18n.shared.BidiUtils,Check whether the first strongly-directional character in the string is LTR.,FreeText,,0
2352,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"startsWithRtl(java.lang.String str, boolean isHtml)",startsWithRtl,com.google.gwt.i18n.shared.BidiUtils,Check whether the first strongly-directional character in the string is RTL.,FreeText,,0
2353,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"stripHtmlIfNeeded(java.lang.String str, boolean isStripNeeded)",stripHtmlIfNeeded,com.google.gwt.i18n.shared.BidiUtils,"Returns the input text with spaces instead of HTML tags or HTML escapes, if isStripNeeded is true. Else returns the input as is. Useful for text directionality estimation. Note: the function should not be used in other contexts; it is not 100% correct, but rather a good-enough implementation for directionality estimation purposes.",FreeText,,0
2354,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"hasAnyLtr(java.lang.String str, boolean isHtml)",hasAnyLtr,com.google.gwt.i18n.shared.BidiUtils,Checks if the given string has any LTR characters in it.,FreeText,,0
2355,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,endsWithLtr(java.lang.String str),endsWithLtr,com.google.gwt.i18n.shared.BidiUtils,"Like #endsWithLtr(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID.equals(endsWithLtr(args[0], false))",1
2356,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,hasAnyRtl(java.lang.String str),hasAnyRtl,com.google.gwt.i18n.shared.BidiUtils,"Like #hasAnyRtl(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID.equals(hasAnyRtl(args[0], false))",1
2357,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,hasAnyLtr(java.lang.String str),hasAnyLtr,com.google.gwt.i18n.shared.BidiUtils,"Like #hasAnyLtr(String, boolean), but assumes str is not HTML / HTML-escaped.",FreeText,"methodResultID==(hasAnyLtr(args[0], false))",1
2358,gwt,com.google.gwt.i18n.shared.BidiUtils_goal.json,"hasAnyRtl(java.lang.String str, boolean isHtml)",hasAnyRtl,com.google.gwt.i18n.shared.BidiUtils,Checks if the given string has any RTL characters in it.,FreeText,,0
2359,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,getGlobal(),getGlobal,com.google.gwt.regexp.shared.RegExp,Returns whether the regular expression captures all occurrences of the pattern.,FreeText,,0
2360,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,"compile(java.lang.String pattern, java.lang.String flags)",compile,com.google.gwt.regexp.shared.RegExp,Creates a regular expression object from a pattern using the given flags.,FreeText,,0
2361,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,split(java.lang.String input),split,com.google.gwt.regexp.shared.RegExp,"Splits the input string around matches of the regular expression. If the regular expression is completely empty, splits the input string into its constituent characters. If the regular expression is not empty but matches an empty string, the results are not well defined.",FreeText,,0
2362,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,exec(java.lang.String input),exec,com.google.gwt.regexp.shared.RegExp,Applies the regular expression to the given string. This call affects the value returned by #getLastIndex() if the global flag is set.,FreeText,,0
2363,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,"split(java.lang.String input, int limit)",split,com.google.gwt.regexp.shared.RegExp,"Splits the input string around matches of the regular expression. If the regular expression is completely empty, splits the input string into its constituent characters. If the regular expression is not empty but matches an empty string, the results are not well defined. Note: There are some browser inconsistencies with this implementation, as it is delegated to the browser, and no browser follows the spec completely. A major difference is that IE will exclude empty strings in the result.",FreeText,,0
2364,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,getIgnoreCase(),getIgnoreCase,com.google.gwt.regexp.shared.RegExp,Returns whether the regular expression ignores case.,FreeText,,0
2365,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,setLastIndex(int lastIndex),setLastIndex,com.google.gwt.regexp.shared.RegExp,Sets the zero-based position at which to start the next match.,FreeText,,0
2366,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,getLastIndex(),getLastIndex,com.google.gwt.regexp.shared.RegExp,"Returns the zero-based position at which to start the next match. The return value is not defined if the global flag is not set. After a call to #exec(String) or #test(String), this method returns the next position following the most recent match. @see #getGlobal()",FreeText,,0
2367,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,"replace(java.lang.String input, java.lang.String replacement)",replace,com.google.gwt.regexp.shared.RegExp,"Returns the input string with the part(s) matching the regular expression replaced with the replacement string. If the global flag is set, replaces all matches of the regular expression. Otherwise, replaces the first match of the regular expression. As per Javascript semantics, backslashes in the replacement string get no special treatment, but the replacement string can use the following special patterns:  <li>$1, $2, ... $99 - inserts the n'th group matched by the regular expression. <li>$& - inserts the entire string matched by the regular expression. <li>$$ - inserts a $.  Note: $` and $' are *not* supported in the pure Java implementation, and throw an exception.",FreeText,,0
2368,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,getMultiline(),getMultiline,com.google.gwt.regexp.shared.RegExp,Returns whether '$' and '^' match line returns ('\n' and '\r') in addition to the beginning or end of the string.,FreeText,,0
2369,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,getSource(),getSource,com.google.gwt.regexp.shared.RegExp,Returns the pattern string of the regular expression.,FreeText,,0
2370,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,test(java.lang.String input),test,com.google.gwt.regexp.shared.RegExp,Determines if the regular expression matches the given string. This call affects the value returned by #getLastIndex() if the global flag is set. Equivalent to: exec(input) != null,FreeText,methodResultID==( receiverObjectClone.exec(args[0]) != null ),1
2371,gwt,com.google.gwt.regexp.shared.RegExp_goal.json,compile(java.lang.String pattern),compile,com.google.gwt.regexp.shared.RegExp,Creates a regular expression object from a pattern with no flags.,FreeText,,0
2372,gwt,com.google.gwt.safecss.shared.SafeStyles_goal.json,asString(),asString,com.google.gwt.safecss.shared.SafeStyles,"Returns this object's contained CSS as a string.  Based on this class' contract, the returned value will be non-null and a string that is safe to use in an CSS attribute context.",FreeText,,0
2373,gwt,com.google.gwt.safecss.shared.SafeStyles_goal.json,hashCode(),hashCode,com.google.gwt.safecss.shared.SafeStyles,Returns a hash code for this string. Must be equal to asString().hashCode().,FreeText,methodResultID==(receiverObjectClone.asString().hashCode()),1
2374,gwt,com.google.gwt.safecss.shared.SafeStyles_goal.json,equals(java.lang.Object anObject),equals,com.google.gwt.safecss.shared.SafeStyles,Compares this string to the specified object. Must be equal to asString().equals().,FreeText,,0
2375,gwt,com.google.gwt.safehtml.shared.SafeHtml_goal.json,hashCode(),hashCode,com.google.gwt.safehtml.shared.SafeHtml,Returns a hash code for this string. Must be equal to asString().hashCode().,FreeText,methodResultID==(receiverObjectClone.asString().hashCode()),1
2376,gwt,com.google.gwt.safehtml.shared.SafeHtml_goal.json,equals(java.lang.Object anObject),equals,com.google.gwt.safehtml.shared.SafeHtml,Compares this string to the specified object. Must be equal to asString().equals().,FreeText,,0
2377,gwt,com.google.gwt.safehtml.shared.SafeHtml_goal.json,asString(),asString,com.google.gwt.safehtml.shared.SafeHtml,"Returns this object's contained HTML as a string.  Based on this class' contract, the returned value will be non-null and a string that is safe to use in an HTML context.",FreeText,,0
2378,gwt,com.google.gwt.safehtml.shared.SafeUri_goal.json,equals(java.lang.Object anObject),equals,com.google.gwt.safehtml.shared.SafeUri,Compares this string to the specified object. Must be equal to asString().equals().,FreeText,,0
2379,gwt,com.google.gwt.safehtml.shared.SafeUri_goal.json,hashCode(),hashCode,com.google.gwt.safehtml.shared.SafeUri,Returns a hash code for this string. Must be equal to asString().hashCode().,FreeText,methodResultID==(receiverObjectClone.asString().hashCode()),1
2380,gwt,com.google.gwt.safehtml.shared.SafeUri_goal.json,asString(),asString,com.google.gwt.safehtml.shared.SafeUri,"Returns this object's contained URI as a string.  Based on this class' contract, the returned value will be non-null and a string that is safe to use in a URL context.",FreeText,,0
2381,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getVisibleItemCount(),getVisibleItemCount,com.google.gwt.user.client.ui.ListBox,"Gets the number of items that are visible. If only one item is visible, then the box will be displayed as a drop-down list.",FreeText,,0
2382,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"insertItem(java.lang.String item, com.google.gwt.i18n.client.HasDirection$Direction dir, int index)",insertItem,com.google.gwt.user.client.ui.ListBox,"Inserts an item into the list box, specifying its direction. Has the same effect as  insertItem(item, dir, item, index)",FreeText,"receiverObjectClone.insertItem(args[0],args[1],args[0], args[2]); receiverObjectClone.equals(receiverObjectID)",1
2383,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"insertItem(java.lang.String item, com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String value, int index)",insertItem,com.google.gwt.user.client.ui.ListBox,"Inserts an item into the list box, specifying its direction and an initial value for the item. If the index is less than zero, or greater than or equal to the length of the list, then the item will be appended to the end of the list.",FreeText,,0
2384,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,isMultipleSelect(),isMultipleSelect,com.google.gwt.user.client.ui.ListBox,Gets whether this list allows multiple selection.,FreeText,,0
2385,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getItemText(int index),getItemText,com.google.gwt.user.client.ui.ListBox,Gets the text associated with the item at the specified index.,FreeText,,0
2386,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,com.google.gwt.user.client.ui.ListBox(boolean isMultipleSelect),com.google.gwt.user.client.ui.ListBox,com.google.gwt.user.client.ui.ListBox,Creates an empty list box. The preferred way to enable multiple selections is to use this constructor rather than #setMultipleSelect(boolean).,FreeText,,0
2387,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"addItem(java.lang.String item, com.google.gwt.i18n.client.HasDirection$Direction dir, java.lang.String value)",addItem,com.google.gwt.user.client.ui.ListBox,"Adds an item to the list box, specifying its direction and an initial value for the item.",FreeText,,0
2388,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"setItemSelected(int index, boolean selected)",setItemSelected,com.google.gwt.user.client.ui.ListBox,Sets whether an individual list item is selected.  Note that setting the selection programmatically does <em>not</em> cause the ChangeHandler#onChange(ChangeEvent) event to be fired.,FreeText,,0
2389,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setName(java.lang.String name),setName,com.google.gwt.user.client.ui.ListBox,,FreeText,,0
2390,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"setValue(int index, java.lang.String value)",setValue,com.google.gwt.user.client.ui.ListBox,"Sets the value associated with the item at a given index. This value can be used for any purpose, but is also what is passed to the server when the list box is submitted as part of a FormPanel.",FreeText,,0
2391,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setDirectionEstimator(com.google.gwt.i18n.shared.DirectionEstimator directionEstimator),setDirectionEstimator,com.google.gwt.user.client.ui.ListBox,{@inheritDoc} Note: this does not affect the direction of already-existing content.,FreeText,,0
2392,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getValue(int index),getValue,com.google.gwt.user.client.ui.ListBox,Gets the value associated with the item at a given index.,FreeText,,0
2393,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,removeItem(int index),removeItem,com.google.gwt.user.client.ui.ListBox,Removes the item at the specified index.,FreeText,,0
2394,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"setOptionText(com.google.gwt.dom.client.OptionElement option, java.lang.String text, com.google.gwt.i18n.client.HasDirection$Direction dir)",setOptionText,com.google.gwt.user.client.ui.ListBox,"Sets the text of an option element. If the direction of the text is opposite to the page's direction, also wraps it with Unicode bidi formatting characters to prevent garbling, and indicates that this was done by setting the option's BIDI_ATTR_NAME custom attribute.",FreeText,,0
2395,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"setItemText(int index, java.lang.String text, com.google.gwt.i18n.client.HasDirection$Direction dir)",setItemText,com.google.gwt.user.client.ui.ListBox,Sets the text associated with the item at a given index.,FreeText,,0
2396,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"insertItem(java.lang.String item, java.lang.String value, int index)",insertItem,com.google.gwt.user.client.ui.ListBox,"Inserts an item into the list box, specifying an initial value for the item. Has the same effect as  insertItem(item, null, value, index)",FreeText,"receiverObjectClone.insertItem(args[0],null,args[1],args[2]); receiverObjectClone.equals(receiverObjectID)",1
2397,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setVisibleItemCount(int visibleItems),setVisibleItemCount,com.google.gwt.user.client.ui.ListBox,"Sets the number of items that are visible. If only one item is visible, then the box will be displayed as a drop-down list.",FreeText,,0
2398,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,isItemSelected(int index),isItemSelected,com.google.gwt.user.client.ui.ListBox,Determines whether an individual list item is selected.,FreeText,,0
2399,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"setItemText(int index, java.lang.String text)",setItemText,com.google.gwt.user.client.ui.ListBox,Sets the text associated with the item at a given index.,FreeText,,0
2400,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,addItem(java.lang.String item),addItem,com.google.gwt.user.client.ui.ListBox,"Adds an item to the list box. This method has the same effect as  addItem(item, item)",FreeText,"receiverObjectClone.addItem(args[0], args[0]); receiverObjectClone.equals(receiverObjectID)",1
2401,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,wrap(com.google.gwt.dom.client.Element element),wrap,com.google.gwt.user.client.ui.ListBox,"Creates a ListBox widget that wraps an existing <select> element. This element must already be attached to the document. If the element is removed from the document, you must call RootPanel#detachNow(Widget).",FreeText,,0
2402,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,addChangeListener(com.google.gwt.user.client.ui.ChangeListener listener),addChangeListener,com.google.gwt.user.client.ui.ListBox,@deprecated Use #addChangeHandler instead,FreeText,,0
2403,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getItemCount(),getItemCount,com.google.gwt.user.client.ui.ListBox,Gets the number of items present in the list box.,FreeText,,0
2404,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setSelectedIndex(int index),setSelectedIndex,com.google.gwt.user.client.ui.ListBox,"Sets the currently selected index. After calling this method, only the specified item in the list will remain selected. For a ListBox with multiple selection enabled, see #setItemSelected(int, boolean) to select multiple items at a time.  Note that setting the selected index programmatically does <em>not</em> cause the ChangeHandler#onChange(ChangeEvent) event to be fired.",FreeText,,0
2405,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,addChangeHandler(com.google.gwt.event.dom.client.ChangeHandler handler),addChangeHandler,com.google.gwt.user.client.ui.ListBox,,FreeText,,0
2406,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,clear(),clear,com.google.gwt.user.client.ui.ListBox,Removes all items from the list box.,FreeText,,0
2407,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,com.google.gwt.user.client.ui.ListBox(),com.google.gwt.user.client.ui.ListBox,com.google.gwt.user.client.ui.ListBox,Creates an empty list box in single selection mode.,FreeText,,0
2408,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"insertItem(java.lang.String item, int index)",insertItem,com.google.gwt.user.client.ui.ListBox,"Inserts an item into the list box. Has the same effect as  insertItem(item, item, index)",FreeText,"receiverObjectClone.insertItem(args[0],args[0],args[1]); receiverObjectClone.equals(receiverObjectID)",1
2409,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getDirectionEstimator(),getDirectionEstimator,com.google.gwt.user.client.ui.ListBox,,FreeText,,0
2410,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getName(),getName,com.google.gwt.user.client.ui.ListBox,,FreeText,,0
2411,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setMultipleSelect(boolean multiple),setMultipleSelect,com.google.gwt.user.client.ui.ListBox,Sets whether this list allows multiple selections. NOTE: The preferred way of enabling multiple selections in a list box is by using the #ListBox(boolean) constructor. Using this method can spuriously fail on Internet Explorer 6.0.,FreeText,,0
2412,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,com.google.gwt.user.client.ui.ListBox(com.google.gwt.dom.client.Element element),com.google.gwt.user.client.ui.ListBox,com.google.gwt.user.client.ui.ListBox,This constructor may be used by subclasses to explicitly use an existing element. This element must be a <select> element.,FreeText,,0
2413,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"addItem(java.lang.String item, java.lang.String value)",addItem,com.google.gwt.user.client.ui.ListBox,"Adds an item to the list box, specifying an initial value for the item.",FreeText,,0
2414,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getSelectedIndex(),getSelectedIndex,com.google.gwt.user.client.ui.ListBox,"Gets the currently-selected item. If multiple items are selected, this method will return the first selected item (#isItemSelected(int) can be used to query individual items).",FreeText,,0
2415,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,"addItem(java.lang.String item, com.google.gwt.i18n.client.HasDirection$Direction dir)",addItem,com.google.gwt.user.client.ui.ListBox,"Adds an item to the list box, specifying its direction. This method has the same effect as  addItem(item, dir, item)",FreeText,"receiverObjectClone.addItem(args[0],args[1],args[0]); receiverObjectClone.equals(receiverObjectID)",1
2416,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,onEnsureDebugId(java.lang.String baseID),onEnsureDebugId,com.google.gwt.user.client.ui.ListBox,Affected Elements:  <li>-item# = the option at the specified index.</li>  @see UIObject#onEnsureDebugId(String),FreeText,,0
2417,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,removeChangeListener(com.google.gwt.user.client.ui.ChangeListener listener),removeChangeListener,com.google.gwt.user.client.ui.ListBox,@deprecated Use the HandlerRegistration#removeHandler method on the object returned by #addChangeHandler instead,FreeText,,0
2418,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,getOptionText(com.google.gwt.dom.client.OptionElement option),getOptionText,com.google.gwt.user.client.ui.ListBox,"Retrieves the text of an option element. If the text was set by #setOptionText and was wrapped with Unicode bidi formatting characters, also removes those additional formatting characters.",FreeText,,0
2419,gwt,com.google.gwt.user.client.ui.ListBox_goal.json,setDirectionEstimator(boolean enabled),setDirectionEstimator,com.google.gwt.user.client.ui.ListBox,{@inheritDoc} See note at #setDirectionEstimator(com.google.gwt.i18n.shared.DirectionEstimator).,FreeText,,0
2420,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForSuccess(java.lang.reflect.Method serviceMethod, java.lang.Object object, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy)",encodeResponseForSuccess,com.google.gwt.user.server.rpc.RPC,"Returns a string that encodes the object. It is an error to try to encode an object that is not assignable to the service method's return type.  If the serializationPolicy parameter is not null, it is used to determine what types can be encoded as part of this response. If this parameter is null, then only subtypes of com.google.gwt.user.client.rpc.IsSerializable IsSerializable or types which have custom field serializers may be encoded.",FreeText,,0
2421,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,decodeRequest(java.lang.String encodedRequest),decodeRequest,com.google.gwt.user.server.rpc.RPC,"Returns an RPCRequest that is built by decoding the contents of an encoded RPC request.  This method is equivalent to calling #decodeRequest(String, Class) with null for the type parameter.",FreeText,"methodResultID.equals(receiverObjectID.decodeRequest(args[0], null))",1
2422,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"decodeRequest(java.lang.String encodedRequest, java.lang.Class<?> type, com.google.gwt.user.server.rpc.SerializationPolicyProvider serializationPolicyProvider)",decodeRequest,com.google.gwt.user.server.rpc.RPC,"Returns an RPCRequest that is built by decoding the contents of an encoded RPC request and optionally validating that type can handle the request. If the type parameter is not null, the implementation checks that the type is assignable to the RemoteService interface requested in the encoded request string.  If the serializationPolicyProvider parameter is not null, it is asked for a SerializationPolicy to use to restrict the set of types that can be decoded from the request. If this parameter is null, then only subtypes of com.google.gwt.user.client.rpc.IsSerializable IsSerializable or types which have custom field serializers can be decoded.   Invoking this method with null for the type parameter, decodeRequest(encodedRequest, null), is equivalent to calling decodeRequest(encodedRequest).",FreeText,"decodeRequest(args[0], null).equals(decodeRequest(args[0]))",1
2423,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForSuccess(java.lang.reflect.Method serviceMethod, java.lang.Object object, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy, int flags)",encodeResponseForSuccess,com.google.gwt.user.server.rpc.RPC,,FreeText,,0
2424,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"decodeRequest(java.lang.String encodedRequest, java.lang.Class<?> type)",decodeRequest,com.google.gwt.user.server.rpc.RPC,"Returns an RPCRequest that is built by decoding the contents of an encoded RPC request and optionally validating that type can handle the request. If the type parameter is not null, the implementation checks that the type is assignable to the RemoteService interface requested in the encoded request string.  Invoking this method with null for the type parameter, decodeRequest(encodedRequest, null), is equivalent to calling decodeRequest(encodedRequest).",FreeText,methodResultID.equals(com.google.gwt.user.server.rpc.RPC.decodeRequest(args[0])),1
2425,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"invokeAndEncodeResponse(java.lang.Object target, java.lang.reflect.Method serviceMethod, java.lang.Object[] args)",invokeAndEncodeResponse,com.google.gwt.user.server.rpc.RPC,"Returns a string that encodes the result of calling a service method, which could be the value returned by the method or an exception thrown by it.  This method does no security checking; security checking must be done on the method prior to this invocation.",FreeText,,0
2426,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,getDefaultSerializationPolicy(),getDefaultSerializationPolicy,com.google.gwt.user.server.rpc.RPC,Returns a default serialization policy.,FreeText,,0
2427,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForFailure(java.lang.reflect.Method serviceMethod, java.lang.Throwable cause)",encodeResponseForFailure,com.google.gwt.user.server.rpc.RPC,"Returns a string that encodes an exception. If method is not null, it is an error if the exception is not in the method's list of checked exceptions.",FreeText,,0
2428,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForFailure(java.lang.reflect.Method serviceMethod, java.lang.Throwable cause, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy, int flags)",encodeResponseForFailure,com.google.gwt.user.server.rpc.RPC,,FreeText,,0
2429,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"invokeAndEncodeResponse(java.lang.Object target, java.lang.reflect.Method serviceMethod, java.lang.Object[] args, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy)",invokeAndEncodeResponse,com.google.gwt.user.server.rpc.RPC,"Returns a string that encodes the result of calling a service method, which could be the value returned by the method or an exception thrown by it.  If the serializationPolicy parameter is not null, it is used to determine what types can be encoded as part of this response. If this parameter is null, then only subtypes of com.google.gwt.user.client.rpc.IsSerializable IsSerializable or types which have custom field serializers may be encoded.   This method does no security checking; security checking must be done on the method prior to this invocation.",FreeText,,0
2430,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForSuccess(java.lang.reflect.Method serviceMethod, java.lang.Object object)",encodeResponseForSuccess,com.google.gwt.user.server.rpc.RPC,Returns a string that encodes the object. It is an error to try to encode an object that is not assignable to the service method's return type.,FreeText,,0
2431,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"invokeAndEncodeResponse(java.lang.Object target, java.lang.reflect.Method serviceMethod, java.lang.Object[] args, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy, int flags)",invokeAndEncodeResponse,com.google.gwt.user.server.rpc.RPC,,FreeText,,0
2432,gwt,com.google.gwt.user.server.rpc.RPC_goal.json,"encodeResponseForFailure(java.lang.reflect.Method serviceMethod, java.lang.Throwable cause, com.google.gwt.user.server.rpc.SerializationPolicy serializationPolicy)",encodeResponseForFailure,com.google.gwt.user.server.rpc.RPC,"Returns a string that encodes an exception. If method is not null, it is an error if the exception is not in the method's list of checked exceptions.  If the serializationPolicy parameter is not null, it is used to determine what types can be encoded as part of this response. If this parameter is null, then only subtypes of com.google.gwt.user.client.rpc.IsSerializable IsSerializable or types which have custom field serializers may be encoded.",FreeText,,0
2433,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,getDefaultPrimitiveValue(java.lang.Class<?> clazz),getDefaultPrimitiveValue,com.google.web.bindery.autobean.vm.impl.TypeUtils,"Given a primitive Class type, return a default value.",FreeText,,0
2434,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,ensureBaseType(java.lang.reflect.Type type),ensureBaseType,com.google.web.bindery.autobean.vm.impl.TypeUtils,Similar to ModelUtils#ensureBaseType(JType) but for the reflection API.,FreeText,methodResultID.equals(ModelUtils.ensureBaseType(args[0])),1
2435,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,"getSingleParameterization(java.lang.Class<?> intf, java.lang.reflect.Type... types)",getSingleParameterization,com.google.web.bindery.autobean.vm.impl.TypeUtils,,FreeText,,0
2436,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,maybeAutobox(java.lang.Class<V> domainType),maybeAutobox,com.google.web.bindery.autobean.vm.impl.TypeUtils,,FreeText,,0
2437,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,isValueType(java.lang.Class<?> clazz),isValueType,com.google.web.bindery.autobean.vm.impl.TypeUtils,,FreeText,,0
2438,gwt,com.google.web.bindery.autobean.vm.impl.TypeUtils_goal.json,"getParameterization(java.lang.Class<?> intf, java.lang.reflect.Type... types)",getParameterization,com.google.web.bindery.autobean.vm.impl.TypeUtils,,FreeText,,0
2439,gwt,com.google.web.bindery.requestfactory.shared.Request_goal.json,fire(com.google.web.bindery.requestfactory.shared.Receiver<? super T> receiver),fire,com.google.web.bindery.requestfactory.shared.Request,Convenience method equivalent to calling to(...).fire().,FreeText,,0
2440,gwt,com.google.web.bindery.requestfactory.shared.Request_goal.json,to(com.google.web.bindery.requestfactory.shared.Receiver<? super T> receiver),to,com.google.web.bindery.requestfactory.shared.Request,Specify the object that will receive the result of the method invocation.,FreeText,,0
2441,gwt,com.google.web.bindery.requestfactory.shared.Request_goal.json,fire(),fire,com.google.web.bindery.requestfactory.shared.Request,"Submit this request. Failures will be reported through the global uncaught exception handler, if any.",FreeText,,0
2442,gwt,com.google.web.bindery.requestfactory.shared.Request_goal.json,with(java.lang.String... propertyRefs),with,com.google.web.bindery.requestfactory.shared.Request,Request additional reference properties to fetch with the return value.,FreeText,,0
2443,gwt,com.google.web.bindery.requestfactory.shared.Request_goal.json,getRequestContext(),getRequestContext,com.google.web.bindery.requestfactory.shared.Request,Returns the RequestContext associated with the Request.,FreeText,,0
2444,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getProxyClass(java.lang.String historyToken),getProxyClass,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2445,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getSerializer(com.google.web.bindery.requestfactory.shared.ProxyStore store),getSerializer,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2446,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getHistoryToken(com.google.web.bindery.requestfactory.shared.EntityProxyId<?> proxy),getHistoryToken,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2447,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getProxyId(java.lang.String historyToken),getProxyId,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2448,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,initialize(com.google.web.bindery.event.shared.EventBus eventBus),initialize,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,"Equivalent to initialize(eventBus, new FakeRequestTransport()).",FreeText,"methodResultID.equals(receiverObjectID.initialize(args[0], new FakeRequestTransport()))",1
2449,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,find(com.google.web.bindery.requestfactory.shared.EntityProxyId<P> proxyId),find,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2450,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getHistoryToken(java.lang.Class<? extends com.google.web.bindery.requestfactory.shared.EntityProxy> clazz),getHistoryToken,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Returns null.,FreeText,,0
2451,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getEventBus(),getEventBus,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,"Returns the last value passed to #initialize(EventBus, RequestTransport).",FreeText,,0
2452,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,"initialize(com.google.web.bindery.event.shared.EventBus eventBus, com.google.web.bindery.requestfactory.shared.RequestTransport transport)",initialize,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,Saves the parameters for later retrieval.,FreeText,,0
2453,gwt,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory_goal.json,getRequestTransport(),getRequestTransport,com.google.web.bindery.requestfactory.shared.testing.FakeRequestFactory,"Returns the last value passed to #initialize(EventBus, RequestTransport).",FreeText,,0
2454,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader(javax.xml.stream.XMLEventReader reader),org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,"Create new buffering reader, no buffering is done until #mark(int) is called.",FreeText,,0
2455,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,"org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader(javax.xml.stream.XMLEventReader reader, int eventLimit)",org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,Create new buffering reader. Calls #mark(int) with the specified event limit @see #mark(int),FreeText,,0
2456,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,getBuffer(),getBuffer,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2457,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,internalNextEvent(),internalNextEvent,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2458,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,hasNext(),hasNext,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2459,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,peek(),peek,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2460,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,mark(),mark,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,Same as calling #mark(int) with -1.,FreeText,,0
2461,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,mark(int eventLimit),mark,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,Start buffering events,FreeText,,0
2462,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,reset(),reset,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,Reset the reader to these start of the buffered events.,FreeText,,0
2463,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,close(),close,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2464,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,bufferSize(),bufferSize,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,,FreeText,,0
2465,hibernate,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader_goal.json,remove(),remove,org.hibernate.boot.jaxb.internal.stax.BufferedXMLEventReader,If reading from the buffer after a #reset() call an IllegalStateException will be thrown.,FreeText,,0
2466,hibernate,org.hibernate.criterion.Example_goal.json,"org.hibernate.criterion.Example(java.lang.Object exampleEntity, org.hibernate.criterion.Example$PropertySelector selector)",org.hibernate.criterion.Example,org.hibernate.criterion.Example,Allow subclasses to instantiate as needed.,FreeText,,0
2467,hibernate,org.hibernate.criterion.Example_goal.json,create(java.lang.Object exampleEntity),create,org.hibernate.criterion.Example,"Create a new Example criterion instance, which includes all non-null properties by default",FreeText,,0
2468,hibernate,org.hibernate.criterion.Example_goal.json,setEscapeCharacter(java.lang.Character escapeCharacter),setEscapeCharacter,org.hibernate.criterion.Example,"Set escape character for ""like"" clause if like matching was enabled",FreeText,,0
2469,hibernate,org.hibernate.criterion.Example_goal.json,enableLike(),enableLike,org.hibernate.criterion.Example,"Use the ""like"" operator for all string-valued properties. This form implicitly uses MatchMode#EXACT",FreeText,,0
2470,hibernate,org.hibernate.criterion.Example_goal.json,enableLike(org.hibernate.criterion.MatchMode matchMode),enableLike,org.hibernate.criterion.Example,"Use the ""like"" operator for all string-valued properties",FreeText,,0
2471,hibernate,org.hibernate.criterion.Example_goal.json,ignoreCase(),ignoreCase,org.hibernate.criterion.Example,Ignore case for all string-valued properties,FreeText,,0
2472,hibernate,org.hibernate.criterion.Example_goal.json,setPropertySelector(org.hibernate.criterion.Example$PropertySelector selector),setPropertySelector,org.hibernate.criterion.Example,Set the property selector to use. The property selector operates separate from excluding a property.,FreeText,,0
2473,hibernate,org.hibernate.criterion.Example_goal.json,excludeZeroes(),excludeZeroes,org.hibernate.criterion.Example,Exclude zero-valued properties. Equivalent to calling #setPropertySelector passing in NotNullOrZeroPropertySelector#INSTANCE,FreeText,,0
2474,hibernate,org.hibernate.criterion.Example_goal.json,excludeNone(),excludeNone,org.hibernate.criterion.Example,Include all properties. Equivalent to calling #setPropertySelector passing in AllPropertySelector#INSTANCE,FreeText,,0
2475,hibernate,org.hibernate.criterion.Example_goal.json,excludeProperty(java.lang.String name),excludeProperty,org.hibernate.criterion.Example,Exclude a particular property by name.,FreeText,,0
2476,hibernate,org.hibernate.criterion.Example_goal.json,"toSqlString(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",toSqlString,org.hibernate.criterion.Example,,FreeText,,0
2477,hibernate,org.hibernate.criterion.Example_goal.json,"getTypedValues(org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",getTypedValues,org.hibernate.criterion.Example,,FreeText,,0
2478,hibernate,org.hibernate.criterion.Example_goal.json,"addPropertyTypedValue(java.lang.Object value, org.hibernate.type.Type type, java.util.List<org.hibernate.engine.spi.TypedValue> list)",addPropertyTypedValue,org.hibernate.criterion.Example,,FreeText,,0
2479,hibernate,org.hibernate.criterion.Example_goal.json,"addComponentTypedValues(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, java.util.List<org.hibernate.engine.spi.TypedValue> list, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery)",addComponentTypedValues,org.hibernate.criterion.Example,,FreeText,,0
2480,hibernate,org.hibernate.criterion.Example_goal.json,"appendPropertyCondition(java.lang.String propertyName, java.lang.Object propertyValue, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery cq, java.lang.StringBuilder buf)",appendPropertyCondition,org.hibernate.criterion.Example,,FreeText,,0
2481,hibernate,org.hibernate.criterion.Example_goal.json,"appendComponentCondition(java.lang.String path, java.lang.Object component, org.hibernate.type.CompositeType type, org.hibernate.Criteria criteria, org.hibernate.criterion.CriteriaQuery criteriaQuery, java.lang.StringBuilder buf)",appendComponentCondition,org.hibernate.criterion.Example,,FreeText,,0
2482,hibernate,org.hibernate.criterion.Example_goal.json,toString(),toString,org.hibernate.criterion.Example,,FreeText,,0
2483,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,org.hibernate.dialect.pagination.SQLServer2005LimitHandler(),org.hibernate.dialect.pagination.SQLServer2005LimitHandler,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,Constructs a SQLServer2005LimitHandler,FreeText,,0
2484,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,supportsLimit(),supportsLimit,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2485,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,useMaxForLimit(),useMaxForLimit,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2486,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,supportsLimitOffset(),supportsLimitOffset,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2487,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,supportsVariableLimit(),supportsVariableLimit,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2488,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,convertToFirstRowValue(int zeroBasedFirstResult),convertToFirstRowValue,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2489,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"processSql(java.lang.String sql, org.hibernate.engine.spi.RowSelection selection)",processSql,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,"Add a LIMIT clause to the given SQL SELECT (HHH-2655: ROW_NUMBER for Paging) The LIMIT SQL will look like:  WITH query AS ( SELECT inner_query.* , ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) as __hibernate_row_nr__ FROM ( original_query_with_top_if_order_by_present_and_all_aliased_columns ) inner_query ) SELECT alias_list FROM query WHERE __hibernate_row_nr__ >= offset AND __hibernate_row_nr__ < offset + last  When offset equals {@literal 0}, only TOP(?) expression is added to the original query.",FreeText,,0
2490,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"bindLimitParametersAtStartOfQuery(org.hibernate.engine.spi.RowSelection selection, java.sql.PreparedStatement statement, int index)",bindLimitParametersAtStartOfQuery,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2491,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"bindLimitParametersAtEndOfQuery(org.hibernate.engine.spi.RowSelection selection, java.sql.PreparedStatement statement, int index)",bindLimitParametersAtEndOfQuery,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,,FreeText,,0
2492,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"fillAliasInSelectClause(java.lang.StringBuilder sb, int offset)",fillAliasInSelectClause,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,"Adds missing aliases in provided SELECT clause and returns coma-separated list of them. If query takes advantage of expressions like {@literal *} or {@literal {table}.*} inside SELECT clause, method returns {@literal *}.",FreeText,,0
2493,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"encloseWithOuterQuery(java.lang.StringBuilder sql, int offset)",encloseWithOuterQuery,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,Encloses original SQL statement with outer query that provides {@literal __hibernate_row_nr__} column.,FreeText,,0
2494,hibernate,org.hibernate.dialect.pagination.SQLServer2005LimitHandler_goal.json,"addTopExpression(java.lang.StringBuilder sql, int offset)",addTopExpression,org.hibernate.dialect.pagination.SQLServer2005LimitHandler,"Adds TOP expression. Parameter value is bind in #bindLimitParametersAtStartOfQuery(RowSelection, PreparedStatement, int) method.",FreeText,,0
2495,hibernate,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider_goal.json,getAnyConnection(),getAnyConnection,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider,"Allows access to the database metadata of the underlying database(s) in situations where we do not have a tenant id (like startup processing, for example).",FreeText,,0
2496,hibernate,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider_goal.json,releaseAnyConnection(java.sql.Connection connection),releaseAnyConnection,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider,Release a connection obtained from #getAnyConnection,FreeText,,0
2497,hibernate,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider_goal.json,getConnection(java.lang.String tenantIdentifier),getConnection,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider,Obtains a connection for Hibernate use according to the underlying strategy of this provider.,FreeText,,0
2498,hibernate,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider_goal.json,"releaseConnection(java.lang.String tenantIdentifier, java.sql.Connection connection)",releaseConnection,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider,Release a connection from Hibernate use.,FreeText,,0
2499,hibernate,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider_goal.json,supportsAggressiveRelease(),supportsAggressiveRelease,org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider,"Does this connection provider support aggressive release of JDBC connections and re-acquisition of those connections (if need be) later?  Typically, this is only true in managed environments where a container tracks connections by transaction or thread. Note that JTA semantic depends on the fact that the underlying connection provider does support aggressive release.",FreeText,,0
2500,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,extract(java.sql.PreparedStatement statement),extract,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Extract the ResultSet from the PreparedStatement.  If user passes CallableStatement reference, this method calls #extract(CallableStatement) internally. Otherwise, generally speaking, java.sql.PreparedStatement#executeQuery() is called",FreeText,,0
2501,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,extract(java.sql.CallableStatement callableStatement),extract,org.hibernate.engine.jdbc.spi.ResultSetReturn,Extract the ResultSet from the CallableStatement. Note that this is the limited legacy form which delegates to org.hibernate.dialect.Dialect#getResultSet. Better option is to integrate org.hibernate.procedure.ProcedureCall-like hooks,FreeText,,0
2502,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,"extract(java.sql.Statement statement, java.lang.String sql)",extract,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Performs the given SQL statement, expecting a ResultSet in return",FreeText,,0
2503,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,execute(java.sql.PreparedStatement statement),execute,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Execute the PreparedStatement return its first ResultSet, if any. If there is no ResultSet, returns null",FreeText,,0
2504,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,"execute(java.sql.Statement statement, java.lang.String sql)",execute,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Performs the given SQL statement, returning its first ResultSet, if any. If there is no ResultSet, returns null",FreeText,,0
2505,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,executeUpdate(java.sql.PreparedStatement statement),executeUpdate,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Execute the PreparedStatement, returning its ""affected row count"".",FreeText,,0
2506,hibernate,org.hibernate.engine.jdbc.spi.ResultSetReturn_goal.json,"executeUpdate(java.sql.Statement statement, java.lang.String sql)",executeUpdate,org.hibernate.engine.jdbc.spi.ResultSetReturn,"Execute the given SQL statement returning its ""affected row count"".",FreeText,,0
2507,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,"org.hibernate.engine.spi.SubselectFetch(java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",org.hibernate.engine.spi.SubselectFetch,org.hibernate.engine.spi.SubselectFetch,"Construct a SubselectFetch instance. The subselect fetch query fragment is generated by #createSubselectFetchQueryFragment. If the same value for queryParameters is to be used when constructing multiple SubselectFetch objects, then it is preferable to generate the subselect fetch query fragment using #createSubselectFetchQueryFragment, and pass the result as an argument to constructor #SubselectFetch(String, String, Loadable, QueryParameters, Set, Map).",FreeText,,0
2508,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,"org.hibernate.engine.spi.SubselectFetch(java.lang.String subselectFetchQueryFragment, java.lang.String alias, org.hibernate.persister.entity.Loadable loadable, org.hibernate.engine.spi.QueryParameters queryParameters, java.util.Set resultingEntityKeys, java.util.Map namedParameterLocMap)",org.hibernate.engine.spi.SubselectFetch,org.hibernate.engine.spi.SubselectFetch,"Construct a SubselectFetch instance using the provided subselect fetch query fragment, subselectFetchQueryFragment. It is assumed that subselectFetchQueryFragment is the result of calling #createSubselectFetchQueryFragment with the same value provided for queryParameters.",FreeText,methodResultID.equals(org.hibernate.engine.spi.SubselectFetch.createSubselectFetchQueryFragment(args[3])),1
2509,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,createSubselectFetchQueryFragment(org.hibernate.engine.spi.QueryParameters queryParameters),createSubselectFetchQueryFragment,org.hibernate.engine.spi.SubselectFetch,Create the subselect fetch query fragment for the provided QueryParameters with SELECT and ORDER BY clauses removed.,FreeText,,0
2510,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,getQueryParameters(),getQueryParameters,org.hibernate.engine.spi.SubselectFetch,,FreeText,,0
2511,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,getResult(),getResult,org.hibernate.engine.spi.SubselectFetch,Get the Set of EntityKeys,FreeText,,0
2512,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,toSubselectString(java.lang.String ukname),toSubselectString,org.hibernate.engine.spi.SubselectFetch,,FreeText,,0
2513,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,toString(),toString,org.hibernate.engine.spi.SubselectFetch,,FreeText,,0
2514,hibernate,org.hibernate.engine.spi.SubselectFetch_goal.json,getNamedParameterLocMap(),getNamedParameterLocMap,org.hibernate.engine.spi.SubselectFetch,,FreeText,,0
2515,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int capacity, int concurrencyLevel, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction evictionStrategy, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$EvictionListener<K, V> evictionListener)",org.hibernate.internal.util.collections.BoundedConcurrentHashMap,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Creates a new, empty map with the specified maximum capacity, load factor and concurrency level.",FreeText,,0
2516,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int capacity, int concurrencyLevel)",org.hibernate.internal.util.collections.BoundedConcurrentHashMap,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Creates a new, empty map with the specified maximum capacity, load factor, concurrency level and LRU eviction policy.",FreeText,,0
2517,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int capacity, int concurrencyLevel, org.hibernate.internal.util.collections.BoundedConcurrentHashMap$Eviction evictionStrategy)",org.hibernate.internal.util.collections.BoundedConcurrentHashMap,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Creates a new, empty map with the specified maximum capacity, load factor, concurrency level and eviction strategy.",FreeText,,0
2518,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,org.hibernate.internal.util.collections.BoundedConcurrentHashMap(int capacity),org.hibernate.internal.util.collections.BoundedConcurrentHashMap,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Creates a new, empty map with the specified maximum capacity, default concurrency level and LRU eviction policy.",FreeText,,0
2519,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,org.hibernate.internal.util.collections.BoundedConcurrentHashMap(),org.hibernate.internal.util.collections.BoundedConcurrentHashMap,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Creates a new, empty map with the default maximum capacity",FreeText,,0
2520,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,segmentFor(int hash),segmentFor,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Returns the segment that should be used for key with given hash,FreeText,,0
2521,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,isEmpty(),isEmpty,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Returns true if this map contains no key-value mappings.,FreeText,,0
2522,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,size(),size,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns the number of key-value mappings in this map. If the map contains more than Integer.MAX_VALUE elements, returns Integer.MAX_VALUE.",FreeText,,0
2523,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,get(java.lang.Object key),get,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  More formally, if this map contains a mapping from a key k to a value v such that key.equals(k), then this method returns v; otherwise it returns null. (There can be at most one such mapping.)",FreeText,,0
2524,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,containsKey(java.lang.Object key),containsKey,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Tests if the specified object is a key in this table.,FreeText,,0
2525,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,containsValue(java.lang.Object value),containsValue,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns true if this map maps one or more keys to the specified value. Note: This method requires a full internal traversal of the hash table, and so is much slower than method containsKey.",FreeText,,0
2526,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,contains(java.lang.Object value),contains,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Legacy method testing if some key maps into the specified value in this table. This method is identical in functionality to #containsValue, and exists solely to ensure full compatibility with class java.util.Hashtable, which supported this method prior to introduction of the Java Collections framework.",FreeText,methodResultID==(receiverObjectClone.containsValue(args[0])),1
2527,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"put(K key, V value)",put,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Maps the specified key to the specified value in this table. Neither the key nor the value can be null.   The value can be retrieved by calling the get method with a key that is equal to the original key.,FreeText,,0
2528,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"putIfAbsent(K key, V value)",putIfAbsent,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,{@inheritDoc},FreeText,,0
2529,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"putAll(java.util.Map<? extends K, ? extends V> m)",putAll,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Copies all of the mappings from the specified map to this one. These mappings replace any mappings that this map had for any of the keys currently in the specified map.,FreeText,,0
2530,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,remove(java.lang.Object key),remove,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Removes the key (and its corresponding value) from this map. This method does nothing if the key is not in the map.,FreeText,,0
2531,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,{@inheritDoc},FreeText,,0
2532,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"replace(K key, V oldValue, V newValue)",replace,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,{@inheritDoc},FreeText,,0
2533,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,"replace(K key, V value)",replace,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,{@inheritDoc},FreeText,,0
2534,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,clear(),clear,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Removes all of the mappings from this map.,FreeText,,0
2535,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,keySet(),keySet,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns a Set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from this map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2536,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,values(),values,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns a Collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from this map, via the Iterator.remove, Collection.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2537,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,entrySet(),entrySet,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,"Returns a Set view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2538,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,keys(),keys,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Returns an enumeration of the keys in this table.,FreeText,,0
2539,hibernate,org.hibernate.internal.util.collections.BoundedConcurrentHashMap_goal.json,elements(),elements,org.hibernate.internal.util.collections.BoundedConcurrentHashMap,Returns an enumeration of the values in this table.,FreeText,,0
2540,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int initialCapacity, float loadFactor, int concurrencyLevel, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType keyType, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType valueType, java.util.EnumSet<org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$Option> options)",org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with the specified initial capacity, reference types, load factor and concurrency level.  Behavioral changing options such as Option#IDENTITY_COMPARISONS can also be specified.",FreeText,,0
2541,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int initialCapacity, float loadFactor, int concurrencyLevel)",org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with the specified initial capacity, load factor and concurrency level.",FreeText,,0
2542,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int initialCapacity, float loadFactor)",org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with the specified initial capacity and load factor and with the default reference types (weak keys, strong values), and concurrencyLevel (16).",FreeText,,0
2543,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int initialCapacity, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType keyType, org.hibernate.internal.util.collections.ConcurrentReferenceHashMap$ReferenceType valueType)",org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with the specified initial capacity, reference types and with default load factor (0.75) and concurrencyLevel (16).",FreeText,,0
2544,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(int initialCapacity),org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with the specified initial capacity, and with default reference types (weak keys, strong values), load factor (0.75) and concurrencyLevel (16).",FreeText,,0
2545,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(),org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new, empty map with a default initial capacity (16), reference types (weak keys, strong values), default load factor (0.75) and concurrencyLevel (16).",FreeText,,0
2546,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"org.hibernate.internal.util.collections.ConcurrentReferenceHashMap(java.util.Map<? extends K, ? extends V> m)",org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Creates a new map with the same mappings as the given map. The map is created with a capacity of 1.5 times the number of mappings in the given map or 16 (whichever is greater), and a default load factor (0.75) and concurrencyLevel (16).",FreeText,,0
2547,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,segmentFor(int hash),segmentFor,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Returns the segment that should be used for key with given hash,FreeText,,0
2548,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,isEmpty(),isEmpty,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Returns true if this map contains no key-value mappings.,FreeText,,0
2549,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,size(),size,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns the number of key-value mappings in this map. If the map contains more than Integer.MAX_VALUE elements, returns Integer.MAX_VALUE.",FreeText,,0
2550,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,get(java.lang.Object key),get,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  More formally, if this map contains a mapping from a key k to a value v such that key.equals(k), then this method returns v; otherwise it returns null. (There can be at most one such mapping.)",FreeText,,0
2551,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,containsKey(java.lang.Object key),containsKey,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Tests if the specified object is a key in this table.,FreeText,,0
2552,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,containsValue(java.lang.Object value),containsValue,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns true if this map maps one or more keys to the specified value. Note: This method requires a full internal traversal of the hash table, and so is much slower than method containsKey.",FreeText,,0
2553,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,contains(java.lang.Object value),contains,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Legacy method testing if some key maps into the specified value in this table. This method is identical in functionality to #containsValue, and exists solely to ensure full compatibility with class java.util.Hashtable, which supported this method prior to introduction of the Java Collections framework.",FreeText,methodResultID==(receiverObjectClone.containsValue(args[0])),1
2554,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"put(K key, V value)",put,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Maps the specified key to the specified value in this table. Neither the key nor the value can be null.   The value can be retrieved by calling the get method with a key that is equal to the original key.,FreeText,,0
2555,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"putIfAbsent(K key, V value)",putIfAbsent,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,{@inheritDoc},FreeText,,0
2556,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"putAll(java.util.Map<? extends K, ? extends V> m)",putAll,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Copies all of the mappings from the specified map to this one. These mappings replace any mappings that this map had for any of the keys currently in the specified map.,FreeText,,0
2557,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,remove(java.lang.Object key),remove,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Removes the key (and its corresponding value) from this map. This method does nothing if the key is not in the map.,FreeText,,0
2558,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,{@inheritDoc},FreeText,,0
2559,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"replace(K key, V oldValue, V newValue)",replace,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,{@inheritDoc},FreeText,,0
2560,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,"replace(K key, V value)",replace,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,{@inheritDoc},FreeText,,0
2561,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,clear(),clear,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Removes all of the mappings from this map.,FreeText,,0
2562,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,purgeStaleEntries(),purgeStaleEntries,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Removes any stale entries whose keys have been finalized. Use of this method is normally not necessary since stale entries are automatically removed lazily, when blocking operations are required. However, there are some cases where this operation should be performed eagerly, such as cleaning up old references to a ClassLoader in a multi-classloader environment.  Note: this method will acquire locks, one at a time, across all segments of this table, so if it is to be used, it should be used sparingly.",FreeText,,0
2563,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,keySet(),keySet,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns a Set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from this map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2564,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,values(),values,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns a Collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from this map, via the Iterator.remove, Collection.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2565,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,entrySet(),entrySet,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,"Returns a Set view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.  The view's iterator is a ""weakly consistent"" iterator that will never throw java.util.ConcurrentModificationException, and guarantees to traverse elements as they existed upon construction of the iterator, and may (but is not guaranteed to) reflect any modifications subsequent to construction.",FreeText,,0
2566,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,keys(),keys,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Returns an enumeration of the keys in this table.,FreeText,,0
2567,hibernate,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap_goal.json,elements(),elements,org.hibernate.internal.util.collections.ConcurrentReferenceHashMap,Returns an enumeration of the values in this table.,FreeText,,0
2568,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,org.hibernate.internal.util.xml.BufferedXMLEventReader(javax.xml.stream.XMLEventReader reader),org.hibernate.internal.util.xml.BufferedXMLEventReader,org.hibernate.internal.util.xml.BufferedXMLEventReader,"Create new buffering reader, no buffering is done until #mark(int) is called.",FreeText,,0
2569,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,"org.hibernate.internal.util.xml.BufferedXMLEventReader(javax.xml.stream.XMLEventReader reader, int eventLimit)",org.hibernate.internal.util.xml.BufferedXMLEventReader,org.hibernate.internal.util.xml.BufferedXMLEventReader,Create new buffering reader. Calls #mark(int) with the specified event limit @see #mark(int),FreeText,,0
2570,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,getBuffer(),getBuffer,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2571,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,internalNextEvent(),internalNextEvent,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2572,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,hasNext(),hasNext,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2573,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,peek(),peek,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2574,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,mark(),mark,org.hibernate.internal.util.xml.BufferedXMLEventReader,Same as calling #mark(int) with -1.,FreeText,receiverObjectClone.mark(-1); receiverObjectID.equals(receiverObjectClone),1
2575,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,mark(int eventLimit),mark,org.hibernate.internal.util.xml.BufferedXMLEventReader,Start buffering events,FreeText,,0
2576,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,reset(),reset,org.hibernate.internal.util.xml.BufferedXMLEventReader,Reset the reader to these start of the buffered events.,FreeText,,0
2577,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,close(),close,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2578,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,bufferSize(),bufferSize,org.hibernate.internal.util.xml.BufferedXMLEventReader,,FreeText,,0
2579,hibernate,org.hibernate.internal.util.xml.BufferedXMLEventReader_goal.json,remove(),remove,org.hibernate.internal.util.xml.BufferedXMLEventReader,If reading from the buffer after a #reset() call an IllegalStateException will be thrown.,FreeText,,0
2580,hibernate,org.hibernate.loader.plan.exec.spi.EntityReferenceAliases_goal.json,getTableAlias(),getTableAlias,org.hibernate.loader.plan.exec.spi.EntityReferenceAliases,"Obtain the table alias used for referencing the table of the EntityReference.  Note that this currently just returns the ""root alias"" whereas sometimes an entity reference covers multiple tables. todo : to help manage this, consider a solution like TableAliasRoot from the initial ANTLR re-work see http://anonsvn.jboss.org/repos/hibernate/core/branches/antlr3/src/main/java/org/hibernate/sql/ast/alias/TableAliasGenerator.java",FreeText,,0
2581,hibernate,org.hibernate.loader.plan.exec.spi.EntityReferenceAliases_goal.json,getColumnAliases(),getColumnAliases,org.hibernate.loader.plan.exec.spi.EntityReferenceAliases,Obtain the column aliases for the select fragment columns associated with the described entity reference. These are the column renames by which the values can be extracted from the SQL result set.,FreeText,,0
2582,hibernate,org.hibernate.loader.plan.spi.BidirectionalEntityReference_goal.json,getTargetEntityReference(),getTargetEntityReference,org.hibernate.loader.plan.spi.BidirectionalEntityReference,Get the targeted EntityReference,FreeText,,0
2583,hibernate,org.hibernate.loader.plan.spi.BidirectionalEntityReference_goal.json,getQuerySpaceUid(),getQuerySpaceUid,org.hibernate.loader.plan.spi.BidirectionalEntityReference,The query space UID returned using #getQuerySpaceUid() must be the same as returned by #getTargetEntityReference()#getQuerySpaceUid(),FreeText,methodResultID.equals(receiverObjectClone.getTargetEntityReference()),1
2584,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,hasRegisteredResources(),hasRegisteredResources,org.hibernate.resource.jdbc.ResourceRegistry,Does this registry currently have any registered resources?,FreeText,,0
2585,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,releaseResources(),releaseResources,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2586,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,"register(java.sql.Statement statement, boolean cancelable)",register,org.hibernate.resource.jdbc.ResourceRegistry,Register a JDBC statement.,FreeText,,0
2587,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,release(java.sql.Statement statement),release,org.hibernate.resource.jdbc.ResourceRegistry,Release a previously registered statement.,FreeText,,0
2588,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,"register(java.sql.ResultSet resultSet, java.sql.Statement statement)",register,org.hibernate.resource.jdbc.ResourceRegistry,Register a JDBC result set.  Implementation note: Second parameter has been introduced to prevent multiple registrations of the same statement in case java.sql.ResultSet#getStatement() does not return original java.sql.Statement object.,FreeText,,0
2589,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,"release(java.sql.ResultSet resultSet, java.sql.Statement statement)",release,org.hibernate.resource.jdbc.ResourceRegistry,Release a previously registered result set.,FreeText,,0
2590,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,register(java.sql.Blob blob),register,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2591,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,release(java.sql.Blob blob),release,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2592,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,register(java.sql.Clob clob),register,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2593,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,release(java.sql.Clob clob),release,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2594,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,register(java.sql.NClob nclob),register,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2595,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,release(java.sql.NClob nclob),release,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2596,hibernate,org.hibernate.resource.jdbc.ResourceRegistry_goal.json,cancelLastQuery(),cancelLastQuery,org.hibernate.resource.jdbc.ResourceRegistry,,FreeText,,0
2597,hibernate,org.hibernate.TypeHelper_goal.json,basic(java.lang.String name),basic,org.hibernate.TypeHelper,Retrieve the basic type registered against the given name.,FreeText,,0
2598,hibernate,org.hibernate.TypeHelper_goal.json,basic(java.lang.Class javaType),basic,org.hibernate.TypeHelper,Convenience form of #basic(String). The intended use of this is something like basic(Integer.class) or basic(int.class),FreeText,,0
2599,hibernate,org.hibernate.TypeHelper_goal.json,heuristicType(java.lang.String name),heuristicType,org.hibernate.TypeHelper,Uses heuristics to deduce the proper Type given a string naming the type or Java class.  See org.hibernate.type.TypeResolver#heuristicType(java.lang.String) for a discussion of the heuristic algorithm.,FreeText,,0
2600,hibernate,org.hibernate.TypeHelper_goal.json,entity(java.lang.Class entityClass),entity,org.hibernate.TypeHelper,Retrieve a type representing the given entity.,FreeText,,0
2601,hibernate,org.hibernate.TypeHelper_goal.json,entity(java.lang.String entityName),entity,org.hibernate.TypeHelper,Retrieve a type representing the given entity.,FreeText,,0
2602,hibernate,org.hibernate.TypeHelper_goal.json,custom(java.lang.Class userTypeClass),custom,org.hibernate.TypeHelper,Retrieve the type for the given user-type class (org.hibernate.usertype.UserType or org.hibernate.usertype.CompositeUserType).,FreeText,,0
2603,hibernate,org.hibernate.TypeHelper_goal.json,"custom(java.lang.Class userTypeClass, java.util.Properties properties)",custom,org.hibernate.TypeHelper,Retrieve the type for the given user-type class (org.hibernate.usertype.UserType or org.hibernate.usertype.CompositeUserType).,FreeText,,0
2604,hibernate,org.hibernate.TypeHelper_goal.json,"any(org.hibernate.type.Type metaType, org.hibernate.type.Type identifierType)",any,org.hibernate.TypeHelper,Retrieve the type representing an ANY mapping.,FreeText,,0
2605,jdk,java.awt.geom.AffineTransform_goal.json,java.awt.geom.AffineTransform(),java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform representing the Identity transformation.,FreeText,,0
2606,jdk,java.awt.geom.AffineTransform_goal.json,java.awt.geom.AffineTransform(java.awt.geom.AffineTransform Tx),java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform that is a copy of the specified AffineTransform object.,FreeText,,0
2607,jdk,java.awt.geom.AffineTransform_goal.json,"java.awt.geom.AffineTransform(float m00, float m10, float m01, float m11, float m02, float m12)",java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform from 6 floating point values representing the 6 specifiable entries of the 3x3 transformation matrix.,FreeText,,0
2608,jdk,java.awt.geom.AffineTransform_goal.json,java.awt.geom.AffineTransform(float[] flatmatrix),java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform from an array of floating point values representing either the 4 non-translation entries or the 6 specifiable entries of the 3x3 transformation matrix. The values are retrieved from the array as {&nbsp;m00&nbsp;m10&nbsp;m01&nbsp;m11&nbsp;[m02&nbsp;m12]}.,FreeText,,0
2609,jdk,java.awt.geom.AffineTransform_goal.json,"java.awt.geom.AffineTransform(double m00, double m10, double m01, double m11, double m02, double m12)",java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform from 6 double precision values representing the 6 specifiable entries of the 3x3 transformation matrix.,FreeText,,0
2610,jdk,java.awt.geom.AffineTransform_goal.json,java.awt.geom.AffineTransform(double[] flatmatrix),java.awt.geom.AffineTransform,java.awt.geom.AffineTransform,Constructs a new AffineTransform from an array of double precision values representing either the 4 non-translation entries or the 6 specifiable entries of the 3x3 transformation matrix. The values are retrieved from the array as {&nbsp;m00&nbsp;m10&nbsp;m01&nbsp;m11&nbsp;[m02&nbsp;m12]}.,FreeText,,0
2611,jdk,java.awt.geom.AffineTransform_goal.json,"getTranslateInstance(double tx, double ty)",getTranslateInstance,java.awt.geom.AffineTransform,Returns a transform representing a translation transformation. The matrix representing the returned transform is:  [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ],FreeText,,0
2612,jdk,java.awt.geom.AffineTransform_goal.json,getRotateInstance(double theta),getRotateInstance,java.awt.geom.AffineTransform,Returns a transform representing a rotation transformation. The matrix representing the returned transform is:  [ cos(theta) -sin(theta) 0 ] [ sin(theta) cos(theta) 0 ] [ 0 0 1 ]  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.,FreeText,,0
2613,jdk,java.awt.geom.AffineTransform_goal.json,"getRotateInstance(double theta, double anchorx, double anchory)",getRotateInstance,java.awt.geom.AffineTransform,"Returns a transform that rotates coordinates around an anchor point. This operation is equivalent to translating the coordinates so that the anchor point is at the origin (S1), then rotating them about the new origin (S2), and finally translating so that the intermediate origin is restored to the coordinates of the original anchor point (S3).  This operation is equivalent to the following sequence of calls:  AffineTransform Tx = new AffineTransform(); Tx.translate(anchorx, anchory); // S3: final translation Tx.rotate(theta); // S2: rotate around anchor Tx.translate(-anchorx, -anchory); // S1: translate anchor to origin  The matrix representing the returned transform is:  [ cos(theta) -sin(theta) x-x*cos+y*sin ] [ sin(theta) cos(theta) y-x*sin-y*cos ] [ 0 0 1 ]  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.",FreeText,,0
2614,jdk,java.awt.geom.AffineTransform_goal.json,"getRotateInstance(double vecx, double vecy)",getRotateInstance,java.awt.geom.AffineTransform,"Returns a transform that rotates coordinates according to a rotation vector. All coordinates rotate about the origin by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, an identity transform is returned. This operation is equivalent to calling:  AffineTransform.getRotateInstance(Math.atan2(vecy, vecx));",FreeText,,0
2615,jdk,java.awt.geom.AffineTransform_goal.json,"getRotateInstance(double vecx, double vecy, double anchorx, double anchory)",getRotateInstance,java.awt.geom.AffineTransform,"Returns a transform that rotates coordinates around an anchor point according to a rotation vector. All coordinates rotate about the specified anchor coordinates by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, an identity transform is returned. This operation is equivalent to calling:  AffineTransform.getRotateInstance(Math.atan2(vecy, vecx), anchorx, anchory);",FreeText,"methodResultID.equals(java.awt.geom.AffineTransform.getRotateInstance(args[0],args[0]))",1
2616,jdk,java.awt.geom.AffineTransform_goal.json,getQuadrantRotateInstance(int numquadrants),getQuadrantRotateInstance,java.awt.geom.AffineTransform,Returns a transform that rotates coordinates by the specified number of quadrants. This operation is equivalent to calling:  AffineTransform.getRotateInstance(numquadrants * Math.PI / 2.0);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.,FreeText,,0
2617,jdk,java.awt.geom.AffineTransform_goal.json,"getQuadrantRotateInstance(int numquadrants, double anchorx, double anchory)",getQuadrantRotateInstance,java.awt.geom.AffineTransform,"Returns a transform that rotates coordinates by the specified number of quadrants around the specified anchor point. This operation is equivalent to calling:  AffineTransform.getRotateInstance(numquadrants * Math.PI / 2.0, anchorx, anchory);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",FreeText,,0
2618,jdk,java.awt.geom.AffineTransform_goal.json,"getScaleInstance(double sx, double sy)",getScaleInstance,java.awt.geom.AffineTransform,Returns a transform representing a scaling transformation. The matrix representing the returned transform is:  [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ],FreeText,,0
2619,jdk,java.awt.geom.AffineTransform_goal.json,"getShearInstance(double shx, double shy)",getShearInstance,java.awt.geom.AffineTransform,Returns a transform representing a shearing transformation. The matrix representing the returned transform is:  [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ],FreeText,,0
2620,jdk,java.awt.geom.AffineTransform_goal.json,getType(),getType,java.awt.geom.AffineTransform,"Retrieves the flag bits describing the conversion properties of this transform. The return value is either one of the constants TYPE_IDENTITY or TYPE_GENERAL_TRANSFORM, or a combination of the appropriate flag bits. A valid combination of flag bits is an exclusive OR operation that can combine the TYPE_TRANSLATION flag bit in addition to either of the TYPE_UNIFORM_SCALE or TYPE_GENERAL_SCALE flag bits as well as either of the TYPE_QUADRANT_ROTATION or TYPE_GENERAL_ROTATION flag bits.",FreeText,,0
2621,jdk,java.awt.geom.AffineTransform_goal.json,getDeterminant(),getDeterminant,java.awt.geom.AffineTransform,"Returns the determinant of the matrix representation of the transform. The determinant is useful both to determine if the transform can be inverted and to get a single value representing the combined X and Y scaling of the transform.  If the determinant is non-zero, then this transform is invertible and the various methods that depend on the inverse transform do not need to throw a NoninvertibleTransformException. If the determinant is zero then this transform can not be inverted since the transform maps all input coordinates onto a line or a point. If the determinant is near enough to zero then inverse transform operations might not carry enough precision to produce meaningful results.  If this transform represents a uniform scale, as indicated by the getType method then the determinant also represents the square of the uniform scale factor by which all of the points are expanded from or contracted towards the origin. If this transform represents a non-uniform scale or more general transform then the determinant is not likely to represent a value useful for any purpose other than determining if inverse transforms are possible.  Mathematically, the determinant is calculated using the formula:  | m00 m01 m02 | | m10 m11 m12 | = m00 * m11 - m01 * m10 | 0 0 1 |",FreeText,,0
2622,jdk,java.awt.geom.AffineTransform_goal.json,updateState(),updateState,java.awt.geom.AffineTransform,Manually recalculates the state of the transform when the matrix changes too much to predict the effects on the state. The following table specifies what the various settings of the state field say about the values of the corresponding matrix element fields. Note that the rules governing the SCALE fields are slightly different depending on whether the SHEAR flag is also set.  SCALE SHEAR TRANSLATE m00/m11 m01/m10 m02/m12 IDENTITY 1.0 0.0 0.0 TRANSLATE (TR) 1.0 0.0 not both 0.0 SCALE (SC) not both 1.0 0.0 0.0 TR | SC not both 1.0 0.0 not both 0.0 SHEAR (SH) 0.0 not both 0.0 0.0 TR | SH 0.0 not both 0.0 not both 0.0 SC | SH not both 0.0 not both 0.0 0.0 TR | SC | SH not both 0.0 not both 0.0 not both 0.0,FreeText,,0
2623,jdk,java.awt.geom.AffineTransform_goal.json,getMatrix(double[] flatmatrix),getMatrix,java.awt.geom.AffineTransform,"Retrieves the 6 specifiable values in the 3x3 affine transformation matrix and places them into an array of double precisions values. The values are stored in the array as {&nbsp;m00&nbsp;m10&nbsp;m01&nbsp;m11&nbsp;m02&nbsp;m12&nbsp;}. An array of 4 doubles can also be specified, in which case only the first four elements representing the non-transform parts of the array are retrieved and the values are stored into the array as {&nbsp;m00&nbsp;m10&nbsp;m01&nbsp;m11&nbsp;}",FreeText,,0
2624,jdk,java.awt.geom.AffineTransform_goal.json,getScaleX(),getScaleX,java.awt.geom.AffineTransform,Returns the X coordinate scaling element (m00) of the 3x3 affine transformation matrix.,FreeText,,0
2625,jdk,java.awt.geom.AffineTransform_goal.json,getScaleY(),getScaleY,java.awt.geom.AffineTransform,Returns the Y coordinate scaling element (m11) of the 3x3 affine transformation matrix.,FreeText,,0
2626,jdk,java.awt.geom.AffineTransform_goal.json,getShearX(),getShearX,java.awt.geom.AffineTransform,Returns the X coordinate shearing element (m01) of the 3x3 affine transformation matrix.,FreeText,,0
2627,jdk,java.awt.geom.AffineTransform_goal.json,getShearY(),getShearY,java.awt.geom.AffineTransform,Returns the Y coordinate shearing element (m10) of the 3x3 affine transformation matrix.,FreeText,,0
2628,jdk,java.awt.geom.AffineTransform_goal.json,getTranslateX(),getTranslateX,java.awt.geom.AffineTransform,Returns the X coordinate of the translation element (m02) of the 3x3 affine transformation matrix.,FreeText,,0
2629,jdk,java.awt.geom.AffineTransform_goal.json,getTranslateY(),getTranslateY,java.awt.geom.AffineTransform,Returns the Y coordinate of the translation element (m12) of the 3x3 affine transformation matrix.,FreeText,,0
2630,jdk,java.awt.geom.AffineTransform_goal.json,"translate(double tx, double ty)",translate,java.awt.geom.AffineTransform,"Concatenates this transform with a translation transformation. This is equivalent to calling concatenate(T), where T is an AffineTransform represented by the following matrix:  [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ]",FreeText,,0
2631,jdk,java.awt.geom.AffineTransform_goal.json,rotate(double theta),rotate,java.awt.geom.AffineTransform,"Concatenates this transform with a rotation transformation. This is equivalent to calling concatenate(R), where R is an AffineTransform represented by the following matrix:  [ cos(theta) -sin(theta) 0 ] [ sin(theta) cos(theta) 0 ] [ 0 0 1 ]  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.",FreeText,,0
2632,jdk,java.awt.geom.AffineTransform_goal.json,"rotate(double theta, double anchorx, double anchory)",rotate,java.awt.geom.AffineTransform,"Concatenates this transform with a transform that rotates coordinates around an anchor point. This operation is equivalent to translating the coordinates so that the anchor point is at the origin (S1), then rotating them about the new origin (S2), and finally translating so that the intermediate origin is restored to the coordinates of the original anchor point (S3).  This operation is equivalent to the following sequence of calls:  translate(anchorx, anchory); // S3: final translation rotate(theta); // S2: rotate around anchor translate(-anchorx, -anchory); // S1: translate anchor to origin  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.",FreeText,,0
2633,jdk,java.awt.geom.AffineTransform_goal.json,"rotate(double vecx, double vecy)",rotate,java.awt.geom.AffineTransform,"Concatenates this transform with a transform that rotates coordinates according to a rotation vector. All coordinates rotate about the origin by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, no additional rotation is added to this transform. This operation is equivalent to calling:  rotate(Math.atan2(vecy, vecx));",FreeText,,0
2634,jdk,java.awt.geom.AffineTransform_goal.json,"rotate(double vecx, double vecy, double anchorx, double anchory)",rotate,java.awt.geom.AffineTransform,"Concatenates this transform with a transform that rotates coordinates around an anchor point according to a rotation vector. All coordinates rotate about the specified anchor coordinates by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, the transform is not modified in any way. This method is equivalent to calling:  rotate(Math.atan2(vecy, vecx), anchorx, anchory);",FreeText,"receiverObjectClone.rotate(args[0],args[0]);
receiverObjectClone.equals(receiverObjectID)",1
2635,jdk,java.awt.geom.AffineTransform_goal.json,quadrantRotate(int numquadrants),quadrantRotate,java.awt.geom.AffineTransform,Concatenates this transform with a transform that rotates coordinates by the specified number of quadrants. This is equivalent to calling:  rotate(numquadrants * Math.PI / 2.0);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.,FreeText,,0
2636,jdk,java.awt.geom.AffineTransform_goal.json,"quadrantRotate(int numquadrants, double anchorx, double anchory)",quadrantRotate,java.awt.geom.AffineTransform,"Concatenates this transform with a transform that rotates coordinates by the specified number of quadrants around the specified anchor point. This method is equivalent to calling:  rotate(numquadrants * Math.PI / 2.0, anchorx, anchory);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",FreeText,,0
2637,jdk,java.awt.geom.AffineTransform_goal.json,"scale(double sx, double sy)",scale,java.awt.geom.AffineTransform,"Concatenates this transform with a scaling transformation. This is equivalent to calling concatenate(S), where S is an AffineTransform represented by the following matrix:  [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ]",FreeText,,0
2638,jdk,java.awt.geom.AffineTransform_goal.json,"shear(double shx, double shy)",shear,java.awt.geom.AffineTransform,"Concatenates this transform with a shearing transformation. This is equivalent to calling concatenate(SH), where SH is an AffineTransform represented by the following matrix:  [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ]",FreeText,,0
2639,jdk,java.awt.geom.AffineTransform_goal.json,setToIdentity(),setToIdentity,java.awt.geom.AffineTransform,Resets this transform to the Identity transform.,FreeText,,0
2640,jdk,java.awt.geom.AffineTransform_goal.json,"setToTranslation(double tx, double ty)",setToTranslation,java.awt.geom.AffineTransform,Sets this transform to a translation transformation. The matrix representing this transform becomes:  [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ],FreeText,,0
2641,jdk,java.awt.geom.AffineTransform_goal.json,setToRotation(double theta),setToRotation,java.awt.geom.AffineTransform,Sets this transform to a rotation transformation. The matrix representing this transform becomes:  [ cos(theta) -sin(theta) 0 ] [ sin(theta) cos(theta) 0 ] [ 0 0 1 ]  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.,FreeText,,0
2642,jdk,java.awt.geom.AffineTransform_goal.json,"setToRotation(double theta, double anchorx, double anchory)",setToRotation,java.awt.geom.AffineTransform,"Sets this transform to a translated rotation transformation. This operation is equivalent to translating the coordinates so that the anchor point is at the origin (S1), then rotating them about the new origin (S2), and finally translating so that the intermediate origin is restored to the coordinates of the original anchor point (S3).  This operation is equivalent to the following sequence of calls:  setToTranslation(anchorx, anchory); // S3: final translation rotate(theta); // S2: rotate around anchor translate(-anchorx, -anchory); // S1: translate anchor to origin  The matrix representing this transform becomes:  [ cos(theta) -sin(theta) x-x*cos+y*sin ] [ sin(theta) cos(theta) y-x*sin-y*cos ] [ 0 0 1 ]  Rotating by a positive angle theta rotates points on the positive X axis toward the positive Y axis. Note also the discussion of Handling 90-Degree Rotations above.",FreeText,,0
2643,jdk,java.awt.geom.AffineTransform_goal.json,"setToRotation(double vecx, double vecy)",setToRotation,java.awt.geom.AffineTransform,"Sets this transform to a rotation transformation that rotates coordinates according to a rotation vector. All coordinates rotate about the origin by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, the transform is set to an identity transform. This operation is equivalent to calling:  setToRotation(Math.atan2(vecy, vecx));",FreeText,,0
2644,jdk,java.awt.geom.AffineTransform_goal.json,"setToRotation(double vecx, double vecy, double anchorx, double anchory)",setToRotation,java.awt.geom.AffineTransform,"Sets this transform to a rotation transformation that rotates coordinates around an anchor point according to a rotation vector. All coordinates rotate about the specified anchor coordinates by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, the transform is set to an identity transform. This operation is equivalent to calling:  setToTranslation(Math.atan2(vecy, vecx), anchorx, anchory);",FreeText,"receiverObjectClone.setToTranslation(args[0],args[0]);
receiverObjectClone.equals(receiverObjectID)",1
2645,jdk,java.awt.geom.AffineTransform_goal.json,setToQuadrantRotation(int numquadrants),setToQuadrantRotation,java.awt.geom.AffineTransform,Sets this transform to a rotation transformation that rotates coordinates by the specified number of quadrants. This operation is equivalent to calling:  setToRotation(numquadrants * Math.PI / 2.0);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.,FreeText,,0
2646,jdk,java.awt.geom.AffineTransform_goal.json,"setToQuadrantRotation(int numquadrants, double anchorx, double anchory)",setToQuadrantRotation,java.awt.geom.AffineTransform,"Sets this transform to a translated rotation transformation that rotates coordinates by the specified number of quadrants around the specified anchor point. This operation is equivalent to calling:  setToRotation(numquadrants * Math.PI / 2.0, anchorx, anchory);  Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",FreeText,,0
2647,jdk,java.awt.geom.AffineTransform_goal.json,"setToScale(double sx, double sy)",setToScale,java.awt.geom.AffineTransform,Sets this transform to a scaling transformation. The matrix representing this transform becomes:  [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ],FreeText,,0
2648,jdk,java.awt.geom.AffineTransform_goal.json,"setToShear(double shx, double shy)",setToShear,java.awt.geom.AffineTransform,Sets this transform to a shearing transformation. The matrix representing this transform becomes:  [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ],FreeText,,0
2649,jdk,java.awt.geom.AffineTransform_goal.json,setTransform(java.awt.geom.AffineTransform Tx),setTransform,java.awt.geom.AffineTransform,Sets this transform to a copy of the transform in the specified AffineTransform object.,FreeText,,0
2650,jdk,java.awt.geom.AffineTransform_goal.json,"setTransform(double m00, double m10, double m01, double m11, double m02, double m12)",setTransform,java.awt.geom.AffineTransform,Sets this transform to the matrix specified by the 6 double precision values.,FreeText,,0
2651,jdk,java.awt.geom.AffineTransform_goal.json,concatenate(java.awt.geom.AffineTransform Tx),concatenate,java.awt.geom.AffineTransform,"Concatenates an AffineTransform Tx to this AffineTransform Cx in the most commonly useful way to provide a new user space that is mapped to the former user space by Tx. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx' is equivalent to first transforming p by Tx and then transforming the result by the original transform Cx like this: Cx'(p) = Cx(Tx(p)) In matrix notation, if this transform Cx is represented by the matrix [this] and Tx is represented by the matrix [Tx] then this method does the following:  [this] = [this] x [Tx]",FreeText,,0
2652,jdk,java.awt.geom.AffineTransform_goal.json,preConcatenate(java.awt.geom.AffineTransform Tx),preConcatenate,java.awt.geom.AffineTransform,"Concatenates an AffineTransform Tx to this AffineTransform Cx in a less commonly used way such that Tx modifies the coordinate transformation relative to the absolute pixel space rather than relative to the existing user space. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx' is equivalent to first transforming p by the original transform Cx and then transforming the result by Tx like this: Cx'(p) = Tx(Cx(p)) In matrix notation, if this transform Cx is represented by the matrix [this] and Tx is represented by the matrix [Tx] then this method does the following:  [this] = [Tx] x [this]",FreeText,,0
2653,jdk,java.awt.geom.AffineTransform_goal.json,createInverse(),createInverse,java.awt.geom.AffineTransform,"Returns an AffineTransform object representing the inverse transformation. The inverse transform Tx' of this transform Tx maps coordinates transformed by Tx back to their original coordinates. In other words, Tx'(Tx(p)) = p = Tx(Tx'(p)).  If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The getDeterminant method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the createInverse method is called.",FreeText,,0
2654,jdk,java.awt.geom.AffineTransform_goal.json,invert(),invert,java.awt.geom.AffineTransform,"Sets this transform to the inverse of itself. The inverse transform Tx' of this transform Tx maps coordinates transformed by Tx back to their original coordinates. In other words, Tx'(Tx(p)) = p = Tx(Tx'(p)).  If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The getDeterminant method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the invert method is called. @see #getDeterminant @exception NoninvertibleTransformException if the matrix cannot be inverted.",FreeText,,0
2655,jdk,java.awt.geom.AffineTransform_goal.json,"transform(java.awt.geom.Point2D ptSrc, java.awt.geom.Point2D ptDst)",transform,java.awt.geom.AffineTransform,"Transforms the specified ptSrc and stores the result in ptDst. If ptDst is null, a new Point2D object is allocated and then the result of the transformation is stored in this object. In either case, ptDst, which contains the transformed point, is returned for convenience. If ptSrc and ptDst are the same object, the input point is correctly overwritten with the transformed point.",FreeText,,0
2656,jdk,java.awt.geom.AffineTransform_goal.json,"transform(java.awt.geom.Point2D[] ptSrc, int srcOff, java.awt.geom.Point2D[] ptDst, int dstOff, int numPts)",transform,java.awt.geom.AffineTransform,"Transforms an array of point objects by this transform. If any element of the ptDst array is null, a new Point2D object is allocated and stored into that element before storing the results of the transformation.  Note that this method does not take any precautions to avoid problems caused by storing results into Point2D objects that will be used as the source for calculations further down the source array. This method does guarantee that if a specified Point2D object is both the source and destination for the same single point transform operation then the results will not be stored until the calculations are complete to avoid storing the results on top of the operands. If, however, the destination Point2D object for one operation is the same object as the source Point2D object for another operation further down the source array then the original coordinates in that point are overwritten before they can be converted.",FreeText,,0
2657,jdk,java.awt.geom.AffineTransform_goal.json,"transform(float[] srcPts, int srcOff, float[] dstPts, int dstOff, int numPts)",transform,java.awt.geom.AffineTransform,"Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2658,jdk,java.awt.geom.AffineTransform_goal.json,"transform(double[] srcPts, int srcOff, double[] dstPts, int dstOff, int numPts)",transform,java.awt.geom.AffineTransform,"Transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2659,jdk,java.awt.geom.AffineTransform_goal.json,"transform(float[] srcPts, int srcOff, double[] dstPts, int dstOff, int numPts)",transform,java.awt.geom.AffineTransform,"Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles. The coordinates are stored in the arrays starting at the specified offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2660,jdk,java.awt.geom.AffineTransform_goal.json,"transform(double[] srcPts, int srcOff, float[] dstPts, int dstOff, int numPts)",transform,java.awt.geom.AffineTransform,"Transforms an array of double precision coordinates by this transform and stores the results into an array of floats. The coordinates are stored in the arrays starting at the specified offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2661,jdk,java.awt.geom.AffineTransform_goal.json,"inverseTransform(java.awt.geom.Point2D ptSrc, java.awt.geom.Point2D ptDst)",inverseTransform,java.awt.geom.AffineTransform,"Inverse transforms the specified ptSrc and stores the result in ptDst. If ptDst is null, a new Point2D object is allocated and then the result of the transform is stored in this object. In either case, ptDst, which contains the transformed point, is returned for convenience. If ptSrc and ptDst are the same object, the input point is correctly overwritten with the transformed point.",FreeText,,0
2662,jdk,java.awt.geom.AffineTransform_goal.json,"inverseTransform(double[] srcPts, int srcOff, double[] dstPts, int dstOff, int numPts)",inverseTransform,java.awt.geom.AffineTransform,"Inverse transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2663,jdk,java.awt.geom.AffineTransform_goal.json,"deltaTransform(java.awt.geom.Point2D ptSrc, java.awt.geom.Point2D ptDst)",deltaTransform,java.awt.geom.AffineTransform,"Transforms the relative distance vector specified by ptSrc and stores the result in ptDst. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:  [ x' ] [ m00 m01 (m02) ] [ x ] [ m00x + m01y ] [ y' ] = [ m10 m11 (m12) ] [ y ] = [ m10x + m11y ] [ (1) ] [ (0) (0) ( 1 ) ] [ (1) ] [ (1) ]  If ptDst is null, a new Point2D object is allocated and then the result of the transform is stored in this object. In either case, ptDst, which contains the transformed point, is returned for convenience. If ptSrc and ptDst are the same object, the input point is correctly overwritten with the transformed point.",FreeText,,0
2664,jdk,java.awt.geom.AffineTransform_goal.json,"deltaTransform(double[] srcPts, int srcOff, double[] dstPts, int dstOff, int numPts)",deltaTransform,java.awt.geom.AffineTransform,"Transforms an array of relative distance vectors by this transform. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:  [ x' ] [ m00 m01 (m02) ] [ x ] [ m00x + m01y ] [ y' ] = [ m10 m11 (m12) ] [ y ] = [ m10x + m11y ] [ (1) ] [ (0) (0) ( 1 ) ] [ (1) ] [ (1) ]  The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order [x0, y0, x1, y1, ..., xn, yn].",FreeText,,0
2665,jdk,java.awt.geom.AffineTransform_goal.json,createTransformedShape(java.awt.Shape pSrc),createTransformedShape,java.awt.geom.AffineTransform,Returns a new Shape object defined by the geometry of the specified Shape after it has been transformed by this transform.,FreeText,,0
2666,jdk,java.awt.geom.AffineTransform_goal.json,toString(),toString,java.awt.geom.AffineTransform,Returns a String that represents the value of this Object.,FreeText,,0
2667,jdk,java.awt.geom.AffineTransform_goal.json,isIdentity(),isIdentity,java.awt.geom.AffineTransform,Returns true if this AffineTransform is an identity transform.,FreeText,,0
2668,jdk,java.awt.geom.AffineTransform_goal.json,clone(),clone,java.awt.geom.AffineTransform,Returns a copy of this AffineTransform object.,FreeText,,0
2669,jdk,java.awt.geom.AffineTransform_goal.json,hashCode(),hashCode,java.awt.geom.AffineTransform,Returns the hashcode for this transform.,FreeText,,0
2670,jdk,java.awt.geom.AffineTransform_goal.json,equals(java.lang.Object obj),equals,java.awt.geom.AffineTransform,Returns true if this AffineTransform represents the same affine coordinate transform as the specified argument.,FreeText,,0
2671,jdk,java.awt.Graphics2D_goal.json,java.awt.Graphics2D(),java.awt.Graphics2D,java.awt.Graphics2D,"Constructs a new Graphics2D object. Since Graphics2D is an abstract class, and since it must be customized by subclasses for different output devices, Graphics2D objects cannot be created directly. Instead, Graphics2D objects must be obtained from another Graphics2D object, created by a Component, or obtained from images such as BufferedImage objects. @see java.awt.Component#getGraphics @see java.awt.Graphics#create",FreeText,,0
2672,jdk,java.awt.Graphics2D_goal.json,"draw3DRect(int x, int y, int width, int height, boolean raised)",draw3DRect,java.awt.Graphics2D,Draws a 3-D highlighted outline of the specified rectangle. The edges of the rectangle are highlighted so that they appear to be beveled and lit from the upper left corner.  The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is width&nbsp;+&nbsp;1 pixels wide by height&nbsp;+&nbsp;1 pixels tall. This method uses the current Color exclusively and ignores the current Paint.,FreeText,,0
2673,jdk,java.awt.Graphics2D_goal.json,"fill3DRect(int x, int y, int width, int height, boolean raised)",fill3DRect,java.awt.Graphics2D,Paints a 3-D highlighted rectangle filled with the current color. The edges of the rectangle are highlighted so that it appears as if the edges were beveled and lit from the upper left corner. The colors used for the highlighting effect and for filling are determined from the current Color. This method uses the current Color exclusively and ignores the current Paint.,FreeText,,0
2674,jdk,java.awt.Graphics2D_goal.json,draw(java.awt.Shape s),draw,java.awt.Graphics2D,"Strokes the outline of a Shape using the settings of the current Graphics2D context. The rendering attributes applied include the Clip, Transform, Paint, Composite and Stroke attributes.",FreeText,,0
2675,jdk,java.awt.Graphics2D_goal.json,"drawImage(java.awt.Image img, java.awt.geom.AffineTransform xform, java.awt.image.ImageObserver obs)",drawImage,java.awt.Graphics2D,"Renders an image, applying a transform from image space into user space before drawing. The transformation from user space into device space is done with the current Transform in the Graphics2D. The specified transformation is applied to the image before the transform attribute in the Graphics2D context is applied. The rendering attributes applied include the Clip, Transform, and Composite attributes. Note that no rendering is done if the specified transform is noninvertible.",FreeText,,0
2676,jdk,java.awt.Graphics2D_goal.json,"drawImage(java.awt.image.BufferedImage img, java.awt.image.BufferedImageOp op, int x, int y)",drawImage,java.awt.Graphics2D,"Renders a BufferedImage that is filtered with a BufferedImageOp. The rendering attributes applied include the Clip, Transform and Composite attributes. This is equivalent to:  img1 = op.filter(img, null); drawImage(img1, new AffineTransform(1f,0f,0f,1f,x,y), null);",FreeText,,0
2677,jdk,java.awt.Graphics2D_goal.json,"drawRenderedImage(java.awt.image.RenderedImage img, java.awt.geom.AffineTransform xform)",drawRenderedImage,java.awt.Graphics2D,"Renders a RenderedImage, applying a transform from image space into user space before drawing. The transformation from user space into device space is done with the current Transform in the Graphics2D. The specified transformation is applied to the image before the transform attribute in the Graphics2D context is applied. The rendering attributes applied include the Clip, Transform, and Composite attributes. Note that no rendering is done if the specified transform is noninvertible.",FreeText,,0
2678,jdk,java.awt.Graphics2D_goal.json,"drawRenderableImage(java.awt.image.renderable.RenderableImage img, java.awt.geom.AffineTransform xform)",drawRenderableImage,java.awt.Graphics2D,"Renders a RenderableImage, applying a transform from image space into user space before drawing. The transformation from user space into device space is done with the current Transform in the Graphics2D. The specified transformation is applied to the image before the transform attribute in the Graphics2D context is applied. The rendering attributes applied include the Clip, Transform, and Composite attributes. Note that no rendering is done if the specified transform is noninvertible. Rendering hints set on the Graphics2D object might be used in rendering the RenderableImage. If explicit control is required over specific hints recognized by a specific RenderableImage, or if knowledge of which hints are used is required, then a RenderedImage should be obtained directly from the RenderableImage and rendered using",FreeText,,0
2679,jdk,java.awt.Graphics2D_goal.json,"drawString(java.lang.String str, int x, int y)",drawString,java.awt.Graphics2D,"Renders the text of the specified String, using the current text attribute state in the Graphics2D context. The baseline of the first character is at position (x,&nbsp;y) in the User Space. The rendering attributes applied include the Clip, Transform, Paint, Font and Composite attributes. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.",FreeText,,0
2680,jdk,java.awt.Graphics2D_goal.json,"drawString(java.lang.String str, float x, float y)",drawString,java.awt.Graphics2D,"Renders the text specified by the specified String, using the current text attribute state in the Graphics2D context. The baseline of the first character is at position (x,&nbsp;y) in the User Space. The rendering attributes applied include the Clip, Transform, Paint, Font and Composite attributes. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.",FreeText,,0
2681,jdk,java.awt.Graphics2D_goal.json,"drawString(java.text.AttributedCharacterIterator iterator, int x, int y)",drawString,java.awt.Graphics2D,"Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class.  The baseline of the first character is at position (x,&nbsp;y) in User Space. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.",FreeText,,0
2682,jdk,java.awt.Graphics2D_goal.json,"drawString(java.text.AttributedCharacterIterator iterator, float x, float y)",drawString,java.awt.Graphics2D,"Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class.  The baseline of the first character is at position (x,&nbsp;y) in User Space. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.",FreeText,,0
2683,jdk,java.awt.Graphics2D_goal.json,"drawGlyphVector(java.awt.font.GlyphVector g, float x, float y)",drawGlyphVector,java.awt.Graphics2D,"Renders the text of the specified GlyphVector using the Graphics2D context's rendering attributes. The rendering attributes applied include the Clip, Transform, Paint, and Composite attributes. The GlyphVector specifies individual glyphs from a Font. The GlyphVector can also contain the glyph positions. This is the fastest way to render a set of characters to the screen.",FreeText,,0
2684,jdk,java.awt.Graphics2D_goal.json,fill(java.awt.Shape s),fill,java.awt.Graphics2D,"Fills the interior of a Shape using the settings of the Graphics2D context. The rendering attributes applied include the Clip, Transform, Paint, and Composite.",FreeText,,0
2685,jdk,java.awt.Graphics2D_goal.json,"hit(java.awt.Rectangle rect, java.awt.Shape s, boolean onStroke)",hit,java.awt.Graphics2D,"Checks whether or not the specified Shape intersects the specified Rectangle, which is in device space. If onStroke is false, this method checks whether or not the interior of the specified Shape intersects the specified Rectangle. If onStroke is true, this method checks whether or not the Stroke of the specified Shape outline intersects the specified Rectangle. The rendering attributes taken into account include the Clip, Transform, and Stroke attributes.",FreeText,,0
2686,jdk,java.awt.Graphics2D_goal.json,getDeviceConfiguration(),getDeviceConfiguration,java.awt.Graphics2D,Returns the device configuration associated with this Graphics2D.,FreeText,,0
2687,jdk,java.awt.Graphics2D_goal.json,setComposite(java.awt.Composite comp),setComposite,java.awt.Graphics2D,"Sets the Composite for the Graphics2D context. The Composite is used in all drawing methods such as drawImage, drawString, draw, and fill. It specifies how new pixels are to be combined with the existing pixels on the graphics device during the rendering process. If this Graphics2D context is drawing to a Component on the display screen and the Composite is a custom object rather than an instance of the AlphaComposite class, and if there is a security manager, its checkPermission method is called with an AWTPermission(""readDisplayPixels"") permission.",FreeText,,0
2688,jdk,java.awt.Graphics2D_goal.json,setPaint(java.awt.Paint paint),setPaint,java.awt.Graphics2D,Sets the Paint attribute for the Graphics2D context. Calling this method with a null Paint object does not have any effect on the current Paint attribute of this Graphics2D.,FreeText,,0
2689,jdk,java.awt.Graphics2D_goal.json,setStroke(java.awt.Stroke s),setStroke,java.awt.Graphics2D,Sets the Stroke for the Graphics2D context.,FreeText,,0
2690,jdk,java.awt.Graphics2D_goal.json,"setRenderingHint(java.awt.RenderingHints$Key hintKey, java.lang.Object hintValue)",setRenderingHint,java.awt.Graphics2D,Sets the value of a single preference for the rendering algorithms. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,FreeText,,0
2691,jdk,java.awt.Graphics2D_goal.json,getRenderingHint(java.awt.RenderingHints$Key hintKey),getRenderingHint,java.awt.Graphics2D,Returns the value of a single preference for the rendering algorithms. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,FreeText,,0
2692,jdk,java.awt.Graphics2D_goal.json,"setRenderingHints(java.util.Map<?, ?> hints)",setRenderingHints,java.awt.Graphics2D,Replaces the values of all preferences for the rendering algorithms with the specified hints. The existing values for all rendering hints are discarded and the new set of known hints and values are initialized from the specified Map object. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,FreeText,,0
2693,jdk,java.awt.Graphics2D_goal.json,"addRenderingHints(java.util.Map<?, ?> hints)",addRenderingHints,java.awt.Graphics2D,Sets the values of an arbitrary number of preferences for the rendering algorithms. Only values for the rendering hints that are present in the specified Map object are modified. All other preferences not present in the specified object are left unmodified. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,FreeText,,0
2694,jdk,java.awt.Graphics2D_goal.json,getRenderingHints(),getRenderingHints,java.awt.Graphics2D,Gets the preferences for the rendering algorithms. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Returns all of the hint key/value pairs that were ever specified in one operation. Refer to the RenderingHints class for definitions of some common keys and values.,FreeText,,0
2695,jdk,java.awt.Graphics2D_goal.json,"translate(int x, int y)",translate,java.awt.Graphics2D,"Translates the origin of the Graphics2D context to the point (x,&nbsp;y) in the current coordinate system. Modifies the Graphics2D context so that its new origin corresponds to the point (x,&nbsp;y) in the Graphics2D context's former coordinate system. All coordinates used in subsequent rendering operations on this graphics context are relative to this new origin.",FreeText,,0
2696,jdk,java.awt.Graphics2D_goal.json,"translate(double tx, double ty)",translate,java.awt.Graphics2D,"Concatenates the current Graphics2D Transform with a translation transform. Subsequent rendering is translated by the specified distance relative to the previous position. This is equivalent to calling transform(T), where T is an AffineTransform represented by the following matrix:  [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ]",FreeText,,0
2697,jdk,java.awt.Graphics2D_goal.json,rotate(double theta),rotate,java.awt.Graphics2D,"Concatenates the current Graphics2D Transform with a rotation transform. Subsequent rendering is rotated by the specified radians relative to the previous origin. This is equivalent to calling transform(R), where R is an AffineTransform represented by the following matrix:  [ cos(theta) -sin(theta) 0 ] [ sin(theta) cos(theta) 0 ] [ 0 0 1 ]  Rotating with a positive angle theta rotates points on the positive x axis toward the positive y axis.",FreeText,,0
2698,jdk,java.awt.Graphics2D_goal.json,"rotate(double theta, double x, double y)",rotate,java.awt.Graphics2D,"Concatenates the current Graphics2D Transform with a translated rotation transform. Subsequent rendering is transformed by a transform which is constructed by translating to the specified location, rotating by the specified radians, and translating back by the same amount as the original translation. This is equivalent to the following sequence of calls:  translate(x, y); rotate(theta); translate(-x, -y);  Rotating with a positive angle theta rotates points on the positive x axis toward the positive y axis.",FreeText,"receiverObjectClone.translate(args[1],args[2]);
receiverObjectClone.equals(receiverObjectID)",1
2699,jdk,java.awt.Graphics2D_goal.json,"scale(double sx, double sy)",scale,java.awt.Graphics2D,"Concatenates the current Graphics2D Transform with a scaling transformation Subsequent rendering is resized according to the specified scaling factors relative to the previous scaling. This is equivalent to calling transform(S), where S is an AffineTransform represented by the following matrix:  [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ]",FreeText,,0
2700,jdk,java.awt.Graphics2D_goal.json,"shear(double shx, double shy)",shear,java.awt.Graphics2D,"Concatenates the current Graphics2D Transform with a shearing transform. Subsequent renderings are sheared by the specified multiplier relative to the previous position. This is equivalent to calling transform(SH), where SH is an AffineTransform represented by the following matrix:  [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ]",FreeText,,0
2701,jdk,java.awt.Graphics2D_goal.json,transform(java.awt.geom.AffineTransform Tx),transform,java.awt.Graphics2D,"Composes an AffineTransform object with the Transform in this Graphics2D according to the rule last-specified-first-applied. If the current Transform is Cx, the result of composition with Tx is a new Transform Cx'. Cx' becomes the current Transform for this Graphics2D. Transforming a point p by the updated Transform Cx' is equivalent to first transforming p by Tx and then transforming the result by the original Transform Cx. In other words, Cx'(p) = Cx(Tx(p)). A copy of the Tx is made, if necessary, so further modifications to Tx do not affect rendering.",FreeText,,0
2702,jdk,java.awt.Graphics2D_goal.json,setTransform(java.awt.geom.AffineTransform Tx),setTransform,java.awt.Graphics2D,"Overwrites the Transform in the Graphics2D context. WARNING: This method should never be used to apply a new coordinate transform on top of an existing transform because the Graphics2D might already have a transform that is needed for other purposes, such as rendering Swing components or applying a scaling transformation to adjust for the resolution of a printer. To add a coordinate transform, use the transform, rotate, scale, or shear methods. The setTransform method is intended only for restoring the original Graphics2D transform after rendering, as shown in this example:  // Get the current transform AffineTransform saveAT = g2.getTransform(); // Perform transformation g2d.transform(...); // Render g2d.draw(...); // Restore original transform g2d.setTransform(saveAT);",FreeText,,0
2703,jdk,java.awt.Graphics2D_goal.json,getTransform(),getTransform,java.awt.Graphics2D,Returns a copy of the current Transform in the Graphics2D context.,FreeText,,0
2704,jdk,java.awt.Graphics2D_goal.json,getPaint(),getPaint,java.awt.Graphics2D,Returns the current Paint of the Graphics2D context.,FreeText,,0
2705,jdk,java.awt.Graphics2D_goal.json,getComposite(),getComposite,java.awt.Graphics2D,Returns the current Composite in the Graphics2D context.,FreeText,,0
2706,jdk,java.awt.Graphics2D_goal.json,setBackground(java.awt.Color color),setBackground,java.awt.Graphics2D,"Sets the background color for the Graphics2D context. The background color is used for clearing a region. When a Graphics2D is constructed for a Component, the background color is inherited from the Component. Setting the background color in the Graphics2D context only affects the subsequent clearRect calls and not the background color of the Component. To change the background of the Component, use appropriate methods of the Component.",FreeText,,0
2707,jdk,java.awt.Graphics2D_goal.json,getBackground(),getBackground,java.awt.Graphics2D,Returns the background color used for clearing a region.,FreeText,,0
2708,jdk,java.awt.Graphics2D_goal.json,getStroke(),getStroke,java.awt.Graphics2D,Returns the current Stroke in the Graphics2D context.,FreeText,,0
2709,jdk,java.awt.Graphics2D_goal.json,clip(java.awt.Shape s),clip,java.awt.Graphics2D,"Intersects the current Clip with the interior of the specified Shape and sets the Clip to the resulting intersection. The specified Shape is transformed with the current Graphics2D Transform before being intersected with the current Clip. This method is used to make the current Clip smaller. To make the Clip larger, use setClip. The user clip modified by this method is independent of the clipping associated with device bounds and visibility. If no clip has previously been set, or if the clip has been cleared using Graphics#setClip(Shape) setClip with a null argument, the specified Shape becomes the new user clip.",FreeText,,0
2710,jdk,java.awt.Graphics2D_goal.json,getFontRenderContext(),getFontRenderContext,java.awt.Graphics2D,"Get the rendering context of the Font within this Graphics2D context. The FontRenderContext encapsulates application hints such as anti-aliasing and fractional metrics, as well as target device specific information such as dots-per-inch. This information should be provided by the application when using objects that perform typographical formatting, such as Font and TextLayout. This information should also be provided by applications that perform their own layout and need accurate measurements of various characteristics of glyphs such as advance and line height when various rendering hints have been applied to the text rendering.",FreeText,,0
2711,jdk,java.awt.image.VolatileImage_goal.json,getSnapshot(),getSnapshot,java.awt.image.VolatileImage,Returns a static snapshot image of this object. The BufferedImage returned is only current with the VolatileImage at the time of the request and will not be updated with any future changes to the VolatileImage.,FreeText,,0
2712,jdk,java.awt.image.VolatileImage_goal.json,getWidth(),getWidth,java.awt.image.VolatileImage,Returns the width of the VolatileImage.,FreeText,,0
2713,jdk,java.awt.image.VolatileImage_goal.json,getHeight(),getHeight,java.awt.image.VolatileImage,Returns the height of the VolatileImage.,FreeText,,0
2714,jdk,java.awt.image.VolatileImage_goal.json,getSource(),getSource,java.awt.image.VolatileImage,"This returns an ImageProducer for this VolatileImage. Note that the VolatileImage object is optimized for rendering operations and blitting to the screen or other VolatileImage objects, as opposed to reading back the pixels of the image. Therefore, operations such as getSource may not perform as fast as operations that do not rely on reading the pixels. Note also that the pixel values read from the image are current with those in the image only at the time that they are retrieved. This method takes a snapshot of the image at the time the request is made and the ImageProducer object returned works with that static snapshot image, not the original VolatileImage. Calling getSource() is equivalent to calling getSnapshot().getSource().",FreeText,methodResultID.equals(receiverObjectClone.getSnapshot().getSource()),1
2715,jdk,java.awt.image.VolatileImage_goal.json,getGraphics(),getGraphics,java.awt.image.VolatileImage,"This method returns a Graphics2D, but is here for backwards compatibility. #createGraphics() createGraphics is more convenient, since it is declared to return a Graphics2D.",FreeText,,0
2716,jdk,java.awt.image.VolatileImage_goal.json,createGraphics(),createGraphics,java.awt.image.VolatileImage,"Creates a Graphics2D, which can be used to draw into this VolatileImage.",FreeText,,0
2717,jdk,java.awt.image.VolatileImage_goal.json,validate(java.awt.GraphicsConfiguration gc),validate,java.awt.image.VolatileImage,"Attempts to restore the drawing surface of the image if the surface had been lost since the last validate call. Also validates this image against the given GraphicsConfiguration parameter to see whether operations from this image to the GraphicsConfiguration are compatible. An example of an incompatible combination might be a situation where a VolatileImage object was created on one graphics device and then was used to render to a different graphics device. Since VolatileImage objects tend to be very device-specific, this operation might not work as intended, so the return code from this validate call would note that incompatibility. A null or incorrect value for gc may cause incorrect values to be returned from validate and may cause later problems with rendering.",FreeText,,0
2718,jdk,java.awt.image.VolatileImage_goal.json,contentsLost(),contentsLost,java.awt.image.VolatileImage,Returns true if rendering data was lost since last validate call. This method should be called by the application at the end of any series of rendering operations to or from the image to see whether the image needs to be validated and the rendering redone.,FreeText,,0
2719,jdk,java.awt.image.VolatileImage_goal.json,getCapabilities(),getCapabilities,java.awt.image.VolatileImage,"Returns an ImageCapabilities object which can be inquired as to the specific capabilities of this VolatileImage. This would allow programmers to find out more runtime information on the specific VolatileImage object that they have created. For example, the user might create a VolatileImage but the system may have no video memory left for creating an image of that size, so although the object is a VolatileImage, it is not as accelerated as other VolatileImage objects on this platform might be. The user might want that information to find other solutions to their problem.",FreeText,,0
2720,jdk,java.awt.image.VolatileImage_goal.json,getTransparency(),getTransparency,java.awt.image.VolatileImage,"Returns the transparency. Returns either OPAQUE, BITMASK, or TRANSLUCENT.",FreeText,,0
2721,jdk,java.awt.image.WritableRenderedImage_goal.json,addTileObserver(java.awt.image.TileObserver to),addTileObserver,java.awt.image.WritableRenderedImage,"Adds an observer. If the observer is already present, it will receive multiple notifications.",FreeText,,0
2722,jdk,java.awt.image.WritableRenderedImage_goal.json,removeTileObserver(java.awt.image.TileObserver to),removeTileObserver,java.awt.image.WritableRenderedImage,"Removes an observer. If the observer was not registered, nothing happens. If the observer was registered for multiple notifications, it will now be registered for one fewer.",FreeText,,0
2723,jdk,java.awt.image.WritableRenderedImage_goal.json,"getWritableTile(int tileX, int tileY)",getWritableTile,java.awt.image.WritableRenderedImage,Checks out a tile for writing. The WritableRenderedImage is responsible for notifying all of its TileObservers when a tile goes from having no writers to having one writer.,FreeText,,0
2724,jdk,java.awt.image.WritableRenderedImage_goal.json,"releaseWritableTile(int tileX, int tileY)",releaseWritableTile,java.awt.image.WritableRenderedImage,"Relinquishes the right to write to a tile. If the caller continues to write to the tile, the results are undefined. Calls to this method should only appear in matching pairs with calls to getWritableTile; any other use will lead to undefined results. The WritableRenderedImage is responsible for notifying all of its TileObservers when a tile goes from having one writer to having no writers.",FreeText,,0
2725,jdk,java.awt.image.WritableRenderedImage_goal.json,"isTileWritable(int tileX, int tileY)",isTileWritable,java.awt.image.WritableRenderedImage,Returns whether a tile is currently checked out for writing.,FreeText,,0
2726,jdk,java.awt.image.WritableRenderedImage_goal.json,getWritableTileIndices(),getWritableTileIndices,java.awt.image.WritableRenderedImage,Returns an array of Point objects indicating which tiles are checked out for writing. Returns null if none are checked out.,FreeText,,0
2727,jdk,java.awt.image.WritableRenderedImage_goal.json,hasTileWriters(),hasTileWriters,java.awt.image.WritableRenderedImage,Returns whether any tile is checked out for writing. Semantically equivalent to (getWritableTileIndices() != null).,FreeText,,0
2728,jdk,java.awt.image.WritableRenderedImage_goal.json,setData(java.awt.image.Raster r),setData,java.awt.image.WritableRenderedImage,"Sets a rect of the image to the contents of the Raster r, which is assumed to be in the same coordinate space as the WritableRenderedImage. The operation is clipped to the bounds of the WritableRenderedImage.",FreeText,,0
2729,jdk,java.awt.Point_goal.json,java.awt.Point(),java.awt.Point,java.awt.Point,"Constructs and initializes a point at the origin (0,&nbsp;0) of the coordinate space.",FreeText,,0
2730,jdk,java.awt.Point_goal.json,java.awt.Point(java.awt.Point p),java.awt.Point,java.awt.Point,Constructs and initializes a point with the same location as the specified Point object.,FreeText,,0
2731,jdk,java.awt.Point_goal.json,"java.awt.Point(int x, int y)",java.awt.Point,java.awt.Point,"Constructs and initializes a point at the specified (x,y) location in the coordinate space.",FreeText,,0
2732,jdk,java.awt.Point_goal.json,getX(),getX,java.awt.Point,{@inheritDoc},FreeText,,0
2733,jdk,java.awt.Point_goal.json,getY(),getY,java.awt.Point,{@inheritDoc},FreeText,,0
2734,jdk,java.awt.Point_goal.json,getLocation(),getLocation,java.awt.Point,"Returns the location of this point. This method is included for completeness, to parallel the getLocation method of Component.",FreeText,,0
2735,jdk,java.awt.Point_goal.json,setLocation(java.awt.Point p),setLocation,java.awt.Point,"Sets the location of the point to the specified location. This method is included for completeness, to parallel the setLocation method of Component.",FreeText,,0
2736,jdk,java.awt.Point_goal.json,"setLocation(int x, int y)",setLocation,java.awt.Point,"Changes the point to have the specified location.  This method is included for completeness, to parallel the setLocation method of Component. Its behavior is identical with move(int,&nbsp;int).",FreeText,,0
2737,jdk,java.awt.Point_goal.json,"setLocation(double x, double y)",setLocation,java.awt.Point,"Sets the location of this point to the specified double coordinates. The double values will be rounded to integer values. Any number smaller than Integer.MIN_VALUE will be reset to MIN_VALUE, and any number larger than Integer.MAX_VALUE will be reset to MAX_VALUE.",FreeText,,0
2738,jdk,java.awt.Point_goal.json,"move(int x, int y)",move,java.awt.Point,"Moves this point to the specified location in the (x,y) coordinate plane. This method is identical with setLocation(int,&nbsp;int).",FreeText,,0
2739,jdk,java.awt.Point_goal.json,"translate(int dx, int dy)",translate,java.awt.Point,"Translates this point, at location (x,y), by dx along the x axis and dy along the y axis so that it now represents the point (x+dx,y+dy).",FreeText,,0
2740,jdk,java.awt.Point_goal.json,equals(java.lang.Object obj),equals,java.awt.Point,"Determines whether or not two points are equal. Two instances of Point2D are equal if the values of their x and y member fields, representing their position in the coordinate space, are the same.",FreeText,,0
2741,jdk,java.awt.Point_goal.json,toString(),toString,java.awt.Point,"Returns a string representation of this point and its location in the (x,y) coordinate space. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",FreeText,,0
2742,jdk,java.awt.print.PrinterJob_goal.json,java.awt.print.PrinterJob(),java.awt.print.PrinterJob,java.awt.print.PrinterJob,A PrinterJob object should be created using the static #getPrinterJob() getPrinterJob method.,FreeText,,0
2743,jdk,java.awt.print.PrinterJob_goal.json,getPrinterJob(),getPrinterJob,java.awt.print.PrinterJob,"Creates and returns a PrinterJob which is initially associated with the default printer. If no printers are available on the system, a PrinterJob will still be returned from this method, but getPrintService() will return null, and calling #print() print with this PrinterJob might generate an exception. Applications that need to determine if there are suitable printers before creating a PrinterJob should ensure that the array returned from #lookupPrintServices() lookupPrintServices is not empty.",FreeText,,0
2744,jdk,java.awt.print.PrinterJob_goal.json,lookupPrintServices(),lookupPrintServices,java.awt.print.PrinterJob,"A convenience method which looks up 2D print services. Services returned from this method may be installed on PrinterJobs which support print services. Calling this method is equivalent to calling javax.print.PrintServiceLookup#lookupPrintServices( DocFlavor, AttributeSet) PrintServiceLookup.lookupPrintServices() and specifying a Pageable DocFlavor.",FreeText,,0
2745,jdk,java.awt.print.PrinterJob_goal.json,lookupStreamPrintServices(java.lang.String mimeType),lookupStreamPrintServices,java.awt.print.PrinterJob,"A convenience method which locates factories for stream print services which can image 2D graphics. Sample usage : FileOutputStream outstream; StreamPrintService psPrinter; String psMimeType = ""application/postscript""; PrinterJob pj = PrinterJob.getPrinterJob(); StreamPrintServiceFactory[] factories = PrinterJob.lookupStreamPrintServices(psMimeType); if (factories.length > 0) { try { outstream = new File(""out.ps""); psPrinter = factories[0].getPrintService(outstream); // psPrinter can now be set as the service on a PrinterJob pj.setPrintService(psPrinter)  catch (Exception e) { e.printStackTrace(); } } } Services returned from this method may be installed on PrinterJob instances which support print services. Calling this method is equivalent to calling javax.print.StreamPrintServiceFactory#lookupStreamPrintServiceFactories(DocFlavor, String) StreamPrintServiceFactory.lookupStreamPrintServiceFactories()  and specifying a Pageable DocFlavor.",FreeText,,0
2746,jdk,java.awt.print.PrinterJob_goal.json,getPrintService(),getPrintService,java.awt.print.PrinterJob,Returns the service (printer) for this printer job. Implementations of this class which do not support print services may return null. null will also be returned if no printers are available.,FreeText,,0
2747,jdk,java.awt.print.PrinterJob_goal.json,setPrintService(javax.print.PrintService service),setPrintService,java.awt.print.PrinterJob,Associate this PrinterJob with a new PrintService. This method is overridden by subclasses which support specifying a Print Service. Throws PrinterException if the specified service cannot support the Pageable and Printable interfaces necessary to support 2D printing.,FreeText,,0
2748,jdk,java.awt.print.PrinterJob_goal.json,setPrintable(java.awt.print.Printable painter),setPrintable,java.awt.print.PrinterJob,"Calls painter to render the pages. The pages in the document to be printed by this PrinterJob are rendered by the Printable object, painter. The PageFormat for each page is the default page format.",FreeText,,0
2749,jdk,java.awt.print.PrinterJob_goal.json,"setPrintable(java.awt.print.Printable painter, java.awt.print.PageFormat format)",setPrintable,java.awt.print.PrinterJob,"Calls painter to render the pages in the specified format. The pages in the document to be printed by this PrinterJob are rendered by the Printable object, painter. The PageFormat of each page is format.",FreeText,,0
2750,jdk,java.awt.print.PrinterJob_goal.json,setPageable(java.awt.print.Pageable document),setPageable,java.awt.print.PrinterJob,"Queries document for the number of pages and the PageFormat and Printable for each page held in the Pageable instance, document.",FreeText,,0
2751,jdk,java.awt.print.PrinterJob_goal.json,printDialog(),printDialog,java.awt.print.PrinterJob,"Presents a dialog to the user for changing the properties of the print job. This method will display a native dialog if a native print service is selected, and user choice of printers will be restricted to these native print services. To present the cross platform print dialog for all services, including native ones instead use printDialog(PrintRequestAttributeSet).  PrinterJob implementations which can use PrintService's will update the PrintService for this PrinterJob to reflect the new service selected by the user.",FreeText,,0
2752,jdk,java.awt.print.PrinterJob_goal.json,printDialog(javax.print.attribute.PrintRequestAttributeSet attributes),printDialog,java.awt.print.PrinterJob,"A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the Pageable interface. The selected printer when the dialog is initially displayed will reflect the print service currently attached to this print job. If the user changes the print service, the PrinterJob will be updated to reflect this, unless the user cancels the dialog. As well as allowing the user to select the destination printer, the user can also select values of various print request attributes.  The attributes parameter on input will reflect the applications required initial selections in the user dialog. Attributes not specified display using the default for the service. On return it will reflect the user's choices. Selections may be updated by the implementation to be consistent with the supported values for the currently selected print service.  As the user scrolls to a new print service selection, the values copied are based on the settings for the previous service, together with any user changes. The values are not based on the original settings supplied by the client.  With the exception of selected printer, the PrinterJob state is not updated to reflect the user's changes. For the selections to affect a printer job, the attributes must be specified in the call to the print(PrintRequestAttributeSet) method. If using the Pageable interface, clients which intend to use media selected by the user must create a PageFormat derived from the user's selections. If the user cancels the dialog, the attributes will not reflect any changes made by the user.",FreeText,,0
2753,jdk,java.awt.print.PrinterJob_goal.json,pageDialog(java.awt.print.PageFormat page),pageDialog,java.awt.print.PrinterJob,"Displays a dialog that allows modification of a PageFormat instance. The page argument is used to initialize controls in the page setup dialog. If the user cancels the dialog then this method returns the original page object unmodified. If the user okays the dialog then this method returns a new PageFormat object with the indicated changes. In either case, the original page object is not modified.",FreeText,,0
2754,jdk,java.awt.print.PrinterJob_goal.json,pageDialog(javax.print.attribute.PrintRequestAttributeSet attributes),pageDialog,java.awt.print.PrinterJob,"A convenience method which displays a cross-platform page setup dialog. The choices available will reflect the print service currently set on this PrinterJob.  The attributes parameter on input will reflect the client's required initial selections in the user dialog. Attributes which are not specified display using the default for the service. On return it will reflect the user's choices. Selections may be updated by the implementation to be consistent with the supported values for the currently selected print service.  The return value will be a PageFormat equivalent to the selections in the PrintRequestAttributeSet. If the user cancels the dialog, the attributes will not reflect any changes made by the user, and the return value will be null.",FreeText,,0
2755,jdk,java.awt.print.PrinterJob_goal.json,defaultPage(java.awt.print.PageFormat page),defaultPage,java.awt.print.PrinterJob,Clones the PageFormat argument and alters the clone to describe a default page size and orientation.,FreeText,,0
2756,jdk,java.awt.print.PrinterJob_goal.json,defaultPage(),defaultPage,java.awt.print.PrinterJob,Creates a new PageFormat instance and sets it to a default size and orientation.,FreeText,,0
2757,jdk,java.awt.print.PrinterJob_goal.json,getPageFormat(javax.print.attribute.PrintRequestAttributeSet attributes),getPageFormat,java.awt.print.PrinterJob,"Calculates a PageFormat with values consistent with those supported by the current PrintService for this job (ie the value returned by getPrintService()) and media, printable area and orientation contained in attributes.  Calling this method does not update the job. It is useful for clients that have a set of attributes obtained from printDialog(PrintRequestAttributeSet attributes) and need a PageFormat to print a Pageable object.",FreeText,,0
2758,jdk,java.awt.print.PrinterJob_goal.json,validatePage(java.awt.print.PageFormat page),validatePage,java.awt.print.PrinterJob,"Returns the clone of page with its settings adjusted to be compatible with the current printer of this PrinterJob. For example, the returned PageFormat could have its imageable area adjusted to fit within the physical area of the paper that is used by the current printer.",FreeText,,0
2759,jdk,java.awt.print.PrinterJob_goal.json,print(),print,java.awt.print.PrinterJob,Prints a set of pages. @exception PrinterException an error in the print system caused the job to be aborted. @see Book @see Pageable @see Printable,FreeText,,0
2760,jdk,java.awt.print.PrinterJob_goal.json,print(javax.print.attribute.PrintRequestAttributeSet attributes),print,java.awt.print.PrinterJob,"Prints a set of pages using the settings in the attribute set. The default implementation ignores the attribute set.  Note that some attributes may be set directly on the PrinterJob by equivalent method calls, (for example), copies: setcopies(int), job name: setJobName(String) and specifying media size and orientation though the PageFormat object.  If a supported attribute-value is specified in this attribute set, it will take precedence over the API settings for this print() operation only. The following behaviour is specified for PageFormat: If a client uses the Printable interface, then the attributes parameter to this method is examined for attributes which specify media (by size), orientation, and imageable area, and those are used to construct a new PageFormat which is passed to the Printable object's print() method. See Printable for an explanation of the required behaviour of a Printable to ensure optimal printing via PrinterJob. For clients of the Pageable interface, the PageFormat will always be as supplied by that interface, on a per page basis.  These behaviours allow an application to directly pass the user settings returned from printDialog(PrintRequestAttributeSet attributes to this print() method.",FreeText,,0
2761,jdk,java.awt.print.PrinterJob_goal.json,setCopies(int copies),setCopies,java.awt.print.PrinterJob,Sets the number of copies to be printed.,FreeText,,0
2762,jdk,java.awt.print.PrinterJob_goal.json,getCopies(),getCopies,java.awt.print.PrinterJob,Gets the number of copies to be printed.,FreeText,,0
2763,jdk,java.awt.print.PrinterJob_goal.json,getUserName(),getUserName,java.awt.print.PrinterJob,Gets the name of the printing user.,FreeText,,0
2764,jdk,java.awt.print.PrinterJob_goal.json,setJobName(java.lang.String jobName),setJobName,java.awt.print.PrinterJob,Sets the name of the document to be printed. The document name can not be null.,FreeText,,0
2765,jdk,java.awt.print.PrinterJob_goal.json,getJobName(),getJobName,java.awt.print.PrinterJob,Gets the name of the document to be printed.,FreeText,,0
2766,jdk,java.awt.print.PrinterJob_goal.json,cancel(),cancel,java.awt.print.PrinterJob,Cancels a print job that is in progress. If #print() print has been called but has not returned then this method signals that the job should be cancelled at the next chance. If there is no print job in progress then this call does nothing.,FreeText,,0
2767,jdk,java.awt.print.PrinterJob_goal.json,isCancelled(),isCancelled,java.awt.print.PrinterJob,"Returns true if a print job is in progress, but is going to be cancelled at the next opportunity; otherwise returns false.",FreeText,,0
2768,jdk,java.io.DataInputStream_goal.json,java.io.DataInputStream(java.io.InputStream in),java.io.DataInputStream,java.io.DataInputStream,Creates a DataInputStream that uses the specified underlying InputStream.,FreeText,,0
2769,jdk,java.io.DataInputStream_goal.json,read(byte[] b),read,java.io.DataInputStream,"Reads some number of bytes from the contained input stream and stores them into the buffer array b. The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown. If b is null, a NullPointerException is thrown. If the length of b is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into b. The first byte read is stored into element b[0], the next one into b[1], and so on. The number of bytes read is, at most, equal to the length of b. Let k be the number of bytes actually read; these bytes will be stored in elements b[0] through b[k-1], leaving elements b[k] through b[b.length-1] unaffected. The read(b) method has the same effect as: <pre> read(b, 0, b.length) </pre>",FreeText,"methodResultID == read(args[0], 0, args[0].length)",1
2770,jdk,java.io.DataInputStream_goal.json,"read(byte[] b, int off, int len)",read,java.io.DataInputStream,"Reads up to len bytes of data from the contained input stream into an array of bytes. An attempt is made to read as many as len bytes, but a smaller number may be read, possibly zero. The number of bytes actually read is returned as an integer.  This method blocks until input data is available, end of file is detected, or an exception is thrown.  If len is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into b.  The first byte read is stored into element b[off], the next one into b[off+1], and so on. The number of bytes read is, at most, equal to len. Let k be the number of bytes actually read; these bytes will be stored in elements b[off] through b[off+k-1], leaving elements b[off+k] through b[off+len-1] unaffected.  In every case, elements b[0] through b[off] and elements b[off+len] through b[b.length-1] are unaffected.",FreeText,,0
2771,jdk,java.io.DataInputStream_goal.json,readFully(byte[] b),readFully,java.io.DataInputStream,See the general contract of the readFully method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2772,jdk,java.io.DataInputStream_goal.json,"readFully(byte[] b, int off, int len)",readFully,java.io.DataInputStream,See the general contract of the readFully method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2773,jdk,java.io.DataInputStream_goal.json,skipBytes(int n),skipBytes,java.io.DataInputStream,See the general contract of the skipBytes method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2774,jdk,java.io.DataInputStream_goal.json,readBoolean(),readBoolean,java.io.DataInputStream,See the general contract of the readBoolean method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2775,jdk,java.io.DataInputStream_goal.json,readByte(),readByte,java.io.DataInputStream,See the general contract of the readByte method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2776,jdk,java.io.DataInputStream_goal.json,readUnsignedByte(),readUnsignedByte,java.io.DataInputStream,See the general contract of the readUnsignedByte method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2777,jdk,java.io.DataInputStream_goal.json,readShort(),readShort,java.io.DataInputStream,See the general contract of the readShort method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2778,jdk,java.io.DataInputStream_goal.json,readUnsignedShort(),readUnsignedShort,java.io.DataInputStream,See the general contract of the readUnsignedShort method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2779,jdk,java.io.DataInputStream_goal.json,readChar(),readChar,java.io.DataInputStream,See the general contract of the readChar method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2780,jdk,java.io.DataInputStream_goal.json,readInt(),readInt,java.io.DataInputStream,See the general contract of the readInt method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2781,jdk,java.io.DataInputStream_goal.json,readLong(),readLong,java.io.DataInputStream,See the general contract of the readLong method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2782,jdk,java.io.DataInputStream_goal.json,readFloat(),readFloat,java.io.DataInputStream,See the general contract of the readFloat method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2783,jdk,java.io.DataInputStream_goal.json,readDouble(),readDouble,java.io.DataInputStream,See the general contract of the readDouble method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2784,jdk,java.io.DataInputStream_goal.json,readLine(),readLine,java.io.DataInputStream,"See the general contract of the readLine method of DataInput.  Bytes for this operation are read from the contained input stream. @deprecated This method does not properly convert bytes to characters. As of JDK&nbsp;1.1, the preferred way to read lines of text is via the BufferedReader.readLine() method. Programs that use the DataInputStream class to read lines can be converted to use the BufferedReader class by replacing code of the form: <pre> DataInputStream d =&nbsp;new&nbsp;DataInputStream(in); </pre> with: <pre> BufferedReader d =&nbsp;new&nbsp;BufferedReader(new&nbsp;InputStreamReader(in)); </pre>",FreeText,,0
2785,jdk,java.io.DataInputStream_goal.json,readUTF(),readUTF,java.io.DataInputStream,See the general contract of the readUTF method of DataInput.  Bytes for this operation are read from the contained input stream.,FreeText,,0
2786,jdk,java.io.DataInputStream_goal.json,readUTF(java.io.DataInput in),readUTF,java.io.DataInputStream,Reads from the stream in a representation of a Unicode character string encoded in modified UTF-8 format; this string of characters is then returned as a String. The details of the modified UTF-8 representation are exactly the same as for the readUTF method of DataInput.,FreeText,,0
2787,jdk,java.io.File_goal.json,java.io.File(java.lang.String pathname),java.io.File,java.io.File,"Creates a new File instance by converting the given pathname string into an abstract pathname. If the given string is the empty string, then the result is the empty abstract pathname.",FreeText,,0
2788,jdk,java.io.File_goal.json,"java.io.File(java.lang.String parent, java.lang.String child)",java.io.File,java.io.File,"Creates a new File instance from a parent pathname string and a child pathname string.  If parent is null then the new File instance is created as if by invoking the single-argument File constructor on the given child pathname string.  Otherwise the parent pathname string is taken to denote a directory, and the child pathname string is taken to denote either a directory or a file. If the child pathname string is absolute then it is converted into a relative pathname in a system-dependent way. If parent is the empty string then the new File instance is created by converting child into an abstract pathname and resolving the result against a system-dependent default directory. Otherwise each pathname string is converted into an abstract pathname and the child abstract pathname is resolved against the parent.",FreeText,,0
2789,jdk,java.io.File_goal.json,"java.io.File(java.io.File parent, java.lang.String child)",java.io.File,java.io.File,"Creates a new File instance from a parent abstract pathname and a child pathname string.  If parent is null then the new File instance is created as if by invoking the single-argument File constructor on the given child pathname string.  Otherwise the parent abstract pathname is taken to denote a directory, and the child pathname string is taken to denote either a directory or a file. If the child pathname string is absolute then it is converted into a relative pathname in a system-dependent way. If parent is the empty abstract pathname then the new File instance is created by converting child into an abstract pathname and resolving the result against a system-dependent default directory. Otherwise each pathname string is converted into an abstract pathname and the child abstract pathname is resolved against the parent.",FreeText,,0
2790,jdk,java.io.File_goal.json,java.io.File(java.net.URI uri),java.io.File,java.io.File,"Creates a new File instance by converting the given file: URI into an abstract pathname.  The exact form of a file: URI is system-dependent, hence the transformation performed by this constructor is also system-dependent.  For a given abstract pathname f it is guaranteed that <tt> new File(</tt><i>&nbsp;f</i><tt>.#toURI() toURI()).equals(</tt><i>&nbsp;f</i><tt>.#getAbsoluteFile() getAbsoluteFile()) </tt> so long as the original abstract pathname, the URI, and the new abstract pathname are all created in (possibly different invocations of) the same Java virtual machine. This relationship typically does not hold, however, when a file: URI that is created in a virtual machine on one operating system is converted into an abstract pathname in a virtual machine on a different operating system.",FreeText,,0
2791,jdk,java.io.File_goal.json,isInvalid(),isInvalid,java.io.File,"Check if the file has an invalid path. Currently, the inspection of a file path is very limited, and it only covers Nul character check. Returning true means the path is definitely invalid/garbage. But returning false does not guarantee that the path is valid.",FreeText,,0
2792,jdk,java.io.File_goal.json,getPrefixLength(),getPrefixLength,java.io.File,Returns the length of this abstract pathname's prefix. For use by FileSystem classes.,FreeText,,0
2793,jdk,java.io.File_goal.json,getName(),getName,java.io.File,"Returns the name of the file or directory denoted by this abstract pathname. This is just the last name in the pathname's name sequence. If the pathname's name sequence is empty, then the empty string is returned.",FreeText,,0
2794,jdk,java.io.File_goal.json,getParent(),getParent,java.io.File,"Returns the pathname string of this abstract pathname's parent, or null if this pathname does not name a parent directory.  The parent of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.",FreeText,,0
2795,jdk,java.io.File_goal.json,getParentFile(),getParentFile,java.io.File,"Returns the abstract pathname of this abstract pathname's parent, or null if this pathname does not name a parent directory.  The parent of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.",FreeText,,0
2796,jdk,java.io.File_goal.json,getPath(),getPath,java.io.File,Converts this abstract pathname into a pathname string. The resulting string uses the #separator default name-separator character to separate the names in the name sequence.,FreeText,,0
2797,jdk,java.io.File_goal.json,isAbsolute(),isAbsolute,java.io.File,"Tests whether this abstract pathname is absolute. The definition of absolute pathname is system dependent. On UNIX systems, a pathname is absolute if its prefix is ""/"". On Microsoft Windows systems, a pathname is absolute if its prefix is a drive specifier followed by ""\\"", or if its prefix is ""\\\\"".",FreeText,,0
2798,jdk,java.io.File_goal.json,getAbsolutePath(),getAbsolutePath,java.io.File,"Returns the absolute pathname string of this abstract pathname.  If this abstract pathname is already absolute, then the pathname string is simply returned as if by the #getPath method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property user.dir, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",FreeText,,0
2799,jdk,java.io.File_goal.json,getAbsoluteFile(),getAbsoluteFile,java.io.File,Returns the absolute form of this abstract pathname. Equivalent to new&nbsp;File(this.#getAbsolutePath).,FreeText,,0
2800,jdk,java.io.File_goal.json,getCanonicalPath(),getCanonicalPath,java.io.File,"Returns the canonical pathname string of this abstract pathname.  A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the #getAbsolutePath method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as ""."" and "".."" from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).  Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.",FreeText,,0
2801,jdk,java.io.File_goal.json,getCanonicalFile(),getCanonicalFile,java.io.File,Returns the canonical form of this abstract pathname. Equivalent to new&nbsp;File(this.#getCanonicalPath).,FreeText,,0
2802,jdk,java.io.File_goal.json,toURL(),toURL,java.io.File,"Converts this abstract pathname into a file: URL. The exact form of the URL is system-dependent. If it can be determined that the file denoted by this abstract pathname is a directory, then the resulting URL will end with a slash.",FreeText,,0
2803,jdk,java.io.File_goal.json,toURI(),toURI,java.io.File,"Constructs a file: URI that represents this abstract pathname.  The exact form of the URI is system-dependent. If it can be determined that the file denoted by this abstract pathname is a directory, then the resulting URI will end with a slash.  For a given abstract pathname f, it is guaranteed that <tt> new #File(java.net.URI) File(</tt><i>&nbsp;f</i><tt>.toURI()).equals(</tt><i>&nbsp;f</i><tt>.#getAbsoluteFile() getAbsoluteFile()) </tt> so long as the original abstract pathname, the URI, and the new abstract pathname are all created in (possibly different invocations of) the same Java virtual machine. Due to the system-dependent nature of abstract pathnames, however, this relationship typically does not hold when a file: URI that is created in a virtual machine on one operating system is converted into an abstract pathname in a virtual machine on a different operating system.  Note that when this abstract pathname represents a UNC pathname then all components of the UNC (including the server name component) are encoded in the URI path. The authority component is undefined, meaning that it is represented as null. The Path class defines the Path#toUri toUri method to encode the server name in the authority component of the resulting URI. The #toPath toPath method may be used to obtain a Path representing this abstract pathname.",FreeText,,0
2804,jdk,java.io.File_goal.json,canRead(),canRead,java.io.File,Tests whether the application can read the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable. Consequently this method may return true even though the file does not have read permissions.,FreeText,,0
2805,jdk,java.io.File_goal.json,canWrite(),canWrite,java.io.File,Tests whether the application can modify the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only. Consequently this method may return true even though the file is marked read-only.,FreeText,,0
2806,jdk,java.io.File_goal.json,exists(),exists,java.io.File,Tests whether the file or directory denoted by this abstract pathname exists.,FreeText,,0
2807,jdk,java.io.File_goal.json,isDirectory(),isDirectory,java.io.File,"Tests whether the file denoted by this abstract pathname is a directory.  Where it is required to distinguish an I/O exception from the case that the file is not a directory, or where several attributes of the same file are required at the same time, then the java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes method may be used.",FreeText,,0
2808,jdk,java.io.File_goal.json,isFile(),isFile,java.io.File,"Tests whether the file denoted by this abstract pathname is a normal file. A file is normal if it is not a directory and, in addition, satisfies other system-dependent criteria. Any non-directory file created by a Java application is guaranteed to be a normal file.  Where it is required to distinguish an I/O exception from the case that the file is not a normal file, or where several attributes of the same file are required at the same time, then the java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes method may be used.",FreeText,,0
2809,jdk,java.io.File_goal.json,isHidden(),isHidden,java.io.File,"Tests whether the file named by this abstract pathname is a hidden file. The exact definition of hidden is system-dependent. On UNIX systems, a file is considered to be hidden if its name begins with a period character ('.'). On Microsoft Windows systems, a file is considered to be hidden if it has been marked as such in the filesystem.",FreeText,,0
2810,jdk,java.io.File_goal.json,lastModified(),lastModified,java.io.File,"Returns the time that the file denoted by this abstract pathname was last modified.  Where it is required to distinguish an I/O exception from the case where 0L is returned, or where several attributes of the same file are required at the same time, or where the time of last access or the creation time are required, then the java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes method may be used.",FreeText,,0
2811,jdk,java.io.File_goal.json,length(),length,java.io.File,"Returns the length of the file denoted by this abstract pathname. The return value is unspecified if this pathname denotes a directory.  Where it is required to distinguish an I/O exception from the case that 0L is returned, or where several attributes of the same file are required at the same time, then the java.nio.file.Files#readAttributes(Path,Class,LinkOption[]) Files.readAttributes method may be used.",FreeText,,0
2812,jdk,java.io.File_goal.json,createNewFile(),createNewFile,java.io.File,"Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist. The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file. <P> Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The java.nio.channels.FileLock FileLock facility should be used instead.",FreeText,,0
2813,jdk,java.io.File_goal.json,delete(),delete,java.io.File,"Deletes the file or directory denoted by this abstract pathname. If this pathname denotes a directory, then the directory must be empty in order to be deleted.  Note that the java.nio.file.Files class defines the java.nio.file.Files#delete(Path) delete method to throw an IOException when a file cannot be deleted. This is useful for error reporting and to diagnose why a file cannot be deleted.",FreeText,,0
2814,jdk,java.io.File_goal.json,deleteOnExit(),deleteOnExit,java.io.File,"Requests that the file or directory denoted by this abstract pathname be deleted when the virtual machine terminates. Files (or directories) are deleted in the reverse order that they are registered. Invoking this method to delete a file or directory that is already registered for deletion has no effect. Deletion will be attempted only for normal termination of the virtual machine, as defined by the Java Language Specification.  Once deletion has been requested, it is not possible to cancel the request. This method should therefore be used with care. <P> Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The java.nio.channels.FileLock FileLock facility should be used instead.",FreeText,,0
2815,jdk,java.io.File_goal.json,list(),list,java.io.File,"Returns an array of strings naming the files and directories in the directory denoted by this abstract pathname.  If this abstract pathname does not denote a directory, then this method returns null. Otherwise an array of strings is returned, one for each file or directory in the directory. Names denoting the directory itself and the directory's parent directory are not included in the result. Each string is a file name rather than a complete path.  There is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order.  Note that the java.nio.file.Files class defines the java.nio.file.Files#newDirectoryStream(Path) newDirectoryStream method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories, and may be more responsive when working with remote directories.",FreeText,,0
2816,jdk,java.io.File_goal.json,list(java.io.FilenameFilter filter),list,java.io.File,"Returns an array of strings naming the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter. The behavior of this method is the same as that of the #list() method, except that the strings in the returned array must satisfy the filter. If the given filter is null then all names are accepted. Otherwise, a name satisfies the filter if and only if the value true results when the FilenameFilter#accept FilenameFilter.accept(File,&nbsp;String) method of the filter is invoked on this abstract pathname and the name of a file or directory in the directory that it denotes.",FreeText,"java.util.Arrays.equals(methodResultID, receiverObjectClone.list())",1
2817,jdk,java.io.File_goal.json,listFiles(),listFiles,java.io.File,"Returns an array of abstract pathnames denoting the files in the directory denoted by this abstract pathname.  If this abstract pathname does not denote a directory, then this method returns null. Otherwise an array of File objects is returned, one for each file or directory in the directory. Pathnames denoting the directory itself and the directory's parent directory are not included in the result. Each resulting abstract pathname is constructed from this abstract pathname using the File(File,&nbsp;String) constructor. Therefore if this pathname is absolute then each resulting pathname is absolute; if this pathname is relative then each resulting pathname will be relative to the same directory.  There is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order.  Note that the java.nio.file.Files class defines the java.nio.file.Files#newDirectoryStream(Path) newDirectoryStream method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories.",FreeText,,0
2818,jdk,java.io.File_goal.json,listFiles(java.io.FilenameFilter filter),listFiles,java.io.File,"Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter. The behavior of this method is the same as that of the #listFiles() method, except that the pathnames in the returned array must satisfy the filter. If the given filter is null then all pathnames are accepted. Otherwise, a pathname satisfies the filter if and only if the value true results when the FilenameFilter#accept FilenameFilter.accept(File,&nbsp;String) method of the filter is invoked on this abstract pathname and the name of a file or directory in the directory that it denotes.",FreeText,"java.util.Arrays.equals(methodResultID, receiverObjectClone.listFiles())",1
2819,jdk,java.io.File_goal.json,listFiles(java.io.FileFilter filter),listFiles,java.io.File,"Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter. The behavior of this method is the same as that of the #listFiles() method, except that the pathnames in the returned array must satisfy the filter. If the given filter is null then all pathnames are accepted. Otherwise, a pathname satisfies the filter if and only if the value true results when the FileFilter#accept FileFilter.accept(File) method of the filter is invoked on the pathname.",FreeText,"java.util.Arrays.equals(methodResultID, receiverObjectClone.listFiles())",1
2820,jdk,java.io.File_goal.json,mkdir(),mkdir,java.io.File,Creates the directory named by this abstract pathname.,FreeText,,0
2821,jdk,java.io.File_goal.json,mkdirs(),mkdirs,java.io.File,"Creates the directory named by this abstract pathname, including any necessary but nonexistent parent directories. Note that if this operation fails it may have succeeded in creating some of the necessary parent directories.",FreeText,,0
2822,jdk,java.io.File_goal.json,renameTo(java.io.File dest),renameTo,java.io.File,"Renames the file denoted by this abstract pathname.  Many aspects of the behavior of this method are inherently platform-dependent: The rename operation might not be able to move a file from one filesystem to another, it might not be atomic, and it might not succeed if a file with the destination abstract pathname already exists. The return value should always be checked to make sure that the rename operation was successful.  Note that the java.nio.file.Files class defines the java.nio.file.Files#move move method to move or rename a file in a platform independent manner.",FreeText,,0
2823,jdk,java.io.File_goal.json,setLastModified(long time),setLastModified,java.io.File,"Sets the last-modified time of the file or directory named by this abstract pathname.  All platforms support file-modification times to the nearest second, but some provide more precision. The argument will be truncated to fit the supported precision. If the operation succeeds and no intervening operations on the file take place, then the next invocation of the #lastModified method will return the (possibly truncated) time argument that was passed to this method.",FreeText,,0
2824,jdk,java.io.File_goal.json,setReadOnly(),setReadOnly,java.io.File,Marks the file or directory named by this abstract pathname so that only read operations are allowed. After invoking this method the file or directory will not change until it is either deleted or marked to allow write access. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only. Whether or not a read-only file or directory may be deleted depends upon the underlying system.,FreeText,,0
2825,jdk,java.io.File_goal.json,"setWritable(boolean writable, boolean ownerOnly)",setWritable,java.io.File,Sets the owner's or everybody's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations.  The java.nio.file.Files class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.,FreeText,,0
2826,jdk,java.io.File_goal.json,setWritable(boolean writable),setWritable,java.io.File,"A convenience method to set the owner's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations.  An invocation of this method of the form file.setWritable(arg) behaves in exactly the same way as the invocation  file.setWritable(arg, true)",FreeText,,0
2827,jdk,java.io.File_goal.json,"setReadable(boolean readable, boolean ownerOnly)",setReadable,java.io.File,Sets the owner's or everybody's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable.  The java.nio.file.Files class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.,FreeText,,0
2828,jdk,java.io.File_goal.json,setReadable(boolean readable),setReadable,java.io.File,"A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that that are marked as unreadable. An invocation of this method of the form file.setReadable(arg) behaves in exactly the same way as the invocation  file.setReadable(arg, true)",FreeText,,0
2829,jdk,java.io.File_goal.json,"setExecutable(boolean executable, boolean ownerOnly)",setExecutable,java.io.File,Sets the owner's or everybody's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable.  The java.nio.file.Files class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.,FreeText,,0
2830,jdk,java.io.File_goal.json,setExecutable(boolean executable),setExecutable,java.io.File,"A convenience method to set the owner's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. An invocation of this method of the form file.setExcutable(arg) behaves in exactly the same way as the invocation  file.setExecutable(arg, true)",FreeText,,0
2831,jdk,java.io.File_goal.json,canExecute(),canExecute,java.io.File,Tests whether the application can execute the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. Consequently this method may return true even though the file does not have execute permissions.,FreeText,,0
2832,jdk,java.io.File_goal.json,listRoots(),listRoots,java.io.File,"List the available filesystem roots.  A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a root directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely ""/"". The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives.  This method returns an array of File objects that denote the root directories of the available filesystem roots. It is guaranteed that the canonical pathname of any file physically present on the local machine will begin with one of the roots returned by this method.  The canonical pathname of a file that resides on some other machine and is accessed via a remote-filesystem protocol such as SMB or NFS may or may not begin with one of the roots returned by this method. If the pathname of a remote file is syntactically indistinguishable from the pathname of a local file then it will begin with one of the roots returned by this method. Thus, for example, File objects denoting the root directories of the mapped network drives of a Windows platform will be returned by this method, while File objects containing UNC pathnames will not be returned by this method.  Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its SecurityManager#checkRead(String) method denies read access to a particular root directory, then that directory will not appear in the result.",FreeText,,0
2833,jdk,java.io.File_goal.json,getTotalSpace(),getTotalSpace,java.io.File,Returns the size of the partition named by this abstract pathname.,FreeText,,0
2834,jdk,java.io.File_goal.json,getFreeSpace(),getFreeSpace,java.io.File,"Returns the number of unallocated bytes in the partition named by this abstract path name.  The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.",FreeText,,0
2835,jdk,java.io.File_goal.json,getUsableSpace(),getUsableSpace,java.io.File,"Returns the number of bytes available to this virtual machine on the partition named by this abstract pathname. When possible, this method checks for write permissions and other operating system restrictions and will therefore usually provide a more accurate estimate of how much new data can actually be written than #getFreeSpace.  The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.",FreeText,,0
2836,jdk,java.io.File_goal.json,"createTempFile(java.lang.String prefix, java.lang.String suffix, java.io.File directory)",createTempFile,java.io.File,"Creates a new empty file in the specified directory, using the given prefix and suffix strings to generate its name. If this method returns successfully then it is guaranteed that:  <li> The file denoted by the returned abstract pathname did not exist before this method was invoked, and <li> Neither this method nor any of its variants will return the same abstract pathname again in the current invocation of the virtual machine.  This method provides only part of a temporary-file facility. To arrange for a file created by this method to be deleted automatically, use the #deleteOnExit method.  The prefix argument must be at least three characters long. It is recommended that the prefix be a short, meaningful string such as ""hjb"" or ""mail"". The suffix argument may be null, in which case the suffix "".tmp"" will be used.  To create the new file, the prefix and the suffix may first be adjusted to fit the limitations of the underlying platform. If the prefix is too long then it will be truncated, but its first three characters will always be preserved. If the suffix is too long then it too will be truncated, but if it begins with a period character ('.') then the period and the first three characters following it will always be preserved. Once these adjustments have been made the name of the new file will be generated by concatenating the prefix, five or more internally-generated characters, and the suffix.  If the directory argument is null then the system-dependent default temporary-file directory will be used. The default temporary-file directory is specified by the system property java.io.tmpdir. On UNIX systems the default value of this property is typically ""/tmp"" or ""/var/tmp""; on Microsoft Windows systems it is typically ""C:\\WINNT\\TEMP"". A different value may be given to this system property when the Java virtual machine is invoked, but programmatic changes to this property are not guaranteed to have any effect upon the temporary directory used by this method.",FreeText,,0
2837,jdk,java.io.File_goal.json,"createTempFile(java.lang.String prefix, java.lang.String suffix)",createTempFile,java.io.File,"Creates an empty file in the default temporary-file directory, using the given prefix and suffix to generate its name. Invoking this method is equivalent to invoking createTempFile(prefix,&nbsp;suffix,&nbsp;null).  The java.nio.file.Files#createTempFile(String,String,java.nio.file.attribute.FileAttribute[]) Files.createTempFile method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.",FreeText,,0
2838,jdk,java.io.File_goal.json,compareTo(java.io.File pathname),compareTo,java.io.File,"Compares two abstract pathnames lexicographically. The ordering defined by this method depends upon the underlying system. On UNIX systems, alphabetic case is significant in comparing pathnames; on Microsoft Windows systems it is not.",FreeText,,0
2839,jdk,java.io.File_goal.json,equals(java.lang.Object obj),equals,java.io.File,"Tests this abstract pathname for equality with the given object. Returns true if and only if the argument is not null and is an abstract pathname that denotes the same file or directory as this abstract pathname. Whether or not two abstract pathnames are equal depends upon the underlying system. On UNIX systems, alphabetic case is significant in comparing pathnames; on Microsoft Windows systems it is not.",FreeText,,0
2840,jdk,java.io.File_goal.json,hashCode(),hashCode,java.io.File,"Computes a hash code for this abstract pathname. Because equality of abstract pathnames is inherently system-dependent, so is the computation of their hash codes. On UNIX systems, the hash code of an abstract pathname is equal to the exclusive or of the hash code of its pathname string and the decimal value 1234321. On Microsoft Windows systems, the hash code is equal to the exclusive or of the hash code of its pathname string converted to lower case and the decimal value 1234321. Locale is not taken into account on lowercasing the pathname string.",FreeText,,0
2841,jdk,java.io.File_goal.json,toString(),toString,java.io.File,Returns the pathname string of this abstract pathname. This is just the string returned by the #getPath method.,FreeText,,0
2842,jdk,java.io.File_goal.json,toPath(),toPath,java.io.File,Returns a Path java.nio.file.Path object constructed from the this abstract path. The resulting Path is associated with the java.nio.file.FileSystems#getDefault default-filesystem.  The first invocation of this method works as if invoking it were equivalent to evaluating the expression: <pre> java.nio.file.FileSystems#getDefault FileSystems.getDefault().java.nio.file.FileSystem#getPath getPath(this.#getPath getPath()); </pre> Subsequent invocations of this method return the same Path.  If this abstract pathname is the empty abstract pathname then this method returns a Path that may be used to access the current user directory.,FreeText,,0
2843,jdk,java.io.InputStream_goal.json,read(),read,java.io.InputStream,"Reads the next byte of data from the input stream. The value byte is returned as an int in the range 0 to 255. If no byte is available because the end of the stream has been reached, the value -1 is returned. This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.  A subclass must provide an implementation of this method.",FreeText,,0
2844,jdk,java.io.InputStream_goal.json,read(byte[] b),read,java.io.InputStream,"Reads some number of bytes from the input stream and stores them into the buffer array b. The number of bytes actually read is returned as an integer. This method blocks until input data is available, end of file is detected, or an exception is thrown.  If the length of b is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at the end of the file, the value -1 is returned; otherwise, at least one byte is read and stored into b.  The first byte read is stored into element b[0], the next one into b[1], and so on. The number of bytes read is, at most, equal to the length of b. Let k be the number of bytes actually read; these bytes will be stored in elements b[0] through b[k-1], leaving elements b[k] through b[b.length-1] unaffected.  The read(b) method for class InputStream has the same effect as:  read(b, 0, b.length)",FreeText,"methodResultID == read(args[0], 0, args[0].length)",1
2845,jdk,java.io.InputStream_goal.json,"read(byte[] b, int off, int len)",read,java.io.InputStream,"Reads up to len bytes of data from the input stream into an array of bytes. An attempt is made to read as many as len bytes, but a smaller number may be read. The number of bytes actually read is returned as an integer.  This method blocks until input data is available, end of file is detected, or an exception is thrown.  If len is zero, then no bytes are read and 0 is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value -1 is returned; otherwise, at least one byte is read and stored into b.  The first byte read is stored into element b[off], the next one into b[off+1], and so on. The number of bytes read is, at most, equal to len. Let k be the number of bytes actually read; these bytes will be stored in elements b[off] through b[off+k-1], leaving elements b[off+k] through b[off+len-1] unaffected.  In every case, elements b[0] through b[off] and elements b[off+len] through b[b.length-1] are unaffected.  The read(b, off, len) method for class InputStream simply calls the method read() repeatedly. If the first such call results in an IOException, that exception is returned from the call to the read(b, off, len) method. If any subsequent call to read() results in a IOException, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into b and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data len has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.",FreeText,,0
2846,jdk,java.io.InputStream_goal.json,skip(long n),skip,java.io.InputStream,"Skips over and discards n bytes of data from this input stream. The skip method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly 0. This may result from any of a number of conditions; reaching end of file before n bytes have been skipped is only one possibility. The actual number of bytes skipped is returned. If n is negative, the skip method for class InputStream always returns 0, and no bytes are skipped. Subclasses may handle the negative value differently.  The skip method of this class creates a byte array and then repeatedly reads into it until n bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.",FreeText,,0
2847,jdk,java.io.InputStream_goal.json,available(),available,java.io.InputStream,"Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream. The next invocation might be the same thread or another thread. A single read or skip of this many bytes will not block, but may read or skip fewer bytes.  Note that while some implementations of InputStream will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.  A subclass' implementation of this method may choose to throw an IOException if this input stream has been closed by invoking the #close() method.  The available method for class InputStream always returns 0.  This method should be overridden by subclasses.",FreeText,,0
2848,jdk,java.io.InputStream_goal.json,close(),close,java.io.InputStream,Closes this input stream and releases any system resources associated with the stream.  The close method of InputStream does nothing. @exception IOException if an I/O error occurs.,FreeText,,0
2849,jdk,java.io.InputStream_goal.json,mark(int readlimit),mark,java.io.InputStream,"Marks the current position in this input stream. A subsequent call to the reset method repositions this stream at the last marked position so that subsequent reads re-read the same bytes.  The readlimit arguments tells this input stream to allow that many bytes to be read before the mark position gets invalidated.  The general contract of mark is that, if the method markSupported returns true, the stream somehow remembers all the bytes read after the call to mark and stands ready to supply those same bytes again if and whenever the method reset is called. However, the stream is not required to remember any data at all if more than readlimit bytes are read from the stream before reset is called.  Marking a closed stream should not have any effect on the stream.  The mark method of InputStream does nothing.",FreeText,,0
2850,jdk,java.io.InputStream_goal.json,reset(),reset,java.io.InputStream,"Repositions this stream to the position at the time the mark method was last called on this input stream.  The general contract of reset is:  <li> If the method markSupported returns true, then: <ul><li> If the method mark has not been called since the stream was created, or the number of bytes read from the stream since mark was last called is larger than the argument to mark at that last call, then an IOException might be thrown. <li> If such an IOException is not thrown, then the stream is reset to a state such that all the bytes read since the most recent call to mark (or since the start of the file, if mark has not been called) will be resupplied to subsequent callers of the read method, followed by any bytes that otherwise would have been the next input data as of the time of the call to reset.  <li> If the method markSupported returns false, then: <li> The call to reset may throw an IOException. <li> If an IOException is not thrown, then the stream is reset to a fixed state that depends on the particular type of the input stream and how it was created. The bytes that will be supplied to subsequent callers of the read method depend on the particular type of the input stream. </ul> The method reset for class InputStream does nothing except throw an IOException. @exception IOException if this stream has not been marked or if the mark has been invalidated. @see java.io.InputStream#mark(int) @see java.io.IOException",FreeText,,0
2851,jdk,java.io.InputStream_goal.json,markSupported(),markSupported,java.io.InputStream,Tests if this input stream supports the mark and reset methods. Whether or not mark and reset are supported is an invariant property of a particular input stream instance. The markSupported method of InputStream returns false.,FreeText,,0
2852,jdk,java.lang.management.OperatingSystemMXBean_goal.json,getName(),getName,java.lang.management.OperatingSystemMXBean,"Returns the operating system name. This method is equivalent to System.getProperty(""os.name"").",FreeText,,0
2853,jdk,java.lang.management.OperatingSystemMXBean_goal.json,getArch(),getArch,java.lang.management.OperatingSystemMXBean,"Returns the operating system architecture. This method is equivalent to System.getProperty(""os.arch"").",FreeText,,0
2854,jdk,java.lang.management.OperatingSystemMXBean_goal.json,getVersion(),getVersion,java.lang.management.OperatingSystemMXBean,"Returns the operating system version. This method is equivalent to System.getProperty(""os.version"").",FreeText,,0
2855,jdk,java.lang.management.OperatingSystemMXBean_goal.json,getAvailableProcessors(),getAvailableProcessors,java.lang.management.OperatingSystemMXBean,Returns the number of processors available to the Java virtual machine. This method is equivalent to the Runtime#availableProcessors() method.  This value may change during a particular invocation of the virtual machine.,FreeText,,0
2856,jdk,java.lang.management.OperatingSystemMXBean_goal.json,getSystemLoadAverage(),getSystemLoadAverage,java.lang.management.OperatingSystemMXBean,"Returns the system load average for the last minute. The system load average is the sum of the number of runnable entities queued to the #getAvailableProcessors available processors and the number of runnable entities running on the available processors averaged over a period of time. The way in which the load average is calculated is operating system specific but is typically a damped time-dependent average.  If the load average is not available, a negative value is returned.  This method is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.",FreeText,,0
2857,jdk,java.lang.management.RuntimeMXBean_goal.json,getName(),getName,java.lang.management.RuntimeMXBean,Returns the name representing the running Java virtual machine. The returned name string can be any arbitrary string and a Java virtual machine implementation can choose to embed platform-specific useful information in the returned name string. Each running virtual machine could have a different name.,FreeText,,0
2858,jdk,java.lang.management.RuntimeMXBean_goal.json,getVmName(),getVmName,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine implementation name. This method is equivalent to System#getProperty System.getProperty(""java.vm.name"").",FreeText,,0
2859,jdk,java.lang.management.RuntimeMXBean_goal.json,getVmVendor(),getVmVendor,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine implementation vendor. This method is equivalent to System#getProperty System.getProperty(""java.vm.vendor"").",FreeText,,0
2860,jdk,java.lang.management.RuntimeMXBean_goal.json,getVmVersion(),getVmVersion,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine implementation version. This method is equivalent to System#getProperty System.getProperty(""java.vm.version"").",FreeText,,0
2861,jdk,java.lang.management.RuntimeMXBean_goal.json,getSpecName(),getSpecName,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine specification name. This method is equivalent to System#getProperty System.getProperty(""java.vm.specification.name"").",FreeText,,0
2862,jdk,java.lang.management.RuntimeMXBean_goal.json,getSpecVendor(),getSpecVendor,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine specification vendor. This method is equivalent to System#getProperty System.getProperty(""java.vm.specification.vendor"").",FreeText,,0
2863,jdk,java.lang.management.RuntimeMXBean_goal.json,getSpecVersion(),getSpecVersion,java.lang.management.RuntimeMXBean,"Returns the Java virtual machine specification version. This method is equivalent to System#getProperty System.getProperty(""java.vm.specification.version"").",FreeText,,0
2864,jdk,java.lang.management.RuntimeMXBean_goal.json,getManagementSpecVersion(),getManagementSpecVersion,java.lang.management.RuntimeMXBean,Returns the version of the specification for the management interface implemented by the running Java virtual machine.,FreeText,,0
2865,jdk,java.lang.management.RuntimeMXBean_goal.json,getClassPath(),getClassPath,java.lang.management.RuntimeMXBean,"Returns the Java class path that is used by the system class loader to search for class files. This method is equivalent to System#getProperty System.getProperty(""java.class.path"").  Multiple paths in the Java class path are separated by the path separator character of the platform of the Java virtual machine being monitored.",FreeText,,0
2866,jdk,java.lang.management.RuntimeMXBean_goal.json,getLibraryPath(),getLibraryPath,java.lang.management.RuntimeMXBean,"Returns the Java library path. This method is equivalent to System#getProperty System.getProperty(""java.library.path"").  Multiple paths in the Java library path are separated by the path separator character of the platform of the Java virtual machine being monitored.",FreeText,,0
2867,jdk,java.lang.management.RuntimeMXBean_goal.json,isBootClassPathSupported(),isBootClassPathSupported,java.lang.management.RuntimeMXBean,Tests if the Java virtual machine supports the boot class path mechanism used by the bootstrap class loader to search for class files.,FreeText,,0
2868,jdk,java.lang.management.RuntimeMXBean_goal.json,getBootClassPath(),getBootClassPath,java.lang.management.RuntimeMXBean,Returns the boot class path that is used by the bootstrap class loader to search for class files.  Multiple paths in the boot class path are separated by the path separator character of the platform on which the Java virtual machine is running. A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The #isBootClassPathSupported method can be used to determine if the Java virtual machine supports this method.,FreeText,,0
2869,jdk,java.lang.management.RuntimeMXBean_goal.json,getInputArguments(),getInputArguments,java.lang.management.RuntimeMXBean,"Returns the input arguments passed to the Java virtual machine which does not include the arguments to the main method. This method returns an empty list if there is no input argument to the Java virtual machine.  Some Java virtual machine implementations may take input arguments from multiple different sources: for examples, arguments passed from the application that launches the Java virtual machine such as the 'java' command, environment variables, configuration files, etc.  Typically, not all command-line options to the 'java' command are passed to the Java virtual machine. Thus, the returned input arguments may not include all command-line options.  MBeanServer access:<br> The mapped type of List<String> is String[].",FreeText,,0
2870,jdk,java.lang.management.RuntimeMXBean_goal.json,getUptime(),getUptime,java.lang.management.RuntimeMXBean,Returns the uptime of the Java virtual machine in milliseconds.,FreeText,,0
2871,jdk,java.lang.management.RuntimeMXBean_goal.json,getStartTime(),getStartTime,java.lang.management.RuntimeMXBean,Returns the start time of the Java virtual machine in milliseconds. This method returns the approximate time when the Java virtual machine started.,FreeText,,0
2872,jdk,java.lang.management.RuntimeMXBean_goal.json,getSystemProperties(),getSystemProperties,java.lang.management.RuntimeMXBean,"Returns a map of names and values of all system properties. This method calls System#getProperties to get all system properties. Properties whose name or value is not a String are omitted.  MBeanServer access:<br> The mapped type of Map<String,String> is javax.management.openmbean.TabularData TabularData with two items in each row as follows: <blockquote> <table border summary=""Name and Type for each item""> <tr> <th>Item Name</th> <th>Item Type</th> </tr> <tr> <td><tt>key</tt></td> <td>String</td> </tr> <tr> <td><tt>value</tt></td> <td>String</td> </tr> </table> </blockquote>",FreeText,,0
2873,jdk,java.lang.Math_goal.json,sin(double a),sin,java.lang.Math,"Returns the trigonometric sine of an angle. Special cases: <li>If the argument is NaN or an infinity, then the result is NaN. <li>If the argument is zero, then the result is a zero with the same sign as the argument. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2874,jdk,java.lang.Math_goal.json,cos(double a),cos,java.lang.Math,"Returns the trigonometric cosine of an angle. Special cases: <li>If the argument is NaN or an infinity, then the result is NaN. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2875,jdk,java.lang.Math_goal.json,tan(double a),tan,java.lang.Math,"Returns the trigonometric tangent of an angle. Special cases: <li>If the argument is NaN or an infinity, then the result is NaN. <li>If the argument is zero, then the result is a zero with the same sign as the argument. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2876,jdk,java.lang.Math_goal.json,asin(double a),asin,java.lang.Math,"Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2. Special cases: <li>If the argument is NaN or its absolute value is greater than 1, then the result is NaN. <li>If the argument is zero, then the result is a zero with the same sign as the argument. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2877,jdk,java.lang.Math_goal.json,acos(double a),acos,java.lang.Math,"Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi. Special case: <li>If the argument is NaN or its absolute value is greater than 1, then the result is NaN. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2878,jdk,java.lang.Math_goal.json,atan(double a),atan,java.lang.Math,"Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2. Special cases: <li>If the argument is NaN, then the result is NaN. <li>If the argument is zero, then the result is a zero with the same sign as the argument. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2879,jdk,java.lang.Math_goal.json,toRadians(double angdeg),toRadians,java.lang.Math,Converts an angle measured in degrees to an approximately equivalent angle measured in radians. The conversion from degrees to radians is generally inexact.,FreeText,,0
2880,jdk,java.lang.Math_goal.json,toDegrees(double angrad),toDegrees,java.lang.Math,Converts an angle measured in radians to an approximately equivalent angle measured in degrees. The conversion from radians to degrees is generally inexact; users should not expect cos(toRadians(90.0)) to exactly equal 0.0.,FreeText,,0
2881,jdk,java.lang.Math_goal.json,exp(double a),exp,java.lang.Math,"Returns Euler's number e raised to the power of a double value. Special cases: <li>If the argument is NaN, the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is negative infinity, then the result is positive zero. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2882,jdk,java.lang.Math_goal.json,log(double a),log,java.lang.Math,"Returns the natural logarithm (base e) of a double value. Special cases: <li>If the argument is NaN or less than zero, then the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is positive zero or negative zero, then the result is negative infinity. The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2883,jdk,java.lang.Math_goal.json,log10(double a),log10,java.lang.Math,"Returns the base 10 logarithm of a double value. Special cases: <li>If the argument is NaN or less than zero, then the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is positive zero or negative zero, then the result is negative infinity. <li> If the argument is equal to 10<sup><i>n</i></sup> for integer <i>n</i>, then the result is <i>n</i>.  The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2884,jdk,java.lang.Math_goal.json,sqrt(double a),sqrt,java.lang.Math,"Returns the correctly rounded positive square root of a double value. Special cases: <li>If the argument is NaN or less than zero, then the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is positive zero or negative zero, then the result is the same as the argument. Otherwise, the result is the double value closest to the true mathematical square root of the argument value.",FreeText,,0
2885,jdk,java.lang.Math_goal.json,cbrt(double a),cbrt,java.lang.Math,"Returns the cube root of a double value. For positive finite x, cbrt(-x) == -cbrt(x); that is, the cube root of a negative value is the negative of the cube root of that value's magnitude. Special cases:  <li>If the argument is NaN, then the result is NaN. <li>If the argument is infinite, then the result is an infinity with the same sign as the argument. <li>If the argument is zero, then the result is a zero with the same sign as the argument.  The computed result must be within 1 ulp of the exact result.",FreeText,,0
2886,jdk,java.lang.Math_goal.json,"IEEEremainder(double f1, double f2)",IEEEremainder,java.lang.Math,"Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard. The remainder value is mathematically equal to f1&nbsp;-&nbsp;f2&nbsp;&times;&nbsp;n, where n is the mathematical integer closest to the exact mathematical value of the quotient f1/f2, and if two mathematical integers are equally close to f1/f2, then n is the integer that is even. If the remainder is zero, its sign is the same as the sign of the first argument. Special cases: <li>If either argument is NaN, or the first argument is infinite, or the second argument is positive zero or negative zero, then the result is NaN. <li>If the first argument is finite and the second argument is infinite, then the result is the same as the first argument.",FreeText,,0
2887,jdk,java.lang.Math_goal.json,ceil(double a),ceil,java.lang.Math,"Returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer. Special cases: <li>If the argument value is already equal to a mathematical integer, then the result is the same as the argument. <li>If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument. <li>If the argument value is less than zero but greater than -1.0, then the result is negative zero. Note that the value of Math.ceil(x) is exactly the value of -Math.floor(-x).",FreeText,,0
2888,jdk,java.lang.Math_goal.json,floor(double a),floor,java.lang.Math,"Returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer. Special cases: <li>If the argument value is already equal to a mathematical integer, then the result is the same as the argument. <li>If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument.",FreeText,,0
2889,jdk,java.lang.Math_goal.json,rint(double a),rint,java.lang.Math,"Returns the double value that is closest in value to the argument and is equal to a mathematical integer. If two double values that are mathematical integers are equally close, the result is the integer value that is even. Special cases: <li>If the argument value is already equal to a mathematical integer, then the result is the same as the argument. <li>If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument.",FreeText,,0
2890,jdk,java.lang.Math_goal.json,"atan2(double y, double x)",atan2,java.lang.Math,"Returns the angle theta from the conversion of rectangular coordinates (x,&nbsp;y}) to polar coordinates (r,&nbsp;theta). This method computes the phase theta by computing an arc tangent of {@code y/x in the range of -pi to pi. Special cases: <ul><li>If either argument is NaN, then the result is NaN. <li>If the first argument is positive zero and the second argument is positive, or the first argument is positive and finite and the second argument is positive infinity, then the result is positive zero. <li>If the first argument is negative zero and the second argument is positive, or the first argument is negative and finite and the second argument is positive infinity, then the result is negative zero. <li>If the first argument is positive zero and the second argument is negative, or the first argument is positive and finite and the second argument is negative infinity, then the result is the double value closest to pi. <li>If the first argument is negative zero and the second argument is negative, or the first argument is negative and finite and the second argument is negative infinity, then the result is the double value closest to -pi. <li>If the first argument is positive and the second argument is positive zero or negative zero, or the first argument is positive infinity and the second argument is finite, then the result is the double value closest to pi/2. <li>If the first argument is negative and the second argument is positive zero or negative zero, or the first argument is negative infinity and the second argument is finite, then the result is the double value closest to -pi/2. <li>If both arguments are positive infinity, then the result is the double value closest to pi/4. <li>If the first argument is positive infinity and the second argument is negative infinity, then the result is the double value closest to 3*pi/4. <li>If the first argument is negative infinity and the second argument is positive infinity, then the result is the double value closest to -pi/4. <li>If both arguments are negative infinity, then the result is the double value closest to -3*pi/4.</ul> The computed result must be within 2 ulps of the exact result. Results must be semi-monotonic.",FreeText,,0
2891,jdk,java.lang.Math_goal.json,"pow(double a, double b)",pow,java.lang.Math,"Returns the value of the first argument raised to the power of the second argument. Special cases: <li>If the second argument is positive or negative zero, then the result is 1.0. <li>If the second argument is 1.0, then the result is the same as the first argument. <li>If the second argument is NaN, then the result is NaN. <li>If the first argument is NaN and the second argument is nonzero, then the result is NaN. <li>If <ul> <li>the absolute value of the first argument is greater than 1 and the second argument is positive infinity, or <li>the absolute value of the first argument is less than 1 and the second argument is negative infinity,  then the result is positive infinity. <li>If  <li>the absolute value of the first argument is greater than 1 and the second argument is negative infinity, or <li>the absolute value of the first argument is less than 1 and the second argument is positive infinity,  then the result is positive zero. <li>If the absolute value of the first argument equals 1 and the second argument is infinite, then the result is NaN. <li>If  <li>the first argument is positive zero and the second argument is greater than zero, or <li>the first argument is positive infinity and the second argument is less than zero,  then the result is positive zero. <li>If  <li>the first argument is positive zero and the second argument is less than zero, or <li>the first argument is positive infinity and the second argument is greater than zero,  then the result is positive infinity. <li>If  <li>the first argument is negative zero and the second argument is greater than zero but not a finite odd integer, or <li>the first argument is negative infinity and the second argument is less than zero but not a finite odd integer,  then the result is positive zero. <li>If  <li>the first argument is negative zero and the second argument is a positive finite odd integer, or <li>the first argument is negative infinity and the second argument is a negative finite odd integer,  then the result is negative zero. <li>If  <li>the first argument is negative zero and the second argument is less than zero but not a finite odd integer, or <li>the first argument is negative infinity and the second argument is greater than zero but not a finite odd integer,  then the result is positive infinity. <li>If  <li>the first argument is negative zero and the second argument is a negative finite odd integer, or <li>the first argument is negative infinity and the second argument is a positive finite odd integer,  then the result is negative infinity. <li>If the first argument is finite and less than zero  <li> if the second argument is a finite even integer, the result is equal to the result of raising the absolute value of the first argument to the power of the second argument <li>if the second argument is a finite odd integer, the result is equal to the negative of the result of raising the absolute value of the first argument to the power of the second argument <li>if the second argument is finite and not an integer, then the result is NaN.  <li>If both arguments are integers, then the result is exactly equal to the mathematical result of raising the first argument to the power of the second argument if that result can in fact be represented exactly as a double value.</ul> (In the foregoing descriptions, a floating-point value is considered to be an integer if and only if it is finite and a fixed point of the method #ceil ceil or, equivalently, a fixed point of the method #floor floor. A value is a fixed point of a one-argument method if and only if the result of applying the method to the value is equal to the value.) The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2892,jdk,java.lang.Math_goal.json,round(float a),round,java.lang.Math,"Returns the closest int to the argument, with ties rounding to positive infinity.  Special cases: <li>If the argument is NaN, the result is 0. <li>If the argument is negative infinity or any value less than or equal to the value of Integer.MIN_VALUE, the result is equal to the value of Integer.MIN_VALUE. <li>If the argument is positive infinity or any value greater than or equal to the value of Integer.MAX_VALUE, the result is equal to the value of Integer.MAX_VALUE.",FreeText,,0
2893,jdk,java.lang.Math_goal.json,round(double a),round,java.lang.Math,"Returns the closest long to the argument, with ties rounding to positive infinity. Special cases: <li>If the argument is NaN, the result is 0. <li>If the argument is negative infinity or any value less than or equal to the value of Long.MIN_VALUE, the result is equal to the value of Long.MIN_VALUE. <li>If the argument is positive infinity or any value greater than or equal to the value of Long.MAX_VALUE, the result is equal to the value of Long.MAX_VALUE.",FreeText,,0
2894,jdk,java.lang.Math_goal.json,random(),random,java.lang.Math,"Returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0. Returned values are chosen pseudorandomly with (approximately) uniform distribution from that range. When this method is first called, it creates a single new pseudorandom-number generator, exactly as if by the expression new java.util.Random() This new pseudorandom-number generator is used thereafter for all calls to this method and is used nowhere else. This method is properly synchronized to allow correct use by more than one thread. However, if many threads need to generate pseudorandom numbers at a great rate, it may reduce contention for each thread to have its own pseudorandom-number generator.",FreeText,,0
2895,jdk,java.lang.Math_goal.json,"addExact(int x, int y)",addExact,java.lang.Math,"Returns the sum of its arguments, throwing an exception if the result overflows an int.",FreeText,,0
2896,jdk,java.lang.Math_goal.json,"addExact(long x, long y)",addExact,java.lang.Math,"Returns the sum of its arguments, throwing an exception if the result overflows a long.",FreeText,,0
2897,jdk,java.lang.Math_goal.json,"subtractExact(int x, int y)",subtractExact,java.lang.Math,"Returns the difference of the arguments, throwing an exception if the result overflows an int.",FreeText,,0
2898,jdk,java.lang.Math_goal.json,"subtractExact(long x, long y)",subtractExact,java.lang.Math,"Returns the difference of the arguments, throwing an exception if the result overflows a long.",FreeText,,0
2899,jdk,java.lang.Math_goal.json,"multiplyExact(int x, int y)",multiplyExact,java.lang.Math,"Returns the product of the arguments, throwing an exception if the result overflows an int.",FreeText,,0
2900,jdk,java.lang.Math_goal.json,"multiplyExact(long x, long y)",multiplyExact,java.lang.Math,"Returns the product of the arguments, throwing an exception if the result overflows a long.",FreeText,,0
2901,jdk,java.lang.Math_goal.json,incrementExact(int a),incrementExact,java.lang.Math,"Returns the argument incremented by one, throwing an exception if the result overflows an int.",FreeText,,0
2902,jdk,java.lang.Math_goal.json,incrementExact(long a),incrementExact,java.lang.Math,"Returns the argument incremented by one, throwing an exception if the result overflows a long.",FreeText,,0
2903,jdk,java.lang.Math_goal.json,decrementExact(int a),decrementExact,java.lang.Math,"Returns the argument decremented by one, throwing an exception if the result overflows an int.",FreeText,,0
2904,jdk,java.lang.Math_goal.json,decrementExact(long a),decrementExact,java.lang.Math,"Returns the argument decremented by one, throwing an exception if the result overflows a long.",FreeText,,0
2905,jdk,java.lang.Math_goal.json,negateExact(int a),negateExact,java.lang.Math,"Returns the negation of the argument, throwing an exception if the result overflows an int.",FreeText,,0
2906,jdk,java.lang.Math_goal.json,negateExact(long a),negateExact,java.lang.Math,"Returns the negation of the argument, throwing an exception if the result overflows a long.",FreeText,,0
2907,jdk,java.lang.Math_goal.json,toIntExact(long value),toIntExact,java.lang.Math,Returns the value of the long argument; throwing an exception if the value overflows an int.,FreeText,,0
2908,jdk,java.lang.Math_goal.json,"floorDiv(int x, int y)",floorDiv,java.lang.Math,"Returns the largest (closest to positive infinity) int value that is less than or equal to the algebraic quotient. There is one special case, if the dividend is the Integer#MIN_VALUE Integer.MIN_VALUE and the divisor is -1, then integer overflow occurs and the result is equal to the Integer.MIN_VALUE.  Normal integer division operates under the round to zero rounding mode (truncation). This operation instead acts under the round toward negative infinity (floor) rounding mode. The floor rounding mode gives different results than truncation when the exact result is negative.  <li>If the signs of the arguments are the same, the results of floorDiv and the / operator are the same. <br> For example, floorDiv(4, 3) == 1 and (4 / 3) == 1.</li> <li>If the signs of the arguments are different, the quotient is negative and floorDiv returns the integer less than or equal to the quotient and the / operator returns the integer closest to zero.<br> For example, floorDiv(-4, 3) == -2, whereas (-4 / 3) == -1. </li>",FreeText,,0
2909,jdk,java.lang.Math_goal.json,"floorDiv(long x, long y)",floorDiv,java.lang.Math,"Returns the largest (closest to positive infinity) long value that is less than or equal to the algebraic quotient. There is one special case, if the dividend is the Long#MIN_VALUE Long.MIN_VALUE and the divisor is -1, then integer overflow occurs and the result is equal to the Long.MIN_VALUE.  Normal integer division operates under the round to zero rounding mode (truncation). This operation instead acts under the round toward negative infinity (floor) rounding mode. The floor rounding mode gives different results than truncation when the exact result is negative.  For examples, see #floorDiv(int, int).",FreeText,,0
2910,jdk,java.lang.Math_goal.json,"floorMod(int x, int y)",floorMod,java.lang.Math,"Returns the floor modulus of the int arguments.  The floor modulus is x - (floorDiv(x, y) * y), has the same sign as the divisor y, and is in the range of -abs(y) < r < +abs(y).  The relationship between floorDiv and floorMod is such that:  <li>floorDiv(x, y) * y + floorMod(x, y) == x   The difference in values between floorMod and the % operator is due to the difference between floorDiv that returns the integer less than or equal to the quotient and the / operator that returns the integer closest to zero.  Examples:  <li>If the signs of the arguments are the same, the results of floorMod and the % operator are the same. <br> <ul> <li>floorMod(4, 3) == 1; &nbsp; and (4 % 3) == 1</li>  If the signs of the arguments are different, the results differ from the % operator.<br> <ul> <li>floorMod(+4, -3) == -2; &nbsp; and (+4 % -3) == +1  floorMod(-4, +3) == +2; &nbsp; and (-4 % +3) == -1  floorMod(-4, -3) == -1; &nbsp; and (-4 % -3) == -1   </ul> </li> </ul>  If the signs of arguments are unknown and a positive modulus is needed it can be computed as (floorMod(x, y) + abs(y)) % abs(y).",FreeText,"methodResultID==( args[0] - java.lang.Math.floorDiv(args[0], args[1]) * args[1] )",1
2911,jdk,java.lang.Math_goal.json,"floorMod(long x, long y)",floorMod,java.lang.Math,"Returns the floor modulus of the long arguments.  The floor modulus is x - (floorDiv(x, y) * y), has the same sign as the divisor y, and is in the range of -abs(y) < r < +abs(y).  The relationship between floorDiv and floorMod is such that:  <li>floorDiv(x, y) * y + floorMod(x, y) == x   For examples, see #floorMod(int, int).",FreeText,"methodResultID==( args[0] - java.lang.Math.floorDiv(args[0], args[1]) * args[1] )",1
2912,jdk,java.lang.Math_goal.json,abs(int a),abs,java.lang.Math,"Returns the absolute value of an int value. If the argument is not negative, the argument is returned. If the argument is negative, the negation of the argument is returned. Note that if the argument is equal to the value of Integer#MIN_VALUE, the most negative representable int value, the result is that same value, which is negative.",FreeText,,0
2913,jdk,java.lang.Math_goal.json,abs(long a),abs,java.lang.Math,"Returns the absolute value of a long value. If the argument is not negative, the argument is returned. If the argument is negative, the negation of the argument is returned. Note that if the argument is equal to the value of Long#MIN_VALUE, the most negative representable long value, the result is that same value, which is negative.",FreeText,,0
2914,jdk,java.lang.Math_goal.json,abs(float a),abs,java.lang.Math,"Returns the absolute value of a float value. If the argument is not negative, the argument is returned. If the argument is negative, the negation of the argument is returned. Special cases: <li>If the argument is positive zero or negative zero, the result is positive zero. <li>If the argument is infinite, the result is positive infinity. <li>If the argument is NaN, the result is NaN. In other words, the result is the same as the value of the expression: Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(a))",FreeText,methodResultID==( Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(args[0])) ),1
2915,jdk,java.lang.Math_goal.json,abs(double a),abs,java.lang.Math,"Returns the absolute value of a double value. If the argument is not negative, the argument is returned. If the argument is negative, the negation of the argument is returned. Special cases: <li>If the argument is positive zero or negative zero, the result is positive zero. <li>If the argument is infinite, the result is positive infinity. <li>If the argument is NaN, the result is NaN. In other words, the result is the same as the value of the expression: Double.longBitsToDouble((Double.doubleToLongBits(a)<<1)>>>1)",FreeText,,0
2916,jdk,java.lang.Math_goal.json,"max(int a, int b)",max,java.lang.Math,"Returns the greater of two int values. That is, the result is the argument closer to the value of Integer#MAX_VALUE. If the arguments have the same value, the result is that same value.",FreeText,,0
2917,jdk,java.lang.Math_goal.json,"max(long a, long b)",max,java.lang.Math,"Returns the greater of two long values. That is, the result is the argument closer to the value of Long#MAX_VALUE. If the arguments have the same value, the result is that same value.",FreeText,,0
2918,jdk,java.lang.Math_goal.json,"max(float a, float b)",max,java.lang.Math,"Returns the greater of two float values. That is, the result is the argument closer to positive infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other negative zero, the result is positive zero.",FreeText,,0
2919,jdk,java.lang.Math_goal.json,"max(double a, double b)",max,java.lang.Math,"Returns the greater of two double values. That is, the result is the argument closer to positive infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other negative zero, the result is positive zero.",FreeText,,0
2920,jdk,java.lang.Math_goal.json,"min(int a, int b)",min,java.lang.Math,"Returns the smaller of two int values. That is, the result the argument closer to the value of Integer#MIN_VALUE. If the arguments have the same value, the result is that same value.",FreeText,,0
2921,jdk,java.lang.Math_goal.json,"min(long a, long b)",min,java.lang.Math,"Returns the smaller of two long values. That is, the result is the argument closer to the value of Long#MIN_VALUE. If the arguments have the same value, the result is that same value.",FreeText,,0
2922,jdk,java.lang.Math_goal.json,"min(float a, float b)",min,java.lang.Math,"Returns the smaller of two float values. That is, the result is the value closer to negative infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other is negative zero, the result is negative zero.",FreeText,,0
2923,jdk,java.lang.Math_goal.json,"min(double a, double b)",min,java.lang.Math,"Returns the smaller of two double values. That is, the result is the value closer to negative infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other is negative zero, the result is negative zero.",FreeText,,0
2924,jdk,java.lang.Math_goal.json,ulp(double d),ulp,java.lang.Math,"Returns the size of an ulp of the argument. An ulp, unit in the last place, of a double value is the positive distance between this floating-point value and the double value next larger in magnitude. Note that for non-NaN x, ulp(-x) == ulp(x). Special Cases:  <li> If the argument is NaN, then the result is NaN. <li> If the argument is positive or negative infinity, then the result is positive infinity. <li> If the argument is positive or negative zero, then the result is Double.MIN_VALUE. <li> If the argument is &plusmn;Double.MAX_VALUE, then the result is equal to 2<sup>971</sup>.",FreeText,,0
2925,jdk,java.lang.Math_goal.json,ulp(float f),ulp,java.lang.Math,"Returns the size of an ulp of the argument. An ulp, unit in the last place, of a float value is the positive distance between this floating-point value and the float value next larger in magnitude. Note that for non-NaN x, ulp(-x) == ulp(x). Special Cases:  <li> If the argument is NaN, then the result is NaN. <li> If the argument is positive or negative infinity, then the result is positive infinity. <li> If the argument is positive or negative zero, then the result is Float.MIN_VALUE. <li> If the argument is &plusmn;Float.MAX_VALUE, then the result is equal to 2<sup>104</sup>.",FreeText,,0
2926,jdk,java.lang.Math_goal.json,signum(double d),signum,java.lang.Math,"Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero. Special Cases:  <li> If the argument is NaN, then the result is NaN. <li> If the argument is positive zero or negative zero, then the result is the same as the argument.",FreeText,,0
2927,jdk,java.lang.Math_goal.json,signum(float f),signum,java.lang.Math,"Returns the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero. Special Cases:  <li> If the argument is NaN, then the result is NaN. <li> If the argument is positive zero or negative zero, then the result is the same as the argument.",FreeText,,0
2928,jdk,java.lang.Math_goal.json,sinh(double x),sinh,java.lang.Math,"Returns the hyperbolic sine of a double value. The hyperbolic sine of x is defined to be (e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup>)/2 where e is Math#E Euler's number. Special cases:  <li>If the argument is NaN, then the result is NaN. <li>If the argument is infinite, then the result is an infinity with the same sign as the argument. <li>If the argument is zero, then the result is a zero with the same sign as the argument.  The computed result must be within 2.5 ulps of the exact result.",FreeText,,0
2929,jdk,java.lang.Math_goal.json,cosh(double x),cosh,java.lang.Math,"Returns the hyperbolic cosine of a double value. The hyperbolic cosine of x is defined to be (e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup>)/2 where e is Math#E Euler's number. Special cases:  <li>If the argument is NaN, then the result is NaN. <li>If the argument is infinite, then the result is positive infinity. <li>If the argument is zero, then the result is 1.0.  The computed result must be within 2.5 ulps of the exact result.",FreeText,,0
2930,jdk,java.lang.Math_goal.json,tanh(double x),tanh,java.lang.Math,"Returns the hyperbolic tangent of a double value. The hyperbolic tangent of x is defined to be (e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup>)/(e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup>), in other words, Math#sinh sinh(x)/Math#cosh cosh(x). Note that the absolute value of the exact tanh is always less than 1. Special cases:  <li>If the argument is NaN, then the result is NaN. <li>If the argument is zero, then the result is a zero with the same sign as the argument. <li>If the argument is positive infinity, then the result is +1.0. <li>If the argument is negative infinity, then the result is -1.0.  The computed result must be within 2.5 ulps of the exact result. The result of tanh for any finite input must have an absolute value less than or equal to 1. Note that once the exact result of tanh is within 1/2 of an ulp of the limit value of &plusmn;1, correctly signed &plusmn;1.0 should be returned.",FreeText,,0
2931,jdk,java.lang.Math_goal.json,"hypot(double x, double y)",hypot,java.lang.Math,"Returns sqrt(x2&nbsp;+y2) without intermediate overflow or underflow. Special cases:  <li> If either argument is infinite, then the result is positive infinity. <li> If either argument is NaN and neither argument is infinite, then the result is NaN.  The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.",FreeText,,0
2932,jdk,java.lang.Math_goal.json,expm1(double x),expm1,java.lang.Math,"Returns ex&nbsp;-1. Note that for values of x near 0, the exact sum of expm1(x)}&nbsp;+&nbsp;1 is much closer to the true result of ex than {@code exp(x). Special cases:  <li>If the argument is NaN, the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is negative infinity, then the result is -1.0. <li>If the argument is zero, then the result is a zero with the same sign as the argument.  The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic. The result of expm1 for any finite input must be greater than or equal to -1.0. Note that once the exact result of ex&nbsp;-&nbsp;1 is within 1/2 ulp of the limit value -1, -1.0 should be returned.",FreeText,,0
2933,jdk,java.lang.Math_goal.json,log1p(double x),log1p,java.lang.Math,"Returns the natural logarithm of the sum of the argument and 1. Note that for small values x, the result of log1p(x) is much closer to the true result of ln(1 + x) than the floating-point evaluation of {@code log(1.0+x)}. Special cases:  <li>If the argument is NaN or less than -1, then the result is NaN. <li>If the argument is positive infinity, then the result is positive infinity. <li>If the argument is negative one, then the result is negative infinity. <li>If the argument is zero, then the result is a zero with the same sign as the argument.  The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.",FreeText,,0
2934,jdk,java.lang.Math_goal.json,"copySign(double magnitude, double sign)",copySign,java.lang.Math,"Returns the first floating-point argument with the sign of the second floating-point argument. Note that unlike the StrictMath#copySign(double, double) StrictMath.copySign method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.",FreeText,,0
2935,jdk,java.lang.Math_goal.json,"copySign(float magnitude, float sign)",copySign,java.lang.Math,"Returns the first floating-point argument with the sign of the second floating-point argument. Note that unlike the StrictMath#copySign(float, float) StrictMath.copySign method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.",FreeText,,0
2936,jdk,java.lang.Math_goal.json,getExponent(float f),getExponent,java.lang.Math,"Returns the unbiased exponent used in the representation of a float. Special cases:  <li>If the argument is NaN or infinite, then the result is Float#MAX_EXPONENT + 1. <li>If the argument is zero or subnormal, then the result is Float#MIN_EXPONENT -1.",FreeText,,0
2937,jdk,java.lang.Math_goal.json,getExponent(double d),getExponent,java.lang.Math,"Returns the unbiased exponent used in the representation of a double. Special cases:  <li>If the argument is NaN or infinite, then the result is Double#MAX_EXPONENT + 1. <li>If the argument is zero or subnormal, then the result is Double#MIN_EXPONENT -1.",FreeText,,0
2938,jdk,java.lang.Math_goal.json,"nextAfter(double start, double direction)",nextAfter,java.lang.Math,"Returns the floating-point number adjacent to the first argument in the direction of the second argument. If both arguments compare as equal the second argument is returned.  Special cases:  <li> If either argument is a NaN, then NaN is returned. <li> If both arguments are signed zeros, direction is returned unchanged (as implied by the requirement of returning the second argument if the arguments compare as equal). <li> If start is &plusmn;Double#MIN_VALUE and direction has a value such that the result should have a smaller magnitude, then a zero with the same sign as start is returned. <li> If start is infinite and direction has a value such that the result should have a smaller magnitude, Double#MAX_VALUE with the same sign as start is returned. <li> If start is equal to &plusmn; Double#MAX_VALUE and direction has a value such that the result should have a larger magnitude, an infinity with same sign as start is returned.",FreeText,,0
2939,jdk,java.lang.Math_goal.json,"nextAfter(float start, double direction)",nextAfter,java.lang.Math,"Returns the floating-point number adjacent to the first argument in the direction of the second argument. If both arguments compare as equal a value equivalent to the second argument is returned.  Special cases:  <li> If either argument is a NaN, then NaN is returned. <li> If both arguments are signed zeros, a value equivalent to direction is returned. <li> If start is &plusmn;Float#MIN_VALUE and direction has a value such that the result should have a smaller magnitude, then a zero with the same sign as start is returned. <li> If start is infinite and direction has a value such that the result should have a smaller magnitude, Float#MAX_VALUE with the same sign as start is returned. <li> If start is equal to &plusmn; Float#MAX_VALUE and direction has a value such that the result should have a larger magnitude, an infinity with same sign as start is returned.",FreeText,,0
2940,jdk,java.lang.Math_goal.json,nextUp(double d),nextUp,java.lang.Math,"Returns the floating-point value adjacent to d in the direction of positive infinity. This method is semantically equivalent to nextAfter(d, Double.POSITIVE_INFINITY); however, a nextUp implementation may run faster than its equivalent nextAfter call. Special Cases:  <li> If the argument is NaN, the result is NaN. <li> If the argument is positive infinity, the result is positive infinity. <li> If the argument is zero, the result is Double#MIN_VALUE",FreeText,"methodResultID==( java.lang.Math.nextAfter(args[0], Double.POSITIVE_INFINITY) )",1
2941,jdk,java.lang.Math_goal.json,nextUp(float f),nextUp,java.lang.Math,"Returns the floating-point value adjacent to f in the direction of positive infinity. This method is semantically equivalent to nextAfter(f, Float.POSITIVE_INFINITY); however, a nextUp implementation may run faster than its equivalent nextAfter call. Special Cases:  <li> If the argument is NaN, the result is NaN. <li> If the argument is positive infinity, the result is positive infinity. <li> If the argument is zero, the result is Float#MIN_VALUE",FreeText,"methodResultID==( java.lang.Math.nextAfter(args[0], Float.POSITIVE_INFINITY) )",1
2942,jdk,java.lang.Math_goal.json,nextDown(double d),nextDown,java.lang.Math,"Returns the floating-point value adjacent to d in the direction of negative infinity. This method is semantically equivalent to nextAfter(d, Double.NEGATIVE_INFINITY); however, a nextDown implementation may run faster than its equivalent nextAfter call. Special Cases:  <li> If the argument is NaN, the result is NaN. <li> If the argument is negative infinity, the result is negative infinity. <li> If the argument is zero, the result is -Double.MIN_VALUE",FreeText,"methodResultID==( java.lang.Math.nextAfter(args[0], Double.NEGATIVE_INFINITY) )",1
2943,jdk,java.lang.Math_goal.json,nextDown(float f),nextDown,java.lang.Math,"Returns the floating-point value adjacent to f in the direction of negative infinity. This method is semantically equivalent to nextAfter(f, Float.NEGATIVE_INFINITY); however, a nextDown implementation may run faster than its equivalent nextAfter call. Special Cases:  <li> If the argument is NaN, the result is NaN. <li> If the argument is negative infinity, the result is negative infinity. <li> If the argument is zero, the result is -Float.MIN_VALUE",FreeText,"methodResultID==( java.lang.Math.nextAfter(args[0], Float.NEGATIVE_INFINITY) )",1
2944,jdk,java.lang.Math_goal.json,"scalb(double d, int scaleFactor)",scalb,java.lang.Math,"Returns d &times; 2scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set. See the Java Language Specification for a discussion of floating-point value sets. If the exponent of the result is between Double#MIN_EXPONENT and Double#MAX_EXPONENT, the answer is calculated exactly. If the exponent of the result would be larger than Double.MAX_EXPONENT, an infinity is returned. Note that if the result is subnormal, precision may be lost; that is, when scalb(x, n) is subnormal, scalb(scalb(x, n), -n) may not equal x. When the result is non-NaN, the result has the same sign as d. Special cases:  <li> If the first argument is NaN, NaN is returned. <li> If the first argument is infinite, then an infinity of the same sign is returned. <li> If the first argument is zero, then a zero of the same sign is returned.",FreeText,,0
2945,jdk,java.lang.Math_goal.json,"scalb(float f, int scaleFactor)",scalb,java.lang.Math,"Returns f &times; 2scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the float value set. See the Java Language Specification for a discussion of floating-point value sets. If the exponent of the result is between Float#MIN_EXPONENT and Float#MAX_EXPONENT, the answer is calculated exactly. If the exponent of the result would be larger than Float.MAX_EXPONENT, an infinity is returned. Note that if the result is subnormal, precision may be lost; that is, when scalb(x, n) is subnormal, scalb(scalb(x, n), -n) may not equal x. When the result is non-NaN, the result has the same sign as f. Special cases:  <li> If the first argument is NaN, NaN is returned. <li> If the first argument is infinite, then an infinity of the same sign is returned. <li> If the first argument is zero, then a zero of the same sign is returned.",FreeText,,0
2946,jdk,java.lang.Math_goal.json,powerOfTwoD(int n),powerOfTwoD,java.lang.Math,Returns a floating-point power of two in the normal range.,FreeText,,0
2947,jdk,java.lang.Math_goal.json,powerOfTwoF(int n),powerOfTwoF,java.lang.Math,Returns a floating-point power of two in the normal range.,FreeText,,0
2948,jdk,java.lang.reflect.Field_goal.json,"java.lang.reflect.Field(java.lang.Class<?> declaringClass, java.lang.String name, java.lang.Class<?> type, int modifiers, int slot, java.lang.String signature, byte[] annotations)",java.lang.reflect.Field,java.lang.reflect.Field,Package-private constructor used by ReflectAccess to enable instantiation of these objects in Java code from the java.lang package via sun.reflect.LangReflectAccess.,FreeText,,0
2949,jdk,java.lang.reflect.Field_goal.json,copy(),copy,java.lang.reflect.Field,"Package-private routine (exposed to java.lang.Class via ReflectAccess) which returns a copy of this Field. The copy's ""root"" field points to this Field.",FreeText,,0
2950,jdk,java.lang.reflect.Field_goal.json,getDeclaringClass(),getDeclaringClass,java.lang.reflect.Field,Returns the Class object representing the class or interface that declares the field represented by this Field object.,FreeText,,0
2951,jdk,java.lang.reflect.Field_goal.json,getName(),getName,java.lang.reflect.Field,Returns the name of the field represented by this Field object.,FreeText,,0
2952,jdk,java.lang.reflect.Field_goal.json,getModifiers(),getModifiers,java.lang.reflect.Field,"Returns the Java language modifiers for the field represented by this Field object, as an integer. The Modifier class should be used to decode the modifiers. @see Modifier",FreeText,,0
2953,jdk,java.lang.reflect.Field_goal.json,isEnumConstant(),isEnumConstant,java.lang.reflect.Field,Returns true if this field represents an element of an enumerated type; returns false otherwise.,FreeText,,0
2954,jdk,java.lang.reflect.Field_goal.json,isSynthetic(),isSynthetic,java.lang.reflect.Field,Returns true if this field is a synthetic field; returns false otherwise.,FreeText,,0
2955,jdk,java.lang.reflect.Field_goal.json,getType(),getType,java.lang.reflect.Field,Returns a Class object that identifies the declared type for the field represented by this Field object.,FreeText,,0
2956,jdk,java.lang.reflect.Field_goal.json,getGenericType(),getGenericType,java.lang.reflect.Field,"Returns a Type object that represents the declared type for the field represented by this Field object. If the Type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code. If the type of the underlying field is a type variable or a parameterized type, it is created. Otherwise, it is resolved.",FreeText,,0
2957,jdk,java.lang.reflect.Field_goal.json,equals(java.lang.Object obj),equals,java.lang.reflect.Field,Compares this Field against the specified object. Returns true if the objects are the same. Two Field objects are the same if they were declared by the same class and have the same name and type.,FreeText,,0
2958,jdk,java.lang.reflect.Field_goal.json,hashCode(),hashCode,java.lang.reflect.Field,Returns a hashcode for this Field. This is computed as the exclusive-or of the hashcodes for the underlying field's declaring class name and its name.,FreeText,,0
2959,jdk,java.lang.reflect.Field_goal.json,toString(),toString,java.lang.reflect.Field,"Returns a string describing this Field. The format is the access modifiers for the field, if any, followed by the field type, followed by a space, followed by the fully-qualified name of the class declaring the field, followed by a period, followed by the name of the field. For example:  public static final int java.lang.Thread.MIN_PRIORITY private int java.io.FileDescriptor.fd  The modifiers are placed in canonical order as specified by ""The Java Language Specification"". This is public, protected or private first, and then other modifiers in the following order: static, final, transient, volatile.",FreeText,,0
2960,jdk,java.lang.reflect.Field_goal.json,toGenericString(),toGenericString,java.lang.reflect.Field,"Returns a string describing this Field, including its generic type. The format is the access modifiers for the field, if any, followed by the generic field type, followed by a space, followed by the fully-qualified name of the class declaring the field, followed by a period, followed by the name of the field. The modifiers are placed in canonical order as specified by ""The Java Language Specification"". This is public, protected or private first, and then other modifiers in the following order: static, final, transient, volatile.",FreeText,,0
2961,jdk,java.lang.reflect.Field_goal.json,get(java.lang.Object obj),get,java.lang.reflect.Field,"Returns the value of the field represented by this Field, on the specified object. The value is automatically wrapped in an object if it has a primitive type. The underlying field's value is obtained as follows: If the underlying field is a static field, the obj argument is ignored; it may be null. Otherwise, the underlying field is an instance field. If the specified obj argument is null, the method throws a NullPointerException. If the specified object is not an instance of the class or interface declaring the underlying field, the method throws an IllegalArgumentException. If this Field object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an IllegalAccessException. If the underlying field is static, the class that declared the field is initialized if it has not already been initialized. Otherwise, the value is retrieved from the underlying instance or static field. If the field has a primitive type, the value is wrapped in an object before being returned, otherwise it is returned as is. If the field is hidden in the type of obj, the field's value is obtained according to the preceding rules.",FreeText,,0
2962,jdk,java.lang.reflect.Field_goal.json,getBoolean(java.lang.Object obj),getBoolean,java.lang.reflect.Field,Gets the value of a static or instance boolean field.,FreeText,,0
2963,jdk,java.lang.reflect.Field_goal.json,getByte(java.lang.Object obj),getByte,java.lang.reflect.Field,Gets the value of a static or instance byte field.,FreeText,,0
2964,jdk,java.lang.reflect.Field_goal.json,getChar(java.lang.Object obj),getChar,java.lang.reflect.Field,Gets the value of a static or instance field of type char or of another primitive type convertible to type char via a widening conversion.,FreeText,,0
2965,jdk,java.lang.reflect.Field_goal.json,getShort(java.lang.Object obj),getShort,java.lang.reflect.Field,Gets the value of a static or instance field of type short or of another primitive type convertible to type short via a widening conversion.,FreeText,,0
2966,jdk,java.lang.reflect.Field_goal.json,getInt(java.lang.Object obj),getInt,java.lang.reflect.Field,Gets the value of a static or instance field of type int or of another primitive type convertible to type int via a widening conversion.,FreeText,,0
2967,jdk,java.lang.reflect.Field_goal.json,getLong(java.lang.Object obj),getLong,java.lang.reflect.Field,Gets the value of a static or instance field of type long or of another primitive type convertible to type long via a widening conversion.,FreeText,,0
2968,jdk,java.lang.reflect.Field_goal.json,getFloat(java.lang.Object obj),getFloat,java.lang.reflect.Field,Gets the value of a static or instance field of type float or of another primitive type convertible to type float via a widening conversion.,FreeText,,0
2969,jdk,java.lang.reflect.Field_goal.json,getDouble(java.lang.Object obj),getDouble,java.lang.reflect.Field,Gets the value of a static or instance field of type double or of another primitive type convertible to type double via a widening conversion.,FreeText,,0
2970,jdk,java.lang.reflect.Field_goal.json,"set(java.lang.Object obj, java.lang.Object value)",set,java.lang.reflect.Field,"Sets the field represented by this Field object on the specified object argument to the specified new value. The new value is automatically unwrapped if the underlying field has a primitive type. The operation proceeds as follows: If the underlying field is static, the obj argument is ignored; it may be null. Otherwise the underlying field is an instance field. If the specified object argument is null, the method throws a NullPointerException. If the specified object argument is not an instance of the class or interface declaring the underlying field, the method throws an IllegalArgumentException. If this Field object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an IllegalAccessException. If the underlying field is final, the method throws an IllegalAccessException unless setAccessible(true) has succeeded for this Field object and the field is non-static. Setting a final field in this way is meaningful only during deserialization or reconstruction of instances of classes with blank final fields, before they are made available for access by other parts of a program. Use in any other context may have unpredictable effects, including cases in which other parts of a program continue to use the original value of this field. If the underlying field is of a primitive type, an unwrapping conversion is attempted to convert the new value to a value of a primitive type. If this attempt fails, the method throws an IllegalArgumentException. If, after possible unwrapping, the new value cannot be converted to the type of the underlying field by an identity or widening conversion, the method throws an IllegalArgumentException. If the underlying field is static, the class that declared the field is initialized if it has not already been initialized. The field is set to the possibly unwrapped and widened new value. If the field is hidden in the type of obj, the field's value is set according to the preceding rules.",FreeText,,0
2971,jdk,java.lang.reflect.Field_goal.json,"setBoolean(java.lang.Object obj, boolean z)",setBoolean,java.lang.reflect.Field,"Sets the value of a field as a boolean on the specified object. This method is equivalent to set(obj, zObj), where zObj is a Boolean object and zObj.booleanValue() == z.",FreeText,,0
2972,jdk,java.lang.reflect.Field_goal.json,"setByte(java.lang.Object obj, byte b)",setByte,java.lang.reflect.Field,"Sets the value of a field as a byte on the specified object. This method is equivalent to set(obj, bObj), where bObj is a Byte object and bObj.byteValue() == b.",FreeText,,0
2973,jdk,java.lang.reflect.Field_goal.json,"setChar(java.lang.Object obj, char c)",setChar,java.lang.reflect.Field,"Sets the value of a field as a char on the specified object. This method is equivalent to set(obj, cObj), where cObj is a Character object and cObj.charValue() == c.",FreeText,,0
2974,jdk,java.lang.reflect.Field_goal.json,"setShort(java.lang.Object obj, short s)",setShort,java.lang.reflect.Field,"Sets the value of a field as a short on the specified object. This method is equivalent to set(obj, sObj), where sObj is a Short object and sObj.shortValue() == s.",FreeText,,0
2975,jdk,java.lang.reflect.Field_goal.json,"setInt(java.lang.Object obj, int i)",setInt,java.lang.reflect.Field,"Sets the value of a field as an int on the specified object. This method is equivalent to set(obj, iObj), where iObj is a Integer object and iObj.intValue() == i.",FreeText,,0
2976,jdk,java.lang.reflect.Field_goal.json,"setLong(java.lang.Object obj, long l)",setLong,java.lang.reflect.Field,"Sets the value of a field as a long on the specified object. This method is equivalent to set(obj, lObj), where lObj is a Long object and lObj.longValue() == l.",FreeText,,0
2977,jdk,java.lang.reflect.Field_goal.json,"setFloat(java.lang.Object obj, float f)",setFloat,java.lang.reflect.Field,"Sets the value of a field as a float on the specified object. This method is equivalent to set(obj, fObj), where fObj is a Float object and fObj.floatValue() == f.",FreeText,,0
2978,jdk,java.lang.reflect.Field_goal.json,"setDouble(java.lang.Object obj, double d)",setDouble,java.lang.reflect.Field,"Sets the value of a field as a double on the specified object. This method is equivalent to set(obj, dObj), where dObj is a Double object and dObj.doubleValue() == d.",FreeText,,0
2979,jdk,java.lang.reflect.Field_goal.json,getAnnotation(java.lang.Class<T> annotationClass),getAnnotation,java.lang.reflect.Field,,FreeText,,0
2980,jdk,java.lang.reflect.Field_goal.json,getAnnotationsByType(java.lang.Class<T> annotationClass),getAnnotationsByType,java.lang.reflect.Field,{@inheritDoc},FreeText,,0
2981,jdk,java.lang.reflect.Field_goal.json,getDeclaredAnnotations(),getDeclaredAnnotations,java.lang.reflect.Field,{@inheritDoc},FreeText,,0
2982,jdk,java.lang.reflect.Field_goal.json,getAnnotatedType(),getAnnotatedType,java.lang.reflect.Field,Returns an AnnotatedType object that represents the use of a type to specify the declared type of the field represented by this Field.,FreeText,,0
2983,jdk,java.lang.String_goal.json,java.lang.String(),java.lang.String,java.lang.String,Initializes a newly created String object so that it represents an empty character sequence. Note that use of this constructor is unnecessary since Strings are immutable.,FreeText,,0
2984,jdk,java.lang.String_goal.json,java.lang.String(java.lang.String original),java.lang.String,java.lang.String,"Initializes a newly created String object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string. Unless an explicit copy of original is needed, use of this constructor is unnecessary since Strings are immutable.",FreeText,,0
2985,jdk,java.lang.String_goal.json,java.lang.String(char[] value),java.lang.String,java.lang.String,Allocates a new String so that it represents the sequence of characters currently contained in the character array argument. The contents of the character array are copied; subsequent modification of the character array does not affect the newly created string.,FreeText,,0
2986,jdk,java.lang.String_goal.json,"java.lang.String(char[] value, int offset, int count)",java.lang.String,java.lang.String,Allocates a new String that contains characters from a subarray of the character array argument. The offset argument is the index of the first character of the subarray and the count argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the newly created string.,FreeText,,0
2987,jdk,java.lang.String_goal.json,"java.lang.String(int[] codePoints, int offset, int count)",java.lang.String,java.lang.String,Allocates a new String that contains characters from a subarray of the Unicode code point array argument. The offset argument is the index of the first code point of the subarray and the count argument specifies the length of the subarray. The contents of the subarray are converted to char}s; subsequent modification of the {@code int array does not affect the newly created string.,FreeText,,0
2988,jdk,java.lang.String_goal.json,"java.lang.String(byte[] ascii, int hibyte, int offset, int count)",java.lang.String,java.lang.String,"Allocates a new String constructed from a subarray of an array of 8-bit integer values.  The offset argument is the index of the first byte of the subarray, and the count argument specifies the length of the subarray.  Each byte in the subarray is converted to a char as specified in the method above. @deprecated This method does not properly convert bytes into characters. As of JDK&nbsp;1.1, the preferred way to do this is via the String constructors that take a java.nio.charset.Charset, charset name, or that use the platform's default charset.",FreeText,,0
2989,jdk,java.lang.String_goal.json,"java.lang.String(byte[] ascii, int hibyte)",java.lang.String,java.lang.String,"Allocates a new String containing characters constructed from an array of 8-bit integer values. Each character cin the resulting string is constructed from the corresponding component b in the byte array such that: <blockquote><pre> <b>c</b> == (char)(((hibyte & 0xff) << 8) | (<b>b</b> & 0xff)) </pre></blockquote> @deprecated This method does not properly convert bytes into characters. As of JDK&nbsp;1.1, the preferred way to do this is via the String constructors that take a java.nio.charset.Charset, charset name, or that use the platform's default charset.",FreeText,,0
2990,jdk,java.lang.String_goal.json,"java.lang.String(byte[] bytes, int offset, int length, java.lang.String charsetName)",java.lang.String,java.lang.String,"Constructs a new String by decoding the specified subarray of bytes using the specified charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the subarray.  The behavior of this constructor when the given bytes are not valid in the given charset is unspecified. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2991,jdk,java.lang.String_goal.json,"java.lang.String(byte[] bytes, int offset, int length, java.nio.charset.Charset charset)",java.lang.String,java.lang.String,"Constructs a new String by decoding the specified subarray of bytes using the specified java.nio.charset.Charset charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the subarray.  This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2992,jdk,java.lang.String_goal.json,"java.lang.String(byte[] bytes, java.lang.String charsetName)",java.lang.String,java.lang.String,"Constructs a new String by decoding the specified array of bytes using the specified java.nio.charset.Charset charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the byte array.  The behavior of this constructor when the given bytes are not valid in the given charset is unspecified. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2993,jdk,java.lang.String_goal.json,"java.lang.String(byte[] bytes, java.nio.charset.Charset charset)",java.lang.String,java.lang.String,"Constructs a new String by decoding the specified array of bytes using the specified java.nio.charset.Charset charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the byte array.  This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2994,jdk,java.lang.String_goal.json,"java.lang.String(byte[] bytes, int offset, int length)",java.lang.String,java.lang.String,"Constructs a new String by decoding the specified subarray of bytes using the platform's default charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the subarray.  The behavior of this constructor when the given bytes are not valid in the default charset is unspecified. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2995,jdk,java.lang.String_goal.json,java.lang.String(byte[] bytes),java.lang.String,java.lang.String,"Constructs a new String by decoding the specified array of bytes using the platform's default charset. The length of the new String is a function of the charset, and hence may not be equal to the length of the byte array.  The behavior of this constructor when the given bytes are not valid in the default charset is unspecified. The java.nio.charset.CharsetDecoder class should be used when more control over the decoding process is required.",FreeText,,0
2996,jdk,java.lang.String_goal.json,java.lang.String(java.lang.StringBuffer buffer),java.lang.String,java.lang.String,Allocates a new string that contains the sequence of characters currently contained in the string buffer argument. The contents of the string buffer are copied; subsequent modification of the string buffer does not affect the newly created string.,FreeText,,0
2997,jdk,java.lang.String_goal.json,java.lang.String(java.lang.StringBuilder builder),java.lang.String,java.lang.String,Allocates a new string that contains the sequence of characters currently contained in the string builder argument. The contents of the string builder are copied; subsequent modification of the string builder does not affect the newly created string.  This constructor is provided to ease migration to StringBuilder. Obtaining a string from a string builder via the toString method is likely to run faster and is generally preferred.,FreeText,,0
2998,jdk,java.lang.String_goal.json,"java.lang.String(char[] value, boolean share)",java.lang.String,java.lang.String,,FreeText,,0
2999,jdk,java.lang.String_goal.json,length(),length,java.lang.String,Returns the length of this string. The length is equal to the number of Unicode code units in the string.,FreeText,,0
3000,jdk,java.lang.String_goal.json,isEmpty(),isEmpty,java.lang.String,"Returns true if, and only if, #length() is 0.",FreeText,,0
3001,jdk,java.lang.String_goal.json,charAt(int index),charAt,java.lang.String,"Returns the char value at the specified index. An index ranges from 0 to length() - 1. The first char value of the sequence is at index 0, the next at index 1, and so on, as for array indexing. If the char value specified by the index is a surrogate, the surrogate value is returned.",FreeText,,0
3002,jdk,java.lang.String_goal.json,codePointAt(int index),codePointAt,java.lang.String,"Returns the character (Unicode code point) at the specified index. The index refers to char values (Unicode code units) and ranges from 0 to #length()- 1.  If the char value specified at the given index is in the high-surrogate range, the following index is less than the length of this String, and the char value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. Otherwise, the char value at the given index is returned.",FreeText,,0
3003,jdk,java.lang.String_goal.json,codePointBefore(int index),codePointBefore,java.lang.String,"Returns the character (Unicode code point) before the specified index. The index refers to char values (Unicode code units) and ranges from 1 to CharSequence#length() length.  If the char value at (index - 1) is in the low-surrogate range, (index - 2) is not negative, and the char value at (index - 2) is in the high-surrogate range, then the supplementary code point value of the surrogate pair is returned. If the char value at index - 1 is an unpaired low-surrogate or a high-surrogate, the surrogate value is returned.",FreeText,,0
3004,jdk,java.lang.String_goal.json,"codePointCount(int beginIndex, int endIndex)",codePointCount,java.lang.String,Returns the number of Unicode code points in the specified text range of this String. The text range begins at the specified beginIndex and extends to the char at index endIndex - 1. Thus the length (in chars) of the text range is {@code endIndex-beginIndex}. Unpaired surrogates within the text range count as one code point each.,FreeText,,0
3005,jdk,java.lang.String_goal.json,"offsetByCodePoints(int index, int codePointOffset)",offsetByCodePoints,java.lang.String,Returns the index within this String that is offset from the given index by codePointOffset code points. Unpaired surrogates within the text range given by index and codePointOffset count as one code point each.,FreeText,,0
3006,jdk,java.lang.String_goal.json,"getChars(char[] dst, int dstBegin)",getChars,java.lang.String,Copy characters from this string into dst starting at dstBegin. This method doesn't perform any range checking.,FreeText,,0
3007,jdk,java.lang.String_goal.json,"getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)",getChars,java.lang.String,Copies characters from this string into the destination character array.  The first character to be copied is at index srcBegin; the last character to be copied is at index srcEnd-1 (thus the total number of characters to be copied is srcEnd-srcBegin}). The characters are copied into the subarray of {@code dst starting at index dstBegin and ending at index: <pre> dstbegin + (srcEnd-srcBegin) - 1 </pre>,FreeText,,0
3008,jdk,java.lang.String_goal.json,"getBytes(int srcBegin, int srcEnd, byte[] dst, int dstBegin)",getBytes,java.lang.String,"Copies characters from this string into the destination byte array. Each byte receives the 8 low-order bits of the corresponding character. The eight high-order bits of each character are not copied and do not participate in the transfer in any way.  The first character to be copied is at index srcBegin; the last character to be copied is at index srcEnd-1. The total number of characters to be copied is srcEnd-srcBegin. The characters, converted to bytes, are copied into the subarray of dst starting at index dstBegin and ending at index: <pre> dstbegin + (srcEnd-srcBegin) - 1 </pre> @deprecated This method does not properly convert characters into bytes. As of JDK&nbsp;1.1, the preferred way to do this is via the #getBytes() method, which uses the platform's default charset.",FreeText,,0
3009,jdk,java.lang.String_goal.json,getBytes(java.lang.String charsetName),getBytes,java.lang.String,"Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array.  The behavior of this method when this string cannot be encoded in the given charset is unspecified. The java.nio.charset.CharsetEncoder class should be used when more control over the encoding process is required.",FreeText,,0
3010,jdk,java.lang.String_goal.json,getBytes(java.nio.charset.Charset charset),getBytes,java.lang.String,"Encodes this String into a sequence of bytes using the given java.nio.charset.Charset charset, storing the result into a new byte array.  This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. The java.nio.charset.CharsetEncoder class should be used when more control over the encoding process is required.",FreeText,,0
3011,jdk,java.lang.String_goal.json,getBytes(),getBytes,java.lang.String,"Encodes this String into a sequence of bytes using the platform's default charset, storing the result into a new byte array.  The behavior of this method when this string cannot be encoded in the default charset is unspecified. The java.nio.charset.CharsetEncoder class should be used when more control over the encoding process is required.",FreeText,,0
3012,jdk,java.lang.String_goal.json,equals(java.lang.Object anObject),equals,java.lang.String,Compares this string to the specified object. The result is true if and only if the argument is not null and is a String object that represents the same sequence of characters as this object.,FreeText,,0
3013,jdk,java.lang.String_goal.json,contentEquals(java.lang.StringBuffer sb),contentEquals,java.lang.String,Compares this string to the specified StringBuffer. The result is true if and only if this String represents the same sequence of characters as the specified StringBuffer. This method synchronizes on the StringBuffer.,FreeText,,0
3014,jdk,java.lang.String_goal.json,contentEquals(java.lang.CharSequence cs),contentEquals,java.lang.String,Compares this string to the specified CharSequence. The result is true if and only if this String represents the same sequence of char values as the specified sequence. Note that if the CharSequence is a StringBuffer then the method synchronizes on it.,FreeText,,0
3015,jdk,java.lang.String_goal.json,equalsIgnoreCase(java.lang.String anotherString),equalsIgnoreCase,java.lang.String,"Compares this String to another String, ignoring case considerations. Two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case.  Two characters c1 and c2 are considered the same ignoring case if at least one of the following is true:  <li> The two characters are the same (as compared by the == operator) <li> Applying the method java.lang.Character#toUpperCase(char) to each character produces the same result <li> Applying the method java.lang.Character#toLowerCase(char) to each character produces the same result",FreeText,,0
3016,jdk,java.lang.String_goal.json,compareTo(java.lang.String anotherString),compareTo,java.lang.String,"Compares two strings lexicographically. The comparison is based on the Unicode value of each character in the strings. The character sequence represented by this String object is compared lexicographically to the character sequence represented by the argument string. The result is a negative integer if this String object lexicographically precedes the argument string. The result is a positive integer if this String object lexicographically follows the argument string. The result is zero if the strings are equal; compareTo returns 0 exactly when the #equals(Object) method would return true.  This is the definition of lexicographic ordering. If two strings are different, then either they have different characters at some index that is a valid index for both strings, or their lengths are different, or both. If they have different characters at one or more index positions, let k be the smallest such index; then the string whose character at position k has the smaller value, as determined by using the < operator, lexicographically precedes the other string. In this case, compareTo returns the difference of the two character values at position k in the two string -- that is, the value: <pre> this.charAt(k)-anotherString.charAt(k) </pre> If there is no index position at which they differ, then the shorter string lexicographically precedes the longer string. In this case, compareTo returns the difference of the lengths of the strings -- that is, the value: <pre> this.length()-anotherString.length() </pre>",FreeText,,0
3017,jdk,java.lang.String_goal.json,compareToIgnoreCase(java.lang.String str),compareToIgnoreCase,java.lang.String,"Compares two strings lexicographically, ignoring case differences. This method returns an integer whose sign is that of calling compareTo with normalized versions of the strings where case differences have been eliminated by calling Character.toLowerCase(Character.toUpperCase(character)) on each character.  Note that this method does not take locale into account, and will result in an unsatisfactory ordering for certain locales. The java.text package provides collators to allow locale-sensitive ordering.",FreeText,,0
3018,jdk,java.lang.String_goal.json,"regionMatches(int toffset, java.lang.String other, int ooffset, int len)",regionMatches,java.lang.String,Tests if two string regions are equal.  A substring of this String object is compared to a substring of the argument other. The result is true if these substrings represent identical character sequences. The substring of this String object to be compared begins at index toffset and has length len. The substring of other to be compared begins at index ooffset and has length len. The result is false if and only if at least one of the following is true: <li>toffset is negative. <li>ooffset is negative. <li>toffset+len is greater than the length of this String object. <li>ooffset+len is greater than the length of the other argument. <li>There is some nonnegative integer <i>k</i> less than len such that: this.charAt(toffset + <i>k</i>) != other.charAt(ooffset +  <i>k</i>),FreeText,,0
3019,jdk,java.lang.String_goal.json,"regionMatches(boolean ignoreCase, int toffset, java.lang.String other, int ooffset, int len)",regionMatches,java.lang.String,"Tests if two string regions are equal.  A substring of this String object is compared to a substring of the argument other. The result is true if these substrings represent character sequences that are the same, ignoring case if and only if ignoreCase is true. The substring of this String object to be compared begins at index toffset and has length len. The substring of other to be compared begins at index ooffset and has length len. The result is false if and only if at least one of the following is true: <li>toffset is negative. <li>ooffset is negative. <li>toffset+len is greater than the length of this String object. <li>ooffset+len is greater than the length of the other argument. <li>ignoreCase is false and there is some nonnegative integer <i>k</i> less than len such that: <blockquote><pre> this.charAt(toffset+k) != other.charAt(ooffset+k) </pre></blockquote> <li>ignoreCase is true and there is some nonnegative integer <i>k</i> less than len such that: <blockquote><pre> Character.toLowerCase(this.charAt(toffset+k)) != </pre></blockquote> and: <blockquote><pre> Character.toUpperCase(this.charAt(toffset+k)) != Character.toUpperCase(other.charAt(ooffset+k)) </pre></blockquote>",FreeText,,0
3020,jdk,java.lang.String_goal.json,"startsWith(java.lang.String prefix, int toffset)",startsWith,java.lang.String,Tests if the substring of this string beginning at the specified index starts with the specified prefix.,FreeText,,0
3021,jdk,java.lang.String_goal.json,startsWith(java.lang.String prefix),startsWith,java.lang.String,Tests if this string starts with the specified prefix.,FreeText,,0
3022,jdk,java.lang.String_goal.json,endsWith(java.lang.String suffix),endsWith,java.lang.String,Tests if this string ends with the specified suffix.,FreeText,,0
3023,jdk,java.lang.String_goal.json,hashCode(),hashCode,java.lang.String,"Returns a hash code for this string. The hash code for a String object is computed as <pre> s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1] </pre> using int arithmetic, where s[i] is the ith character of the string, n is the length of the string, and ^ indicates exponentiation. (The hash value of the empty string is zero.)",FreeText,,0
3024,jdk,java.lang.String_goal.json,indexOf(int ch),indexOf,java.lang.String,"Returns the index within this string of the first occurrence of the specified character. If a character with value ch occurs in the character sequence represented by this String object, then the index (in Unicode code units) of the first such occurrence is returned. For values of ch in the range from 0 to 0xFFFF (inclusive), this is the smallest value k such that: <blockquote><pre> this.charAt(k) == ch </pre></blockquote> is true. For other values of ch, it is the smallest value k such that: <blockquote><pre> this.codePointAt(k) == ch </pre></blockquote> is true. In either case, if no such character occurs in this string, then -1 is returned.",FreeText,,0
3025,jdk,java.lang.String_goal.json,"indexOf(int ch, int fromIndex)",indexOf,java.lang.String,"Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index.  If a character with value ch occurs in the character sequence represented by this String object at an index no smaller than fromIndex, then the index of the first such occurrence is returned. For values of ch in the range from 0 to 0xFFFF (inclusive), this is the smallest value k such that: <blockquote><pre> (this.charAt(k) == ch) && (k >= fromIndex) </pre></blockquote> is true. For other values of ch, it is the smallest value k such that: <blockquote><pre> (this.codePointAt(k) == ch) && (k >= fromIndex) </pre></blockquote> is true. In either case, if no such character occurs in this string at or after position fromIndex, then -1 is returned.  There is no restriction on the value of fromIndex. If it is negative, it has the same effect as if it were zero: this entire string may be searched. If it is greater than the length of this string, it has the same effect as if it were equal to the length of this string: -1 is returned. All indices are specified in char values (Unicode code units).",FreeText,,0
3026,jdk,java.lang.String_goal.json,lastIndexOf(int ch),lastIndexOf,java.lang.String,"Returns the index within this string of the last occurrence of the specified character. For values of ch in the range from 0 to 0xFFFF (inclusive), the index (in Unicode code units) returned is the largest value k such that: <blockquote><pre> this.charAt(k) == ch </pre></blockquote> is true. For other values of ch, it is the largest value k such that: <blockquote><pre> this.codePointAt(k) == ch </pre></blockquote> is true. In either case, if no such character occurs in this string, then -1 is returned. The String is searched backwards starting at the last character.",FreeText,,0
3027,jdk,java.lang.String_goal.json,"lastIndexOf(int ch, int fromIndex)",lastIndexOf,java.lang.String,"Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index. For values of ch in the range from 0 to 0xFFFF (inclusive), the index returned is the largest value k such that: <blockquote><pre> (this.charAt(k) == ch) && (k <= fromIndex) </pre></blockquote> is true. For other values of ch, it is the largest value k such that: <blockquote><pre> (this.codePointAt(k) == ch) && (k <= fromIndex) </pre></blockquote> is true. In either case, if no such character occurs in this string at or before position fromIndex, then -1 is returned. All indices are specified in char values (Unicode code units).",FreeText,,0
3028,jdk,java.lang.String_goal.json,indexOf(java.lang.String str),indexOf,java.lang.String,"Returns the index within this string of the first occurrence of the specified substring. The returned index is the smallest value k for which: <blockquote><pre> this.startsWith(str, k) </pre></blockquote> If no such value of k exists, then -1 is returned.",FreeText,,0
3029,jdk,java.lang.String_goal.json,"indexOf(java.lang.String str, int fromIndex)",indexOf,java.lang.String,"Returns the index within this string of the first occurrence of the specified substring, starting at the specified index. The returned index is the smallest value k for which: <blockquote><pre> k >= fromIndex && this.startsWith(str, k) </pre></blockquote> If no such value of k exists, then -1 is returned.",FreeText,,0
3030,jdk,java.lang.String_goal.json,"indexOf(char[] source, int sourceOffset, int sourceCount, java.lang.String target, int fromIndex)",indexOf,java.lang.String,"Code shared by String and AbstractStringBuilder to do searches. The source is the character array being searched, and the target is the string being searched for.",FreeText,,0
3031,jdk,java.lang.String_goal.json,"indexOf(char[] source, int sourceOffset, int sourceCount, char[] target, int targetOffset, int targetCount, int fromIndex)",indexOf,java.lang.String,"Code shared by String and StringBuffer to do searches. The source is the character array being searched, and the target is the string being searched for.",FreeText,,0
3032,jdk,java.lang.String_goal.json,lastIndexOf(java.lang.String str),lastIndexOf,java.lang.String,"Returns the index within this string of the last occurrence of the specified substring. The last occurrence of the empty string """" is considered to occur at the index value this.length(). The returned index is the largest value k for which: <blockquote><pre> this.startsWith(str, k) </pre></blockquote> If no such value of k exists, then -1 is returned.",FreeText,,0
3033,jdk,java.lang.String_goal.json,"lastIndexOf(java.lang.String str, int fromIndex)",lastIndexOf,java.lang.String,"Returns the index within this string of the last occurrence of the specified substring, searching backward starting at the specified index. The returned index is the largest value k for which: <blockquote><pre> k <= fromIndex && this.startsWith(str, k) </pre></blockquote> If no such value of k exists, then -1 is returned.",FreeText,,0
3034,jdk,java.lang.String_goal.json,"lastIndexOf(char[] source, int sourceOffset, int sourceCount, java.lang.String target, int fromIndex)",lastIndexOf,java.lang.String,"Code shared by String and AbstractStringBuilder to do searches. The source is the character array being searched, and the target is the string being searched for.",FreeText,,0
3035,jdk,java.lang.String_goal.json,"lastIndexOf(char[] source, int sourceOffset, int sourceCount, char[] target, int targetOffset, int targetCount, int fromIndex)",lastIndexOf,java.lang.String,"Code shared by String and StringBuffer to do searches. The source is the character array being searched, and the target is the string being searched for.",FreeText,,0
3036,jdk,java.lang.String_goal.json,substring(int beginIndex),substring,java.lang.String,"Returns a string that is a substring of this string. The substring begins with the character at the specified index and extends to the end of this string.  Examples: <pre> ""unhappy"".substring(2) returns ""happy"" ""Harbison"".substring(3) returns ""bison"" ""emptiness"".substring(9) returns """" (an empty string) </pre>",FreeText,,0
3037,jdk,java.lang.String_goal.json,"substring(int beginIndex, int endIndex)",substring,java.lang.String,"Returns a string that is a substring of this string. The substring begins at the specified beginIndex and extends to the character at index endIndex - 1. Thus the length of the substring is endIndex-beginIndex.  Examples: <pre> ""hamburger"".substring(4, 8) returns ""urge"" ""smiles"".substring(1, 5) returns ""mile"" </pre>",FreeText,,0
3038,jdk,java.lang.String_goal.json,"subSequence(int beginIndex, int endIndex)",subSequence,java.lang.String,"Returns a character sequence that is a subsequence of this sequence.  An invocation of this method of the form <pre> str.subSequence(begin,&nbsp;end)</pre> behaves in exactly the same way as the invocation <pre> str.substring(begin,&nbsp;end)</pre> @apiNote This method is defined so that the String class can implement the CharSequence interface.",FreeText,,0
3039,jdk,java.lang.String_goal.json,concat(java.lang.String str),concat,java.lang.String,"Concatenates the specified string to the end of this string.  If the length of the argument string is 0, then this String object is returned. Otherwise, a String object is returned that represents a character sequence that is the concatenation of the character sequence represented by this String object and the character sequence represented by the argument string. Examples: <pre> ""cares"".concat(""s"") returns ""caress"" ""to"".concat(""get"").concat(""her"") returns ""together"" </pre>",FreeText,,0
3040,jdk,java.lang.String_goal.json,"replace(char oldChar, char newChar)",replace,java.lang.String,"Returns a string resulting from replacing all occurrences of oldChar in this string with newChar.  If the character oldChar does not occur in the character sequence represented by this String object, then a reference to this String object is returned. Otherwise, a String object is returned that represents a character sequence identical to the character sequence represented by this String object, except that every occurrence of oldChar is replaced by an occurrence of newChar.  Examples: <pre> ""mesquite in your cellar"".replace('e', 'o') returns ""mosquito in your collar"" ""the war of baronets"".replace('r', 'y') returns ""the way of bayonets"" ""sparring with a purple porpoise"".replace('p', 't') returns ""starring with a turtle tortoise"" ""JonL"".replace('q', 'x') returns ""JonL"" (no change) </pre>",FreeText,,0
3041,jdk,java.lang.String_goal.json,matches(java.lang.String regex),matches,java.lang.String,"Tells whether or not this string matches the given regular expression.  An invocation of this method of the form str.matches(regex) yields exactly the same result as the expression <blockquote> java.util.regex.Pattern.java.util.regex.Patternmatches(regex, str) </blockquote>",FreeText,,0
3042,jdk,java.lang.String_goal.json,contains(java.lang.CharSequence s),contains,java.lang.String,Returns true if and only if this string contains the specified sequence of char values.,FreeText,,0
3043,jdk,java.lang.String_goal.json,"replaceFirst(java.lang.String regex, java.lang.String replacement)",replaceFirst,java.lang.String,"Replaces the first substring of this string that matches the given regular expression with the given replacement.  An invocation of this method of the form str.replaceFirst(regex, repl) yields exactly the same result as the expression <blockquote>  java.util.regex.Pattern.java.util.regex.Pattern#compile compile(regex).java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher(str).java.util.regex.Matcher#replaceFirst replaceFirst(repl)  </blockquote> Note that backslashes ({@code \}) and dollar signs ({@code $}) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see java.util.regex.Matcher#replaceFirst. Use java.util.regex.Matcher#quoteReplacement to suppress the special meaning of these characters, if desired.",FreeText,,0
3044,jdk,java.lang.String_goal.json,"replaceAll(java.lang.String regex, java.lang.String replacement)",replaceAll,java.lang.String,"Replaces each substring of this string that matches the given regular expression with the given replacement.  An invocation of this method of the form str.replaceAll(regex, repl) yields exactly the same result as the expression <blockquote>  java.util.regex.Pattern.java.util.regex.Pattern#compile compile(regex).java.util.regex.Pattern#matcher(java.lang.CharSequence) matcher(str).java.util.regex.Matcher#replaceAll replaceAll(repl)  </blockquote> Note that backslashes ({@code \}) and dollar signs ({@code $}) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see java.util.regex.Matcher#replaceAll Matcher.replaceAll. Use java.util.regex.Matcher#quoteReplacement to suppress the special meaning of these characters, if desired.",FreeText,,0
3045,jdk,java.lang.String_goal.json,"replace(java.lang.CharSequence target, java.lang.CharSequence replacement)",replace,java.lang.String,"Replaces each substring of this string that matches the literal target sequence with the specified literal replacement sequence. The replacement proceeds from the beginning of the string to the end, for example, replacing ""aa"" with ""b"" in the string ""aaa"" will result in ""ba"" rather than ""ab"".",FreeText,,0
3046,jdk,java.lang.String_goal.json,"split(java.lang.String regex, int limit)",split,java.lang.String,"Splits this string around matches of the given regular expression.  The array returned by this method contains each substring of this string that is terminated by another substring that matches the given expression or is terminated by the end of the string. The substrings in the array are in the order in which they occur in this string. If the expression does not match any part of the input then the resulting array has just one element, namely this string.  When there is a positive-width match at the beginning of this string then an empty leading substring is included at the beginning of the resulting array. A zero-width match at the beginning however never produces such empty leading substring.  The limit parameter controls the number of times the pattern is applied and therefore affects the length of the resulting array. If the limit n is greater than zero then the pattern will be applied at most n&nbsp;-&nbsp;1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter. If n is non-positive then the pattern will be applied as many times as possible and the array can have any length. If n is zero then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded.  The string ""boo:and:foo"", for example, yields the following results with these parameters: <table cellpadding=1 cellspacing=0 summary=""Split example showing regex, limit, and result""> <tr> <th>Regex</th> <th>Limit</th> <th>Result</th> </tr> <tr><td align=center>:</td> <td align=center>2</td> <td>{ ""boo"", ""and:foo"" }</td></tr> <tr><td align=center>:</td> <td align=center>5</td> <td>{ ""boo"", ""and"", ""foo"" }</td></tr> <tr><td align=center>:</td> <td align=center>-2</td> <td>{ ""boo"", ""and"", ""foo"" }</td></tr> <tr><td align=center>o</td> <td align=center>5</td> <td>{ ""b"", """", "":and:f"", """", """" }</td></tr> <tr><td align=center>o</td> <td align=center>-2</td> <td>{ ""b"", """", "":and:f"", """", """" }</td></tr> <tr><td align=center>o</td> <td align=center>0</td> <td>{ ""b"", """", "":and:f"" }</td></tr> </table>  An invocation of this method of the form str.split(regex,}&nbsp;n{@code ) yields the same result as the expression <blockquote>  java.util.regex.Pattern.java.util.regex.Pattern#compile compile(regex).java.util.regex.Pattern#split(java.lang.CharSequence,int) split(<i>str</i>,&nbsp;n)  </blockquote>",FreeText,,0
3047,jdk,java.lang.String_goal.json,split(java.lang.String regex),split,java.lang.String,"Splits this string around matches of the given regular expression.  This method works as if by invoking the two-argument #split(String, int) split method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.  The string ""boo:and:foo"", for example, yields the following results with these expressions: <table cellpadding=1 cellspacing=0 summary=""Split examples showing regex and result""> <tr> <th>Regex</th> <th>Result</th> </tr> <tr><td align=center>:</td> <td>{ ""boo"", ""and"", ""foo"" }</td></tr> <tr><td align=center>o</td> <td>{ ""b"", """", "":and:f"" }</td></tr> </table>",FreeText,,0
3048,jdk,java.lang.String_goal.json,"join(java.lang.CharSequence delimiter, java.lang.CharSequence... elements)",join,java.lang.String,"Returns a new String composed of copies of the CharSequence elements joined together with a copy of the specified delimiter. For example, <pre>String message = String.join(""-"", ""Java"", ""is"", ""cool""); // message returned is: ""Java-is-cool"" </pre> Note that if an element is null, then ""null"" is added.",FreeText,,0
3049,jdk,java.lang.String_goal.json,"join(java.lang.CharSequence delimiter, java.lang.Iterable<? extends java.lang.CharSequence> elements)",join,java.lang.String,"Returns a new String composed of copies of the CharSequence elements joined together with a copy of the specified delimiter. For example, <pre>List<String> strings = new LinkedList<>(); strings.add(""Java"");strings.add(""is""); strings.add(""cool""); String message = String.join("" "", strings); //message returned is: ""Java is cool"" Set<String> strings = new LinkedHashSet<>(); strings.add(""Java""); strings.add(""is""); strings.add(""very""); strings.add(""cool""); String message = String.join(""-"", strings); //message returned is: ""Java-is-very-cool"" </pre> Note that if an individual element is null, then ""null"" is added.",FreeText,,0
3050,jdk,java.lang.String_goal.json,toLowerCase(java.util.Locale locale),toLowerCase,java.lang.String,"Converts all of the characters in this String to lower case using the rules of the given Locale. Case mapping is based on the Unicode Standard version specified by the java.lang.Character Character class. Since case mappings are not always 1:1 char mappings, the resulting String may be a different length than the original String.  Examples of lowercase mappings are in the following table:  <tr> <th>Language Code of Locale</th> <th>Upper Case</th> <th>Lower Case</th> <th>Description</th> </tr> <tr> <td>tr (Turkish)</td> <td>&#92;u0130</td> <td>&#92;u0069</td> <td>capital letter I with dot above -> small letter i</td> </tr> <tr> <td>tr (Turkish)</td> <td>&#92;u0049</td> <td>&#92;u0131</td> <td>capital letter I -> small letter dotless i </td> </tr> <tr> <td>(all)</td> <td>French Fries</td> <td>french fries</td> <td>lowercased all chars in String</td> </tr> <tr> <td>(all)</td> <td><img src=""doc-files/capiota.gif"" alt=""capiota""><img src=""doc-files/capchi.gif"" alt=""capchi""> <img src=""doc-files/captheta.gif"" alt=""captheta""><img src=""doc-files/capupsil.gif"" alt=""capupsil""> <img src=""doc-files/capsigma.gif"" alt=""capsigma""></td> <td><img src=""doc-files/iota.gif"" alt=""iota""><img src=""doc-files/chi.gif"" alt=""chi""> <img src=""doc-files/theta.gif"" alt=""theta""><img src=""doc-files/upsilon.gif"" alt=""upsilon""> <img src=""doc-files/sigma1.gif"" alt=""sigma""></td> <td>lowercased all chars in String</td> </tr>",FreeText,,0
3051,jdk,java.lang.String_goal.json,toLowerCase(),toLowerCase,java.lang.String,"Converts all of the characters in this String to lower case using the rules of the default locale. This is equivalent to calling toLowerCase(Locale.getDefault()).  Note: This method is locale sensitive, and may produce unexpected results if used for strings that are intended to be interpreted locale independently. Examples are programming language identifiers, protocol keys, and HTML tags. For instance, ""TITLE"".toLowerCase() in a Turkish locale returns ""t\u005Cu0131tle"", where '\u005Cu0131' is the LATIN SMALL LETTER DOTLESS I character. To obtain correct results for locale insensitive strings, use toLowerCase(Locale.ROOT).",FreeText,methodResultID.equals[receiverObjectClone.toLowerCase(java.util.Locale.getDefault());],1
3052,jdk,java.lang.String_goal.json,toUpperCase(java.util.Locale locale),toUpperCase,java.lang.String,"Converts all of the characters in this String to upper case using the rules of the given Locale. Case mapping is based on the Unicode Standard version specified by the java.lang.Character Character class. Since case mappings are not always 1:1 char mappings, the resulting String may be a different length than the original String.  Examples of locale-sensitive and 1:M case mappings are in the following table.  <tr> <th>Language Code of Locale</th> <th>Lower Case</th> <th>Upper Case</th> <th>Description</th> </tr> <tr> <td>tr (Turkish)</td> <td>&#92;u0069</td> <td>&#92;u0130</td> <td>small letter i -> capital letter I with dot above</td> </tr> <tr> <td>tr (Turkish)</td> <td>&#92;u0131</td> <td>&#92;u0049</td> <td>small letter dotless i -> capital letter I</td> </tr> <tr> <td>(all)</td> <td>&#92;u00df</td> <td>&#92;u0053 &#92;u0053</td> <td>small letter sharp s -> two letters: SS</td> </tr> <tr> <td>(all)</td> <td>Fahrvergn&uuml;gen</td> <td>FAHRVERGN&Uuml;GEN</td> <td></td> </tr>",FreeText,,0
3053,jdk,java.lang.String_goal.json,toUpperCase(),toUpperCase,java.lang.String,"Converts all of the characters in this String to upper case using the rules of the default locale. This method is equivalent to toUpperCase(Locale.getDefault()).  Note: This method is locale sensitive, and may produce unexpected results if used for strings that are intended to be interpreted locale independently. Examples are programming language identifiers, protocol keys, and HTML tags. For instance, ""title"".toUpperCase() in a Turkish locale returns ""T\u005Cu0130TLE"", where '\u005Cu0130' is the LATIN CAPITAL LETTER I WITH DOT ABOVE character. To obtain correct results for locale insensitive strings, use toUpperCase(Locale.ROOT).",FreeText,methodResultID.equals[receiverObjectClone.toUpperCase(java.util.Locale.getDefault());],1
3054,jdk,java.lang.String_goal.json,trim(),trim,java.lang.String,"Returns a string whose value is this string, with any leading and trailing whitespace removed.  If this String object represents an empty character sequence, or the first and last characters of character sequence represented by this String object both have codes greater than '\u005Cu0020' (the space character), then a reference to this String object is returned.  Otherwise, if there is no character with a code greater than '\u005Cu0020' in the string, then a String object representing an empty string is returned.  Otherwise, let k be the index of the first character in the string whose code is greater than '\u005Cu0020', and let m be the index of the last character in the string whose code is greater than '\u005Cu0020'. A String object is returned, representing the substring of this string that begins with the character at index k and ends with the character at index m-that is, the result of this.substring(k, m + 1).  This method may be used to trim whitespace (as defined above) from the beginning and end of a string.",FreeText,,0
3055,jdk,java.lang.String_goal.json,toString(),toString,java.lang.String,This object (which is already a string!) is itself returned.,FreeText,,0
3056,jdk,java.lang.String_goal.json,toCharArray(),toCharArray,java.lang.String,Converts this string to a new character array.,FreeText,,0
3057,jdk,java.lang.String_goal.json,"format(java.lang.String format, java.lang.Object... args)",format,java.lang.String,Returns a formatted string using the specified format string and arguments.  The locale always used is the one returned by java.util.Locale#getDefault() Locale.getDefault().,FreeText,,0
3058,jdk,java.lang.String_goal.json,"format(java.util.Locale l, java.lang.String format, java.lang.Object... args)",format,java.lang.String,"Returns a formatted string using the specified locale, format string, and arguments.",FreeText,,0
3059,jdk,java.lang.String_goal.json,valueOf(java.lang.Object obj),valueOf,java.lang.String,Returns the string representation of the Object argument.,FreeText,,0
3060,jdk,java.lang.String_goal.json,valueOf(char[] data),valueOf,java.lang.String,Returns the string representation of the char array argument. The contents of the character array are copied; subsequent modification of the character array does not affect the returned string.,FreeText,,0
3061,jdk,java.lang.String_goal.json,"valueOf(char[] data, int offset, int count)",valueOf,java.lang.String,Returns the string representation of a specific subarray of the char array argument.  The offset argument is the index of the first character of the subarray. The count argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the returned string.,FreeText,,0
3062,jdk,java.lang.String_goal.json,"copyValueOf(char[] data, int offset, int count)",copyValueOf,java.lang.String,"Equivalent to #valueOf(char[], int, int).",FreeText,"methodResultID.equals(java.lang.String.valueOf(args[0],args[1],args[1]))",1
3063,jdk,java.lang.String_goal.json,copyValueOf(char[] data),copyValueOf,java.lang.String,Equivalent to #valueOf(char[]).,FreeText,methodResultID.equals(java.lang.String.valueOf(args[0])),1
3064,jdk,java.lang.String_goal.json,valueOf(boolean b),valueOf,java.lang.String,Returns the string representation of the boolean argument.,FreeText,,0
3065,jdk,java.lang.String_goal.json,valueOf(char c),valueOf,java.lang.String,Returns the string representation of the char argument.,FreeText,,0
3066,jdk,java.lang.String_goal.json,valueOf(int i),valueOf,java.lang.String,Returns the string representation of the int argument.  The representation is exactly the one returned by the Integer.toString method of one argument.,FreeText,,0
3067,jdk,java.lang.String_goal.json,valueOf(long l),valueOf,java.lang.String,Returns the string representation of the long argument.  The representation is exactly the one returned by the Long.toString method of one argument.,FreeText,,0
3068,jdk,java.lang.String_goal.json,valueOf(float f),valueOf,java.lang.String,Returns the string representation of the float argument.  The representation is exactly the one returned by the Float.toString method of one argument.,FreeText,,0
3069,jdk,java.lang.String_goal.json,valueOf(double d),valueOf,java.lang.String,Returns the string representation of the double argument.  The representation is exactly the one returned by the Double.toString method of one argument.,FreeText,,0
3070,jdk,java.lang.String_goal.json,intern(),intern,java.lang.String,"Returns a canonical representation for the string object.  A pool of strings, initially empty, is maintained privately by the class String.  When the intern method is invoked, if the pool already contains a string equal to this String object as determined by the #equals(Object) method, then the string from the pool is returned. Otherwise, this String object is added to the pool and a reference to this String object is returned.  It follows that for any two strings s and t, s.intern() == t.intern() is true if and only if s.equals(t) is true.  All literal strings and string-valued constant expressions are interned. String literals are defined in section 3.10.5 of the The Java&trade; Language Specification.",FreeText,,0
3071,jdk,java.lang.System_goal.json,setIn(java.io.InputStream in),setIn,java.lang.System,"Reassigns the ""standard"" input stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" input stream.",FreeText,,0
3072,jdk,java.lang.System_goal.json,setOut(java.io.PrintStream out),setOut,java.lang.System,"Reassigns the ""standard"" output stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" output stream.",FreeText,,0
3073,jdk,java.lang.System_goal.json,setErr(java.io.PrintStream err),setErr,java.lang.System,"Reassigns the ""standard"" error output stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" error output stream.",FreeText,,0
3074,jdk,java.lang.System_goal.json,console(),console,java.lang.System,"Returns the unique java.io.Console Console object associated with the current Java virtual machine, if any.",FreeText,,0
3075,jdk,java.lang.System_goal.json,inheritedChannel(),inheritedChannel,java.lang.System,"Returns the channel inherited from the entity that created this Java virtual machine.  This method returns the channel obtained by invoking the java.nio.channels.spi.SelectorProvider#inheritedChannel inheritedChannel method of the system-wide default java.nio.channels.spi.SelectorProvider object.  <p> In addition to the network-oriented channels described in java.nio.channels.spi.SelectorProvider#inheritedChannel inheritedChannel, this method may return other kinds of channels in the future.",FreeText,,0
3076,jdk,java.lang.System_goal.json,setSecurityManager(java.lang.SecurityManager s),setSecurityManager,java.lang.System,"Sets the System security.  If there is a security manager already installed, this method first calls the security manager's checkPermission method with a RuntimePermission(""setSecurityManager"") permission to ensure it's ok to replace the existing security manager. This may result in throwing a SecurityException.  Otherwise, the argument is established as the current security manager. If the argument is null and no security manager has been established, then no action is taken and the method simply returns.",FreeText,,0
3077,jdk,java.lang.System_goal.json,getSecurityManager(),getSecurityManager,java.lang.System,Gets the system security interface.,FreeText,,0
3078,jdk,java.lang.System_goal.json,currentTimeMillis(),currentTimeMillis,java.lang.System,"Returns the current time in milliseconds. Note that while the unit of time of the return value is a millisecond, the granularity of the value depends on the underlying operating system and may be larger. For example, many operating systems measure time in units of tens of milliseconds.  See the description of the class Date for a discussion of slight discrepancies that may arise between ""computer time"" and coordinated universal time (UTC).",FreeText,,0
3079,jdk,java.lang.System_goal.json,nanoTime(),nanoTime,java.lang.System,"Returns the current value of the running Java Virtual Machine's high-resolution time source, in nanoseconds. This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary origin time (perhaps in the future, so values may be negative). The same origin is used by all invocations of this method in an instance of a Java virtual machine; other virtual machine instances are likely to use a different origin. This method provides nanosecond precision, but not necessarily nanosecond resolution (that is, how frequently the value changes) - no guarantees are made except that the resolution is at least as good as that of #currentTimeMillis(). Differences in successive calls that span greater than approximately 292 years (263 nanoseconds) will not correctly compute elapsed time due to numerical overflow. The values returned by this method become meaningful only when the difference between two such values, obtained within the same instance of a Java virtual machine, is computed.  For example, to measure how long some code takes to execute:  long startTime = System.nanoTime(); // ... the code being measured ... long estimatedTime = System.nanoTime() - startTime; To compare two nanoTime values  long t0 = System.nanoTime(); ... long t1 = System.nanoTime(); one should use t1 - t0 < 0, not t1 < t0, because of the possibility of numerical overflow.",FreeText,,0
3080,jdk,java.lang.System_goal.json,"arraycopy(java.lang.Object src, int srcPos, java.lang.Object dest, int destPos, int length)",arraycopy,java.lang.System,"Copies an array from the specified source array, beginning at the specified position, to the specified position of the destination array. A subsequence of array components are copied from the source array referenced by src to the destination array referenced by dest. The number of components copied is equal to the length argument. The components at positions srcPos through srcPos+length-1 in the source array are copied into positions destPos through destPos+length-1, respectively, of the destination array.  If the src and dest arguments refer to the same array object, then the copying is performed as if the components at positions srcPos through srcPos+length-1 were first copied to a temporary array with length components and then the contents of the temporary array were copied into positions destPos through destPos+length-1 of the destination array.  If dest is null, then a NullPointerException is thrown.  If src is null, then a NullPointerException is thrown and the destination array is not modified.  Otherwise, if any of the following is true, an ArrayStoreException is thrown and the destination is not modified:  <li>The src argument refers to an object that is not an array. <li>The dest argument refers to an object that is not an array. <li>The src argument and dest argument refer to arrays whose component types are different primitive types. <li>The src argument refers to an array with a primitive component type and the dest argument refers to an array with a reference component type. <li>The src argument refers to an array with a reference component type and the dest argument refers to an array with a primitive component type.   Otherwise, if any of the following is true, an IndexOutOfBoundsException is thrown and the destination is not modified:  <li>The srcPos argument is negative. <li>The destPos argument is negative. <li>The length argument is negative. <li>srcPos+length is greater than src.length, the length of the source array. <li>destPos+length is greater than dest.length, the length of the destination array.   Otherwise, if any actual component of the source array from position srcPos through srcPos+length-1 cannot be converted to the component type of the destination array by assignment conversion, an ArrayStoreException is thrown. In this case, let k be the smallest nonnegative integer less than length such that src[srcPos+k] cannot be converted to the component type of the destination array; when the exception is thrown, source array components from positions srcPos through srcPos+k-1 will already have been copied to destination array positions destPos through destPos+<i>k</I>-1 and no other positions of the destination array will have been modified. (Because of the restrictions already itemized, this paragraph effectively applies only to the situation where both arrays have component types that are reference types.)",FreeText,,0
3081,jdk,java.lang.System_goal.json,identityHashCode(java.lang.Object x),identityHashCode,java.lang.System,"Returns the same hash code for the given object as would be returned by the default method hashCode(), whether or not the given object's class overrides hashCode(). The hash code for the null reference is zero.",FreeText,methodResultID==(receiverObjectClone.hashCode()),1
3082,jdk,java.lang.System_goal.json,getProperties(),getProperties,java.lang.System,"Determines the current system properties.  First, if there is a security manager, its checkPropertiesAccess method is called with no arguments. This may result in a security exception.  The current set of system properties for use by the #getProperty(String) method is returned as a Properties object. If there is no current set of system properties, a set of system properties is first created and initialized. This set of system properties always includes values for the following keys:  <tr><th>Key</th> <th>Description of Associated Value</th></tr> <tr><td>java.version</td> <td>Java Runtime Environment version</td></tr> <tr><td>java.vendor</td> <td>Java Runtime Environment vendor</td></tr> <tr><td>java.vendor.url</td> <td>Java vendor URL</td></tr> <tr><td>java.home</td> <td>Java installation directory</td></tr> <tr><td>java.vm.specification.version</td> <td>Java Virtual Machine specification version</td></tr> <tr><td>java.vm.specification.vendor</td> <td>Java Virtual Machine specification vendor</td></tr> <tr><td>java.vm.specification.name</td> <td>Java Virtual Machine specification name</td></tr> <tr><td>java.vm.version</td> <td>Java Virtual Machine implementation version</td></tr> <tr><td>java.vm.vendor</td> <td>Java Virtual Machine implementation vendor</td></tr> <tr><td>java.vm.name</td> <td>Java Virtual Machine implementation name</td></tr> <tr><td>java.specification.version</td> <td>Java Runtime Environment specification version</td></tr> <tr><td>java.specification.vendor</td> <td>Java Runtime Environment specification vendor</td></tr> <tr><td>java.specification.name</td> <td>Java Runtime Environment specification name</td></tr> <tr><td>java.class.version</td> <td>Java class format version number</td></tr> <tr><td>java.class.path</td> <td>Java class path</td></tr> <tr><td>java.library.path</td> <td>List of paths to search when loading libraries</td></tr> <tr><td>java.io.tmpdir</td> <td>Default temp file path</td></tr> <tr><td>java.compiler</td> <td>Name of JIT compiler to use</td></tr> <tr><td>java.ext.dirs</td> <td>Path of extension directory or directories</td></tr> <tr><td>os.name</td> <td>Operating system name</td></tr> <tr><td>os.arch</td> <td>Operating system architecture</td></tr> <tr><td>os.version</td> <td>Operating system version</td></tr> <tr><td>file.separator</td> <td>File separator (""/"" on UNIX)</td></tr> <tr><td>path.separator</td> <td>Path separator ("":"" on UNIX)</td></tr> <tr><td>line.separator</td> <td>Line separator (""\n"" on UNIX)</td></tr> <tr><td>user.name</td> <td>User's account name</td></tr> <tr><td>user.home</td> <td>User's home directory</td></tr> <tr><td>user.dir</td> <td>User's current working directory</td></tr>   Multiple paths in a system property value are separated by the path separator character of the platform.  Note that even if the security manager does not permit the getProperties operation, it may choose to permit the #getProperty(String) operation.",FreeText,,0
3083,jdk,java.lang.System_goal.json,lineSeparator(),lineSeparator,java.lang.System,"Returns the system-dependent line separator string. It always returns the same value - the initial value of the #getProperty(String) system property line.separator. On UNIX systems, it returns ""\n""; on Microsoft Windows systems it returns ""\r\n"".",FreeText,,0
3084,jdk,java.lang.System_goal.json,setProperties(java.util.Properties props),setProperties,java.lang.System,"Sets the system properties to the Properties argument.  First, if there is a security manager, its checkPropertiesAccess method is called with no arguments. This may result in a security exception.  The argument becomes the current set of system properties for use by the #getProperty(String) method. If the argument is null, then the current set of system properties is forgotten.",FreeText,,0
3085,jdk,java.lang.System_goal.json,getProperty(java.lang.String key),getProperty,java.lang.System,"Gets the system property indicated by the specified key.  First, if there is a security manager, its checkPropertyAccess method is called with the key as its argument. This may result in a SecurityException.  If there is no current set of system properties, a set of system properties is first created and initialized in the same manner as for the getProperties method.",FreeText,,0
3086,jdk,java.lang.System_goal.json,"getProperty(java.lang.String key, java.lang.String def)",getProperty,java.lang.System,"Gets the system property indicated by the specified key.  First, if there is a security manager, its checkPropertyAccess method is called with the key as its argument.  If there is no current set of system properties, a set of system properties is first created and initialized in the same manner as for the getProperties method.",FreeText,,0
3087,jdk,java.lang.System_goal.json,"setProperty(java.lang.String key, java.lang.String value)",setProperty,java.lang.System,"Sets the system property indicated by the specified key.  First, if a security manager exists, its SecurityManager.checkPermission method is called with a PropertyPermission(key, ""write"") permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is set to the given value.",FreeText,,0
3088,jdk,java.lang.System_goal.json,clearProperty(java.lang.String key),clearProperty,java.lang.System,"Removes the system property indicated by the specified key.  First, if a security manager exists, its SecurityManager.checkPermission method is called with a PropertyPermission(key, ""write"") permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed.",FreeText,,0
3089,jdk,java.lang.System_goal.json,getenv(java.lang.String name),getenv,java.lang.System,"Gets the value of the specified environment variable. An environment variable is a system-dependent external named value. If a security manager exists, its SecurityManager#checkPermission checkPermission method is called with a RuntimePermission(""getenv.""+name) permission. This may result in a SecurityException being thrown. If no exception is thrown the value of the variable name is returned. <i>System properties</i> and <i>environment variables</i> are both conceptually mappings between names and values. Both mechanisms can be used to pass user-defined information to a Java process. Environment variables have a more global effect, because they are visible to all descendants of the process which defines them, not just the immediate Java subprocess. They can have subtly different semantics, such as case insensitivity, on different operating systems. For these reasons, environment variables are more likely to have unintended side effects. It is best to use system properties where possible. Environment variables should be used when a global effect is desired, or when an external system interface requires an environment variable (such as PATH). On UNIX systems the alphabetic case of name is typically significant, while on Microsoft Windows systems it is typically not. For example, the expression System.getenv(""FOO"").equals(System.getenv(""foo"")) is likely to be true on Microsoft Windows.",FreeText,,0
3090,jdk,java.lang.System_goal.json,getenv(),getenv,java.lang.System,"Returns an unmodifiable string map view of the current system environment. The environment is a system-dependent mapping from names to values which is passed from parent to child processes. If the system does not support environment variables, an empty map is returned. The returned map will never contain null keys or values. Attempting to query the presence of a null key or value will throw a NullPointerException. Attempting to query the presence of a key or value which is not of type String will throw a ClassCastException. The returned map and its collection views may not obey the general contract of the Object#equals and Object#hashCode methods. The returned map is typically case-sensitive on all platforms. If a security manager exists, its SecurityManager#checkPermission checkPermission method is called with a RuntimePermission(""getenv.*"") permission. This may result in a SecurityException being thrown. When passing information to a Java subprocess, system properties are generally preferred over environment variables.",FreeText,,0
3091,jdk,java.lang.System_goal.json,exit(int status),exit,java.lang.System,"Terminates the currently running Java Virtual Machine. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination.  This method calls the exit method in class Runtime. This method never returns normally.  The call System.exit(n) is effectively equivalent to the call: <pre> Runtime.getRuntime().exit(n) </pre>",FreeText,,0
3092,jdk,java.lang.System_goal.json,gc(),gc,java.lang.System,"Runs the garbage collector.  Calling the gc method suggests that the Java Virtual Machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the Java Virtual Machine has made a best effort to reclaim space from all discarded objects.  The call System.gc() is effectively equivalent to the call: <pre> Runtime.getRuntime().gc() </pre> @see java.lang.Runtime#gc()",FreeText,,0
3093,jdk,java.lang.System_goal.json,runFinalization(),runFinalization,java.lang.System,"Runs the finalization methods of any objects pending finalization.  Calling this method suggests that the Java Virtual Machine expend effort toward running the finalize methods of objects that have been found to be discarded but whose finalize methods have not yet been run. When control returns from the method call, the Java Virtual Machine has made a best effort to complete all outstanding finalizations.  The call System.runFinalization() is effectively equivalent to the call: <pre> Runtime.getRuntime().runFinalization() </pre> @see java.lang.Runtime#runFinalization()",FreeText,,0
3094,jdk,java.lang.System_goal.json,runFinalizersOnExit(boolean value),runFinalizersOnExit,java.lang.System,"Enable or disable finalization on exit; doing so specifies that the finalizers of all objects that have finalizers that have not yet been automatically invoked are to be run before the Java runtime exits. By default, finalization on exit is disabled. If there is a security manager, its checkExit method is first called with 0 as its argument to ensure the exit is allowed. This could result in a SecurityException. @deprecated This method is inherently unsafe. It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic behavior or deadlock.",FreeText,,0
3095,jdk,java.lang.System_goal.json,load(java.lang.String filename),load,java.lang.System,"Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.  The call System.load(name) is effectively equivalent to the call: <pre> Runtime.getRuntime().load(name) </pre>",FreeText,,0
3096,jdk,java.lang.System_goal.json,loadLibrary(java.lang.String libname),loadLibrary,java.lang.System,"Loads the native library specified by the libname argument. The libname argument must not contain any platform specific prefix, file extension or path. If a native library called libname is statically linked with the VM, then the JNI_OnLoad_libname function exported by the library is invoked. See the JNI Specification for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.  The call System.loadLibrary(name) is effectively equivalent to the call <pre> Runtime.getRuntime().loadLibrary(name) </pre>",FreeText,,0
3097,jdk,java.lang.System_goal.json,mapLibraryName(java.lang.String libname),mapLibraryName,java.lang.System,Maps a library name into a platform-specific string representing a native library.,FreeText,,0
3098,jdk,java.time.chrono.IsoChronology_goal.json,getId(),getId,java.time.chrono.IsoChronology,Gets the ID of the chronology - 'ISO'.  The ID uniquely identifies the Chronology. It can be used to lookup the Chronology using #of(String).,FreeText,,0
3099,jdk,java.time.chrono.IsoChronology_goal.json,getCalendarType(),getCalendarType,java.time.chrono.IsoChronology,"Gets the calendar type of the underlying calendar system - 'iso8601'.  The calendar type is an identifier defined by the Unicode Locale Data Markup Language (LDML) specification. It can be used to lookup the Chronology using #of(String). It can also be used as part of a locale, accessible via Locale#getUnicodeLocaleType(String) with the key 'ca'.",FreeText,,0
3100,jdk,java.time.chrono.IsoChronology_goal.json,"date(java.time.chrono.Era era, int yearOfEra, int month, int dayOfMonth)",date,java.time.chrono.IsoChronology,"Obtains an ISO local date from the era, year-of-era, month-of-year and day-of-month fields.",FreeText,,0
3101,jdk,java.time.chrono.IsoChronology_goal.json,"date(int prolepticYear, int month, int dayOfMonth)",date,java.time.chrono.IsoChronology,"Obtains an ISO local date from the proleptic-year, month-of-year and day-of-month fields.  This is equivalent to LocalDate#of(int, int, int).",FreeText,"methodResultID.equals(java.time.LocalDate.of(args[0],args[0],args[0]))",1
3102,jdk,java.time.chrono.IsoChronology_goal.json,"dateYearDay(java.time.chrono.Era era, int yearOfEra, int dayOfYear)",dateYearDay,java.time.chrono.IsoChronology,"Obtains an ISO local date from the era, year-of-era and day-of-year fields.",FreeText,,0
3103,jdk,java.time.chrono.IsoChronology_goal.json,"dateYearDay(int prolepticYear, int dayOfYear)",dateYearDay,java.time.chrono.IsoChronology,"Obtains an ISO local date from the proleptic-year and day-of-year fields.  This is equivalent to LocalDate#ofYearDay(int, int).",FreeText,"methodResultID.equals(java.time.LocalDate.ofYearDay(args[0],args[0]))",1
3104,jdk,java.time.chrono.IsoChronology_goal.json,dateEpochDay(long epochDay),dateEpochDay,java.time.chrono.IsoChronology,Obtains an ISO local date from the epoch-day.  This is equivalent to LocalDate#ofEpochDay(long).,FreeText,methodResultID.equals(java.time.LocalDate.ofEpochDay(args[0])),1
3105,jdk,java.time.chrono.IsoChronology_goal.json,date(java.time.temporal.TemporalAccessor temporal),date,java.time.chrono.IsoChronology,Obtains an ISO local date from another date-time object.  This is equivalent to LocalDate#from(TemporalAccessor).,FreeText,methodResultID.equals(java.time.LocalDate.from(args[0])),1
3106,jdk,java.time.chrono.IsoChronology_goal.json,localDateTime(java.time.temporal.TemporalAccessor temporal),localDateTime,java.time.chrono.IsoChronology,Obtains an ISO local date-time from another date-time object.  This is equivalent to LocalDateTime#from(TemporalAccessor).,FreeText,methodResultID.equals(java.time.LocalDateTime.from(args[0])),1
3107,jdk,java.time.chrono.IsoChronology_goal.json,zonedDateTime(java.time.temporal.TemporalAccessor temporal),zonedDateTime,java.time.chrono.IsoChronology,Obtains an ISO zoned date-time from another date-time object.  This is equivalent to ZonedDateTime#from(TemporalAccessor).,FreeText,methodResultID.equals(java.time.ZonedDateTime.from(args[0])),1
3108,jdk,java.time.chrono.IsoChronology_goal.json,"zonedDateTime(java.time.Instant instant, java.time.ZoneId zone)",zonedDateTime,java.time.chrono.IsoChronology,"Obtains an ISO zoned date-time in this chronology from an Instant.  This is equivalent to ZonedDateTime#ofInstant(Instant, ZoneId).",FreeText,"methodResultID.equals(java.time.ZonedDateTime.ofInstant(args[0],args[1]))",1
3109,jdk,java.time.chrono.IsoChronology_goal.json,dateNow(),dateNow,java.time.chrono.IsoChronology,Obtains the current ISO local date from the system clock in the default time-zone.  This will query the Clock#systemDefaultZone() system clock in the default time-zone to obtain the current date.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3110,jdk,java.time.chrono.IsoChronology_goal.json,dateNow(java.time.ZoneId zone),dateNow,java.time.chrono.IsoChronology,Obtains the current ISO local date from the system clock in the specified time-zone.  This will query the Clock#system(ZoneId) system clock to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3111,jdk,java.time.chrono.IsoChronology_goal.json,dateNow(java.time.Clock clock),dateNow,java.time.chrono.IsoChronology,Obtains the current ISO local date from the specified clock.  This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3112,jdk,java.time.chrono.IsoChronology_goal.json,isLeapYear(long prolepticYear),isLeapYear,java.time.chrono.IsoChronology,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules.  This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.  For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.  The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",FreeText,,0
3113,jdk,java.time.chrono.IsoChronology_goal.json,"prolepticYear(java.time.chrono.Era era, int yearOfEra)",prolepticYear,java.time.chrono.IsoChronology,,FreeText,,0
3114,jdk,java.time.chrono.IsoChronology_goal.json,eraOf(int eraValue),eraOf,java.time.chrono.IsoChronology,,FreeText,,0
3115,jdk,java.time.chrono.IsoChronology_goal.json,eras(),eras,java.time.chrono.IsoChronology,,FreeText,,0
3116,jdk,java.time.chrono.IsoChronology_goal.json,"resolveDate(java.util.Map<java.time.temporal.TemporalField, java.lang.Long> fieldValues, java.time.format.ResolverStyle resolverStyle)",resolveDate,java.time.chrono.IsoChronology,"Resolves parsed ChronoField values into a date during parsing.  Most TemporalField implementations are resolved using the resolve method on the field. By contrast, the ChronoField class defines fields that only have meaning relative to the chronology. As such, ChronoField date fields are resolved here in the context of a specific chronology.  ChronoField instances on the ISO calendar system are resolved as follows.  <li>EPOCH_DAY - If present, this is converted to a LocalDate and all other date fields are then cross-checked against the date. <li>PROLEPTIC_MONTH - If present, then it is split into the YEAR and MONTH_OF_YEAR. If the mode is strict or smart then the field is validated. <li>YEAR_OF_ERA and ERA - If both are present, then they are combined to form a YEAR. In lenient mode, the YEAR_OF_ERA range is not validated, in smart and strict mode it is. The ERA is validated for range in all three modes. If only the YEAR_OF_ERA is present, and the mode is smart or lenient, then the current era (CE/AD) is assumed. In strict mode, no era is assumed and the YEAR_OF_ERA is left untouched. If only the ERA is present, then it is left untouched. <li>YEAR, MONTH_OF_YEAR and DAY_OF_MONTH - If all three are present, then they are combined to form a LocalDate. In all three modes, the YEAR is validated. If the mode is smart or strict, then the month and day are validated, with the day validated from 1 to 31. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in months, then the difference in days. If the mode is smart, and the day-of-month is greater than the maximum for the year-month, then the day-of-month is adjusted to the last day-of-month. If the mode is strict, then the three fields must form a valid date. <li>YEAR and DAY_OF_YEAR - If both are present, then they are combined to form a LocalDate. In all three modes, the YEAR is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in days. If the mode is smart or strict, then the two fields must form a valid date. <li>YEAR, MONTH_OF_YEAR, ALIGNED_WEEK_OF_MONTH and ALIGNED_DAY_OF_WEEK_IN_MONTH - If all four are present, then they are combined to form a LocalDate. In all three modes, the YEAR is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in months, then the difference in weeks, then in days. If the mode is smart or strict, then the all four fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year and month, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the month. <li>YEAR, MONTH_OF_YEAR, ALIGNED_WEEK_OF_MONTH and DAY_OF_WEEK - If all four are present, then they are combined to form a LocalDate. The approach is the same as described above for years, months and weeks in ALIGNED_DAY_OF_WEEK_IN_MONTH. The day-of-week is adjusted as the next or same matching day-of-week once the years, months and weeks have been handled. <li>YEAR, ALIGNED_WEEK_OF_YEAR and ALIGNED_DAY_OF_WEEK_IN_YEAR - If all three are present, then they are combined to form a LocalDate. In all three modes, the YEAR is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in weeks, then in days. If the mode is smart or strict, then the all three fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the year. <li>YEAR, ALIGNED_WEEK_OF_YEAR and DAY_OF_WEEK - If all three are present, then they are combined to form a LocalDate. The approach is the same as described above for years and weeks in ALIGNED_DAY_OF_WEEK_IN_YEAR. The day-of-week is adjusted as the next or same matching day-of-week once the years and weeks have been handled.",FreeText,,0
3117,jdk,java.time.chrono.IsoChronology_goal.json,"resolveProlepticMonth(java.util.Map<java.time.temporal.TemporalField, java.lang.Long> fieldValues, java.time.format.ResolverStyle resolverStyle)",resolveProlepticMonth,java.time.chrono.IsoChronology,,FreeText,,0
3118,jdk,java.time.chrono.IsoChronology_goal.json,"resolveYearOfEra(java.util.Map<java.time.temporal.TemporalField, java.lang.Long> fieldValues, java.time.format.ResolverStyle resolverStyle)",resolveYearOfEra,java.time.chrono.IsoChronology,,FreeText,,0
3119,jdk,java.time.chrono.IsoChronology_goal.json,"resolveYMD(java.util.Map<java.time.temporal.TemporalField, java.lang.Long> fieldValues, java.time.format.ResolverStyle resolverStyle)",resolveYMD,java.time.chrono.IsoChronology,,FreeText,,0
3120,jdk,java.time.chrono.IsoChronology_goal.json,range(java.time.temporal.ChronoField field),range,java.time.chrono.IsoChronology,,FreeText,,0
3121,jdk,java.time.chrono.IsoChronology_goal.json,"period(int years, int months, int days)",period,java.time.chrono.IsoChronology,"Obtains a period for this chronology based on years, months and days.  This returns a period tied to the ISO chronology using the specified years, months and days. See Period for further details.",FreeText,,0
3122,jdk,java.time.chrono.IsoChronology_goal.json,writeReplace(),writeReplace,java.time.chrono.IsoChronology,Writes the Chronology using a dedicated serialized form. @serialData  out.writeByte(1); // identifies a Chronology out.writeUTF(getId());,FreeText,,0
3123,jdk,java.time.Clock_goal.json,java.time.Clock(),java.time.Clock,java.time.Clock,Constructor accessible by subclasses.,FreeText,,0
3124,jdk,java.time.Clock_goal.json,systemUTC(),systemUTC,java.time.Clock,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the UTC time-zone.  This clock, rather than #systemDefaultZone(), should be used when you need the current instant without the date or time.  This clock is based on the best available system clock. This may use System#currentTimeMillis(), or a higher resolution clock if one is available.  Conversion from instant to date or time uses the ZoneOffset#UTC UTC time-zone.  The returned implementation is immutable, thread-safe and Serializable. It is equivalent to system(ZoneOffset.UTC).",FreeText,,0
3125,jdk,java.time.Clock_goal.json,systemDefaultZone(),systemDefaultZone,java.time.Clock,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the default time-zone.  This clock is based on the best available system clock. This may use System#currentTimeMillis(), or a higher resolution clock if one is available.  Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The #systemUTC() UTC clock should be used when you need the current instant without the date or time.  The returned implementation is immutable, thread-safe and Serializable. It is equivalent to system(ZoneId.systemDefault()).",FreeText,methodResultID.equals( java.time.Clock.system(java.time.ZoneId.systemDefault()) ),1
3126,jdk,java.time.Clock_goal.json,system(java.time.ZoneId zone),system,java.time.Clock,"Obtains a clock that returns the current instant using best available system clock.  This clock is based on the best available system clock. This may use System#currentTimeMillis(), or a higher resolution clock if one is available.  Conversion from instant to date or time uses the specified time-zone.  The returned implementation is immutable, thread-safe and Serializable.",FreeText,,0
3127,jdk,java.time.Clock_goal.json,tickSeconds(java.time.ZoneId zone),tickSeconds,java.time.Clock,"Obtains a clock that returns the current instant ticking in whole seconds using best available system clock.  This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using #system(ZoneId).  Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the second observed via this clock will be later than that observed directly via the underlying clock.  The returned implementation is immutable, thread-safe and Serializable. It is equivalent to tick(system(zone), Duration.ofSeconds(1)).",FreeText,methodResultID.equals(java.time.Clock.system(args[0])),1
3128,jdk,java.time.Clock_goal.json,tickMinutes(java.time.ZoneId zone),tickMinutes,java.time.Clock,"Obtains a clock that returns the current instant ticking in whole minutes using best available system clock.  This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using #system(ZoneId).  Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the minute observed via this clock will be later than that observed directly via the underlying clock.  The returned implementation is immutable, thread-safe and Serializable. It is equivalent to tick(system(zone), Duration.ofMinutes(1)).",FreeText,methodResultID.equals(java.time.Clock.system(args[0])),1
3129,jdk,java.time.Clock_goal.json,"tick(java.time.Clock baseClock, java.time.Duration tickDuration)",tick,java.time.Clock,"Obtains a clock that returns instants from the specified clock truncated to the nearest occurrence of the specified duration.  This clock will only tick as per the specified duration. Thus, if the duration is half a second, the clock will return instants truncated to the half second.  The tick duration must be positive. If it has a part smaller than a whole millisecond, then the whole duration must divide into one second without leaving a remainder. All normal tick durations will match these criteria, including any multiple of hours, minutes, seconds and milliseconds, and sensible nanosecond durations, such as 20ns, 250,000ns and 500,000ns.  A duration of zero or one nanosecond would have no truncation effect. Passing one of these will return the underlying clock.  Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the requested duration observed via this clock will be later than that observed directly via the underlying clock.  The returned implementation is immutable, thread-safe and Serializable providing that the base clock is.",FreeText,,0
3130,jdk,java.time.Clock_goal.json,"fixed(java.time.Instant fixedInstant, java.time.ZoneId zone)",fixed,java.time.Clock,"Obtains a clock that always returns the same instant.  This clock simply returns the specified instant. As such, it is not a clock in the conventional sense. The main use case for this is in testing, where the fixed clock ensures tests are not dependent on the current clock.  The returned implementation is immutable, thread-safe and Serializable.",FreeText,,0
3131,jdk,java.time.Clock_goal.json,"offset(java.time.Clock baseClock, java.time.Duration offsetDuration)",offset,java.time.Clock,"Obtains a clock that returns instants from the specified clock with the specified duration added  This clock wraps another clock, returning instants that are later by the specified duration. If the duration is negative, the instants will be earlier than the current date and time. The main use case for this is to simulate running in the future or in the past.  A duration of zero would have no offsetting effect. Passing zero will return the underlying clock.  The returned implementation is immutable, thread-safe and Serializable providing that the base clock is.",FreeText,,0
3132,jdk,java.time.Clock_goal.json,getZone(),getZone,java.time.Clock,Gets the time-zone being used to create dates and times.  A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns the time-zone used.,FreeText,,0
3133,jdk,java.time.Clock_goal.json,withZone(java.time.ZoneId zone),withZone,java.time.Clock,Returns a copy of this clock with a different time-zone.  A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns a clock with similar properties but using a different time-zone.,FreeText,,0
3134,jdk,java.time.Clock_goal.json,millis(),millis,java.time.Clock,"Gets the current millisecond instant of the clock.  This returns the millisecond-based instant, measured from 1970-01-01T00:00Z (UTC). This is equivalent to the definition of System#currentTimeMillis().  Most applications should avoid this method and use Instant to represent an instant on the time-line rather than a raw millisecond value. This method is provided to allow the use of the clock in high performance use cases where the creation of an object would be unacceptable.  The default implementation currently calls #instant.",FreeText,,0
3135,jdk,java.time.Clock_goal.json,instant(),instant,java.time.Clock,Gets the current instant of the clock.  This returns an instant representing the current instant as defined by the clock.,FreeText,,0
3136,jdk,java.time.Clock_goal.json,equals(java.lang.Object obj),equals,java.time.Clock,"Checks if this clock is equal to another clock.  Clocks should override this method to compare equals based on their state and to meet the contract of Object#equals. If not overridden, the behavior is defined by Object#equals",FreeText,,0
3137,jdk,java.time.Clock_goal.json,hashCode(),hashCode,java.time.Clock,"A hash code for this clock.  Clocks should override this method based on their state and to meet the contract of Object#hashCode. If not overridden, the behavior is defined by Object#hashCode",FreeText,,0
3138,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,java.time.format.DateTimeFormatterBuilder(),java.time.format.DateTimeFormatterBuilder,java.time.format.DateTimeFormatterBuilder,Constructs a new instance of the builder.,FreeText,,0
3139,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"getLocalizedDateTimePattern(java.time.format.FormatStyle dateStyle, java.time.format.FormatStyle timeStyle, java.time.chrono.Chronology chrono, java.util.Locale locale)",getLocalizedDateTimePattern,java.time.format.DateTimeFormatterBuilder,Gets the formatting pattern for date and time styles for a locale and chronology. The locale and chronology are used to lookup the locale specific format for the requested dateStyle and/or timeStyle.,FreeText,,0
3140,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,parseCaseSensitive(),parseCaseSensitive,java.time.format.DateTimeFormatterBuilder,"Changes the parse style to be case sensitive for the remainder of the formatter.  Parsing can be case sensitive or insensitive - by default it is case sensitive. This method allows the case sensitivity setting of parsing to be changed.  Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case sensitive mode. See #parseCaseInsensitive for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse.  Since the default is case sensitive, this method should only be used after a previous call to #parseCaseInsensitive.",FreeText,,0
3141,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,parseCaseInsensitive(),parseCaseInsensitive,java.time.format.DateTimeFormatterBuilder,"Changes the parse style to be case insensitive for the remainder of the formatter.  Parsing can be case sensitive or insensitive - by default it is case sensitive. This method allows the case sensitivity setting of parsing to be changed.  Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case insensitive mode. See #parseCaseSensitive() for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse.",FreeText,,0
3142,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,parseStrict(),parseStrict,java.time.format.DateTimeFormatterBuilder,"Changes the parse style to be strict for the remainder of the formatter.  Parsing can be strict or lenient - by default its strict. This controls the degree of flexibility in matching the text and sign styles.  When used, this method changes the parsing to be strict from this point onwards. As strict is the default, this is normally only needed after calling #parseLenient(). The change will remain in force until the end of the formatter that is eventually constructed or until parseLenient is called.",FreeText,,0
3143,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,parseLenient(),parseLenient,java.time.format.DateTimeFormatterBuilder,"Changes the parse style to be lenient for the remainder of the formatter. Note that case sensitivity is set separately to this method.  Parsing can be strict or lenient - by default its strict. This controls the degree of flexibility in matching the text and sign styles. Applications calling this method should typically also call #parseCaseInsensitive().  When used, this method changes the parsing to be lenient from this point onwards. The change will remain in force until the end of the formatter that is eventually constructed or until parseStrict is called.",FreeText,,0
3144,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"parseDefaulting(java.time.temporal.TemporalField field, long value)",parseDefaulting,java.time.format.DateTimeFormatterBuilder,"Appends a default value for a field to the formatter for use in parsing.  This appends an instruction to the builder to inject a default value into the parsed result. This is especially useful in conjunction with optional parts of the formatter.  For example, consider a formatter that parses the year, followed by an optional month, with a further optional day-of-month. Using such a formatter would require the calling code to check whether a full date, year-month or just a year had been parsed. This method can be used to default the month and day-of-month to a sensible value, such as the first of the month, allowing the calling code to always get a date.  During formatting, this method has no effect.  During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.",FreeText,,0
3145,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendValue(java.time.temporal.TemporalField field),appendValue,java.time.format.DateTimeFormatterBuilder,"Appends the value of a date-time field to the formatter using a normal output style.  The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown.  The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.  The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See #appendValue(java.time.temporal.TemporalField, int) for full details.",FreeText,,0
3146,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendValue(java.time.temporal.TemporalField field, int width)",appendValue,java.time.format.DateTimeFormatterBuilder,"Appends the value of a date-time field to the formatter using a fixed width, zero-padded approach.  The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown.  The value will be zero-padded on the left. If the size of the value means that it cannot be printed within the width then an exception is thrown. If the value of the field is negative then an exception is thrown during formatting.  This method supports a special technique of parsing known as 'adjacent value parsing'. This technique solves the problem where a value, variable or fixed width, is followed by one or more fixed length values. The standard parser is greedy, and thus it would normally steal the digits that are needed by the fixed width value parsers that follow the variable width one.  No action is required to initiate 'adjacent value parsing'. When a call to appendValue is made, the builder enters adjacent value parsing setup mode. If the immediately subsequent method call or calls on the same builder are for a fixed width value, then the parser will reserve space so that the fixed width values can be parsed.  For example, consider builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2); The year is a variable width parse of between 1 and 19 digits. The month is a fixed width parse of 2 digits. Because these were appended to the same builder immediately after one another, the year parser will reserve two digits for the month to parse. Thus, the text '201106' will correctly parse to a year of 2011 and a month of 6. Without adjacent value parsing, the year would greedily parse all six digits and leave nothing for the month.  Adjacent value parsing applies to each set of fixed width not-negative values in the parser that immediately follow any kind of value, variable or fixed width. Calling any other append method will end the setup of adjacent value parsing. Thus, in the unlikely event that you need to avoid adjacent value parsing behavior, simply add the appendValue to another DateTimeFormatterBuilder and add that to this builder.  If adjacent parsing is active, then parsing must match exactly the specified number of digits in both strict and lenient modes. In addition, no positive or negative sign is permitted.",FreeText,,0
3147,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendValue(java.time.temporal.TemporalField field, int minWidth, int maxWidth, java.time.format.SignStyle signStyle)",appendValue,java.time.format.DateTimeFormatterBuilder,"Appends the value of a date-time field to the formatter providing full control over formatting.  The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown.  This method provides full control of the numeric formatting, including zero-padding and the positive/negative sign.  The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See #appendValue(java.time.temporal.TemporalField, int) for full details.  In strict parsing mode, the minimum number of parsed digits is minWidth and the maximum is maxWidth. In lenient parsing mode, the minimum number of parsed digits is one and the maximum is 19 (except as limited by adjacent value parsing).  If this method is invoked with equal minimum and maximum widths and a sign style of NOT_NEGATIVE then it delegates to appendValue(TemporalField,int). In this scenario, the formatting and parsing behavior described there occur.",FreeText,,0
3148,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendValueReduced(java.time.temporal.TemporalField field, int width, int maxWidth, int baseValue)",appendValueReduced,java.time.format.DateTimeFormatterBuilder,"Appends the reduced value of a date-time field to the formatter.  Since fields such as year vary by chronology, it is recommended to use the #appendValueReduced(TemporalField, int, int, ChronoLocalDate) date} variant of this method in most cases. This variant is suitable for simple fields or working with only the ISO chronology.  For formatting, the width and maxWidth are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the baseValue using width characters then the reduced value is formatted otherwise the value is truncated to fit maxWidth. The rightmost characters are output to match the width, left padding with zero.  For strict parsing, the number of characters allowed by width to maxWidth are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to width and the value is positive, the value of the field is computed to be the first number greater than or equal to the baseValue with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range.  For example, a base value of 1980 and a width of 2 will have valid values from 1980 to 2079. During parsing, the text ""12"" will result in the value 2012 as that is the value within the range where the last two characters are ""12"". By contrast, parsing the text ""1915"" will result in the value 1915.",FreeText,,0
3149,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendValueReduced(java.time.temporal.TemporalField field, int width, int maxWidth, java.time.chrono.ChronoLocalDate baseDate)",appendValueReduced,java.time.format.DateTimeFormatterBuilder,"Appends the reduced value of a date-time field to the formatter.  This is typically used for formatting and parsing a two digit year.  The base date is used to calculate the full value during parsing. For example, if the base date is 1950-01-01 then parsed values for a two digit year parse will be in the range 1950-01-01 to 2049-12-31. Only the year would be extracted from the date, thus a base date of 1950-08-25 would also parse to the range 1950-01-01 to 2049-12-31. This behavior is necessary to support fields such as week-based-year or other calendar systems where the parsed value does not align with standard ISO years.  The exact behavior is as follows. Parse the full set of fields and determine the effective chronology using the last chronology if it appears more than once. Then convert the base date to the effective chronology. Then extract the specified field from the chronology-specific base date and use it to determine the baseValue used below.  For formatting, the width and maxWidth are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the baseValue using width characters then the reduced value is formatted otherwise the value is truncated to fit maxWidth. The rightmost characters are output to match the width, left padding with zero.  For strict parsing, the number of characters allowed by width to maxWidth are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to width and the value is positive, the value of the field is computed to be the first number greater than or equal to the baseValue with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range.  For example, a base value of 1980 and a width of 2 will have valid values from 1980 to 2079. During parsing, the text ""12"" will result in the value 2012 as that is the value within the range where the last two characters are ""12"". By contrast, parsing the text ""1915"" will result in the value 1915.",FreeText,,0
3150,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendFraction(java.time.temporal.TemporalField field, int minWidth, int maxWidth, boolean decimalPoint)",appendFraction,java.time.format.DateTimeFormatterBuilder,"Appends the fractional value of a date-time field to the formatter.  The fractional value of the field will be output including the preceding decimal point. The preceding value is not output. For example, the second-of-minute value of 15 would be output as .25.  The width of the printed fraction can be controlled. Setting the minimum width to zero will cause no output to be generated. The printed fraction will have the minimum width necessary between the minimum and maximum widths - trailing zeroes are omitted. No rounding occurs due to the maximum width - digits are simply dropped.  When parsing in strict mode, the number of parsed digits must be between the minimum and maximum width. When parsing in lenient mode, the minimum width is considered to be zero and the maximum is nine.  If the value cannot be obtained then an exception will be thrown. If the value is negative an exception will be thrown. If the field does not have a fixed set of valid values then an exception will be thrown. If the field value in the date-time to be printed is invalid it cannot be printed and an exception will be thrown.",FreeText,,0
3151,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendText(java.time.temporal.TemporalField field),appendText,java.time.format.DateTimeFormatterBuilder,"Appends the text of a date-time field to the formatter using the full text style.  The text of the field will be output during a format. The value must be within the valid range of the field. If the value cannot be obtained then an exception will be thrown. If the field has no textual representation, then the numeric value will be used.  The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.",FreeText,,0
3152,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendText(java.time.temporal.TemporalField field, java.time.format.TextStyle textStyle)",appendText,java.time.format.DateTimeFormatterBuilder,"Appends the text of a date-time field to the formatter.  The text of the field will be output during a format. The value must be within the valid range of the field. If the value cannot be obtained then an exception will be thrown. If the field has no textual representation, then the numeric value will be used.  The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.",FreeText,,0
3153,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendText(java.time.temporal.TemporalField field, java.util.Map<java.lang.Long, java.lang.String> textLookup)",appendText,java.time.format.DateTimeFormatterBuilder,"Appends the text of a date-time field to the formatter using the specified map to supply the text.  The standard text outputting methods use the localized text in the JDK. This method allows that text to be specified directly. The supplied map is not validated by the builder to ensure that formatting or parsing is possible, thus an invalid map may throw an error during later use.  Supplying the map of text provides considerable flexibility in formatting and parsing. For example, a legacy application might require or supply the months of the year as ""JNY"", ""FBY"", ""MCH"" etc. These do not match the standard set of text for localized month names. Using this method, a map can be created which defines the connection between each value and the text:  Map<Long, String> map = new HashMap<>(); map.put(1, ""JNY""); map.put(2, ""FBY""); map.put(3, ""MCH""); ... builder.appendText(MONTH_OF_YEAR, map);   Other uses might be to output the value with a suffix, such as ""1st"", ""2nd"", ""3rd"", or as Roman numerals ""I"", ""II"", ""III"", ""IV"".  During formatting, the value is obtained and checked that it is in the valid range. If text is not available for the value then it is output as a number. During parsing, the parser will match against the map of text and numeric values.",FreeText,,0
3154,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendInstant(),appendInstant,java.time.format.DateTimeFormatterBuilder,"Appends an instant using ISO-8601 to the formatter, formatting fractional digits in groups of three.  Instants have a fixed output format. They are converted to a date-time with a zone-offset of UTC and formatted using the standard ISO-8601 format. With this method, formatting nano-of-second outputs zero, three, six or nine digits digits as necessary. The localized decimal style is not used.  The instant is obtained using ChronoField#INSTANT_SECONDS INSTANT_SECONDS and optionally (@code NANO_OF_SECOND). The value of INSTANT_SECONDS may be outside the maximum range of LocalDateTime.  The ResolverStyle resolver style has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see DateTimeFormatter#parsedLeapSecond() for full details.  An alternative to this method is to format/parse the instant as a single epoch-seconds value. That is achieved using appendValue(INSTANT_SECONDS).",FreeText,,0
3155,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendInstant(int fractionalDigits),appendInstant,java.time.format.DateTimeFormatterBuilder,"Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits.  Instants have a fixed output format, although this method provides some control over the fractional digits. They are converted to a date-time with a zone-offset of UTC and printed using the standard ISO-8601 format. The localized decimal style is not used.  The fractionalDigits parameter allows the output of the fractional second to be controlled. Specifying zero will cause no fractional digits to be output. From 1 to 9 will output an increasing number of digits, using zero right-padding if necessary. The special value -1 is used to output as many digits as necessary to avoid any trailing zeroes.  When parsing in strict mode, the number of parsed digits must match the fractional digits. When parsing in lenient mode, any number of fractional digits from zero to nine are accepted.  The instant is obtained using ChronoField#INSTANT_SECONDS INSTANT_SECONDS and optionally (@code NANO_OF_SECOND). The value of INSTANT_SECONDS may be outside the maximum range of LocalDateTime.  The ResolverStyle resolver style has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see DateTimeFormatter#parsedLeapSecond() for full details.  An alternative to this method is to format/parse the instant as a single epoch-seconds value. That is achieved using appendValue(INSTANT_SECONDS).",FreeText,,0
3156,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendOffsetId(),appendOffsetId,java.time.format.DateTimeFormatterBuilder,"Appends the zone offset, such as '+01:00', to the formatter.  This appends an instruction to format/parse the offset ID to the builder. This is equivalent to calling appendOffset(""HH:MM:ss"", ""Z"").",FreeText,"methodResultID.equals(receiverObjectID.appendOffset(""HH:MM:ss"", ""Z""))",1
3157,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendOffset(java.lang.String pattern, java.lang.String noOffsetText)",appendOffset,java.time.format.DateTimeFormatterBuilder,"Appends the zone offset, such as '+01:00', to the formatter.  This appends an instruction to format/parse the offset ID to the builder.  During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#offset(). It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, the offset is parsed using the format defined below. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.  The format of the offset is controlled by a pattern which must be one of the following:  <li>+HH - hour only, ignoring minute and second <li>+HHmm - hour, with minute if non-zero, ignoring second, no colon <li>+HH:mm - hour, with minute if non-zero, ignoring second, with colon <li>+HHMM - hour and minute, ignoring second, no colon <li>+HH:MM - hour and minute, ignoring second, with colon <li>+HHMMss - hour and minute, with second if non-zero, no colon <li>+HH:MM:ss - hour and minute, with second if non-zero, with colon <li>+HHMMSS - hour, minute and second, no colon <li>+HH:MM:SS - hour, minute and second, with colon  The ""no offset"" text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the ""no offset"" text, and the plus and minus versions of zero defined by the pattern.",FreeText,,0
3158,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendLocalizedOffset(java.time.format.TextStyle style),appendLocalizedOffset,java.time.format.DateTimeFormatterBuilder,"Appends the localized zone offset, such as 'GMT+01:00', to the formatter.  This appends a localized zone offset to the builder, the format of the localized offset is controlled by the specified FormatStyle style to this method:  <li>TextStyle#FULL full - formats with localized offset text, such as 'GMT, 2-digit hour and minute field, optional second field if non-zero, and colon. <li>TextStyle#SHORT short - formats with localized offset text, such as 'GMT, hour without leading zero, optional 2-digit minute and second if non-zero, and colon.   During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#offset(). If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, the offset is parsed using the format defined above. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.",FreeText,,0
3159,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendZoneId(),appendZoneId,java.time.format.DateTimeFormatterBuilder,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter.  This appends an instruction to format/parse the zone ID to the builder. The zone ID is obtained in a strict manner suitable for ZonedDateTime. By contrast, OffsetDateTime does not have a zone ID suitable for use with this method, see #appendZoneOrOffsetId().  During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#zoneId(). It will be printed using the result of ZoneId#getId(). If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using #appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset#UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the #parseCaseInsensitive() case sensitive setting.  For example, the following will parse:  ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""+01:30"")",FreeText,,0
3160,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendZoneRegionId(),appendZoneRegionId,java.time.format.DateTimeFormatterBuilder,"Appends the time-zone region ID, such as 'Europe/Paris', to the formatter, rejecting the zone ID if it is a ZoneOffset.  This appends an instruction to format/parse the zone ID to the builder only if it is a region-based ID.  During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#zoneId(). If the zone is a ZoneOffset or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from ZoneId#getId().  During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using #appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset#UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the #parseCaseInsensitive() case sensitive setting.  For example, the following will parse:  ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""+01:30"")   Note that this method is is identical to appendZoneId() except in the mechanism used to obtain the zone. Note also that parsing accepts offsets, whereas formatting will never produce one.",FreeText,,0
3161,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendZoneOrOffsetId(),appendZoneOrOffsetId,java.time.format.DateTimeFormatterBuilder,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter, using the best available zone ID.  This appends an instruction to format/parse the best available zone or offset ID to the builder. The zone ID is obtained in a lenient manner that first attempts to find a true zone ID, such as that on ZonedDateTime, and then attempts to find an offset, such as that on OffsetDateTime.  During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#zone(). It will be printed using the result of ZoneId#getId(). If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using #appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset#UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the #parseCaseInsensitive() case sensitive setting.  For example, the following will parse:  ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""UT+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""UTC+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""GMT+01:30"")   Note that this method is is identical to appendZoneId() except in the mechanism used to obtain the zone.",FreeText,,0
3162,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendZoneText(java.time.format.TextStyle textStyle),appendZoneText,java.time.format.DateTimeFormatterBuilder,"Appends the time-zone name, such as 'British Summer Time', to the formatter.  This appends an instruction to format/parse the textual name of the zone to the builder.  During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#zoneId(). If the zone is a ZoneOffset it will be printed using the result of ZoneOffset#getId(). If the zone is not an offset, the textual name will be looked up for the locale set in the DateTimeFormatter. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable reuslt, then the ZoneId#getId() ID will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both ""Central Standard Time"" and ""China Standard Time"". In this situation, the zone id will be determined by the region information from formatter's DateTimeFormatter#getLocale() locale and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The #appendZoneText(TextStyle, Set) may be used to specify a set of preferred ZoneId in this situation.",FreeText,,0
3163,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendZoneText(java.time.format.TextStyle textStyle, java.util.Set<java.time.ZoneId> preferredZones)",appendZoneText,java.time.format.DateTimeFormatterBuilder,"Appends the time-zone name, such as 'British Summer Time', to the formatter.  This appends an instruction to format/parse the textual name of the zone to the builder.  During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#zoneId(). If the zone is a ZoneOffset it will be printed using the result of ZoneOffset#getId(). If the zone is not an offset, the textual name will be looked up for the locale set in the DateTimeFormatter. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable reuslt, then the ZoneId#getId() ID will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both ""Central Standard Time"" and ""China Standard Time"". In this situation, the zone id will be determined by the region information from formatter's DateTimeFormatter#getLocale() locale and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred ZoneId to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique. If the zone cannot be parsed then an exception is thrown unless the section of the formatter is optional.",FreeText,,0
3164,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendChronologyId(),appendChronologyId,java.time.format.DateTimeFormatterBuilder,"Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.  This appends an instruction to format/parse the chronology ID to the builder.  During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with TemporalQueries#chronology(). It will be printed using the result of Chronology#getId(). If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.  During parsing, the chronology is parsed and must match one of the chronologies in Chronology#getAvailableChronologies(). If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the #parseCaseInsensitive() case sensitive setting.",FreeText,,0
3165,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendChronologyText(java.time.format.TextStyle textStyle),appendChronologyText,java.time.format.DateTimeFormatterBuilder,Appends the chronology name to the formatter.  The calendar system name will be output during a format. If the chronology cannot be obtained then an exception will be thrown. The calendar system name is obtained from the Chronology.,FreeText,,0
3166,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"appendLocalized(java.time.format.FormatStyle dateStyle, java.time.format.FormatStyle timeStyle)",appendLocalized,java.time.format.DateTimeFormatterBuilder,"Appends a localized date-time pattern to the formatter.  This appends a localized section to the builder, suitable for outputting a date, time or date-time combination. The format of the localized section is lazily looked up based on four items:  <li>the dateStyle specified to this method <li>the timeStyle specified to this method <li>the Locale of the DateTimeFormatter <li>the Chronology, selecting the best available  During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by DateTimeFormatter#withChronology(Chronology).  During parsing, if a chronology has already been parsed, then it is used. Otherwise the default from DateTimeFormatter.withChronology(Chronology) is used, with IsoChronology as the fallback.  Note that this method provides similar functionality to methods on DateFormat such as java.text.DateFormat#getDateTimeInstance(int, int).",FreeText,,0
3167,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendLiteral(char literal),appendLiteral,java.time.format.DateTimeFormatterBuilder,Appends a character literal to the formatter.  This character will be output during a format.,FreeText,,0
3168,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendLiteral(java.lang.String literal),appendLiteral,java.time.format.DateTimeFormatterBuilder,"Appends a string literal to the formatter.  This string will be output during a format.  If the literal is empty, nothing is added to the formatter.",FreeText,,0
3169,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,append(java.time.format.DateTimeFormatter formatter),append,java.time.format.DateTimeFormatterBuilder,Appends all the elements of a formatter to the builder.  This method has the same effect as appending each of the constituent parts of the formatter directly to this builder.,FreeText,,0
3170,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendOptional(java.time.format.DateTimeFormatter formatter),appendOptional,java.time.format.DateTimeFormatterBuilder,"Appends a formatter to the builder which will optionally format/parse.  This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an #optionalStart() and #optionalEnd().  The formatter will format if data is available for all the fields contained within it. The formatter will parse if the string matches, otherwise no error is returned.",FreeText,,0
3171,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,appendPattern(java.lang.String pattern),appendPattern,java.time.format.DateTimeFormatterBuilder,"Appends the elements defined by the specified pattern to the builder.  All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters. The characters '#', '{' and '}' are reserved for future use. The characters '[' and ']' indicate optional patterns. The following pattern letters are defined:  Symbol Meaning Presentation Examples ------ ------- ------------ ------- G era text AD; Anno Domini; A u year year 2004; 04 y year-of-era year 2004; 04 D day-of-year number 189 M/L month-of-year number/text 7; 07; Jul; July; J d day-of-month number 10 Q/q quarter-of-year number/text 3; 03; Q3; 3rd quarter Y week-based-year year 1996; 96 w week-of-week-based-year number 27 W week-of-month number 4 E day-of-week text Tue; Tuesday; T e/c localized day-of-week number/text 2; 02; Tue; Tuesday; T F week-of-month number 3 a am-pm-of-day text PM h clock-hour-of-am-pm (1-12) number 12 K hour-of-am-pm (0-11) number 0 k clock-hour-of-am-pm (1-24) number 0 H hour-of-day (0-23) number 0 m minute-of-hour number 30 s second-of-minute number 55 S fraction-of-second fraction 978 A milli-of-day number 1234 n nano-of-second number 987654321 N nano-of-day number 1234000000 V time-zone ID zone-id America/Los_Angeles; Z; -08:30 z time-zone name zone-name Pacific Standard Time; PST O localized zone-offset offset-O GMT+8; GMT+08:00; UTC-08:00; X zone-offset 'Z' for zero offset-X Z; -08; -0830; -08:30; -083015; -08:30:15; x zone-offset offset-x +0000; -08; -0830; -08:30; -083015; -08:30:15; Z zone-offset offset-Z +0000; -0800; -08:00; p pad next pad modifier 1 ' escape for text delimiter '' single quote literal ' [ optional section start ] optional section end # reserved for future use { reserved for future use } reserved for future use   The count of pattern letters determine the format. See DateTimeFormatter for a user-focused description of the patterns. The following tables define how the pattern letters map to the builder.  Date fields: Pattern letters to output a date.  Pattern Count Equivalent builder methods ------- ----- -------------------------- G 1 appendText(ChronoField.ERA, TextStyle.SHORT) GG 2 appendText(ChronoField.ERA, TextStyle.SHORT) GGG 3 appendText(ChronoField.ERA, TextStyle.SHORT) GGGG 4 appendText(ChronoField.ERA, TextStyle.FULL) GGGGG 5 appendText(ChronoField.ERA, TextStyle.NARROW) u 1 appendValue(ChronoField.YEAR, 1, 19, SignStyle.NORMAL); uu 2 appendValueReduced(ChronoField.YEAR, 2, 2000); uuu 3 appendValue(ChronoField.YEAR, 3, 19, SignStyle.NORMAL); u..u 4..n appendValue(ChronoField.YEAR, n, 19, SignStyle.EXCEEDS_PAD); y 1 appendValue(ChronoField.YEAR_OF_ERA, 1, 19, SignStyle.NORMAL); yy 2 appendValueReduced(ChronoField.YEAR_OF_ERA, 2, 2000); yyy 3 appendValue(ChronoField.YEAR_OF_ERA, 3, 19, SignStyle.NORMAL); y..y 4..n appendValue(ChronoField.YEAR_OF_ERA, n, 19, SignStyle.EXCEEDS_PAD); Y 1 append special localized WeekFields element for numeric week-based-year YY 2 append special localized WeekFields element for reduced numeric week-based-year 2 digits; YYY 3 append special localized WeekFields element for numeric week-based-year (3, 19, SignStyle.NORMAL); Y..Y 4..n append special localized WeekFields element for numeric week-based-year (n, 19, SignStyle.EXCEEDS_PAD); Q 1 appendValue(IsoFields.QUARTER_OF_YEAR); QQ 2 appendValue(IsoFields.QUARTER_OF_YEAR, 2); QQQ 3 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.SHORT) QQQQ 4 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.FULL) QQQQQ 5 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.NARROW) q 1 appendValue(IsoFields.QUARTER_OF_YEAR); qq 2 appendValue(IsoFields.QUARTER_OF_YEAR, 2); qqq 3 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.SHORT_STANDALONE) qqqq 4 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.FULL_STANDALONE) qqqqq 5 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.NARROW_STANDALONE) M 1 appendValue(ChronoField.MONTH_OF_YEAR); MM 2 appendValue(ChronoField.MONTH_OF_YEAR, 2); MMM 3 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT) MMMM 4 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.FULL) MMMMM 5 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.NARROW) L 1 appendValue(ChronoField.MONTH_OF_YEAR); LL 2 appendValue(ChronoField.MONTH_OF_YEAR, 2); LLL 3 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT_STANDALONE) LLLL 4 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.FULL_STANDALONE) LLLLL 5 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.NARROW_STANDALONE) w 1 append special localized WeekFields element for numeric week-of-year ww 1 append special localized WeekFields element for numeric week-of-year, zero-padded W 1 append special localized WeekFields element for numeric week-of-month d 1 appendValue(ChronoField.DAY_OF_MONTH) dd 2 appendValue(ChronoField.DAY_OF_MONTH, 2) D 1 appendValue(ChronoField.DAY_OF_YEAR) DD 2 appendValue(ChronoField.DAY_OF_YEAR, 2) DDD 3 appendValue(ChronoField.DAY_OF_YEAR, 3) F 1 appendValue(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH) E 1 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EE 2 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EEE 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EEEE 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL) EEEEE 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW) e 1 append special localized WeekFields element for numeric day-of-week ee 2 append special localized WeekFields element for numeric day-of-week, zero-padded eee 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) eeee 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL) eeeee 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW) c 1 append special localized WeekFields element for numeric day-of-week ccc 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT_STANDALONE) cccc 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL_STANDALONE) ccccc 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW_STANDALONE)   Time fields: Pattern letters to output a time.  Pattern Count Equivalent builder methods ------- ----- -------------------------- a 1 appendText(ChronoField.AMPM_OF_DAY, TextStyle.SHORT) h 1 appendValue(ChronoField.CLOCK_HOUR_OF_AMPM) hh 2 appendValue(ChronoField.CLOCK_HOUR_OF_AMPM, 2) H 1 appendValue(ChronoField.HOUR_OF_DAY) HH 2 appendValue(ChronoField.HOUR_OF_DAY, 2) k 1 appendValue(ChronoField.CLOCK_HOUR_OF_DAY) kk 2 appendValue(ChronoField.CLOCK_HOUR_OF_DAY, 2) K 1 appendValue(ChronoField.HOUR_OF_AMPM) KK 2 appendValue(ChronoField.HOUR_OF_AMPM, 2) m 1 appendValue(ChronoField.MINUTE_OF_HOUR) mm 2 appendValue(ChronoField.MINUTE_OF_HOUR, 2) s 1 appendValue(ChronoField.SECOND_OF_MINUTE) ss 2 appendValue(ChronoField.SECOND_OF_MINUTE, 2) S..S 1..n appendFraction(ChronoField.NANO_OF_SECOND, n, n, false) A 1 appendValue(ChronoField.MILLI_OF_DAY) A..A 2..n appendValue(ChronoField.MILLI_OF_DAY, n) n 1 appendValue(ChronoField.NANO_OF_SECOND) n..n 2..n appendValue(ChronoField.NANO_OF_SECOND, n) N 1 appendValue(ChronoField.NANO_OF_DAY) N..N 2..n appendValue(ChronoField.NANO_OF_DAY, n)   Zone ID: Pattern letters to output ZoneId.  Pattern Count Equivalent builder methods ------- ----- -------------------------- VV 2 appendZoneId() z 1 appendZoneText(TextStyle.SHORT) zz 2 appendZoneText(TextStyle.SHORT) zzz 3 appendZoneText(TextStyle.SHORT) zzzz 4 appendZoneText(TextStyle.FULL)   Zone offset: Pattern letters to output ZoneOffset.  Pattern Count Equivalent builder methods ------- ----- -------------------------- O 1 appendLocalizedOffsetPrefixed(TextStyle.SHORT); OOOO 4 appendLocalizedOffsetPrefixed(TextStyle.FULL); X 1 appendOffset(""+HHmm"",""Z"") XX 2 appendOffset(""+HHMM"",""Z"") XXX 3 appendOffset(""+HH:MM"",""Z"") XXXX 4 appendOffset(""+HHMMss"",""Z"") XXXXX 5 appendOffset(""+HH:MM:ss"",""Z"") x 1 appendOffset(""+HHmm"",""+00"") xx 2 appendOffset(""+HHMM"",""+0000"") xxx 3 appendOffset(""+HH:MM"",""+00:00"") xxxx 4 appendOffset(""+HHMMss"",""+0000"") xxxxx 5 appendOffset(""+HH:MM:ss"",""+00:00"") Z 1 appendOffset(""+HHMM"",""+0000"") ZZ 2 appendOffset(""+HHMM"",""+0000"") ZZZ 3 appendOffset(""+HHMM"",""+0000"") ZZZZ 4 appendLocalizedOffset(TextStyle.FULL); ZZZZZ 5 appendOffset(""+HH:MM:ss"",""Z"")   Modifiers: Pattern letters that modify the rest of the pattern:  Pattern Count Equivalent builder methods ------- ----- -------------------------- [ 1 optionalStart() ] 1 optionalEnd() p..p 1..n padNext(n)   Any sequence of letters not specified above, unrecognized letter or reserved character will throw an exception. Future versions may add to the set of patterns. It is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.  Note that the pattern string is similar, but not identical, to java.text.SimpleDateFormat SimpleDateFormat. The pattern string is also similar, but not identical, to that defined by the Unicode Common Locale Data Repository (CLDR/LDML). Pattern letters 'X' and 'u' are aligned with Unicode CLDR/LDML. By contrast, SimpleDateFormat uses 'u' for the numeric day of week. Pattern letters 'y' and 'Y' parse years of two digits and more than 4 digits differently. Pattern letters 'n', 'A', 'N', and 'p' are added. Number types will reject large numbers.",FreeText,,0
3172,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,padNext(int padWidth),padNext,java.time.format.DateTimeFormatterBuilder,"Causes the next added printer/parser to pad to a fixed width using a space.  This padding will pad to a fixed width using spaces.  During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.  During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.",FreeText,,0
3173,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"padNext(int padWidth, char padChar)",padNext,java.time.format.DateTimeFormatterBuilder,"Causes the next added printer/parser to pad to a fixed width.  This padding is intended for padding other than zero-padding. Zero-padding should be achieved using the appendValue methods.  During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.  During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.",FreeText,,0
3174,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,optionalStart(),optionalStart,java.time.format.DateTimeFormatterBuilder,"Mark the start of an optional section.  The output of formatting can include optional sections, which may be nested. An optional section is started by calling this method and ended by calling #optionalEnd() or by ending the build process.  All elements in the optional section are treated as optional. During formatting, the section is only output if data is available in the TemporalAccessor for all the elements in the section. During parsing, the whole section may be missing from the parsed string.  For example, consider a builder setup as builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2). The optional section ends automatically at the end of the builder. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.",FreeText,,0
3175,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,optionalEnd(),optionalEnd,java.time.format.DateTimeFormatterBuilder,"Ends an optional section.  The output of formatting can include optional sections, which may be nested. An optional section is started by calling #optionalStart() and ended using this method (or at the end of the builder).  Calling this method without having previously called optionalStart will throw an exception. Calling this method immediately after calling optionalStart has no effect on the formatter other than ending the (empty) optional section.  All elements in the optional section are treated as optional. During formatting, the section is only output if data is available in the TemporalAccessor for all the elements in the section. During parsing, the whole section may be missing from the parsed string.  For example, consider a builder setup as builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd(). During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.",FreeText,,0
3176,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,toFormatter(),toFormatter,java.time.format.DateTimeFormatterBuilder,"Completes this builder by creating the DateTimeFormatter using the default locale.  This will create a formatter with the Locale#getDefault(Locale.Category) default FORMAT locale. Numbers will be printed and parsed using the standard DecimalStyle. The resolver style will be ResolverStyle#SMART SMART.  Calling this method will end any open optional sections by repeatedly calling #optionalEnd() before creating the formatter.  This builder can still be used after creating the formatter if desired, although the state may have been changed by calls to optionalEnd.",FreeText,,0
3177,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,toFormatter(java.util.Locale locale),toFormatter,java.time.format.DateTimeFormatterBuilder,"Completes this builder by creating the DateTimeFormatter using the specified locale.  This will create a formatter with the specified locale. Numbers will be printed and parsed using the standard DecimalStyle. The resolver style will be ResolverStyle#SMART SMART.  Calling this method will end any open optional sections by repeatedly calling #optionalEnd() before creating the formatter.  This builder can still be used after creating the formatter if desired, although the state may have been changed by calls to optionalEnd.",FreeText,,0
3178,jdk,java.time.format.DateTimeFormatterBuilder_goal.json,"toFormatter(java.time.format.ResolverStyle resolverStyle, java.time.chrono.Chronology chrono)",toFormatter,java.time.format.DateTimeFormatterBuilder,Completes this builder by creating the formatter. This uses the default locale.,FreeText,,0
3179,jdk,java.time.Instant_goal.json,now(),now,java.time.Instant,Obtains the current instant from the system clock.  This will query the Clock#systemUTC() system UTC clock to obtain the current instant.  Using this method will prevent the ability to use an alternate time-source for testing because the clock is effectively hard-coded.,FreeText,,0
3180,jdk,java.time.Instant_goal.json,now(java.time.Clock clock),now,java.time.Instant,Obtains the current instant from the specified clock.  This will query the specified clock to obtain the current time.  Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3181,jdk,java.time.Instant_goal.json,ofEpochSecond(long epochSecond),ofEpochSecond,java.time.Instant,Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z.  The nanosecond field is set to zero.,FreeText,,0
3182,jdk,java.time.Instant_goal.json,"ofEpochSecond(long epochSecond, long nanoAdjustment)",ofEpochSecond,java.time.Instant,"Obtains an instance of Instant using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.  This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same instant:  Instant.ofEpochSecond(3, 1); Instant.ofEpochSecond(4, -999_999_999); Instant.ofEpochSecond(2, 1000_000_001);",FreeText,,0
3183,jdk,java.time.Instant_goal.json,ofEpochMilli(long epochMilli),ofEpochMilli,java.time.Instant,Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z.  The seconds and nanoseconds are extracted from the specified milliseconds.,FreeText,,0
3184,jdk,java.time.Instant_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.Instant,"Obtains an instance of Instant from a temporal object.  This obtains an instant based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of Instant.  The conversion extracts the ChronoField#INSTANT_SECONDS INSTANT_SECONDS and ChronoField#NANO_OF_SECOND NANO_OF_SECOND fields.  This method matches the signature of the functional interface TemporalQuery allowing it to be used as a query via method reference, Instant::from.",FreeText,,0
3185,jdk,java.time.Instant_goal.json,parse(java.lang.CharSequence text),parse,java.time.Instant,Obtains an instance of Instant from a text string such as 2007-12-03T10:15:30.00Z.  The string must represent a valid instant in UTC and is parsed using DateTimeFormatter#ISO_INSTANT.,FreeText,,0
3186,jdk,java.time.Instant_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.Instant,"Checks if the specified field is supported.  This checks if this instant can be queried for the specified field. If false, then calling the #range(TemporalField) range, #get(TemporalField) get and #with(TemporalField, long) methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>NANO_OF_SECOND <li>MICRO_OF_SECOND <li>MILLI_OF_SECOND <li>INSTANT_SECONDS  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3187,jdk,java.time.Instant_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.Instant,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception.  If the unit is a ChronoUnit then the query is implemented here. The supported units are:  <li>NANOS <li>MICROS <li>MILLIS <li>SECONDS <li>MINUTES <li>HOURS <li>HALF_DAYS <li>DAYS  All other ChronoUnit instances will return false.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument. Whether the unit is supported is determined by the unit.",FreeText,,0
3188,jdk,java.time.Instant_goal.json,range(java.time.temporal.TemporalField field),range,java.time.Instant,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This instant is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3189,jdk,java.time.Instant_goal.json,get(java.time.temporal.TemporalField field),get,java.time.Instant,"Gets the value of the specified field from this instant as an int.  This queries this instant for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this date-time, except INSTANT_SECONDS which is too large to fit in an int and throws a DateTimeException. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3190,jdk,java.time.Instant_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.Instant,"Gets the value of the specified field from this instant as a long.  This queries this instant for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this date-time. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3191,jdk,java.time.Instant_goal.json,getEpochSecond(),getEpochSecond,java.time.Instant,Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.  The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part of the day is returned by getNanosOfSecond.,FreeText,,0
3192,jdk,java.time.Instant_goal.json,getNano(),getNano,java.time.Instant,"Gets the number of nanoseconds, later along the time-line, from the start of the second.  The nanosecond-of-second value measures the total number of nanoseconds from the second returned by getEpochSecond.",FreeText,,0
3193,jdk,java.time.Instant_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.Instant,"Returns an adjusted copy of this instant.  This returns an Instant, based on this one, with the instant adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.  The result of this method is obtained by invoking the TemporalAdjuster#adjustInto(Temporal) method on the specified adjuster passing this as the argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3194,jdk,java.time.Instant_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.Instant,"Returns a copy of this instant with the specified field set to a new value.  This returns an Instant, based on this one, with the value for the specified field changed. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the adjustment is implemented here. The supported fields behave as follows:  <li>NANO_OF_SECOND - Returns an Instant with the specified nano-of-second. The epoch-second will be unchanged. <li>MICRO_OF_SECOND - Returns an Instant with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The epoch-second will be unchanged. <li>MILLI_OF_SECOND - Returns an Instant with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The epoch-second will be unchanged. <li>INSTANT_SECONDS - Returns an Instant with the specified epoch-second. The nano-of-second will be unchanged.   In all cases, if the new value is outside the valid range of values for the field then a DateTimeException will be thrown.  All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the argument. In this case, the field determines whether and how to adjust the instant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3195,jdk,java.time.Instant_goal.json,truncatedTo(java.time.temporal.TemporalUnit unit),truncatedTo,java.time.Instant,"Returns a copy of this Instant truncated to the specified unit.  Truncating the instant returns a copy of the original with fields smaller than the specified unit set to zero. The fields are calculated on the basis of using a UTC offset as seen in toString. For example, truncating with the ChronoUnit#MINUTES MINUTES unit will round down to the nearest minute, setting the seconds and nanoseconds to zero.  The unit must have a TemporalUnit#getDuration() duration that divides into the length of a standard day without remainder. This includes all supplied time units on ChronoUnit and ChronoUnit#DAYS DAYS. Other units throw an exception.  This instance is immutable and unaffected by this method call.",FreeText,,0
3196,jdk,java.time.Instant_goal.json,plus(java.time.temporal.TemporalAmount amountToAdd),plus,java.time.Instant,"Returns a copy of this instant with the specified amount added.  This returns an Instant, based on this one, with the specified amount added. The amount is typically Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#addTo(Temporal). The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to #plus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully added.  This instance is immutable and unaffected by this method call.",FreeText,,0
3197,jdk,java.time.Instant_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.Instant,"Returns a copy of this instant with the specified amount added.  This returns an Instant, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.  If the field is a ChronoUnit then the addition is implemented here. The supported fields behave as follows:  <li>NANOS - Returns a Instant with the specified number of nanoseconds added. This is equivalent to #plusNanos(long). <li>MICROS - Returns a Instant with the specified number of microseconds added. This is equivalent to #plusNanos(long) with the amount multiplied by 1,000. <li>MILLIS - Returns a Instant with the specified number of milliseconds added. This is equivalent to #plusNanos(long) with the amount multiplied by 1,000,000. <li>SECONDS - Returns a Instant with the specified number of seconds added. This is equivalent to #plusSeconds(long). <li>MINUTES - Returns a Instant with the specified number of minutes added. This is equivalent to #plusSeconds(long) with the amount multiplied by 60. <li>HOURS - Returns a Instant with the specified number of hours added. This is equivalent to #plusSeconds(long) with the amount multiplied by 3,600. <li>HALF_DAYS - Returns a Instant with the specified number of half-days added. This is equivalent to #plusSeconds(long) with the amount multiplied by 43,200 (12 hours). <li>DAYS - Returns a Instant with the specified number of days added. This is equivalent to #plusSeconds(long) with the amount multiplied by 86,400 (24 hours).   All other ChronoUnit instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the argument. In this case, the unit determines whether and how to perform the addition.  This instance is immutable and unaffected by this method call.",FreeText,,0
3198,jdk,java.time.Instant_goal.json,plusSeconds(long secondsToAdd),plusSeconds,java.time.Instant,Returns a copy of this instant with the specified duration in seconds added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3199,jdk,java.time.Instant_goal.json,plusMillis(long millisToAdd),plusMillis,java.time.Instant,Returns a copy of this instant with the specified duration in milliseconds added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3200,jdk,java.time.Instant_goal.json,plusNanos(long nanosToAdd),plusNanos,java.time.Instant,Returns a copy of this instant with the specified duration in nanoseconds added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3201,jdk,java.time.Instant_goal.json,minus(java.time.temporal.TemporalAmount amountToSubtract),minus,java.time.Instant,"Returns a copy of this instant with the specified amount subtracted.  This returns an Instant, based on this one, with the specified amount subtracted. The amount is typically Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to #minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted.  This instance is immutable and unaffected by this method call.",FreeText,,0
3202,jdk,java.time.Instant_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.Instant,"Returns a copy of this instant with the specified amount subtracted.  This returns a Instant, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.  This method is equivalent to #plus(long, TemporalUnit) with the amount negated. See that method for a full description of how addition, and thus subtraction, works.  This instance is immutable and unaffected by this method call.",FreeText,"methodResultID.equals(receiverObjectClone.plus(args[0],args[1]))",1
3203,jdk,java.time.Instant_goal.json,minusSeconds(long secondsToSubtract),minusSeconds,java.time.Instant,Returns a copy of this instant with the specified duration in seconds subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3204,jdk,java.time.Instant_goal.json,minusMillis(long millisToSubtract),minusMillis,java.time.Instant,Returns a copy of this instant with the specified duration in milliseconds subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3205,jdk,java.time.Instant_goal.json,minusNanos(long nanosToSubtract),minusNanos,java.time.Instant,Returns a copy of this instant with the specified duration in nanoseconds subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3206,jdk,java.time.Instant_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.Instant,Queries this instant using the specified query.  This queries this instant using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3207,jdk,java.time.Instant_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.Instant,"Adjusts the specified temporal object to have this instant.  This returns a temporal object of the same observable type as the input with the instant changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) twice, passing ChronoField#INSTANT_SECONDS and ChronoField#NANO_OF_SECOND as the fields.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisInstant.adjustInto(temporal); temporal = temporal.with(thisInstant);   This instance is immutable and unaffected by this method call.",FreeText,,0
3208,jdk,java.time.Instant_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.Instant,"Calculates the amount of time until another instant in terms of the specified unit.  This calculates the amount of time between two Instant objects in terms of a single TemporalUnit. The start and end points are this and the specified instant. The result will be negative if the end is before the start. The calculation returns a whole number, representing the number of complete units between the two instants. The Temporal passed to this method is converted to a Instant using #from(TemporalAccessor). For example, the amount in days between two dates can be calculated using startInstant.until(endInstant, SECONDS).  There are two equivalent ways of using this method. The first is to invoke this method. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent amount = start.until(end, SECONDS); amount = SECONDS.between(start, end);  The choice should be made based on which makes the code more readable.  The calculation is implemented in this method for ChronoUnit. The units NANOS, MICROS, MILLIS, SECONDS, MINUTES, HOURS, HALF_DAYS and DAYS are supported. Other ChronoUnit values will throw an exception.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3209,jdk,java.time.Instant_goal.json,atOffset(java.time.ZoneOffset offset),atOffset,java.time.Instant,"Combines this instant with an offset to create an OffsetDateTime.  This returns an OffsetDateTime formed from this instant at the specified offset from UTC/Greenwich. An exception will be thrown if the instant is too large to fit into an offset date-time.  This method is equivalent to OffsetDateTime#ofInstant(Instant, ZoneId) OffsetDateTime.ofInstant(this, offset).",FreeText,,0
3210,jdk,java.time.Instant_goal.json,atZone(java.time.ZoneId zone),atZone,java.time.Instant,"Combines this instant with a time-zone to create a ZonedDateTime.  This returns an ZonedDateTime formed from this instant at the specified time-zone. An exception will be thrown if the instant is too large to fit into a zoned date-time.  This method is equivalent to ZonedDateTime#ofInstant(Instant, ZoneId) ZonedDateTime.ofInstant(this, zone).",FreeText,,0
3211,jdk,java.time.Instant_goal.json,toEpochMilli(),toEpochMilli,java.time.Instant,"Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z.  If this instant represents a point on the time-line too far in the future or past to fit in a long milliseconds, then an exception is thrown.  If this instant has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.",FreeText,,0
3212,jdk,java.time.Instant_goal.json,compareTo(java.time.Instant otherInstant),compareTo,java.time.Instant,"Compares this instant to the specified instant.  The comparison is based on the time-line position of the instants. It is ""consistent with equals"", as defined by Comparable.",FreeText,,0
3213,jdk,java.time.Instant_goal.json,isAfter(java.time.Instant otherInstant),isAfter,java.time.Instant,Checks if this instant is after the specified instant.  The comparison is based on the time-line position of the instants.,FreeText,,0
3214,jdk,java.time.Instant_goal.json,isBefore(java.time.Instant otherInstant),isBefore,java.time.Instant,Checks if this instant is before the specified instant.  The comparison is based on the time-line position of the instants.,FreeText,,0
3215,jdk,java.time.Instant_goal.json,equals(java.lang.Object otherInstant),equals,java.time.Instant,Checks if this instant is equal to the specified instant.  The comparison is based on the time-line position of the instants.,FreeText,,0
3216,jdk,java.time.Instant_goal.json,hashCode(),hashCode,java.time.Instant,Returns a hash code for this instant.,FreeText,,0
3217,jdk,java.time.Instant_goal.json,toString(),toString,java.time.Instant,A string representation of this instant using ISO-8601 representation.  The format used is the same as DateTimeFormatter#ISO_INSTANT.,FreeText,,0
3218,jdk,java.time.Instant_goal.json,writeExternal(java.io.DataOutput out),writeExternal,java.time.Instant,,FreeText,,0
3219,jdk,java.time.Instant_goal.json,readExternal(java.io.DataInput in),readExternal,java.time.Instant,,FreeText,,0
3220,jdk,java.time.LocalTime_goal.json,now(),now,java.time.LocalTime,Obtains the current time from the system clock in the default time-zone.  This will query the Clock#systemDefaultZone() system clock in the default time-zone to obtain the current time.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3221,jdk,java.time.LocalTime_goal.json,now(java.time.ZoneId zone),now,java.time.LocalTime,Obtains the current time from the system clock in the specified time-zone.  This will query the Clock#system(ZoneId) system clock to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3222,jdk,java.time.LocalTime_goal.json,now(java.time.Clock clock),now,java.time.LocalTime,Obtains the current time from the specified clock.  This will query the specified clock to obtain the current time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3223,jdk,java.time.LocalTime_goal.json,"of(int hour, int minute)",of,java.time.LocalTime,Obtains an instance of LocalTime from an hour and minute.  This returns a LocalTime with the specified hour and minute. The second and nanosecond fields will be set to zero.,FreeText,,0
3224,jdk,java.time.LocalTime_goal.json,"of(int hour, int minute, int second)",of,java.time.LocalTime,"Obtains an instance of LocalTime from an hour, minute and second.  This returns a LocalTime with the specified hour, minute and second. The nanosecond field will be set to zero.",FreeText,,0
3225,jdk,java.time.LocalTime_goal.json,"of(int hour, int minute, int second, int nanoOfSecond)",of,java.time.LocalTime,"Obtains an instance of LocalTime from an hour, minute, second and nanosecond.  This returns a LocalTime with the specified hour, minute, second and nanosecond.",FreeText,,0
3226,jdk,java.time.LocalTime_goal.json,ofSecondOfDay(long secondOfDay),ofSecondOfDay,java.time.LocalTime,Obtains an instance of LocalTime from a second-of-day value.  This returns a LocalTime with the specified second-of-day. The nanosecond field will be set to zero.,FreeText,,0
3227,jdk,java.time.LocalTime_goal.json,ofNanoOfDay(long nanoOfDay),ofNanoOfDay,java.time.LocalTime,Obtains an instance of LocalTime from a nanos-of-day value.  This returns a LocalTime with the specified nanosecond-of-day.,FreeText,,0
3228,jdk,java.time.LocalTime_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.LocalTime,"Obtains an instance of LocalTime from a temporal object.  This obtains a local time based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of LocalTime.  The conversion uses the TemporalQueries#localTime() query, which relies on extracting the ChronoField#NANO_OF_DAY NANO_OF_DAY field.  This method matches the signature of the functional interface TemporalQuery allowing it to be used in queries via method reference, LocalTime::from.",FreeText,,0
3229,jdk,java.time.LocalTime_goal.json,parse(java.lang.CharSequence text),parse,java.time.LocalTime,Obtains an instance of LocalTime from a text string such as 10:15.  The string must represent a valid time and is parsed using java.time.format.DateTimeFormatter#ISO_LOCAL_TIME.,FreeText,,0
3230,jdk,java.time.LocalTime_goal.json,"parse(java.lang.CharSequence text, java.time.format.DateTimeFormatter formatter)",parse,java.time.LocalTime,"Obtains an instance of LocalTime from a text string using a specific formatter.  The text is parsed using the formatter, returning a time.",FreeText,,0
3231,jdk,java.time.LocalTime_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.LocalTime,"Checks if the specified field is supported.  This checks if this time can be queried for the specified field. If false, then calling the #range(TemporalField) range, #get(TemporalField) get and #with(TemporalField, long) methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>NANO_OF_SECOND <li>NANO_OF_DAY <li>MICRO_OF_SECOND <li>MICRO_OF_DAY <li>MILLI_OF_SECOND <li>MILLI_OF_DAY <li>SECOND_OF_MINUTE <li>SECOND_OF_DAY <li>MINUTE_OF_HOUR <li>MINUTE_OF_DAY <li>HOUR_OF_AMPM <li>CLOCK_HOUR_OF_AMPM <li>HOUR_OF_DAY <li>CLOCK_HOUR_OF_DAY <li>AMPM_OF_DAY  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3232,jdk,java.time.LocalTime_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.LocalTime,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception.  If the unit is a ChronoUnit then the query is implemented here. The supported units are:  <li>NANOS <li>MICROS <li>MILLIS <li>SECONDS <li>MINUTES <li>HOURS <li>HALF_DAYS  All other ChronoUnit instances will return false.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument. Whether the unit is supported is determined by the unit.",FreeText,,0
3233,jdk,java.time.LocalTime_goal.json,range(java.time.temporal.TemporalField field),range,java.time.LocalTime,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3234,jdk,java.time.LocalTime_goal.json,get(java.time.temporal.TemporalField field),get,java.time.LocalTime,"Gets the value of the specified field from this time as an int.  This queries this time for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this time, except NANO_OF_DAY and MICRO_OF_DAY which are too large to fit in an int and throw a DateTimeException. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3235,jdk,java.time.LocalTime_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.LocalTime,"Gets the value of the specified field from this time as a long.  This queries this time for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this time. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3236,jdk,java.time.LocalTime_goal.json,getHour(),getHour,java.time.LocalTime,Gets the hour-of-day field.,FreeText,,0
3237,jdk,java.time.LocalTime_goal.json,getMinute(),getMinute,java.time.LocalTime,Gets the minute-of-hour field.,FreeText,,0
3238,jdk,java.time.LocalTime_goal.json,getSecond(),getSecond,java.time.LocalTime,Gets the second-of-minute field.,FreeText,,0
3239,jdk,java.time.LocalTime_goal.json,getNano(),getNano,java.time.LocalTime,Gets the nano-of-second field.,FreeText,,0
3240,jdk,java.time.LocalTime_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.LocalTime,"Returns an adjusted copy of this time.  This returns a LocalTime, based on this one, with the time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.  A simple adjuster might simply set the one of the fields, such as the hour field. A more complex adjuster might set the time to the last hour of the day.  The result of this method is obtained by invoking the TemporalAdjuster#adjustInto(Temporal) method on the specified adjuster passing this as the argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3241,jdk,java.time.LocalTime_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.LocalTime,"Returns a copy of this time with the specified field set to a new value.  This returns a LocalTime, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the hour, minute or second. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the adjustment is implemented here. The supported fields behave as follows:  <li>NANO_OF_SECOND - Returns a LocalTime with the specified nano-of-second. The hour, minute and second will be unchanged. <li>NANO_OF_DAY - Returns a LocalTime with the specified nano-of-day. This completely replaces the time and is equivalent to #ofNanoOfDay(long). <li>MICRO_OF_SECOND - Returns a LocalTime with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The hour, minute and second will be unchanged. <li>MICRO_OF_DAY - Returns a LocalTime with the specified micro-of-day. This completely replaces the time and is equivalent to using #ofNanoOfDay(long) with the micro-of-day multiplied by 1,000. <li>MILLI_OF_SECOND - Returns a LocalTime with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The hour, minute and second will be unchanged. <li>MILLI_OF_DAY - Returns a LocalTime with the specified milli-of-day. This completely replaces the time and is equivalent to using #ofNanoOfDay(long) with the milli-of-day multiplied by 1,000,000. <li>SECOND_OF_MINUTE - Returns a LocalTime with the specified second-of-minute. The hour, minute and nano-of-second will be unchanged. <li>SECOND_OF_DAY - Returns a LocalTime with the specified second-of-day. The nano-of-second will be unchanged. <li>MINUTE_OF_HOUR - Returns a LocalTime with the specified minute-of-hour. The hour, second-of-minute and nano-of-second will be unchanged. <li>MINUTE_OF_DAY - Returns a LocalTime with the specified minute-of-day. The second-of-minute and nano-of-second will be unchanged. <li>HOUR_OF_AMPM - Returns a LocalTime with the specified hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged. <li>CLOCK_HOUR_OF_AMPM - Returns a LocalTime with the specified clock-hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged. <li>HOUR_OF_DAY - Returns a LocalTime with the specified hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged. <li>CLOCK_HOUR_OF_DAY - Returns a LocalTime with the specified clock-hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged. <li>AMPM_OF_DAY - Returns a LocalTime with the specified AM/PM. The hour-of-am-pm, minute-of-hour, second-of-minute and nano-of-second will be unchanged.   In all cases, if the new value is outside the valid range of values for the field then a DateTimeException will be thrown.  All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the argument. In this case, the field determines whether and how to adjust the instant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3242,jdk,java.time.LocalTime_goal.json,withHour(int hour),withHour,java.time.LocalTime,Returns a copy of this LocalTime with the hour-of-day value altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3243,jdk,java.time.LocalTime_goal.json,withMinute(int minute),withMinute,java.time.LocalTime,Returns a copy of this LocalTime with the minute-of-hour value altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3244,jdk,java.time.LocalTime_goal.json,withSecond(int second),withSecond,java.time.LocalTime,Returns a copy of this LocalTime with the second-of-minute value altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3245,jdk,java.time.LocalTime_goal.json,withNano(int nanoOfSecond),withNano,java.time.LocalTime,Returns a copy of this LocalTime with the nano-of-second value altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3246,jdk,java.time.LocalTime_goal.json,truncatedTo(java.time.temporal.TemporalUnit unit),truncatedTo,java.time.LocalTime,"Returns a copy of this LocalTime with the time truncated.  Truncating the time returns a copy of the original time with fields smaller than the specified unit set to zero. For example, truncating with the ChronoUnit#MINUTES minutes unit will set the second-of-minute and nano-of-second field to zero.  The unit must have a TemporalUnit#getDuration() duration that divides into the length of a standard day without remainder. This includes all supplied time units on ChronoUnit and ChronoUnit#DAYS DAYS. Other units throw an exception.  This instance is immutable and unaffected by this method call.",FreeText,,0
3247,jdk,java.time.LocalTime_goal.json,plus(java.time.temporal.TemporalAmount amountToAdd),plus,java.time.LocalTime,"Returns a copy of this time with the specified amount added.  This returns a LocalTime, based on this one, with the specified amount added. The amount is typically Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#addTo(Temporal). The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to #plus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully added.  This instance is immutable and unaffected by this method call.",FreeText,,0
3248,jdk,java.time.LocalTime_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.LocalTime,"Returns a copy of this time with the specified amount added.  This returns a LocalTime, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.  If the field is a ChronoUnit then the addition is implemented here. The supported fields behave as follows:  <li>NANOS - Returns a LocalTime with the specified number of nanoseconds added. This is equivalent to #plusNanos(long). <li>MICROS - Returns a LocalTime with the specified number of microseconds added. This is equivalent to #plusNanos(long) with the amount multiplied by 1,000. <li>MILLIS - Returns a LocalTime with the specified number of milliseconds added. This is equivalent to #plusNanos(long) with the amount multiplied by 1,000,000. <li>SECONDS - Returns a LocalTime with the specified number of seconds added. This is equivalent to #plusSeconds(long). <li>MINUTES - Returns a LocalTime with the specified number of minutes added. This is equivalent to #plusMinutes(long). <li>HOURS - Returns a LocalTime with the specified number of hours added. This is equivalent to #plusHours(long). <li>HALF_DAYS - Returns a LocalTime with the specified number of half-days added. This is equivalent to #plusHours(long) with the amount multiplied by 12.   All other ChronoUnit instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the argument. In this case, the unit determines whether and how to perform the addition.  This instance is immutable and unaffected by this method call.",FreeText,,0
3249,jdk,java.time.LocalTime_goal.json,plusHours(long hoursToAdd),plusHours,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in hours added.  This adds the specified number of hours to this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3250,jdk,java.time.LocalTime_goal.json,plusMinutes(long minutesToAdd),plusMinutes,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in minutes added.  This adds the specified number of minutes to this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3251,jdk,java.time.LocalTime_goal.json,plusSeconds(long secondstoAdd),plusSeconds,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in seconds added.  This adds the specified number of seconds to this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3252,jdk,java.time.LocalTime_goal.json,plusNanos(long nanosToAdd),plusNanos,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in nanoseconds added.  This adds the specified number of nanoseconds to this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3253,jdk,java.time.LocalTime_goal.json,minus(java.time.temporal.TemporalAmount amountToSubtract),minus,java.time.LocalTime,"Returns a copy of this time with the specified amount subtracted.  This returns a LocalTime, based on this one, with the specified amount subtracted. The amount is typically Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to #minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted.  This instance is immutable and unaffected by this method call.",FreeText,,0
3254,jdk,java.time.LocalTime_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.LocalTime,"Returns a copy of this time with the specified amount subtracted.  This returns a LocalTime, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.  This method is equivalent to #plus(long, TemporalUnit) with the amount negated. See that method for a full description of how addition, and thus subtraction, works.  This instance is immutable and unaffected by this method call.",FreeText,"methodResultID.equals(receiverObjectClone.plus(args[0],args[1]))",1
3255,jdk,java.time.LocalTime_goal.json,minusHours(long hoursToSubtract),minusHours,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in hours subtracted.  This subtracts the specified number of hours from this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3256,jdk,java.time.LocalTime_goal.json,minusMinutes(long minutesToSubtract),minusMinutes,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in minutes subtracted.  This subtracts the specified number of minutes from this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3257,jdk,java.time.LocalTime_goal.json,minusSeconds(long secondsToSubtract),minusSeconds,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in seconds subtracted.  This subtracts the specified number of seconds from this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3258,jdk,java.time.LocalTime_goal.json,minusNanos(long nanosToSubtract),minusNanos,java.time.LocalTime,"Returns a copy of this LocalTime with the specified period in nanoseconds subtracted.  This subtracts the specified number of nanoseconds from this time, returning a new time. The calculation wraps around midnight.  This instance is immutable and unaffected by this method call.",FreeText,,0
3259,jdk,java.time.LocalTime_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.LocalTime,Queries this time using the specified query.  This queries this time using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3260,jdk,java.time.LocalTime_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.LocalTime,"Adjusts the specified temporal object to have the same time as this object.  This returns a temporal object of the same observable type as the input with the time changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) passing ChronoField#NANO_OF_DAY as the field.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisLocalTime.adjustInto(temporal); temporal = temporal.with(thisLocalTime);   This instance is immutable and unaffected by this method call.",FreeText,,0
3261,jdk,java.time.LocalTime_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.LocalTime,"Calculates the amount of time until another time in terms of the specified unit.  This calculates the amount of time between two LocalTime objects in terms of a single TemporalUnit. The start and end points are this and the specified time. The result will be negative if the end is before the start. The Temporal passed to this method is converted to a LocalTime using #from(TemporalAccessor). For example, the amount in hours between two times can be calculated using startTime.until(endTime, HOURS).  The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30 and 13:29 will only be one hour as it is one minute short of two hours.  There are two equivalent ways of using this method. The first is to invoke this method. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent amount = start.until(end, MINUTES); amount = MINUTES.between(start, end);  The choice should be made based on which makes the code more readable.  The calculation is implemented in this method for ChronoUnit. The units NANOS, MICROS, MILLIS, SECONDS, MINUTES, HOURS and HALF_DAYS are supported. Other ChronoUnit values will throw an exception.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3262,jdk,java.time.LocalTime_goal.json,format(java.time.format.DateTimeFormatter formatter),format,java.time.LocalTime,Formats this time using the specified formatter.  This time will be passed to the formatter to produce a string.,FreeText,,0
3263,jdk,java.time.LocalTime_goal.json,atDate(java.time.LocalDate date),atDate,java.time.LocalTime,Combines this time with a date to create a LocalDateTime.  This returns a LocalDateTime formed from this time at the specified date. All possible combinations of date and time are valid.,FreeText,,0
3264,jdk,java.time.LocalTime_goal.json,atOffset(java.time.ZoneOffset offset),atOffset,java.time.LocalTime,Combines this time with an offset to create an OffsetTime.  This returns an OffsetTime formed from this time at the specified offset. All possible combinations of time and offset are valid.,FreeText,,0
3265,jdk,java.time.LocalTime_goal.json,toSecondOfDay(),toSecondOfDay,java.time.LocalTime,"Extracts the time as seconds of day, from 0 to 24 * 60 * 60 - 1.",FreeText,,0
3266,jdk,java.time.LocalTime_goal.json,toNanoOfDay(),toNanoOfDay,java.time.LocalTime,"Extracts the time as nanos of day, from 0 to 24 * 60 * 60 * 1,000,000,000 - 1.",FreeText,,0
3267,jdk,java.time.LocalTime_goal.json,compareTo(java.time.LocalTime other),compareTo,java.time.LocalTime,"Compares this LocalTime to another time.  The comparison is based on the time-line position of the local times within a day. It is ""consistent with equals"", as defined by Comparable.",FreeText,,0
3268,jdk,java.time.LocalTime_goal.json,isAfter(java.time.LocalTime other),isAfter,java.time.LocalTime,Checks if this LocalTime is after the specified time.  The comparison is based on the time-line position of the time within a day.,FreeText,,0
3269,jdk,java.time.LocalTime_goal.json,isBefore(java.time.LocalTime other),isBefore,java.time.LocalTime,Checks if this LocalTime is before the specified time.  The comparison is based on the time-line position of the time within a day.,FreeText,,0
3270,jdk,java.time.LocalTime_goal.json,equals(java.lang.Object obj),equals,java.time.LocalTime,"Checks if this time is equal to another time.  The comparison is based on the time-line position of the time within a day.  Only objects of type LocalTime are compared, other types return false. To compare the date of two TemporalAccessor instances, use ChronoField#NANO_OF_DAY as a comparator.",FreeText,,0
3271,jdk,java.time.LocalTime_goal.json,hashCode(),hashCode,java.time.LocalTime,A hash code for this time.,FreeText,,0
3272,jdk,java.time.LocalTime_goal.json,toString(),toString,java.time.LocalTime,"Outputs this time as a String, such as 10:15.  The output will be one of the following ISO-8601 formats:  <li>HH:mm</li> <li>HH:mm:ss</li> <li>HH:mm:ss.SSS</li> <li>HH:mm:ss.SSSSSS</li> <li>HH:mm:ss.SSSSSSSSS</li>  The format used will be the shortest that outputs the full value of the time where the omitted parts are implied to be zero.",FreeText,,0
3273,jdk,java.time.LocalTime_goal.json,writeExternal(java.io.DataOutput out),writeExternal,java.time.LocalTime,,FreeText,,0
3274,jdk,java.time.LocalTime_goal.json,readExternal(java.io.DataInput in),readExternal,java.time.LocalTime,,FreeText,,0
3275,jdk,java.time.MonthDay_goal.json,now(),now,java.time.MonthDay,Obtains the current month-day from the system clock in the default time-zone.  This will query the java.time.Clock#systemDefaultZone() system clock in the default time-zone to obtain the current month-day.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3276,jdk,java.time.MonthDay_goal.json,now(java.time.ZoneId zone),now,java.time.MonthDay,Obtains the current month-day from the system clock in the specified time-zone.  This will query the Clock#system(java.time.ZoneId) system clock to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3277,jdk,java.time.MonthDay_goal.json,now(java.time.Clock clock),now,java.time.MonthDay,Obtains the current month-day from the specified clock.  This will query the specified clock to obtain the current month-day. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3278,jdk,java.time.MonthDay_goal.json,"of(java.time.Month month, int dayOfMonth)",of,java.time.MonthDay,"Obtains an instance of MonthDay.  The day-of-month must be valid for the month within a leap year. Hence, for February, day 29 is valid.  For example, passing in April and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.",FreeText,,0
3279,jdk,java.time.MonthDay_goal.json,"of(int month, int dayOfMonth)",of,java.time.MonthDay,"Obtains an instance of MonthDay.  The day-of-month must be valid for the month within a leap year. Hence, for month 2 (February), day 29 is valid.  For example, passing in month 4 (April) and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.",FreeText,,0
3280,jdk,java.time.MonthDay_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.MonthDay,"Obtains an instance of MonthDay from a temporal object.  This obtains a month-day based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of MonthDay.  The conversion extracts the ChronoField#MONTH_OF_YEAR MONTH_OF_YEAR and ChronoField#DAY_OF_MONTH DAY_OF_MONTH fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a LocalDate.  This method matches the signature of the functional interface TemporalQuery allowing it to be used in queries via method reference, MonthDay::from.",FreeText,,0
3281,jdk,java.time.MonthDay_goal.json,parse(java.lang.CharSequence text),parse,java.time.MonthDay,Obtains an instance of MonthDay from a text string such as --12-03.  The string must represent a valid month-day. The format is --MM-dd.,FreeText,,0
3282,jdk,java.time.MonthDay_goal.json,"parse(java.lang.CharSequence text, java.time.format.DateTimeFormatter formatter)",parse,java.time.MonthDay,"Obtains an instance of MonthDay from a text string using a specific formatter.  The text is parsed using the formatter, returning a month-day.",FreeText,,0
3283,jdk,java.time.MonthDay_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.MonthDay,"Checks if the specified field is supported.  This checks if this month-day can be queried for the specified field. If false, then calling the #range(TemporalField) range and #get(TemporalField) get methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>MONTH_OF_YEAR <li>YEAR  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3284,jdk,java.time.MonthDay_goal.json,range(java.time.temporal.TemporalField field),range,java.time.MonthDay,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This month-day is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3285,jdk,java.time.MonthDay_goal.json,get(java.time.temporal.TemporalField field),get,java.time.MonthDay,"Gets the value of the specified field from this month-day as an int.  This queries this month-day for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this month-day. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3286,jdk,java.time.MonthDay_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.MonthDay,"Gets the value of the specified field from this month-day as a long.  This queries this month-day for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this month-day. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3287,jdk,java.time.MonthDay_goal.json,getMonthValue(),getMonthValue,java.time.MonthDay,Gets the month-of-year field from 1 to 12.  This method returns the month as an int from 1 to 12. Application code is frequently clearer if the enum Month is used by calling #getMonth().,FreeText,,0
3288,jdk,java.time.MonthDay_goal.json,getMonth(),getMonth,java.time.MonthDay,Gets the month-of-year field using the Month enum.  This method returns the enum Month for the month. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the Month#getValue() int value.,FreeText,,0
3289,jdk,java.time.MonthDay_goal.json,getDayOfMonth(),getDayOfMonth,java.time.MonthDay,Gets the day-of-month field.  This method returns the primitive int value for the day-of-month.,FreeText,,0
3290,jdk,java.time.MonthDay_goal.json,isValidYear(int year),isValidYear,java.time.MonthDay,Checks if the year is valid for this month-day.  This method checks whether this month and day and the input year form a valid date. This can only return false for February 29th.,FreeText,,0
3291,jdk,java.time.MonthDay_goal.json,withMonth(int month),withMonth,java.time.MonthDay,"Returns a copy of this MonthDay with the month-of-year altered.  This returns a month-day with the specified month. If the day-of-month is invalid for the specified month, the day will be adjusted to the last valid day-of-month.  This instance is immutable and unaffected by this method call.",FreeText,,0
3292,jdk,java.time.MonthDay_goal.json,with(java.time.Month month),with,java.time.MonthDay,"Returns a copy of this MonthDay with the month-of-year altered.  This returns a month-day with the specified month. If the day-of-month is invalid for the specified month, the day will be adjusted to the last valid day-of-month.  This instance is immutable and unaffected by this method call.",FreeText,,0
3293,jdk,java.time.MonthDay_goal.json,withDayOfMonth(int dayOfMonth),withDayOfMonth,java.time.MonthDay,"Returns a copy of this MonthDay with the day-of-month altered.  This returns a month-day with the specified day-of-month. If the day-of-month is invalid for the month, an exception is thrown.  This instance is immutable and unaffected by this method call.",FreeText,,0
3294,jdk,java.time.MonthDay_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.MonthDay,Queries this month-day using the specified query.  This queries this month-day using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3295,jdk,java.time.MonthDay_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.MonthDay,"Adjusts the specified temporal object to have this month-day.  This returns a temporal object of the same observable type as the input with the month and day-of-month changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) twice, passing ChronoField#MONTH_OF_YEAR and ChronoField#DAY_OF_MONTH as the fields. If the specified temporal object does not use the ISO calendar system then a DateTimeException is thrown.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisMonthDay.adjustInto(temporal); temporal = temporal.with(thisMonthDay);   This instance is immutable and unaffected by this method call.",FreeText,,0
3296,jdk,java.time.MonthDay_goal.json,format(java.time.format.DateTimeFormatter formatter),format,java.time.MonthDay,Formats this month-day using the specified formatter.  This month-day will be passed to the formatter to produce a string.,FreeText,,0
3297,jdk,java.time.MonthDay_goal.json,atYear(int year),atYear,java.time.MonthDay,Combines this month-day with a year to create a LocalDate.  This returns a LocalDate formed from this month-day and the specified year.  A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.  This instance is immutable and unaffected by this method call.,FreeText,,0
3298,jdk,java.time.MonthDay_goal.json,compareTo(java.time.MonthDay other),compareTo,java.time.MonthDay,"Compares this month-day to another month-day.  The comparison is based first on value of the month, then on the value of the day. It is ""consistent with equals"", as defined by Comparable.",FreeText,,0
3299,jdk,java.time.MonthDay_goal.json,isAfter(java.time.MonthDay other),isAfter,java.time.MonthDay,Is this month-day after the specified month-day.,FreeText,,0
3300,jdk,java.time.MonthDay_goal.json,isBefore(java.time.MonthDay other),isBefore,java.time.MonthDay,Is this month-day before the specified month-day.,FreeText,,0
3301,jdk,java.time.MonthDay_goal.json,equals(java.lang.Object obj),equals,java.time.MonthDay,Checks if this month-day is equal to another month-day.  The comparison is based on the time-line position of the month-day within a year.,FreeText,,0
3302,jdk,java.time.MonthDay_goal.json,hashCode(),hashCode,java.time.MonthDay,A hash code for this month-day.,FreeText,,0
3303,jdk,java.time.MonthDay_goal.json,toString(),toString,java.time.MonthDay,"Outputs this month-day as a String, such as --12-03.  The output will be in the format {@code --MM-dd}:",FreeText,,0
3304,jdk,java.time.MonthDay_goal.json,writeExternal(java.io.DataOutput out),writeExternal,java.time.MonthDay,,FreeText,,0
3305,jdk,java.time.MonthDay_goal.json,readExternal(java.io.DataInput in),readExternal,java.time.MonthDay,,FreeText,,0
3306,jdk,java.time.OffsetDateTime_goal.json,timeLineOrder(),timeLineOrder,java.time.OffsetDateTime,Gets a comparator that compares two OffsetDateTime instances based solely on the instant.  This method differs from the comparison in #compareTo in that it only compares the underlying instant.,FreeText,,0
3307,jdk,java.time.OffsetDateTime_goal.json,now(),now,java.time.OffsetDateTime,Obtains the current date-time from the system clock in the default time-zone.  This will query the java.time.Clock#systemDefaultZone() system clock in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3308,jdk,java.time.OffsetDateTime_goal.json,now(java.time.ZoneId zone),now,java.time.OffsetDateTime,Obtains the current date-time from the system clock in the specified time-zone.  This will query the Clock#system(java.time.ZoneId) system clock to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3309,jdk,java.time.OffsetDateTime_goal.json,now(java.time.Clock clock),now,java.time.OffsetDateTime,Obtains the current date-time from the specified clock.  This will query the specified clock to obtain the current date-time. The offset will be calculated from the time-zone in the clock.  Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3310,jdk,java.time.OffsetDateTime_goal.json,"of(java.time.LocalDate date, java.time.LocalTime time, java.time.ZoneOffset offset)",of,java.time.OffsetDateTime,"Obtains an instance of OffsetDateTime from a date, time and offset.  This creates an offset date-time with the specified local date, time and offset.",FreeText,,0
3311,jdk,java.time.OffsetDateTime_goal.json,"of(java.time.LocalDateTime dateTime, java.time.ZoneOffset offset)",of,java.time.OffsetDateTime,Obtains an instance of OffsetDateTime from a date-time and offset.  This creates an offset date-time with the specified local date-time and offset.,FreeText,,0
3312,jdk,java.time.OffsetDateTime_goal.json,"of(int year, int month, int dayOfMonth, int hour, int minute, int second, int nanoOfSecond, java.time.ZoneOffset offset)",of,java.time.OffsetDateTime,"Obtains an instance of OffsetDateTime from a year, month, day, hour, minute, second, nanosecond and offset.  This creates an offset date-time with the seven specified fields.  This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. LocalDateTime has five additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.",FreeText,,0
3313,jdk,java.time.OffsetDateTime_goal.json,"ofInstant(java.time.Instant instant, java.time.ZoneId zone)",ofInstant,java.time.OffsetDateTime,Obtains an instance of OffsetDateTime from an Instant and zone ID.  This creates an offset date-time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant.,FreeText,,0
3314,jdk,java.time.OffsetDateTime_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.OffsetDateTime,"Obtains an instance of OffsetDateTime from a temporal object.  This obtains an offset date-time based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of OffsetDateTime.  The conversion will first obtain a ZoneOffset from the temporal object. It will then try to obtain a LocalDateTime, falling back to an Instant if necessary. The result will be the combination of ZoneOffset with either with LocalDateTime or Instant. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.  This method matches the signature of the functional interface TemporalQuery allowing it to be used in queries via method reference, OffsetDateTime::from.",FreeText,,0
3315,jdk,java.time.OffsetDateTime_goal.json,parse(java.lang.CharSequence text),parse,java.time.OffsetDateTime,Obtains an instance of OffsetDateTime from a text string such as 2007-12-03T10:15:30+01:00.  The string must represent a valid date-time and is parsed using java.time.format.DateTimeFormatter#ISO_OFFSET_DATE_TIME.,FreeText,,0
3316,jdk,java.time.OffsetDateTime_goal.json,"parse(java.lang.CharSequence text, java.time.format.DateTimeFormatter formatter)",parse,java.time.OffsetDateTime,"Obtains an instance of OffsetDateTime from a text string using a specific formatter.  The text is parsed using the formatter, returning a date-time.",FreeText,,0
3317,jdk,java.time.OffsetDateTime_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.OffsetDateTime,"Checks if the specified field is supported.  This checks if this date-time can be queried for the specified field. If false, then calling the #range(TemporalField) range, #get(TemporalField) get and #with(TemporalField, long) methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>NANO_OF_SECOND <li>NANO_OF_DAY <li>MICRO_OF_SECOND <li>MICRO_OF_DAY <li>MILLI_OF_SECOND <li>MILLI_OF_DAY <li>SECOND_OF_MINUTE <li>SECOND_OF_DAY <li>MINUTE_OF_HOUR <li>MINUTE_OF_DAY <li>HOUR_OF_AMPM <li>CLOCK_HOUR_OF_AMPM <li>HOUR_OF_DAY <li>CLOCK_HOUR_OF_DAY <li>AMPM_OF_DAY <li>DAY_OF_WEEK <li>ALIGNED_DAY_OF_WEEK_IN_MONTH <li>ALIGNED_DAY_OF_WEEK_IN_YEAR <li>DAY_OF_MONTH <li>DAY_OF_YEAR <li>EPOCH_DAY <li>ALIGNED_WEEK_OF_MONTH <li>ALIGNED_WEEK_OF_YEAR <li>MONTH_OF_YEAR <li>PROLEPTIC_MONTH <li>YEAR_OF_ERA <li>YEAR <li>ERA <li>INSTANT_SECONDS <li>OFFSET_SECONDS  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3318,jdk,java.time.OffsetDateTime_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.OffsetDateTime,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception.  If the unit is a ChronoUnit then the query is implemented here. The supported units are:  <li>NANOS <li>MICROS <li>MILLIS <li>SECONDS <li>MINUTES <li>HOURS <li>HALF_DAYS <li>DAYS <li>WEEKS <li>MONTHS <li>YEARS <li>DECADES <li>CENTURIES <li>MILLENNIA <li>ERAS  All other ChronoUnit instances will return false.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument. Whether the unit is supported is determined by the unit.",FreeText,,0
3319,jdk,java.time.OffsetDateTime_goal.json,range(java.time.temporal.TemporalField field),range,java.time.OffsetDateTime,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This date-time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3320,jdk,java.time.OffsetDateTime_goal.json,get(java.time.temporal.TemporalField field),get,java.time.OffsetDateTime,"Gets the value of the specified field from this date-time as an int.  This queries this date-time for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this date-time, except NANO_OF_DAY, MICRO_OF_DAY, EPOCH_DAY, PROLEPTIC_MONTH and INSTANT_SECONDS which are too large to fit in an int and throw a DateTimeException. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3321,jdk,java.time.OffsetDateTime_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.OffsetDateTime,"Gets the value of the specified field from this date-time as a long.  This queries this date-time for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this date-time. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3322,jdk,java.time.OffsetDateTime_goal.json,getOffset(),getOffset,java.time.OffsetDateTime,"Gets the zone offset, such as '+01:00'.  This is the offset of the local date-time from UTC/Greenwich.",FreeText,,0
3323,jdk,java.time.OffsetDateTime_goal.json,withOffsetSameLocal(java.time.ZoneOffset offset),withOffsetSameLocal,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified offset ensuring that the result has the same local date-time.  This method returns an object with the same LocalDateTime and the specified ZoneOffset. No calculation is needed or performed. For example, if this time represents 2007-12-03T10:30+02:00 and the offset specified is +03:00, then this method will return 2007-12-03T10:30+03:00.  To take into account the difference between the offsets, and adjust the time fields, use #withOffsetSameInstant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3324,jdk,java.time.OffsetDateTime_goal.json,withOffsetSameInstant(java.time.ZoneOffset offset),withOffsetSameInstant,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified offset ensuring that the result is at the same instant.  This method returns an object with the specified ZoneOffset and a LocalDateTime adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant. This is useful for finding the local time in a different offset. For example, if this time represents 2007-12-03T10:30+02:00 and the offset specified is +03:00, then this method will return 2007-12-03T11:30+03:00.  To change the offset without adjusting the local time use #withOffsetSameLocal.  This instance is immutable and unaffected by this method call.",FreeText,,0
3325,jdk,java.time.OffsetDateTime_goal.json,toLocalDateTime(),toLocalDateTime,java.time.OffsetDateTime,"Gets the LocalDateTime part of this offset date-time.  This returns a LocalDateTime with the same year, month, day and time as this date-time.",FreeText,,0
3326,jdk,java.time.OffsetDateTime_goal.json,toLocalDate(),toLocalDate,java.time.OffsetDateTime,"Gets the LocalDate part of this date-time.  This returns a LocalDate with the same year, month and day as this date-time.",FreeText,,0
3327,jdk,java.time.OffsetDateTime_goal.json,getYear(),getYear,java.time.OffsetDateTime,"Gets the year field.  This method returns the primitive int value for the year.  The year returned by this method is proleptic as per get(YEAR). To obtain the year-of-era, use get(YEAR_OF_ERA).",FreeText,,0
3328,jdk,java.time.OffsetDateTime_goal.json,getMonthValue(),getMonthValue,java.time.OffsetDateTime,Gets the month-of-year field from 1 to 12.  This method returns the month as an int from 1 to 12. Application code is frequently clearer if the enum Month is used by calling #getMonth().,FreeText,,0
3329,jdk,java.time.OffsetDateTime_goal.json,getMonth(),getMonth,java.time.OffsetDateTime,Gets the month-of-year field using the Month enum.  This method returns the enum Month for the month. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the Month#getValue() int value.,FreeText,,0
3330,jdk,java.time.OffsetDateTime_goal.json,getDayOfMonth(),getDayOfMonth,java.time.OffsetDateTime,Gets the day-of-month field.  This method returns the primitive int value for the day-of-month.,FreeText,,0
3331,jdk,java.time.OffsetDateTime_goal.json,getDayOfYear(),getDayOfYear,java.time.OffsetDateTime,Gets the day-of-year field.  This method returns the primitive int value for the day-of-year.,FreeText,,0
3332,jdk,java.time.OffsetDateTime_goal.json,getDayOfWeek(),getDayOfWeek,java.time.OffsetDateTime,"Gets the day-of-week field, which is an enum DayOfWeek.  This method returns the enum java.time.DayOfWeek for the day-of-week. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the java.time.DayOfWeek#getValue() int value.  Additional information can be obtained from the DayOfWeek. This includes textual names of the values.",FreeText,,0
3333,jdk,java.time.OffsetDateTime_goal.json,toLocalTime(),toLocalTime,java.time.OffsetDateTime,"Gets the LocalTime part of this date-time.  This returns a LocalTime with the same hour, minute, second and nanosecond as this date-time.",FreeText,,0
3334,jdk,java.time.OffsetDateTime_goal.json,getHour(),getHour,java.time.OffsetDateTime,Gets the hour-of-day field.,FreeText,,0
3335,jdk,java.time.OffsetDateTime_goal.json,getMinute(),getMinute,java.time.OffsetDateTime,Gets the minute-of-hour field.,FreeText,,0
3336,jdk,java.time.OffsetDateTime_goal.json,getSecond(),getSecond,java.time.OffsetDateTime,Gets the second-of-minute field.,FreeText,,0
3337,jdk,java.time.OffsetDateTime_goal.json,getNano(),getNano,java.time.OffsetDateTime,Gets the nano-of-second field.,FreeText,,0
3338,jdk,java.time.OffsetDateTime_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.OffsetDateTime,"Returns an adjusted copy of this date-time.  This returns an OffsetDateTime, based on this one, with the date-time adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.  A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in TemporalAdjuster. These include finding the ""last day of the month"" and ""next Wednesday"". Key date-time classes also implement the TemporalAdjuster interface, such as Month and java.time.MonthDay MonthDay. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.  For example this code returns a date on the last day of July:  import static java.time.Month.*; import static java.time.temporal.Adjusters.*; result = offsetDateTime.with(JULY).with(lastDayOfMonth());   The classes LocalDate, LocalTime and ZoneOffset implement TemporalAdjuster, thus this method can be used to change the date, time or offset:  result = offsetDateTime.with(date); result = offsetDateTime.with(time); result = offsetDateTime.with(offset);   The result of this method is obtained by invoking the TemporalAdjuster#adjustInto(Temporal) method on the specified adjuster passing this as the argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3339,jdk,java.time.OffsetDateTime_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.OffsetDateTime,"Returns a copy of this date-time with the specified field set to a new value.  TThis returns an OffsetDateTime, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year, month or day-of-month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.  In some cases, changing the specified field can cause the resulting date-time to become invalid, such as changing the month from 31st January to February would make the day-of-month invalid. In cases like this, the field is responsible for resolving the date. Typically it will choose the previous valid date, which would be the last valid day of February in this example.  If the field is a ChronoField then the adjustment is implemented here.  The INSTANT_SECONDS field will return a date-time with the specified instant. The offset and nano-of-second are unchanged. If the new instant value is outside the valid range then a DateTimeException will be thrown.  The OFFSET_SECONDS field will return a date-time with the specified offset. The local date-time is unaltered. If the new offset value is outside the valid range then a DateTimeException will be thrown.  The other #isSupported(TemporalField) supported fields will behave as per the matching method on LocalDateTime#with(TemporalField, long) LocalDateTime. In this case, the offset is not part of the calculation and will be unchanged.  All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the argument. In this case, the field determines whether and how to adjust the instant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3340,jdk,java.time.OffsetDateTime_goal.json,withYear(int year),withYear,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the year altered. The offset does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.  This instance is immutable and unaffected by this method call.",FreeText,,0
3341,jdk,java.time.OffsetDateTime_goal.json,withMonth(int month),withMonth,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the month-of-year altered. The offset does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.  This instance is immutable and unaffected by this method call.",FreeText,,0
3342,jdk,java.time.OffsetDateTime_goal.json,withDayOfMonth(int dayOfMonth),withDayOfMonth,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the day-of-month altered. If the resulting OffsetDateTime is invalid, an exception is thrown. The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.",FreeText,,0
3343,jdk,java.time.OffsetDateTime_goal.json,withDayOfYear(int dayOfYear),withDayOfYear,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the day-of-year altered. If the resulting OffsetDateTime is invalid, an exception is thrown.  This instance is immutable and unaffected by this method call.",FreeText,,0
3344,jdk,java.time.OffsetDateTime_goal.json,withHour(int hour),withHour,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the hour-of-day value altered.  The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.,FreeText,,0
3345,jdk,java.time.OffsetDateTime_goal.json,withMinute(int minute),withMinute,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the minute-of-hour value altered.  The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.,FreeText,,0
3346,jdk,java.time.OffsetDateTime_goal.json,withSecond(int second),withSecond,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the second-of-minute value altered.  The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.,FreeText,,0
3347,jdk,java.time.OffsetDateTime_goal.json,withNano(int nanoOfSecond),withNano,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the nano-of-second value altered.  The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.,FreeText,,0
3348,jdk,java.time.OffsetDateTime_goal.json,truncatedTo(java.time.temporal.TemporalUnit unit),truncatedTo,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the time truncated.  Truncation returns a copy of the original date-time with fields smaller than the specified unit set to zero. For example, truncating with the ChronoUnit#MINUTES minutes unit will set the second-of-minute and nano-of-second field to zero.  The unit must have a TemporalUnit#getDuration() duration that divides into the length of a standard day without remainder. This includes all supplied time units on ChronoUnit and ChronoUnit#DAYS DAYS. Other units throw an exception.  The offset does not affect the calculation and will be the same in the result.  This instance is immutable and unaffected by this method call.",FreeText,,0
3349,jdk,java.time.OffsetDateTime_goal.json,plus(java.time.temporal.TemporalAmount amountToAdd),plus,java.time.OffsetDateTime,"Returns a copy of this date-time with the specified amount added.  This returns an OffsetDateTime, based on this one, with the specified amount added. The amount is typically Period or Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#addTo(Temporal). The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to #plus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully added.  This instance is immutable and unaffected by this method call.",FreeText,,0
3350,jdk,java.time.OffsetDateTime_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.OffsetDateTime,"Returns a copy of this date-time with the specified amount added.  This returns an OffsetDateTime, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.  If the field is a ChronoUnit then the addition is implemented by LocalDateTime#plus(long, TemporalUnit). The offset is not part of the calculation and will be unchanged in the result.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the argument. In this case, the unit determines whether and how to perform the addition.  This instance is immutable and unaffected by this method call.",FreeText,,0
3351,jdk,java.time.OffsetDateTime_goal.json,plusYears(long years),plusYears,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in years added.  This method adds the specified amount to the years field in three steps:  <li>Add the input years to the year field</li> <li>Check if the resulting date would be invalid</li> <li>Adjust the day-of-month to the last valid day if necessary</li>   For example, 2008-02-29 (leap year) plus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.  This instance is immutable and unaffected by this method call.",FreeText,,0
3352,jdk,java.time.OffsetDateTime_goal.json,plusMonths(long months),plusMonths,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in months added.  This method adds the specified amount to the months field in three steps:  <li>Add the input months to the month-of-year field</li> <li>Check if the resulting date would be invalid</li> <li>Adjust the day-of-month to the last valid day if necessary</li>   For example, 2007-03-31 plus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.  This instance is immutable and unaffected by this method call.",FreeText,,0
3353,jdk,java.time.OffsetDateTime_goal.json,plusWeeks(long weeks),plusWeeks,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in weeks added.  This method adds the specified amount in weeks to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.  For example, 2008-12-31 plus one week would result in the 2009-01-07.  This instance is immutable and unaffected by this method call.",FreeText,,0
3354,jdk,java.time.OffsetDateTime_goal.json,plusDays(long days),plusDays,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in days added.  This method adds the specified amount to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.  For example, 2008-12-31 plus one day would result in the 2009-01-01.  This instance is immutable and unaffected by this method call.",FreeText,,0
3355,jdk,java.time.OffsetDateTime_goal.json,plusHours(long hours),plusHours,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in hours added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3356,jdk,java.time.OffsetDateTime_goal.json,plusMinutes(long minutes),plusMinutes,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in minutes added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3357,jdk,java.time.OffsetDateTime_goal.json,plusSeconds(long seconds),plusSeconds,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in seconds added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3358,jdk,java.time.OffsetDateTime_goal.json,plusNanos(long nanos),plusNanos,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in nanoseconds added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3359,jdk,java.time.OffsetDateTime_goal.json,minus(java.time.temporal.TemporalAmount amountToSubtract),minus,java.time.OffsetDateTime,"Returns a copy of this date-time with the specified amount subtracted.  This returns an OffsetDateTime, based on this one, with the specified amount subtracted. The amount is typically Period or Duration but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to #minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted.  This instance is immutable and unaffected by this method call.",FreeText,,0
3360,jdk,java.time.OffsetDateTime_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.OffsetDateTime,"Returns a copy of this date-time with the specified amount subtracted.  This returns an OffsetDateTime, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.  This method is equivalent to #plus(long, TemporalUnit) with the amount negated. See that method for a full description of how addition, and thus subtraction, works.  This instance is immutable and unaffected by this method call.",FreeText,"methodResultID.equals(receiverObjectClone.plus(args[0],args[1]))",1
3361,jdk,java.time.OffsetDateTime_goal.json,minusYears(long years),minusYears,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in years subtracted.  This method subtracts the specified amount from the years field in three steps:  <li>Subtract the input years to the year field</li> <li>Check if the resulting date would be invalid</li> <li>Adjust the day-of-month to the last valid day if necessary</li>   For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.  This instance is immutable and unaffected by this method call.",FreeText,,0
3362,jdk,java.time.OffsetDateTime_goal.json,minusMonths(long months),minusMonths,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in months subtracted.  This method subtracts the specified amount from the months field in three steps:  <li>Subtract the input months to the month-of-year field</li> <li>Check if the resulting date would be invalid</li> <li>Adjust the day-of-month to the last valid day if necessary</li>   For example, 2007-03-31 minus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.  This instance is immutable and unaffected by this method call.",FreeText,,0
3363,jdk,java.time.OffsetDateTime_goal.json,minusWeeks(long weeks),minusWeeks,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in weeks subtracted.  This method subtracts the specified amount in weeks from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.  For example, 2008-12-31 minus one week would result in the 2009-01-07.  This instance is immutable and unaffected by this method call.",FreeText,,0
3364,jdk,java.time.OffsetDateTime_goal.json,minusDays(long days),minusDays,java.time.OffsetDateTime,"Returns a copy of this OffsetDateTime with the specified period in days subtracted.  This method subtracts the specified amount from the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.  For example, 2008-12-31 minus one day would result in the 2009-01-01.  This instance is immutable and unaffected by this method call.",FreeText,,0
3365,jdk,java.time.OffsetDateTime_goal.json,minusHours(long hours),minusHours,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in hours subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3366,jdk,java.time.OffsetDateTime_goal.json,minusMinutes(long minutes),minusMinutes,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in minutes subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3367,jdk,java.time.OffsetDateTime_goal.json,minusSeconds(long seconds),minusSeconds,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in seconds subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3368,jdk,java.time.OffsetDateTime_goal.json,minusNanos(long nanos),minusNanos,java.time.OffsetDateTime,Returns a copy of this OffsetDateTime with the specified period in nanoseconds subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3369,jdk,java.time.OffsetDateTime_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.OffsetDateTime,Queries this date-time using the specified query.  This queries this date-time using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3370,jdk,java.time.OffsetDateTime_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.OffsetDateTime,"Adjusts the specified temporal object to have the same offset, date and time as this object.  This returns a temporal object of the same observable type as the input with the offset, date and time changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) three times, passing ChronoField#EPOCH_DAY, ChronoField#NANO_OF_DAY and ChronoField#OFFSET_SECONDS as the fields.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisOffsetDateTime.adjustInto(temporal); temporal = temporal.with(thisOffsetDateTime);   This instance is immutable and unaffected by this method call.",FreeText,,0
3371,jdk,java.time.OffsetDateTime_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.OffsetDateTime,"Calculates the amount of time until another date-time in terms of the specified unit.  This calculates the amount of time between two OffsetDateTime objects in terms of a single TemporalUnit. The start and end points are this and the specified date-time. The result will be negative if the end is before the start. For example, the period in days between two date-times can be calculated using startDateTime.until(endDateTime, DAYS).  The Temporal passed to this method is converted to a OffsetDateTime using #from(TemporalAccessor). If the offset differs between the two date-times, the specified end date-time is normalized to have the same offset as this date-time.  The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the period in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z will only be one month as it is one minute short of two months.  There are two equivalent ways of using this method. The first is to invoke this method. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent amount = start.until(end, MONTHS); amount = MONTHS.between(start, end);  The choice should be made based on which makes the code more readable.  The calculation is implemented in this method for ChronoUnit. The units NANOS, MICROS, MILLIS, SECONDS, MINUTES, HOURS and HALF_DAYS, DAYS, WEEKS, MONTHS, YEARS, DECADES, CENTURIES, MILLENNIA and ERAS are supported. Other ChronoUnit values will throw an exception.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3372,jdk,java.time.OffsetDateTime_goal.json,format(java.time.format.DateTimeFormatter formatter),format,java.time.OffsetDateTime,Formats this date-time using the specified formatter.  This date-time will be passed to the formatter to produce a string.,FreeText,,0
3373,jdk,java.time.OffsetDateTime_goal.json,atZoneSameInstant(java.time.ZoneId zone),atZoneSameInstant,java.time.OffsetDateTime,"Combines this date-time with a time-zone to create a ZonedDateTime ensuring that the result has the same instant.  This returns a ZonedDateTime formed from this date-time and the specified time-zone. This conversion will ignore the visible local date-time and use the underlying instant instead. This avoids any problems with local time-line gaps or overlaps. The result might have different values for fields such as hour, minute an even day.  To attempt to retain the values of the fields, use #atZoneSimilarLocal(ZoneId). To use the offset as the zone ID, use #toZonedDateTime().",FreeText,,0
3374,jdk,java.time.OffsetDateTime_goal.json,atZoneSimilarLocal(java.time.ZoneId zone),atZoneSimilarLocal,java.time.OffsetDateTime,"Combines this date-time with a time-zone to create a ZonedDateTime trying to keep the same local date and time.  This returns a ZonedDateTime formed from this date-time and the specified time-zone. Where possible, the result will have the same local date-time as this object.  Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses ZonedDateTime#ofLocal(LocalDateTime, ZoneId, ZoneOffset) to retain the offset from this instance if possible.  Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call ZonedDateTime#withLaterOffsetAtOverlap() immediately after this method.  To create a zoned date-time at the same instant irrespective of the local time-line, use #atZoneSameInstant(ZoneId). To use the offset as the zone ID, use #toZonedDateTime().",FreeText,,0
3375,jdk,java.time.OffsetDateTime_goal.json,toOffsetTime(),toOffsetTime,java.time.OffsetDateTime,Converts this date-time to an OffsetTime.  This returns an offset time with the same local time and offset.,FreeText,,0
3376,jdk,java.time.OffsetDateTime_goal.json,toZonedDateTime(),toZonedDateTime,java.time.OffsetDateTime,"Converts this date-time to a ZonedDateTime using the offset as the zone ID.  This creates the simplest possible ZonedDateTime using the offset as the zone ID.  To control the time-zone used, see #atZoneSameInstant(ZoneId) and #atZoneSimilarLocal(ZoneId).",FreeText,,0
3377,jdk,java.time.OffsetDateTime_goal.json,toInstant(),toInstant,java.time.OffsetDateTime,Converts this date-time to an Instant.  This returns an Instant representing the same point on the time-line as this date-time.,FreeText,,0
3378,jdk,java.time.OffsetDateTime_goal.json,toEpochSecond(),toEpochSecond,java.time.OffsetDateTime,Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.  This allows this date-time to be converted to a value of the ChronoField#INSTANT_SECONDS epoch-seconds field. This is primarily intended for low-level conversions rather than general application usage.,FreeText,,0
3379,jdk,java.time.OffsetDateTime_goal.json,compareTo(java.time.OffsetDateTime other),compareTo,java.time.OffsetDateTime,"Compares this OffsetDateTime to another date-time.  The comparison is based on the instant then on the local date-time. It is ""consistent with equals"", as defined by Comparable.  For example, the following is the comparator order:  <li>2008-12-03T10:30+01:00</li> <li>2008-12-03T11:00+01:00</li> <li>2008-12-03T12:00+02:00</li> <li>2008-12-03T11:30+01:00</li> <li>2008-12-03T12:00+01:00</li> <li>2008-12-03T12:30+01:00</li>  Values #2 and #3 represent the same instant on the time-line. When two values represent the same instant, the local date-time is compared to distinguish them. This step is needed to make the ordering consistent with equals().",FreeText,,0
3380,jdk,java.time.OffsetDateTime_goal.json,isAfter(java.time.OffsetDateTime other),isAfter,java.time.OffsetDateTime,Checks if the instant of this date-time is after that of the specified date-time.  This method differs from the comparison in #compareTo and #equals in that it only compares the instant of the date-time. This is equivalent to using dateTime1.toInstant().isAfter(dateTime2.toInstant());.,FreeText,,0
3381,jdk,java.time.OffsetDateTime_goal.json,isBefore(java.time.OffsetDateTime other),isBefore,java.time.OffsetDateTime,Checks if the instant of this date-time is before that of the specified date-time.  This method differs from the comparison in #compareTo in that it only compares the instant of the date-time. This is equivalent to using dateTime1.toInstant().isBefore(dateTime2.toInstant());.,FreeText,,0
3382,jdk,java.time.OffsetDateTime_goal.json,isEqual(java.time.OffsetDateTime other),isEqual,java.time.OffsetDateTime,Checks if the instant of this date-time is equal to that of the specified date-time.  This method differs from the comparison in #compareTo and #equals in that it only compares the instant of the date-time. This is equivalent to using dateTime1.toInstant().equals(dateTime2.toInstant());.,FreeText,,0
3383,jdk,java.time.OffsetDateTime_goal.json,equals(java.lang.Object obj),equals,java.time.OffsetDateTime,"Checks if this date-time is equal to another date-time.  The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use #isEqual. Only objects of type OffsetDateTime are compared, other types return false.",FreeText,,0
3384,jdk,java.time.OffsetDateTime_goal.json,hashCode(),hashCode,java.time.OffsetDateTime,A hash code for this date-time.,FreeText,,0
3385,jdk,java.time.OffsetDateTime_goal.json,toString(),toString,java.time.OffsetDateTime,"Outputs this date-time as a String, such as 2007-12-03T10:15:30+01:00.  The output will be one of the following ISO-8601 formats:  <li>uuuu-MM-dd'T'HH:mmXXXXX</li> <li>uuuu-MM-dd'T'HH:mm:ssXXXXX</li> <li>uuuu-MM-dd'T'HH:mm:ss.SSSXXXXX</li> <li>uuuu-MM-dd'T'HH:mm:ss.SSSSSSXXXXX</li> <li>uuuu-MM-dd'T'HH:mm:ss.SSSSSSSSSXXXXX</li>  The format used will be the shortest that outputs the full value of the time where the omitted parts are implied to be zero.",FreeText,,0
3386,jdk,java.time.OffsetDateTime_goal.json,writeExternal(java.io.ObjectOutput out),writeExternal,java.time.OffsetDateTime,,FreeText,,0
3387,jdk,java.time.OffsetDateTime_goal.json,readExternal(java.io.ObjectInput in),readExternal,java.time.OffsetDateTime,,FreeText,,0
3388,jdk,java.time.temporal.TemporalAdjusters_goal.json,ofDateAdjuster(java.util.function.UnaryOperator<java.time.LocalDate> dateBasedAdjuster),ofDateAdjuster,java.time.temporal.TemporalAdjusters,"Obtains a TemporalAdjuster that wraps a date adjuster.  The TemporalAdjuster is based on the low level Temporal interface. This method allows an adjustment from LocalDate to LocalDate to be wrapped to match the temporal-based interface. This is provided for convenience to make user-written adjusters simpler.  In general, user-written adjusters should be static constants: static TemporalAdjuster TWO_DAYS_LATER = TemporalAdjusters.ofDateAdjuster(date -> date.plusDays(2));",FreeText,,0
3389,jdk,java.time.temporal.TemporalAdjusters_goal.json,firstDayOfMonth(),firstDayOfMonth,java.time.temporal.TemporalAdjusters,"Returns the ""first day of month"" adjuster, which returns a new date set to the first day of the current month.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2011-01-01.<br> The input 2011-02-15 will return 2011-02-01.  The behavior is suitable for use with most calendar systems. It is equivalent to:  temporal.with(DAY_OF_MONTH, 1);",FreeText,,0
3390,jdk,java.time.temporal.TemporalAdjusters_goal.json,lastDayOfMonth(),lastDayOfMonth,java.time.temporal.TemporalAdjusters,"Returns the ""last day of month"" adjuster, which returns a new date set to the last day of the current month.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2011-01-31.<br> The input 2011-02-15 will return 2011-02-28.<br> The input 2012-02-15 will return 2012-02-29 (leap year).<br> The input 2011-04-15 will return 2011-04-30.  The behavior is suitable for use with most calendar systems. It is equivalent to:  long lastDay = temporal.range(DAY_OF_MONTH).getMaximum(); temporal.with(DAY_OF_MONTH, lastDay);",FreeText,,0
3391,jdk,java.time.temporal.TemporalAdjusters_goal.json,firstDayOfNextMonth(),firstDayOfNextMonth,java.time.temporal.TemporalAdjusters,"Returns the ""first day of next month"" adjuster, which returns a new date set to the first day of the next month.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2011-02-01.<br> The input 2011-02-15 will return 2011-03-01.  The behavior is suitable for use with most calendar systems. It is equivalent to:  temporal.with(DAY_OF_MONTH, 1).plus(1, MONTHS);",FreeText,,0
3392,jdk,java.time.temporal.TemporalAdjusters_goal.json,firstDayOfYear(),firstDayOfYear,java.time.temporal.TemporalAdjusters,"Returns the ""first day of year"" adjuster, which returns a new date set to the first day of the current year.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2011-01-01.<br> The input 2011-02-15 will return 2011-01-01.<br>  The behavior is suitable for use with most calendar systems. It is equivalent to:  temporal.with(DAY_OF_YEAR, 1);",FreeText,,0
3393,jdk,java.time.temporal.TemporalAdjusters_goal.json,lastDayOfYear(),lastDayOfYear,java.time.temporal.TemporalAdjusters,"Returns the ""last day of year"" adjuster, which returns a new date set to the last day of the current year.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2011-12-31.<br> The input 2011-02-15 will return 2011-12-31.<br>  The behavior is suitable for use with most calendar systems. It is equivalent to:  long lastDay = temporal.range(DAY_OF_YEAR).getMaximum(); temporal.with(DAY_OF_YEAR, lastDay);",FreeText,,0
3394,jdk,java.time.temporal.TemporalAdjusters_goal.json,firstDayOfNextYear(),firstDayOfNextYear,java.time.temporal.TemporalAdjusters,"Returns the ""first day of next year"" adjuster, which returns a new date set to the first day of the next year.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 will return 2012-01-01.  The behavior is suitable for use with most calendar systems. It is equivalent to:  temporal.with(DAY_OF_YEAR, 1).plus(1, YEARS);",FreeText,,0
3395,jdk,java.time.temporal.TemporalAdjusters_goal.json,firstInMonth(java.time.DayOfWeek dayOfWeek),firstInMonth,java.time.temporal.TemporalAdjusters,"Returns the first in month adjuster, which returns a new date in the same month with the first matching day-of-week. This is used for expressions like 'first Tuesday in March'.  The ISO calendar system behaves as follows:<br> The input 2011-12-15 for (MONDAY) will return 2011-12-05.<br> The input 2011-12-15 for (FRIDAY) will return 2011-12-02.<br>  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",FreeText,,0
3396,jdk,java.time.temporal.TemporalAdjusters_goal.json,lastInMonth(java.time.DayOfWeek dayOfWeek),lastInMonth,java.time.temporal.TemporalAdjusters,"Returns the last in month adjuster, which returns a new date in the same month with the last matching day-of-week. This is used for expressions like 'last Tuesday in March'.  The ISO calendar system behaves as follows:<br> The input 2011-12-15 for (MONDAY) will return 2011-12-26.<br> The input 2011-12-15 for (FRIDAY) will return 2011-12-30.<br>  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",FreeText,,0
3397,jdk,java.time.temporal.TemporalAdjusters_goal.json,"dayOfWeekInMonth(int ordinal, java.time.DayOfWeek dayOfWeek)",dayOfWeekInMonth,java.time.temporal.TemporalAdjusters,"Returns the day-of-week in month adjuster, which returns a new date in the same month with the ordinal day-of-week. This is used for expressions like the 'second Tuesday in March'.  The ISO calendar system behaves as follows:<br> The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.<br> The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.<br> The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.<br> The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.<br> The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.<br> The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).<br> The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).<br> The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).<br> The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).<br>  For a positive or zero ordinal, the algorithm is equivalent to finding the first day-of-week that matches within the month and then adding a number of weeks to it. For a negative ordinal, the algorithm is equivalent to finding the last day-of-week that matches within the month and then subtracting a number of weeks to it. The ordinal number of weeks is not validated and is interpreted leniently according to this algorithm. This definition means that an ordinal of zero finds the last matching day-of-week in the previous month.  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",FreeText,,0
3398,jdk,java.time.temporal.TemporalAdjusters_goal.json,next(java.time.DayOfWeek dayOfWeek),next,java.time.temporal.TemporalAdjusters,"Returns the next day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week after the date being adjusted.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).<br> The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).<br> The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",FreeText,,0
3399,jdk,java.time.temporal.TemporalAdjusters_goal.json,nextOrSame(java.time.DayOfWeek dayOfWeek),nextOrSame,java.time.temporal.TemporalAdjusters,"Returns the next-or-same day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week after the date being adjusted unless it is already on that day in which case the same object is returned.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).<br> The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).<br> The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",FreeText,,0
3400,jdk,java.time.temporal.TemporalAdjusters_goal.json,previous(java.time.DayOfWeek dayOfWeek),previous,java.time.temporal.TemporalAdjusters,"Returns the previous day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week before the date being adjusted.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).<br> The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).<br> The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",FreeText,,0
3401,jdk,java.time.temporal.TemporalAdjusters_goal.json,previousOrSame(java.time.DayOfWeek dayOfWeek),previousOrSame,java.time.temporal.TemporalAdjusters,"Returns the previous-or-same day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week before the date being adjusted unless it is already on that day in which case the same object is returned.  The ISO calendar system behaves as follows:<br> The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).<br> The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).<br> The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).  The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",FreeText,,0
3402,jdk,java.time.temporal.Temporal_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.temporal.Temporal,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception. @implSpec Implementations must check and handle all units defined in ChronoUnit. If the unit is supported, then true must be returned, otherwise false must be returned.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument.  Implementations must ensure that no observable state is altered when this read-only method is invoked.",FreeText,,0
3403,jdk,java.time.temporal.Temporal_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.temporal.Temporal,"Returns an adjusted object of the same type as this object with the adjustment made.  This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in TemporalAdjuster. These include finding the ""last day of the month"" and ""next Wednesday"". The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.  Some example code indicating how and why this method is used:  date = date.with(Month.JULY); // most key classes implement TemporalAdjuster date = date.with(lastDayOfMonth()); // static import from Adjusters date = date.with(next(WEDNESDAY)); // static import from Adjusters and DayOfWeek  @implSpec  Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.  The default implementation must behave equivalent to this code:  return adjuster.adjustInto(this);",FreeText,,0
3404,jdk,java.time.temporal.Temporal_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.temporal.Temporal,"Returns an object of the same type as this object with the specified field altered.  This returns a new object based on this one with the value for the specified field changed. For example, on a LocalDate, this could be used to set the year, month or day-of-month. The returned object will have the same observable type as this object.  In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then changing the month to February would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example. @implSpec Implementations must check and handle all fields defined in ChronoField. If the field is supported, then the adjustment must be performed. If unsupported, then an UnsupportedTemporalTypeException must be thrown.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the first argument.  Implementations must not alter this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.",FreeText,,0
3405,jdk,java.time.temporal.Temporal_goal.json,plus(java.time.temporal.TemporalAmount amount),plus,java.time.temporal.Temporal,"Returns an object of the same type as this object with an amount added.  This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a java.time.Period but may be any other type implementing the TemporalAmount interface, such as java.time.Duration.  Some example code indicating how and why this method is used:  date = date.plus(period); // add a Period instance date = date.plus(duration); // add a Duration instance date = date.plus(workingDays(6)); // example user-written workingDays method   Note that calling plus followed by minus is not guaranteed to return the same date-time. @implSpec  Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.  The default implementation must behave equivalent to this code:  return amount.addTo(this);",FreeText,,0
3406,jdk,java.time.temporal.Temporal_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.temporal.Temporal,"Returns an object of the same type as this object with the specified period added.  This method returns a new object based on this one with the specified period added. For example, on a LocalDate, this could be used to add a number of years, months or days. The returned object will have the same observable type as this object.  In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then adding one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example. @implSpec Implementations must check and handle all units defined in ChronoUnit. If the unit is supported, then the addition must be performed. If unsupported, then an UnsupportedTemporalTypeException must be thrown.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the first argument.  Implementations must not alter this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.",FreeText,,0
3407,jdk,java.time.temporal.Temporal_goal.json,minus(java.time.temporal.TemporalAmount amount),minus,java.time.temporal.Temporal,"Returns an object of the same type as this object with an amount subtracted.  This adjusts this temporal, subtracting according to the rules of the specified amount. The amount is typically a java.time.Period but may be any other type implementing the TemporalAmount interface, such as java.time.Duration.  Some example code indicating how and why this method is used:  date = date.minus(period); // subtract a Period instance date = date.minus(duration); // subtract a Duration instance date = date.minus(workingDays(6)); // example user-written workingDays method   Note that calling plus followed by minus is not guaranteed to return the same date-time. @implSpec  Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.  The default implementation must behave equivalent to this code:  return amount.subtractFrom(this);",FreeText,,0
3408,jdk,java.time.temporal.Temporal_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.temporal.Temporal,"Returns an object of the same type as this object with the specified period subtracted.  This method returns a new object based on this one with the specified period subtracted. For example, on a LocalDate, this could be used to subtract a number of years, months or days. The returned object will have the same observable type as this object.  In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st March, then subtracting one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example. @implSpec Implementations must behave in a manor equivalent to the default method behavior.  Implementations must not alter this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.  The default implementation must behave equivalent to this code:  return (amountToSubtract == Long.MIN_VALUE ? plus(Long.MAX_VALUE, unit).plus(1, unit) : plus(-amountToSubtract, unit));",FreeText,,0
3409,jdk,java.time.temporal.Temporal_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.temporal.Temporal,"Calculates the amount of time until another temporal in terms of the specified unit.  This calculates the amount of time between two temporal objects in terms of a single TemporalUnit. The start and end points are this and the specified temporal. The end point is converted to be of the same type as the start point if different. The result will be negative if the end is before the start. For example, the period in hours between two temporal objects can be calculated using startTime.until(endTime, HOURS).  The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the period in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.  There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent temporal = start.until(end, unit); temporal = unit.between(start, end);  The choice should be made based on which makes the code more readable.  For example, this method allows the number of days between two dates to be calculated:  long daysBetween = start.until(end, DAYS); // or alternatively long daysBetween = DAYS.between(start, end);  @implSpec Implementations must begin by checking to ensure that the input temporal object is of the same observable type as the implementation. They must then perform the calculation for all instances of ChronoUnit. An UnsupportedTemporalTypeException must be thrown for ChronoUnit instances that are unsupported.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  In summary, implementations must behave in a manner equivalent to this pseudo-code:  // convert the end temporal to the same type as this class if (unit instanceof ChronoUnit) { // if unit is supported, then calculate and return result // else throw UnsupportedTemporalTypeException for unsupported units } return unit.between(this, convertedEndTemporal);   Note that the unit's between method must only be invoked if the two temporal objects have exactly the same type evaluated by getClass().  Implementations must ensure that no observable state is altered when this read-only method is invoked.",FreeText,,0
3410,jdk,java.time.YearMonth_goal.json,now(),now,java.time.YearMonth,Obtains the current year-month from the system clock in the default time-zone.  This will query the java.time.Clock#systemDefaultZone() system clock in the default time-zone to obtain the current year-month. The zone and offset will be set based on the time-zone in the clock.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3411,jdk,java.time.YearMonth_goal.json,now(java.time.ZoneId zone),now,java.time.YearMonth,Obtains the current year-month from the system clock in the specified time-zone.  This will query the Clock#system(java.time.ZoneId) system clock to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3412,jdk,java.time.YearMonth_goal.json,now(java.time.Clock clock),now,java.time.YearMonth,Obtains the current year-month from the specified clock.  This will query the specified clock to obtain the current year-month. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3413,jdk,java.time.YearMonth_goal.json,"of(int year, java.time.Month month)",of,java.time.YearMonth,Obtains an instance of YearMonth from a year and month.,FreeText,,0
3414,jdk,java.time.YearMonth_goal.json,"of(int year, int month)",of,java.time.YearMonth,Obtains an instance of YearMonth from a year and month.,FreeText,,0
3415,jdk,java.time.YearMonth_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.YearMonth,"Obtains an instance of YearMonth from a temporal object.  This obtains a year-month based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of YearMonth.  The conversion extracts the ChronoField#YEAR YEAR and ChronoField#MONTH_OF_YEAR MONTH_OF_YEAR fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a LocalDate.  This method matches the signature of the functional interface TemporalQuery allowing it to be used in queries via method reference, YearMonth::from.",FreeText,,0
3416,jdk,java.time.YearMonth_goal.json,parse(java.lang.CharSequence text),parse,java.time.YearMonth,Obtains an instance of YearMonth from a text string such as 2007-12.  The string must represent a valid year-month. The format must be uuuu-MM. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.,FreeText,,0
3417,jdk,java.time.YearMonth_goal.json,"parse(java.lang.CharSequence text, java.time.format.DateTimeFormatter formatter)",parse,java.time.YearMonth,"Obtains an instance of YearMonth from a text string using a specific formatter.  The text is parsed using the formatter, returning a year-month.",FreeText,,0
3418,jdk,java.time.YearMonth_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.YearMonth,"Checks if the specified field is supported.  This checks if this year-month can be queried for the specified field. If false, then calling the #range(TemporalField) range, #get(TemporalField) get and #with(TemporalField, long) methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>MONTH_OF_YEAR <li>PROLEPTIC_MONTH <li>YEAR_OF_ERA <li>YEAR <li>ERA  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3419,jdk,java.time.YearMonth_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.YearMonth,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception.  If the unit is a ChronoUnit then the query is implemented here. The supported units are:  <li>MONTHS <li>YEARS <li>DECADES <li>CENTURIES <li>MILLENNIA <li>ERAS  All other ChronoUnit instances will return false.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument. Whether the unit is supported is determined by the unit.",FreeText,,0
3420,jdk,java.time.YearMonth_goal.json,range(java.time.temporal.TemporalField field),range,java.time.YearMonth,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This year-month is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3421,jdk,java.time.YearMonth_goal.json,get(java.time.temporal.TemporalField field),get,java.time.YearMonth,"Gets the value of the specified field from this year-month as an int.  This queries this year-month for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this year-month, except PROLEPTIC_MONTH which is too large to fit in an int and throw a DateTimeException. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3422,jdk,java.time.YearMonth_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.YearMonth,"Gets the value of the specified field from this year-month as a long.  This queries this year-month for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this year-month. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3423,jdk,java.time.YearMonth_goal.json,getYear(),getYear,java.time.YearMonth,Gets the year field.  This method returns the primitive int value for the year.  The year returned by this method is proleptic as per get(YEAR).,FreeText,,0
3424,jdk,java.time.YearMonth_goal.json,getMonthValue(),getMonthValue,java.time.YearMonth,Gets the month-of-year field from 1 to 12.  This method returns the month as an int from 1 to 12. Application code is frequently clearer if the enum Month is used by calling #getMonth().,FreeText,,0
3425,jdk,java.time.YearMonth_goal.json,getMonth(),getMonth,java.time.YearMonth,Gets the month-of-year field using the Month enum.  This method returns the enum Month for the month. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the Month#getValue() int value.,FreeText,,0
3426,jdk,java.time.YearMonth_goal.json,isLeapYear(),isLeapYear,java.time.YearMonth,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules.  This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.  For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.  The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",FreeText,,0
3427,jdk,java.time.YearMonth_goal.json,isValidDay(int dayOfMonth),isValidDay,java.time.YearMonth,Checks if the day-of-month is valid for this year-month.  This method checks whether this year and month and the input day form a valid date.,FreeText,,0
3428,jdk,java.time.YearMonth_goal.json,lengthOfMonth(),lengthOfMonth,java.time.YearMonth,"Returns the length of the month, taking account of the year.  This returns the length of the month in days. For example, a date in January would return 31.",FreeText,,0
3429,jdk,java.time.YearMonth_goal.json,lengthOfYear(),lengthOfYear,java.time.YearMonth,"Returns the length of the year.  This returns the length of the year in days, either 365 or 366.",FreeText,,0
3430,jdk,java.time.YearMonth_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.YearMonth,"Returns an adjusted copy of this year-month.  This returns a YearMonth, based on this one, with the year-month adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.  A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the year-month to the next month that Halley's comet will pass the Earth.  The result of this method is obtained by invoking the TemporalAdjuster#adjustInto(Temporal) method on the specified adjuster passing this as the argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3431,jdk,java.time.YearMonth_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.YearMonth,"Returns a copy of this year-month with the specified field set to a new value.  This returns a YearMonth, based on this one, with the value for the specified field changed. This can be used to change any supported field, such as the year or month. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the adjustment is implemented here. The supported fields behave as follows:  <li>MONTH_OF_YEAR - Returns a YearMonth with the specified month-of-year. The year will be unchanged. <li>PROLEPTIC_MONTH - Returns a YearMonth with the specified proleptic-month. This completely replaces the year and month of this object. <li>YEAR_OF_ERA - Returns a YearMonth with the specified year-of-era The month and era will be unchanged. <li>YEAR - Returns a YearMonth with the specified year. The month will be unchanged. <li>ERA - Returns a YearMonth with the specified era. The month and year-of-era will be unchanged.   In all cases, if the new value is outside the valid range of values for the field then a DateTimeException will be thrown.  All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the argument. In this case, the field determines whether and how to adjust the instant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3432,jdk,java.time.YearMonth_goal.json,withYear(int year),withYear,java.time.YearMonth,Returns a copy of this YearMonth with the year altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3433,jdk,java.time.YearMonth_goal.json,withMonth(int month),withMonth,java.time.YearMonth,Returns a copy of this YearMonth with the month-of-year altered.  This instance is immutable and unaffected by this method call.,FreeText,,0
3434,jdk,java.time.YearMonth_goal.json,plus(java.time.temporal.TemporalAmount amountToAdd),plus,java.time.YearMonth,"Returns a copy of this year-month with the specified amount added.  This returns a YearMonth, based on this one, with the specified amount added. The amount is typically Period but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#addTo(Temporal). The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to #plus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully added.  This instance is immutable and unaffected by this method call.",FreeText,,0
3435,jdk,java.time.YearMonth_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.YearMonth,"Returns a copy of this year-month with the specified amount added.  This returns a YearMonth, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.  If the field is a ChronoUnit then the addition is implemented here. The supported fields behave as follows:  <li>MONTHS - Returns a YearMonth with the specified number of months added. This is equivalent to #plusMonths(long). <li>YEARS - Returns a YearMonth with the specified number of years added. This is equivalent to #plusYears(long). <li>DECADES - Returns a YearMonth with the specified number of decades added. This is equivalent to calling #plusYears(long) with the amount multiplied by 10. <li>CENTURIES - Returns a YearMonth with the specified number of centuries added. This is equivalent to calling #plusYears(long) with the amount multiplied by 100. <li>MILLENNIA - Returns a YearMonth with the specified number of millennia added. This is equivalent to calling #plusYears(long) with the amount multiplied by 1,000. <li>ERAS - Returns a YearMonth with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.   All other ChronoUnit instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the argument. In this case, the unit determines whether and how to perform the addition.  This instance is immutable and unaffected by this method call.",FreeText,,0
3436,jdk,java.time.YearMonth_goal.json,plusYears(long yearsToAdd),plusYears,java.time.YearMonth,Returns a copy of this year-month with the specified period in years added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3437,jdk,java.time.YearMonth_goal.json,plusMonths(long monthsToAdd),plusMonths,java.time.YearMonth,Returns a copy of this year-month with the specified period in months added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3438,jdk,java.time.YearMonth_goal.json,minus(java.time.temporal.TemporalAmount amountToSubtract),minus,java.time.YearMonth,"Returns a copy of this year-month with the specified amount subtracted.  This returns a YearMonth, based on this one, with the specified amount subtracted. The amount is typically Period but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to #minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted.  This instance is immutable and unaffected by this method call.",FreeText,,0
3439,jdk,java.time.YearMonth_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.YearMonth,"Returns a copy of this year-month with the specified amount subtracted.  This returns a YearMonth, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.  This method is equivalent to #plus(long, TemporalUnit) with the amount negated. See that method for a full description of how addition, and thus subtraction, works.  This instance is immutable and unaffected by this method call.",FreeText,"methodResultID.equals(receiverObjectClone.plus(args[0],args[1]))",1
3440,jdk,java.time.YearMonth_goal.json,minusYears(long yearsToSubtract),minusYears,java.time.YearMonth,Returns a copy of this year-month with the specified period in years subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3441,jdk,java.time.YearMonth_goal.json,minusMonths(long monthsToSubtract),minusMonths,java.time.YearMonth,Returns a copy of this year-month with the specified period in months subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3442,jdk,java.time.YearMonth_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.YearMonth,Queries this year-month using the specified query.  This queries this year-month using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3443,jdk,java.time.YearMonth_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.YearMonth,"Adjusts the specified temporal object to have this year-month.  This returns a temporal object of the same observable type as the input with the year and month changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) passing ChronoField#PROLEPTIC_MONTH as the field. If the specified temporal object does not use the ISO calendar system then a DateTimeException is thrown.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisYearMonth.adjustInto(temporal); temporal = temporal.with(thisYearMonth);   This instance is immutable and unaffected by this method call.",FreeText,,0
3444,jdk,java.time.YearMonth_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.YearMonth,"Calculates the amount of time until another year-month in terms of the specified unit.  This calculates the amount of time between two YearMonth objects in terms of a single TemporalUnit. The start and end points are this and the specified year-month. The result will be negative if the end is before the start. The Temporal passed to this method is converted to a YearMonth using #from(TemporalAccessor). For example, the period in years between two year-months can be calculated using startYearMonth.until(endYearMonth, YEARS).  The calculation returns a whole number, representing the number of complete units between the two year-months. For example, the period in decades between 2012-06 and 2032-05 will only be one decade as it is one month short of two decades.  There are two equivalent ways of using this method. The first is to invoke this method. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent amount = start.until(end, MONTHS); amount = MONTHS.between(start, end);  The choice should be made based on which makes the code more readable.  The calculation is implemented in this method for ChronoUnit. The units MONTHS, YEARS, DECADES, CENTURIES, MILLENNIA and ERAS are supported. Other ChronoUnit values will throw an exception.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3445,jdk,java.time.YearMonth_goal.json,format(java.time.format.DateTimeFormatter formatter),format,java.time.YearMonth,Formats this year-month using the specified formatter.  This year-month will be passed to the formatter to produce a string.,FreeText,,0
3446,jdk,java.time.YearMonth_goal.json,atDay(int dayOfMonth),atDay,java.time.YearMonth,Combines this year-month with a day-of-month to create a LocalDate.  This returns a LocalDate formed from this year-month and the specified day-of-month.  The day-of-month value must be valid for the year-month.  This method can be used as part of a chain to produce a date:  LocalDate date = year.atMonth(month).atDay(day);,FreeText,,0
3447,jdk,java.time.YearMonth_goal.json,atEndOfMonth(),atEndOfMonth,java.time.YearMonth,"Returns a LocalDate at the end of the month.  This returns a LocalDate based on this year-month. The day-of-month is set to the last valid day of the month, taking into account leap years.  This method can be used as part of a chain to produce a date:  LocalDate date = year.atMonth(month).atEndOfMonth();",FreeText,,0
3448,jdk,java.time.YearMonth_goal.json,compareTo(java.time.YearMonth other),compareTo,java.time.YearMonth,"Compares this year-month to another year-month.  The comparison is based first on the value of the year, then on the value of the month. It is ""consistent with equals"", as defined by Comparable.",FreeText,,0
3449,jdk,java.time.YearMonth_goal.json,isAfter(java.time.YearMonth other),isAfter,java.time.YearMonth,Is this year-month after the specified year-month.,FreeText,,0
3450,jdk,java.time.YearMonth_goal.json,isBefore(java.time.YearMonth other),isBefore,java.time.YearMonth,Is this year-month before the specified year-month.,FreeText,,0
3451,jdk,java.time.YearMonth_goal.json,equals(java.lang.Object obj),equals,java.time.YearMonth,Checks if this year-month is equal to another year-month.  The comparison is based on the time-line position of the year-months.,FreeText,,0
3452,jdk,java.time.YearMonth_goal.json,hashCode(),hashCode,java.time.YearMonth,A hash code for this year-month.,FreeText,,0
3453,jdk,java.time.YearMonth_goal.json,toString(),toString,java.time.YearMonth,"Outputs this year-month as a String, such as 2007-12.  The output will be in the format {@code uuuu-MM}:",FreeText,,0
3454,jdk,java.time.YearMonth_goal.json,writeExternal(java.io.DataOutput out),writeExternal,java.time.YearMonth,,FreeText,,0
3455,jdk,java.time.YearMonth_goal.json,readExternal(java.io.DataInput in),readExternal,java.time.YearMonth,,FreeText,,0
3456,jdk,java.time.Year_goal.json,now(),now,java.time.Year,Obtains the current year from the system clock in the default time-zone.  This will query the java.time.Clock#systemDefaultZone() system clock in the default time-zone to obtain the current year.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3457,jdk,java.time.Year_goal.json,now(java.time.ZoneId zone),now,java.time.Year,Obtains the current year from the system clock in the specified time-zone.  This will query the Clock#system(java.time.ZoneId) system clock to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.  Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,FreeText,,0
3458,jdk,java.time.Year_goal.json,now(java.time.Clock clock),now,java.time.Year,Obtains the current year from the specified clock.  This will query the specified clock to obtain the current year. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using Clock dependency injection.,FreeText,,0
3459,jdk,java.time.Year_goal.json,of(int isoYear),of,java.time.Year,Obtains an instance of Year.  This method accepts a year value from the proleptic ISO calendar system.  The year 2AD/CE is represented by 2.<br> The year 1AD/CE is represented by 1.<br> The year 1BC/BCE is represented by 0.<br> The year 2BC/BCE is represented by -1.<br>,FreeText,,0
3460,jdk,java.time.Year_goal.json,from(java.time.temporal.TemporalAccessor temporal),from,java.time.Year,"Obtains an instance of Year from a temporal object.  This obtains a year based on the specified temporal. A TemporalAccessor represents an arbitrary set of date and time information, which this factory converts to an instance of Year.  The conversion extracts the ChronoField#YEAR year field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a LocalDate.  This method matches the signature of the functional interface TemporalQuery allowing it to be used in queries via method reference, Year::from.",FreeText,,0
3461,jdk,java.time.Year_goal.json,parse(java.lang.CharSequence text),parse,java.time.Year,Obtains an instance of Year from a text string such as 2007.  The string must represent a valid year. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.,FreeText,,0
3462,jdk,java.time.Year_goal.json,"parse(java.lang.CharSequence text, java.time.format.DateTimeFormatter formatter)",parse,java.time.Year,"Obtains an instance of Year from a text string using a specific formatter.  The text is parsed using the formatter, returning a year.",FreeText,,0
3463,jdk,java.time.Year_goal.json,isLeap(long year),isLeap,java.time.Year,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules.  This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.  For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.  The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",FreeText,,0
3464,jdk,java.time.Year_goal.json,getValue(),getValue,java.time.Year,Gets the year value.  The year returned by this method is proleptic as per get(YEAR).,FreeText,,0
3465,jdk,java.time.Year_goal.json,isSupported(java.time.temporal.TemporalField field),isSupported,java.time.Year,"Checks if the specified field is supported.  This checks if this year can be queried for the specified field. If false, then calling the #range(TemporalField) range, #get(TemporalField) get and #with(TemporalField, long) methods will throw an exception.  If the field is a ChronoField then the query is implemented here. The supported fields are:  <li>YEAR_OF_ERA <li>YEAR <li>ERA  All other ChronoField instances will return false.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.isSupportedBy(TemporalAccessor) passing this as the argument. Whether the field is supported is determined by the field.",FreeText,,0
3466,jdk,java.time.Year_goal.json,isSupported(java.time.temporal.TemporalUnit unit),isSupported,java.time.Year,"Checks if the specified unit is supported.  This checks if the specified unit can be added to, or subtracted from, this date-time. If false, then calling the #plus(long, TemporalUnit) and #minus(long, TemporalUnit) minus methods will throw an exception.  If the unit is a ChronoUnit then the query is implemented here. The supported units are:  <li>YEARS <li>DECADES <li>CENTURIES <li>MILLENNIA <li>ERAS  All other ChronoUnit instances will return false.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.isSupportedBy(Temporal) passing this as the argument. Whether the unit is supported is determined by the unit.",FreeText,,0
3467,jdk,java.time.Year_goal.json,range(java.time.temporal.TemporalField field),range,java.time.Year,"Gets the range of valid values for the specified field.  The range object expresses the minimum and maximum valid values for a field. This year is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",FreeText,,0
3468,jdk,java.time.Year_goal.json,get(java.time.temporal.TemporalField field),get,java.time.Year,"Gets the value of the specified field from this year as an int.  This queries this year for the value for the specified field. The returned value will always be within the valid range of values for the field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this year. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3469,jdk,java.time.Year_goal.json,getLong(java.time.temporal.TemporalField field),getLong,java.time.Year,"Gets the value of the specified field from this year as a long.  This queries this year for the value for the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the query is implemented here. The #isSupported(TemporalField) supported fields will return valid values based on this year. All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",FreeText,,0
3470,jdk,java.time.Year_goal.json,isLeap(),isLeap,java.time.Year,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules.  This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.  For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.  The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",FreeText,,0
3471,jdk,java.time.Year_goal.json,isValidMonthDay(java.time.MonthDay monthDay),isValidMonthDay,java.time.Year,Checks if the month-day is valid for this year.  This method checks whether this year and the input month and day form a valid date.,FreeText,,0
3472,jdk,java.time.Year_goal.json,length(),length,java.time.Year,Gets the length of this year in days.,FreeText,,0
3473,jdk,java.time.Year_goal.json,with(java.time.temporal.TemporalAdjuster adjuster),with,java.time.Year,"Returns an adjusted copy of this year.  This returns a Year, based on this one, with the year adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made.  The result of this method is obtained by invoking the TemporalAdjuster#adjustInto(Temporal) method on the specified adjuster passing this as the argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3474,jdk,java.time.Year_goal.json,"with(java.time.temporal.TemporalField field, long newValue)",with,java.time.Year,"Returns a copy of this year with the specified field set to a new value.  This returns a Year, based on this one, with the value for the specified field changed. If it is not possible to set the value, because the field is not supported or for some other reason, an exception is thrown.  If the field is a ChronoField then the adjustment is implemented here. The supported fields behave as follows:  <li>YEAR_OF_ERA - Returns a Year with the specified year-of-era The era will be unchanged. <li>YEAR - Returns a Year with the specified year. This completely replaces the date and is equivalent to #of(int). <li>ERA - Returns a Year with the specified era. The year-of-era will be unchanged.   In all cases, if the new value is outside the valid range of values for the field then a DateTimeException will be thrown.  All other ChronoField instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.adjustInto(Temporal, long) passing this as the argument. In this case, the field determines whether and how to adjust the instant.  This instance is immutable and unaffected by this method call.",FreeText,,0
3475,jdk,java.time.Year_goal.json,plus(java.time.temporal.TemporalAmount amountToAdd),plus,java.time.Year,"Returns a copy of this year with the specified amount added.  This returns a Year, based on this one, with the specified amount added. The amount is typically Period but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#addTo(Temporal). The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to #plus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully added.  This instance is immutable and unaffected by this method call.",FreeText,,0
3476,jdk,java.time.Year_goal.json,"plus(long amountToAdd, java.time.temporal.TemporalUnit unit)",plus,java.time.Year,"Returns a copy of this year with the specified amount added.  This returns a Year, based on this one, with the amount in terms of the unit added. If it is not possible to add the amount, because the unit is not supported or for some other reason, an exception is thrown.  If the field is a ChronoUnit then the addition is implemented here. The supported fields behave as follows:  <li>YEARS - Returns a Year with the specified number of years added. This is equivalent to #plusYears(long). <li>DECADES - Returns a Year with the specified number of decades added. This is equivalent to calling #plusYears(long) with the amount multiplied by 10. <li>CENTURIES - Returns a Year with the specified number of centuries added. This is equivalent to calling #plusYears(long) with the amount multiplied by 100. <li>MILLENNIA - Returns a Year with the specified number of millennia added. This is equivalent to calling #plusYears(long) with the amount multiplied by 1,000. <li>ERAS - Returns a Year with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.   All other ChronoUnit instances will throw an UnsupportedTemporalTypeException.  If the field is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.addTo(Temporal, long) passing this as the argument. In this case, the unit determines whether and how to perform the addition.  This instance is immutable and unaffected by this method call.",FreeText,,0
3477,jdk,java.time.Year_goal.json,plusYears(long yearsToAdd),plusYears,java.time.Year,Returns a copy of this year with the specified number of years added.  This instance is immutable and unaffected by this method call.,FreeText,,0
3478,jdk,java.time.Year_goal.json,minus(java.time.temporal.TemporalAmount amountToSubtract),minus,java.time.Year,"Returns a copy of this year with the specified amount subtracted.  This returns a Year, based on this one, with the specified amount subtracted. The amount is typically Period but may be any other type implementing the TemporalAmount interface.  The calculation is delegated to the amount object by calling TemporalAmount#subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to #minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted.  This instance is immutable and unaffected by this method call.",FreeText,,0
3479,jdk,java.time.Year_goal.json,"minus(long amountToSubtract, java.time.temporal.TemporalUnit unit)",minus,java.time.Year,"Returns a copy of this year with the specified amount subtracted.  This returns a Year, based on this one, with the amount in terms of the unit subtracted. If it is not possible to subtract the amount, because the unit is not supported or for some other reason, an exception is thrown.  This method is equivalent to #plus(long, TemporalUnit) with the amount negated. See that method for a full description of how addition, and thus subtraction, works.  This instance is immutable and unaffected by this method call.",FreeText,"methodResultID.equals(receiverObjectClone.plus(args[0],args[1]))",1
3480,jdk,java.time.Year_goal.json,minusYears(long yearsToSubtract),minusYears,java.time.Year,Returns a copy of this year with the specified number of years subtracted.  This instance is immutable and unaffected by this method call.,FreeText,,0
3481,jdk,java.time.Year_goal.json,query(java.time.temporal.TemporalQuery<R> query),query,java.time.Year,Queries this year using the specified query.  This queries this year using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be.  The result of this method is obtained by invoking the TemporalQuery#queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,FreeText,,0
3482,jdk,java.time.Year_goal.json,adjustInto(java.time.temporal.Temporal temporal),adjustInto,java.time.Year,"Adjusts the specified temporal object to have this year.  This returns a temporal object of the same observable type as the input with the year changed to be the same as this.  The adjustment is equivalent to using Temporal#with(TemporalField, long) passing ChronoField#YEAR as the field. If the specified temporal object does not use the ISO calendar system then a DateTimeException is thrown.  In most cases, it is clearer to reverse the calling pattern by using Temporal#with(TemporalAdjuster):  // these two lines are equivalent, but the second approach is recommended temporal = thisYear.adjustInto(temporal); temporal = temporal.with(thisYear);   This instance is immutable and unaffected by this method call.",FreeText,,0
3483,jdk,java.time.Year_goal.json,"until(java.time.temporal.Temporal endExclusive, java.time.temporal.TemporalUnit unit)",until,java.time.Year,"Calculates the amount of time until another year in terms of the specified unit.  This calculates the amount of time between two Year objects in terms of a single TemporalUnit. The start and end points are this and the specified year. The result will be negative if the end is before the start. The Temporal passed to this method is converted to a Year using #from(TemporalAccessor). For example, the period in decades between two year can be calculated using startYear.until(endYear, DECADES).  The calculation returns a whole number, representing the number of complete units between the two years. For example, the period in decades between 2012 and 2031 will only be one decade as it is one year short of two decades.  There are two equivalent ways of using this method. The first is to invoke this method. The second is to use TemporalUnit#between(Temporal, Temporal):  // these two lines are equivalent amount = start.until(end, YEARS); amount = YEARS.between(start, end);  The choice should be made based on which makes the code more readable.  The calculation is implemented in this method for ChronoUnit. The units YEARS, DECADES, CENTURIES, MILLENNIA and ERAS are supported. Other ChronoUnit values will throw an exception.  If the unit is not a ChronoUnit, then the result of this method is obtained by invoking TemporalUnit.between(Temporal, Temporal) passing this as the first argument and the converted input temporal as the second argument.  This instance is immutable and unaffected by this method call.",FreeText,,0
3484,jdk,java.time.Year_goal.json,format(java.time.format.DateTimeFormatter formatter),format,java.time.Year,Formats this year using the specified formatter.  This year will be passed to the formatter to produce a string.,FreeText,,0
3485,jdk,java.time.Year_goal.json,atDay(int dayOfYear),atDay,java.time.Year,Combines this year with a day-of-year to create a LocalDate.  This returns a LocalDate formed from this year and the specified day-of-year.  The day-of-year value 366 is only valid in a leap year.,FreeText,,0
3486,jdk,java.time.Year_goal.json,atMonth(java.time.Month month),atMonth,java.time.Year,Combines this year with a month to create a YearMonth.  This returns a YearMonth formed from this year and the specified month. All possible combinations of year and month are valid.  This method can be used as part of a chain to produce a date:  LocalDate date = year.atMonth(month).atDay(day);,FreeText,,0
3487,jdk,java.time.Year_goal.json,atMonth(int month),atMonth,java.time.Year,Combines this year with a month to create a YearMonth.  This returns a YearMonth formed from this year and the specified month. All possible combinations of year and month are valid.  This method can be used as part of a chain to produce a date:  LocalDate date = year.atMonth(month).atDay(day);,FreeText,,0
3488,jdk,java.time.Year_goal.json,atMonthDay(java.time.MonthDay monthDay),atMonthDay,java.time.Year,Combines this year with a month-day to create a LocalDate.  This returns a LocalDate formed from this year and the specified month-day.  A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.,FreeText,,0
3489,jdk,java.time.Year_goal.json,compareTo(java.time.Year other),compareTo,java.time.Year,"Compares this year to another year.  The comparison is based on the value of the year. It is ""consistent with equals"", as defined by Comparable.",FreeText,,0
3490,jdk,java.time.Year_goal.json,isAfter(java.time.Year other),isAfter,java.time.Year,Is this year after the specified year.,FreeText,,0
3491,jdk,java.time.Year_goal.json,isBefore(java.time.Year other),isBefore,java.time.Year,Is this year before the specified year.,FreeText,,0
3492,jdk,java.time.Year_goal.json,equals(java.lang.Object obj),equals,java.time.Year,Checks if this year is equal to another year.  The comparison is based on the time-line position of the years.,FreeText,,0
3493,jdk,java.time.Year_goal.json,hashCode(),hashCode,java.time.Year,A hash code for this year.,FreeText,,0
3494,jdk,java.time.Year_goal.json,toString(),toString,java.time.Year,Outputs this year as a String.,FreeText,,0
3495,jdk,java.time.Year_goal.json,writeExternal(java.io.DataOutput out),writeExternal,java.time.Year,,FreeText,,0
3496,jdk,java.time.Year_goal.json,readExternal(java.io.DataInput in),readExternal,java.time.Year,,FreeText,,0
3497,jdk,java.util.AbstractList_goal.json,get(int index),get,java.util.AbstractList,{@inheritDoc},FreeText,,0
3498,jdk,java.util.AbstractList_goal.json,iterator(),iterator,java.util.AbstractList,"Returns an iterator over the elements in this list in proper sequence. This implementation returns a straightforward implementation of the iterator interface, relying on the backing list's size(), get(int), and remove(int) methods. Note that the iterator returned by this method will throw an UnsupportedOperationException in response to its remove method unless the list's remove(int) method is overridden. This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) #modCount field.",FreeText,,0
3499,jdk,java.util.AbstractList_goal.json,java.util.AbstractList(),java.util.AbstractList,java.util.AbstractList,"Sole constructor. (For invocation by subclass constructors, typically implicit.)",FreeText,,0
3500,jdk,java.util.AbstractList_goal.json,"set(int index, E element)",set,java.util.AbstractList,{@inheritDoc} This implementation always throws an UnsupportedOperationException.,FreeText,,0
3501,jdk,java.util.AbstractList_goal.json,add(E e),add,java.util.AbstractList,"Appends the specified element to the end of this list (optional operation). Lists that support this operation may place limitations on what elements may be added to this list. In particular, some lists will refuse to add null elements, and others will impose restrictions on the type of elements that may be added. List classes should clearly specify in their documentation any restrictions on what elements may be added. This implementation calls add(size(), e). Note that this implementation throws an UnsupportedOperationException unless add(int, E) is overridden.",FreeText,"methodResultID==receiverObjectID.add(receiverObjectID.size(), args[0])",1
3502,jdk,java.util.AbstractList_goal.json,lastIndexOf(java.lang.Object o),lastIndexOf,java.util.AbstractList,"{@inheritDoc} This implementation first gets a list iterator that points to the end of the list (with {@code listIterator(size())}). Then, it iterates backwards over the list until the specified element is found, or the beginning of the list is reached.",FreeText,,0
3503,jdk,java.util.AbstractList_goal.json,"removeRange(int fromIndex, int toIndex)",removeRange,java.util.AbstractList,"Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive. Shifts any succeeding elements to the left (reduces their index). This call shortens the list by (toIndex - fromIndex) elements. (If toIndex==fromIndex, this operation has no effect.) This method is called by the clear operation on this list and its subLists. Overriding this method to take advantage of the internals of the list implementation can substantially improve the performance of the clear operation on this list and its subLists. This implementation gets a list iterator positioned before fromIndex, and repeatedly calls ListIterator.next followed by ListIterator.remove until the entire range has been removed. Note: if ListIterator.remove requires linear time, this implementation requires quadratic time.",FreeText,,0
3504,jdk,java.util.AbstractList_goal.json,"subList(int fromIndex, int toIndex)",subList,java.util.AbstractList,"{@inheritDoc} This implementation returns a list that subclasses AbstractList. The subclass stores, in private fields, the offset of the subList within the backing list, the size of the subList (which can change over its lifetime), and the expected modCount value of the backing list. There are two variants of the subclass, one of which implements RandomAccess. If this list implements RandomAccess the returned list will be an instance of the subclass that implements RandomAccess. The subclass's set(int, E), get(int), add(int, E), remove(int), addAll(int, Collection) and removeRange(int, int) methods all delegate to the corresponding methods on the backing abstract list, after bounds-checking the index and adjusting for the offset. The addAll(Collection c) method merely returns addAll(size, c). The listIterator(int) method returns a ""wrapper object"" over a list iterator on the backing list, which is created with the corresponding method on the backing list. The iterator method merely returns listIterator(), and the size method merely returns the subclass's size field. All methods first check to see if the actual modCount of the backing list is equal to its expected value, and throw a ConcurrentModificationException if it is not.",FreeText,,0
3505,jdk,java.util.AbstractList_goal.json,equals(java.lang.Object o),equals,java.util.AbstractList,"Compares the specified object with this list for equality. Returns true if and only if the specified object is also a list, both lists have the same size, and all corresponding pairs of elements in the two lists are equal. (Two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).) In other words, two lists are defined to be equal if they contain the same elements in the same order. This implementation first checks if the specified object is this list. If so, it returns true; if not, it checks if the specified object is a list. If not, it returns false; if so, it iterates over both lists, comparing corresponding pairs of elements. If any comparison returns false, this method returns false. If either iterator runs out of elements before the other it returns false (as the lists are of unequal length); otherwise it returns true when the iterations complete.",FreeText,,0
3506,jdk,java.util.AbstractList_goal.json,listIterator(),listIterator,java.util.AbstractList,{@inheritDoc} This implementation returns listIterator(0). @see #listIterator(int),FreeText,,0
3507,jdk,java.util.AbstractList_goal.json,indexOf(java.lang.Object o),indexOf,java.util.AbstractList,"{@inheritDoc} This implementation first gets a list iterator (with {@code listIterator()}). Then, it iterates over the list until the specified element is found or the end of the list is reached.",FreeText,,0
3508,jdk,java.util.AbstractList_goal.json,clear(),clear,java.util.AbstractList,"Removes all of the elements from this list (optional operation). The list will be empty after this call returns. This implementation calls removeRange(0, size()). Note that this implementation throws an UnsupportedOperationException unless remove(int index) or removeRange(int fromIndex, int toIndex) is overridden.",FreeText,,0
3509,jdk,java.util.AbstractList_goal.json,"add(int index, E element)",add,java.util.AbstractList,{@inheritDoc} This implementation always throws an UnsupportedOperationException.,FreeText,,0
3510,jdk,java.util.AbstractList_goal.json,hashCode(),hashCode,java.util.AbstractList,Returns the hash code value for this list. This implementation uses exactly the code that is used to define the list hash function in the documentation for the List#hashCode method.,FreeText,,0
3511,jdk,java.util.AbstractList_goal.json,remove(int index),remove,java.util.AbstractList,{@inheritDoc} This implementation always throws an UnsupportedOperationException.,FreeText,,0
3512,jdk,java.util.AbstractList_goal.json,listIterator(int index),listIterator,java.util.AbstractList,"{@inheritDoc} This implementation returns a straightforward implementation of the ListIterator interface that extends the implementation of the Iterator interface returned by the iterator() method. The ListIterator implementation relies on the backing list's get(int), set(int, E), add(int, E) and remove(int) methods. Note that the list iterator returned by this implementation will throw an UnsupportedOperationException in response to its remove, set and add methods unless the list's remove(int), set(int, E), and add(int, E) methods are overridden. This implementation can be made to throw runtime exceptions in the face of concurrent modification, as described in the specification for the (protected) #modCount field.",FreeText,,0
3513,jdk,java.util.AbstractList_goal.json,"addAll(int index, java.util.Collection<? extends E> c)",addAll,java.util.AbstractList,"{@inheritDoc} This implementation gets an iterator over the specified collection and iterates over it, inserting the elements obtained from the iterator into this list at the appropriate position, one at a time, using add(int, E). Many implementations will override this method for efficiency. Note that this implementation throws an UnsupportedOperationException unless add(int, E) is overridden.",FreeText,,0
3514,jdk,java.util.ArrayDeque_goal.json,java.util.ArrayDeque(),java.util.ArrayDeque,java.util.ArrayDeque,Constructs an empty array deque with an initial capacity sufficient to hold 16 elements.,FreeText,,0
3515,jdk,java.util.ArrayDeque_goal.json,java.util.ArrayDeque(int numElements),java.util.ArrayDeque,java.util.ArrayDeque,Constructs an empty array deque with an initial capacity sufficient to hold the specified number of elements.,FreeText,,0
3516,jdk,java.util.ArrayDeque_goal.json,java.util.ArrayDeque(java.util.Collection<? extends E> c),java.util.ArrayDeque,java.util.ArrayDeque,"Constructs a deque containing the elements of the specified collection, in the order they are returned by the collection's iterator. (The first element returned by the collection's iterator becomes the first element, or front of the deque.)",FreeText,,0
3517,jdk,java.util.ArrayDeque_goal.json,addFirst(E e),addFirst,java.util.ArrayDeque,Inserts the specified element at the front of this deque.,FreeText,,0
3518,jdk,java.util.ArrayDeque_goal.json,addLast(E e),addLast,java.util.ArrayDeque,Inserts the specified element at the end of this deque. This method is equivalent to #add.,FreeText,"receiverObjectClone.add(args[0]);
receiverObjectClone.equals(receiverObjectID)",1
3519,jdk,java.util.ArrayDeque_goal.json,offerFirst(E e),offerFirst,java.util.ArrayDeque,Inserts the specified element at the front of this deque.,FreeText,,0
3520,jdk,java.util.ArrayDeque_goal.json,offerLast(E e),offerLast,java.util.ArrayDeque,Inserts the specified element at the end of this deque.,FreeText,,0
3521,jdk,java.util.ArrayDeque_goal.json,removeFirst(),removeFirst,java.util.ArrayDeque,,FreeText,,0
3522,jdk,java.util.ArrayDeque_goal.json,removeLast(),removeLast,java.util.ArrayDeque,,FreeText,,0
3523,jdk,java.util.ArrayDeque_goal.json,pollFirst(),pollFirst,java.util.ArrayDeque,,FreeText,,0
3524,jdk,java.util.ArrayDeque_goal.json,pollLast(),pollLast,java.util.ArrayDeque,,FreeText,,0
3525,jdk,java.util.ArrayDeque_goal.json,getFirst(),getFirst,java.util.ArrayDeque,,FreeText,,0
3526,jdk,java.util.ArrayDeque_goal.json,getLast(),getLast,java.util.ArrayDeque,,FreeText,,0
3527,jdk,java.util.ArrayDeque_goal.json,peekFirst(),peekFirst,java.util.ArrayDeque,,FreeText,,0
3528,jdk,java.util.ArrayDeque_goal.json,peekLast(),peekLast,java.util.ArrayDeque,,FreeText,,0
3529,jdk,java.util.ArrayDeque_goal.json,removeFirstOccurrence(java.lang.Object o),removeFirstOccurrence,java.util.ArrayDeque,"Removes the first occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",FreeText,,0
3530,jdk,java.util.ArrayDeque_goal.json,removeLastOccurrence(java.lang.Object o),removeLastOccurrence,java.util.ArrayDeque,"Removes the last occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the last element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",FreeText,,0
3531,jdk,java.util.ArrayDeque_goal.json,add(E e),add,java.util.ArrayDeque,Inserts the specified element at the end of this deque. This method is equivalent to #addLast.,FreeText,receiverObjectClone.addLast(args[0]);receiverObjectClone.equals(receiverObjectID),1
3532,jdk,java.util.ArrayDeque_goal.json,offer(E e),offer,java.util.ArrayDeque,Inserts the specified element at the end of this deque. This method is equivalent to #offerLast.,FreeText,methodResultID==(receiverObjectClone.offerLast(args[0])),1
3533,jdk,java.util.ArrayDeque_goal.json,remove(),remove,java.util.ArrayDeque,Retrieves and removes the head of the queue represented by this deque. This method differs from #poll poll only in that it throws an exception if this deque is empty. This method is equivalent to #removeFirst.,FreeText,methodResultID.equals(receiverObjectClone.removeFirst()),1
3534,jdk,java.util.ArrayDeque_goal.json,poll(),poll,java.util.ArrayDeque,"Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), or returns null if this deque is empty. This method is equivalent to #pollFirst.",FreeText,methodResultID.equals(receiverObjectClone.pollFirst()),1
3535,jdk,java.util.ArrayDeque_goal.json,element(),element,java.util.ArrayDeque,"Retrieves, but does not remove, the head of the queue represented by this deque. This method differs from #peek peek only in that it throws an exception if this deque is empty. This method is equivalent to #getFirst.",FreeText,,0
3536,jdk,java.util.ArrayDeque_goal.json,peek(),peek,java.util.ArrayDeque,"Retrieves, but does not remove, the head of the queue represented by this deque, or returns null if this deque is empty. This method is equivalent to #peekFirst.",FreeText,methodResultID.equals(receiverObjectClone.peekFirst()),1
3537,jdk,java.util.ArrayDeque_goal.json,push(E e),push,java.util.ArrayDeque,"Pushes an element onto the stack represented by this deque. In other words, inserts the element at the front of this deque. This method is equivalent to #addFirst.",FreeText,"receiverObjectClone.addFirst(args[0]);
receiverObjectClone.equals(receiverObjectID)",1
3538,jdk,java.util.ArrayDeque_goal.json,pop(),pop,java.util.ArrayDeque,"Pops an element from the stack represented by this deque. In other words, removes and returns the first element of this deque. This method is equivalent to #removeFirst().",FreeText,methodResultID.equals(receiverObjectClone.removeFirst()),1
3539,jdk,java.util.ArrayDeque_goal.json,size(),size,java.util.ArrayDeque,Returns the number of elements in this deque.,FreeText,,0
3540,jdk,java.util.ArrayDeque_goal.json,isEmpty(),isEmpty,java.util.ArrayDeque,Returns true if this deque contains no elements.,FreeText,,0
3541,jdk,java.util.ArrayDeque_goal.json,iterator(),iterator,java.util.ArrayDeque,Returns an iterator over the elements in this deque. The elements will be ordered from first (head) to last (tail). This is the same order that elements would be dequeued (via successive calls to #remove or popped (via successive calls to #pop).,FreeText,,0
3542,jdk,java.util.ArrayDeque_goal.json,descendingIterator(),descendingIterator,java.util.ArrayDeque,,FreeText,,0
3543,jdk,java.util.ArrayDeque_goal.json,contains(java.lang.Object o),contains,java.util.ArrayDeque,"Returns true if this deque contains the specified element. More formally, returns true if and only if this deque contains at least one element e such that o.equals(e).",FreeText,,0
3544,jdk,java.util.ArrayDeque_goal.json,remove(java.lang.Object o),remove,java.util.ArrayDeque,"Removes a single instance of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call). This method is equivalent to #removeFirstOccurrence(Object).",FreeText,methodResultID==(receiverObjectClone.removeFirstOccurrence(args[0])),1
3545,jdk,java.util.ArrayDeque_goal.json,clear(),clear,java.util.ArrayDeque,Removes all of the elements from this deque. The deque will be empty after this call returns.,FreeText,,0
3546,jdk,java.util.ArrayDeque_goal.json,toArray(),toArray,java.util.ArrayDeque,"Returns an array containing all of the elements in this deque in proper sequence (from first to last element). The returned array will be ""safe"" in that no references to it are maintained by this deque. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array. This method acts as bridge between array-based and collection-based APIs.",FreeText,,0
3547,jdk,java.util.ArrayDeque_goal.json,toArray(T[] a),toArray,java.util.ArrayDeque,"Returns an array containing all of the elements in this deque in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the deque fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this deque. If this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to null. Like the #toArray() method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a deque known to contain only strings. The following code can be used to dump the deque into a newly allocated array of String}:  {@code String[] y = x.toArray(new String[0]); Note that toArray(new Object[0]) is identical in function to toArray().",FreeText,,0
3548,jdk,java.util.ArrayDeque_goal.json,clone(),clone,java.util.ArrayDeque,Returns a copy of this deque.,FreeText,,0
3549,jdk,java.util.ArrayDeque_goal.json,spliterator(),spliterator,java.util.ArrayDeque,"Creates a <a href=""Spliterator.html#binding"">late-binding</a> and fail-fast Spliterator over the elements in this deque. The Spliterator reports Spliterator#SIZED, Spliterator#SUBSIZED, Spliterator#ORDERED, and Spliterator#NONNULL. Overriding implementations should document the reporting of additional characteristic values.",FreeText,,0
3550,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,java.util.concurrent.LinkedBlockingDeque(),java.util.concurrent.LinkedBlockingDeque,java.util.concurrent.LinkedBlockingDeque,Creates a LinkedBlockingDeque with a capacity of Integer#MAX_VALUE.,FreeText,,0
3551,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,java.util.concurrent.LinkedBlockingDeque(int capacity),java.util.concurrent.LinkedBlockingDeque,java.util.concurrent.LinkedBlockingDeque,Creates a LinkedBlockingDeque with the given (fixed) capacity.,FreeText,,0
3552,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,java.util.concurrent.LinkedBlockingDeque(java.util.Collection<? extends E> c),java.util.concurrent.LinkedBlockingDeque,java.util.concurrent.LinkedBlockingDeque,"Creates a LinkedBlockingDeque with a capacity of Integer#MAX_VALUE, initially containing the elements of the given collection, added in traversal order of the collection's iterator.",FreeText,,0
3553,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,unlink(java.util.concurrent.LinkedBlockingDeque$Node<E> x),unlink,java.util.concurrent.LinkedBlockingDeque,Unlinks x.,FreeText,,0
3554,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,addFirst(E e),addFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3555,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,addLast(E e),addLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3556,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,offerFirst(E e),offerFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3557,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,offerLast(E e),offerLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3558,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,putFirst(E e),putFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3559,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,putLast(E e),putLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3560,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"offerFirst(E e, long timeout, java.util.concurrent.TimeUnit unit)",offerFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3561,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"offerLast(E e, long timeout, java.util.concurrent.TimeUnit unit)",offerLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3562,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,removeFirst(),removeFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3563,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,removeLast(),removeLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3564,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,pollFirst(),pollFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3565,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,pollLast(),pollLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3566,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,takeFirst(),takeFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3567,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,takeLast(),takeLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3568,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"pollFirst(long timeout, java.util.concurrent.TimeUnit unit)",pollFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3569,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"pollLast(long timeout, java.util.concurrent.TimeUnit unit)",pollLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3570,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,getFirst(),getFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3571,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,getLast(),getLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3572,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,peekFirst(),peekFirst,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3573,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,peekLast(),peekLast,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3574,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,removeFirstOccurrence(java.lang.Object o),removeFirstOccurrence,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3575,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,removeLastOccurrence(java.lang.Object o),removeLastOccurrence,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3576,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,add(E e),add,java.util.concurrent.LinkedBlockingDeque,"Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, it is generally preferable to use method #offer(Object) offer. This method is equivalent to #addLast.",FreeText,receiverObjectClone.addLast(args[0]);receiverObjectClone.equals(receiverObjectID),1
3577,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,offer(E e),offer,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3578,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,put(E e),put,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3579,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"offer(E e, long timeout, java.util.concurrent.TimeUnit unit)",offer,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3580,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,remove(),remove,java.util.concurrent.LinkedBlockingDeque,Retrieves and removes the head of the queue represented by this deque. This method differs from #poll poll only in that it throws an exception if this deque is empty. This method is equivalent to #removeFirst() removeFirst.,FreeText,methodResultID.equals(receiverObjectClone.removeFirst()),1
3581,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,poll(),poll,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3582,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,take(),take,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3583,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"poll(long timeout, java.util.concurrent.TimeUnit unit)",poll,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3584,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,element(),element,java.util.concurrent.LinkedBlockingDeque,"Retrieves, but does not remove, the head of the queue represented by this deque. This method differs from #peek peek only in that it throws an exception if this deque is empty. This method is equivalent to #getFirst() getFirst.",FreeText,methodResultID.equals(receiverObjectClone.getFirst()),1
3585,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,peek(),peek,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3586,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,remainingCapacity(),remainingCapacity,java.util.concurrent.LinkedBlockingDeque,Returns the number of additional elements that this deque can ideally (in the absence of memory or resource constraints) accept without blocking. This is always equal to the initial capacity of this deque less the current size of this deque. Note that you cannot always tell if an attempt to insert an element will succeed by inspecting remainingCapacity because it may be the case that another thread is about to insert or remove an element.,FreeText,,0
3587,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,drainTo(java.util.Collection<? super E> c),drainTo,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3588,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,"drainTo(java.util.Collection<? super E> c, int maxElements)",drainTo,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3589,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,push(E e),push,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3590,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,pop(),pop,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3591,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,remove(java.lang.Object o),remove,java.util.concurrent.LinkedBlockingDeque,"Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call). This method is equivalent to #removeFirstOccurrence(Object) removeFirstOccurrence.",FreeText,methodResultID==(receiverObjectClone.removeFirstOccurrence(args[0])),1
3592,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,size(),size,java.util.concurrent.LinkedBlockingDeque,Returns the number of elements in this deque.,FreeText,,0
3593,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,contains(java.lang.Object o),contains,java.util.concurrent.LinkedBlockingDeque,"Returns true if this deque contains the specified element. More formally, returns true if and only if this deque contains at least one element e such that o.equals(e).",FreeText,,0
3594,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,toArray(),toArray,java.util.concurrent.LinkedBlockingDeque,"Returns an array containing all of the elements in this deque, in proper sequence (from first to last element). The returned array will be ""safe"" in that no references to it are maintained by this deque. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array. This method acts as bridge between array-based and collection-based APIs.",FreeText,,0
3595,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,toArray(T[] a),toArray,java.util.concurrent.LinkedBlockingDeque,"Returns an array containing all of the elements in this deque, in proper sequence; the runtime type of the returned array is that of the specified array. If the deque fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this deque. If this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to null. Like the #toArray() method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a deque known to contain only strings. The following code can be used to dump the deque into a newly allocated array of String}:  {@code String[] y = x.toArray(new String[0]); Note that toArray(new Object[0]) is identical in function to toArray().",FreeText,,0
3596,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,toString(),toString,java.util.concurrent.LinkedBlockingDeque,,FreeText,,0
3597,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,clear(),clear,java.util.concurrent.LinkedBlockingDeque,Atomically removes all of the elements from this deque. The deque will be empty after this call returns.,FreeText,,0
3598,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,iterator(),iterator,java.util.concurrent.LinkedBlockingDeque,Returns an iterator over the elements in this deque in proper sequence. The elements will be returned in order from first (head) to last (tail). The returned iterator is <i>weakly consistent</i>.,FreeText,,0
3599,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,descendingIterator(),descendingIterator,java.util.concurrent.LinkedBlockingDeque,Returns an iterator over the elements in this deque in reverse sequential order. The elements will be returned in order from last (tail) to first (head). The returned iterator is <i>weakly consistent</i>.,FreeText,,0
3600,jdk,java.util.concurrent.LinkedBlockingDeque_goal.json,spliterator(),spliterator,java.util.concurrent.LinkedBlockingDeque,"Returns a Spliterator over the elements in this deque. The returned spliterator is <i>weakly consistent</i>. The Spliterator reports Spliterator#CONCURRENT, Spliterator#ORDERED, and Spliterator#NONNULL. @implNote The Spliterator implements trySplit to permit limited parallelism.",FreeText,,0
3601,jdk,java.util.Currency_goal.json,getInstance(java.lang.String currencyCode),getInstance,java.util.Currency,Returns the Currency instance for the given currency code.,FreeText,,0
3602,jdk,java.util.Currency_goal.json,getInstance(java.util.Locale locale),getInstance,java.util.Currency,"Returns the Currency instance for the country of the given locale. The language and variant components of the locale are ignored. The result may vary over time, as countries change their currencies. For example, for the original member countries of the European Monetary Union, the method returns the old national currencies until December 31, 2001, and the Euro from January 1, 2002, local time of the respective countries.  The method returns null for territories that don't have a currency, such as Antarctica.",FreeText,,0
3603,jdk,java.util.Currency_goal.json,getAvailableCurrencies(),getAvailableCurrencies,java.util.Currency,"Gets the set of available currencies. The returned set of currencies contains all of the available currencies, which may include currencies that represent obsolete ISO 4217 codes. The set can be modified without affecting the available currencies in the runtime.",FreeText,,0
3604,jdk,java.util.Currency_goal.json,getCurrencyCode(),getCurrencyCode,java.util.Currency,Gets the ISO 4217 currency code of this currency.,FreeText,,0
3605,jdk,java.util.Currency_goal.json,getSymbol(),getSymbol,java.util.Currency,"Gets the symbol of this currency for the default Locale.Category#DISPLAY DISPLAY locale. For example, for the US Dollar, the symbol is ""$"" if the default locale is the US, while for other locales it may be ""US$"". If no symbol can be determined, the ISO 4217 currency code is returned.  This is equivalent to calling getSymbol(Locale.getDefault(Locale.Category.DISPLAY)).",FreeText,,0
3606,jdk,java.util.Currency_goal.json,getSymbol(java.util.Locale locale),getSymbol,java.util.Currency,"Gets the symbol of this currency for the specified locale. For example, for the US Dollar, the symbol is ""$"" if the specified locale is the US, while for other locales it may be ""US$"". If no symbol can be determined, the ISO 4217 currency code is returned.",FreeText,,0
3607,jdk,java.util.Currency_goal.json,getDefaultFractionDigits(),getDefaultFractionDigits,java.util.Currency,"Gets the default number of fraction digits used with this currency. For example, the default number of fraction digits for the Euro is 2, while for the Japanese Yen it's 0. In the case of pseudo-currencies, such as IMF Special Drawing Rights, -1 is returned.",FreeText,,0
3608,jdk,java.util.Currency_goal.json,getNumericCode(),getNumericCode,java.util.Currency,Returns the ISO 4217 numeric code of this currency.,FreeText,,0
3609,jdk,java.util.Currency_goal.json,getDisplayName(),getDisplayName,java.util.Currency,"Gets the name that is suitable for displaying this currency for the default Locale.Category#DISPLAY DISPLAY locale. If there is no suitable display name found for the default locale, the ISO 4217 currency code is returned.  This is equivalent to calling getDisplayName(Locale.getDefault(Locale.Category.DISPLAY)).",FreeText,,0
3610,jdk,java.util.Currency_goal.json,getDisplayName(java.util.Locale locale),getDisplayName,java.util.Currency,"Gets the name that is suitable for displaying this currency for the specified locale. If there is no suitable display name found for the specified locale, the ISO 4217 currency code is returned.",FreeText,,0
3611,jdk,java.util.Currency_goal.json,toString(),toString,java.util.Currency,Returns the ISO 4217 currency code of this currency.,FreeText,,0
3612,jdk,java.util.Deque_goal.json,addFirst(E e),addFirst,java.util.Deque,"Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an IllegalStateException if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method #offerFirst.",FreeText,,0
3613,jdk,java.util.Deque_goal.json,addLast(E e),addLast,java.util.Deque,"Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an IllegalStateException if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method #offerLast. This method is equivalent to #add.",FreeText,"receiverObjectClone.add(args[0]);
receiverObjectClone.equals(receiverObjectID)",1
3614,jdk,java.util.Deque_goal.json,offerFirst(E e),offerFirst,java.util.Deque,"Inserts the specified element at the front of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the #addFirst method, which can fail to insert an element only by throwing an exception.",FreeText,,0
3615,jdk,java.util.Deque_goal.json,offerLast(E e),offerLast,java.util.Deque,"Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the #addLast method, which can fail to insert an element only by throwing an exception.",FreeText,,0
3616,jdk,java.util.Deque_goal.json,removeFirst(),removeFirst,java.util.Deque,Retrieves and removes the first element of this deque. This method differs from #pollFirst pollFirst only in that it throws an exception if this deque is empty.,FreeText,,0
3617,jdk,java.util.Deque_goal.json,removeLast(),removeLast,java.util.Deque,Retrieves and removes the last element of this deque. This method differs from #pollLast pollLast only in that it throws an exception if this deque is empty.,FreeText,,0
3618,jdk,java.util.Deque_goal.json,pollFirst(),pollFirst,java.util.Deque,"Retrieves and removes the first element of this deque, or returns null if this deque is empty.",FreeText,,0
3619,jdk,java.util.Deque_goal.json,pollLast(),pollLast,java.util.Deque,"Retrieves and removes the last element of this deque, or returns null if this deque is empty.",FreeText,,0
3620,jdk,java.util.Deque_goal.json,getFirst(),getFirst,java.util.Deque,"Retrieves, but does not remove, the first element of this deque. This method differs from #peekFirst peekFirst only in that it throws an exception if this deque is empty.",FreeText,,0
3621,jdk,java.util.Deque_goal.json,getLast(),getLast,java.util.Deque,"Retrieves, but does not remove, the last element of this deque. This method differs from #peekLast peekLast only in that it throws an exception if this deque is empty.",FreeText,,0
3622,jdk,java.util.Deque_goal.json,peekFirst(),peekFirst,java.util.Deque,"Retrieves, but does not remove, the first element of this deque, or returns null if this deque is empty.",FreeText,,0
3623,jdk,java.util.Deque_goal.json,peekLast(),peekLast,java.util.Deque,"Retrieves, but does not remove, the last element of this deque, or returns null if this deque is empty.",FreeText,,0
3624,jdk,java.util.Deque_goal.json,removeFirstOccurrence(java.lang.Object o),removeFirstOccurrence,java.util.Deque,"Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",FreeText,,0
3625,jdk,java.util.Deque_goal.json,removeLastOccurrence(java.lang.Object o),removeLastOccurrence,java.util.Deque,"Removes the last occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the last element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",FreeText,,0
3626,jdk,java.util.Deque_goal.json,add(E e),add,java.util.Deque,"Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning true upon success and throwing an IllegalStateException if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use #offer(Object) offer. This method is equivalent to #addLast.",FreeText,receiverObjectClone.addLast(args[0]);receiverObjectClone.equals(receiverObjectID),1
3627,jdk,java.util.Deque_goal.json,offer(E e),offer,java.util.Deque,"Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning true upon success and false if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the #add method, which can fail to insert an element only by throwing an exception. This method is equivalent to #offerLast.",FreeText,methodResultID==(receiverObjectClone.offerLast(args[0])),1
3628,jdk,java.util.Deque_goal.json,remove(),remove,java.util.Deque,"Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque). This method differs from #poll poll only in that it throws an exception if this deque is empty. This method is equivalent to #removeFirst().",FreeText,methodResultID.equals(receiverObjectClone.removeFirst()),1
3629,jdk,java.util.Deque_goal.json,poll(),poll,java.util.Deque,"Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque), or returns null if this deque is empty. This method is equivalent to #pollFirst().",FreeText,methodResultID.equals(receiverObjectClone.pollFirst()),1
3630,jdk,java.util.Deque_goal.json,element(),element,java.util.Deque,"Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque). This method differs from #peek peek only in that it throws an exception if this deque is empty. This method is equivalent to #getFirst().",FreeText,methodResultID.equals(receiverObjectClone.getFirst()),1
3631,jdk,java.util.Deque_goal.json,peek(),peek,java.util.Deque,"Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque), or returns null if this deque is empty. This method is equivalent to #peekFirst().",FreeText,methodResultID.equals(receiverObjectClone.peekFirst()),1
3632,jdk,java.util.Deque_goal.json,push(E e),push,java.util.Deque,"Pushes an element onto the stack represented by this deque (in other words, at the head of this deque) if it is possible to do so immediately without violating capacity restrictions, throwing an IllegalStateException if no space is currently available. This method is equivalent to #addFirst.",FreeText,"receiverObjectClone.addFirst(args[0]);
receiverObjectClone.equals(receiverObjectID)",1
3633,jdk,java.util.Deque_goal.json,pop(),pop,java.util.Deque,"Pops an element from the stack represented by this deque. In other words, removes and returns the first element of this deque. This method is equivalent to #removeFirst().",FreeText,methodResultID.equals(receiverObjectClone.removeFirst()),1
3634,jdk,java.util.Deque_goal.json,remove(java.lang.Object o),remove,java.util.Deque,"Removes the first occurrence of the specified element from this deque. If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call). This method is equivalent to #removeFirstOccurrence(Object).",FreeText,methodResultID==(receiverObjectClone.removeFirstOccurrence(args[0])),1
3635,jdk,java.util.Deque_goal.json,contains(java.lang.Object o),contains,java.util.Deque,"Returns true if this deque contains the specified element. More formally, returns true if and only if this deque contains at least one element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)).",FreeText,,0
3636,jdk,java.util.Deque_goal.json,size(),size,java.util.Deque,Returns the number of elements in this deque.,FreeText,,0
3637,jdk,java.util.Deque_goal.json,iterator(),iterator,java.util.Deque,Returns an iterator over the elements in this deque in proper sequence. The elements will be returned in order from first (head) to last (tail).,FreeText,,0
3638,jdk,java.util.Deque_goal.json,descendingIterator(),descendingIterator,java.util.Deque,Returns an iterator over the elements in this deque in reverse sequential order. The elements will be returned in order from last (tail) to first (head).,FreeText,,0
3639,jdk,java.util.List_goal.json,add(E e),add,java.util.List,"Appends the specified element to the end of this list (optional operation). Lists that support this operation may place limitations on what elements may be added to this list. In particular, some lists will refuse to add null elements, and others will impose restrictions on the type of elements that may be added. List classes should clearly specify in their documentation any restrictions on what elements may be added.",FreeText,,0
3640,jdk,java.util.List_goal.json,lastIndexOf(java.lang.Object o),lastIndexOf,java.util.List,"Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the highest index i such that (o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))), or -1 if there is no such index.",FreeText,,0
3641,jdk,java.util.List_goal.json,retainAll(java.util.Collection<?> c),retainAll,java.util.List,"Retains only the elements in this list that are contained in the specified collection (optional operation). In other words, removes from this list all of its elements that are not contained in the specified collection.",FreeText,,0
3642,jdk,java.util.List_goal.json,clear(),clear,java.util.List,Removes all of the elements from this list (optional operation). The list will be empty after this call returns.,FreeText,,0
3643,jdk,java.util.List_goal.json,containsAll(java.util.Collection<?> c),containsAll,java.util.List,Returns true if this list contains all of the elements of the specified collection.,FreeText,,0
3644,jdk,java.util.List_goal.json,hashCode(),hashCode,java.util.List,"Returns the hash code value for this list. The hash code of a list is defined to be the result of the following calculation: int hashCode = 1; for (E e : list) hashCode = 31*hashCode + (e==null ? 0 : e.hashCode());  This ensures that list1.equals(list2) implies that list1.hashCode()==list2.hashCode() for any two lists, list1 and list2, as required by the general contract of Object#hashCode.",FreeText,,0
3645,jdk,java.util.List_goal.json,replaceAll(java.util.function.UnaryOperator<E> operator),replaceAll,java.util.List,"Replaces each element of this list with the result of applying the operator to that element. Errors or runtime exceptions thrown by the operator are relayed to the caller. @implSpec The default implementation is equivalent to, for this list}: {@code final ListIterator<E> li = list.listIterator(); while (li.hasNext()) { li.set(operator.apply(li.next()));  } If the list's list-iterator does not support the set operation then an UnsupportedOperationException will be thrown when replacing the first element.",FreeText,,0
3646,jdk,java.util.List_goal.json,"subList(int fromIndex, int toIndex)",subList,java.util.List,"Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned list is empty.) The returned list is backed by this list, so non-structural changes in the returned list are reflected in this list, and vice-versa. The returned list supports all of the optional list operations supported by this list. This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list: list.subList(from, to).clear();  Similar idioms may be constructed for indexOf and lastIndexOf, and all of the algorithms in the Collections class can be applied to a subList. The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is structurally modified in any way other than via the returned list. (Structural modifications are those that change the size of this list, or otherwise perturb it in such a fashion that iterations in progress may yield incorrect results.)",FreeText,,0
3647,jdk,java.util.List_goal.json,indexOf(java.lang.Object o),indexOf,java.util.List,"Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the lowest index i such that (o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))), or -1 if there is no such index.",FreeText,,0
3648,jdk,java.util.List_goal.json,toArray(T[] a),toArray,java.util.List,"Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array. If the list fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this list. If the list fits in the specified array with room to spare (i.e., the array has more elements than the list), the element in the array immediately following the end of the list is set to null. (This is useful in determining the length of the list only if the caller knows that the list does not contain any null elements.) Like the #toArray() method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs. Suppose x is a list known to contain only strings. The following code can be used to dump the list into a newly allocated array of String: String[] y = x.toArray(new String[0]);  Note that toArray(new Object[0]) is identical in function to toArray().",FreeText,receiverObjectID.toArray(new Object[0]).equals(receiverObjectID.toArray()),1
3649,jdk,java.util.List_goal.json,"set(int index, E element)",set,java.util.List,Replaces the element at the specified position in this list with the specified element (optional operation).,FreeText,,0
3650,jdk,java.util.List_goal.json,isEmpty(),isEmpty,java.util.List,Returns true if this list contains no elements.,FreeText,,0
3651,jdk,java.util.List_goal.json,remove(int index),remove,java.util.List,Removes the element at the specified position in this list (optional operation). Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the list.,FreeText,,0
3652,jdk,java.util.List_goal.json,remove(java.lang.Object o),remove,java.util.List,"Removes the first occurrence of the specified element from this list, if it is present (optional operation). If this list does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that (o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))) (if such an element exists). Returns true if this list contained the specified element (or equivalently, if this list changed as a result of the call).",FreeText,,0
3653,jdk,java.util.List_goal.json,listIterator(),listIterator,java.util.List,Returns a list iterator over the elements in this list (in proper sequence).,FreeText,,0
3654,jdk,java.util.List_goal.json,iterator(),iterator,java.util.List,Returns an iterator over the elements in this list in proper sequence.,FreeText,,0
3655,jdk,java.util.List_goal.json,spliterator(),spliterator,java.util.List,"Creates a Spliterator over the elements in this list. The Spliterator reports Spliterator#SIZED and Spliterator#ORDERED. Implementations should document the reporting of additional characteristic values. @implSpec The default implementation creates a <a href=""Spliterator.html#binding"">late-binding</a> spliterator from the list's Iterator. The spliterator inherits the fail-fast properties of the list's iterator. @implNote The created Spliterator additionally reports Spliterator#SUBSIZED.",FreeText,,0
3656,jdk,java.util.List_goal.json,toArray(),toArray,java.util.List,"Returns an array containing all of the elements in this list in proper sequence (from first to last element). The returned array will be ""safe"" in that no references to it are maintained by this list. (In other words, this method must allocate a new array even if this list is backed by an array). The caller is thus free to modify the returned array. This method acts as bridge between array-based and collection-based APIs.",FreeText,,0
3657,jdk,java.util.List_goal.json,get(int index),get,java.util.List,Returns the element at the specified position in this list.,FreeText,,0
3658,jdk,java.util.List_goal.json,"add(int index, E element)",add,java.util.List,Inserts the specified element at the specified position in this list (optional operation). Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).,FreeText,,0
3659,jdk,java.util.List_goal.json,"addAll(int index, java.util.Collection<? extends E> c)",addAll,java.util.List,"Inserts all of the elements in the specified collection into this list at the specified position (optional operation). Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in this list in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)",FreeText,,0
3660,jdk,java.util.List_goal.json,removeAll(java.util.Collection<?> c),removeAll,java.util.List,Removes from this list all of its elements that are contained in the specified collection (optional operation).,FreeText,,0
3661,jdk,java.util.List_goal.json,contains(java.lang.Object o),contains,java.util.List,"Returns true if this list contains the specified element. More formally, returns true if and only if this list contains at least one element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)).",FreeText,,0
3662,jdk,java.util.List_goal.json,listIterator(int index),listIterator,java.util.List,"Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list. The specified index indicates the first element that would be returned by an initial call to ListIterator#next next. An initial call to ListIterator#previous previous would return the element with the specified index minus one.",FreeText,,0
3663,jdk,java.util.List_goal.json,size(),size,java.util.List,"Returns the number of elements in this list. If this list contains more than Integer.MAX_VALUE elements, returns Integer.MAX_VALUE.",FreeText,,0
3664,jdk,java.util.List_goal.json,sort(java.util.Comparator<? super E> c),sort,java.util.List,"Sorts this list using the supplied Comparator to compare elements. @implSpec The default implementation is equivalent to, for this {@code list}: Collections.sort(list, c)",FreeText,,0
3665,jdk,java.util.List_goal.json,equals(java.lang.Object o),equals,java.util.List,"Compares the specified object with this list for equality. Returns true if and only if the specified object is also a list, both lists have the same size, and all corresponding pairs of elements in the two lists are equal. (Two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).) In other words, two lists are defined to be equal if they contain the same elements in the same order. This definition ensures that the equals method works properly across different implementations of the List interface.",FreeText,,0
3666,jdk,java.util.List_goal.json,addAll(java.util.Collection<? extends E> c),addAll,java.util.List,"Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)",FreeText,,0
3667,jdk,java.util.SimpleTimeZone_goal.json,"java.util.SimpleTimeZone(int rawOffset, java.lang.String ID)",java.util.SimpleTimeZone,java.util.SimpleTimeZone,Constructs a SimpleTimeZone with the given base time zone offset from GMT and time zone ID with no daylight saving time schedule.,FreeText,,0
3668,jdk,java.util.SimpleTimeZone_goal.json,"java.util.SimpleTimeZone(int rawOffset, java.lang.String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int endMonth, int endDay, int endDayOfWeek, int endTime)",java.util.SimpleTimeZone,java.util.SimpleTimeZone,"Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both startTime and endTime are specified to be represented in the wall clock time. The amount of daylight saving is assumed to be 3600000 milliseconds (i.e., one hour). This constructor is equivalent to:  SimpleTimeZone(rawOffset, ID, startMonth, startDay, startDayOfWeek, startTime, SimpleTimeZone.#WALL_TIME, endMonth, endDay, endDayOfWeek, endTime, SimpleTimeZone.#WALL_TIME, 3600000)",FreeText,,0
3669,jdk,java.util.SimpleTimeZone_goal.json,"java.util.SimpleTimeZone(int rawOffset, java.lang.String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int endMonth, int endDay, int endDayOfWeek, int endTime, int dstSavings)",java.util.SimpleTimeZone,java.util.SimpleTimeZone,"Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. Both startTime and endTime are assumed to be represented in the wall clock time. This constructor is equivalent to:  SimpleTimeZone(rawOffset, ID, startMonth, startDay, startDayOfWeek, startTime, SimpleTimeZone.#WALL_TIME, endMonth, endDay, endDayOfWeek, endTime, SimpleTimeZone.#WALL_TIME, dstSavings)",FreeText,,0
3670,jdk,java.util.SimpleTimeZone_goal.json,"java.util.SimpleTimeZone(int rawOffset, java.lang.String ID, int startMonth, int startDay, int startDayOfWeek, int startTime, int startTimeMode, int endMonth, int endDay, int endDayOfWeek, int endTime, int endTimeMode, int dstSavings)",java.util.SimpleTimeZone,java.util.SimpleTimeZone,"Constructs a SimpleTimeZone with the given base time zone offset from GMT, time zone ID, and rules for starting and ending the daylight time. This constructor takes the full set of the start and end rules parameters, including modes of startTime and endTime. The mode specifies either #WALL_TIME wall time or #STANDARD_TIME standard time or #UTC_TIME UTC time.",FreeText,,0
3671,jdk,java.util.SimpleTimeZone_goal.json,setStartYear(int year),setStartYear,java.util.SimpleTimeZone,Sets the daylight saving time starting year.,FreeText,,0
3672,jdk,java.util.SimpleTimeZone_goal.json,"setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime)",setStartRule,java.util.SimpleTimeZone,"Sets the daylight saving time start rule. For example, if daylight saving time starts on the first Sunday in April at 2 am in local wall clock time, you can set the start rule by calling: setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2*60*60*1000);",FreeText,,0
3673,jdk,java.util.SimpleTimeZone_goal.json,"setStartRule(int startMonth, int startDay, int startTime)",setStartRule,java.util.SimpleTimeZone,"Sets the daylight saving time start rule to a fixed date within a month. This method is equivalent to: setStartRule(startMonth, startDay, 0, startTime)",FreeText,"receiverObjectClone.setStartRule(args[0],args[1],0,args[2]);
receiverObjectClone.equals(receiverObjectID)",1
3674,jdk,java.util.SimpleTimeZone_goal.json,"setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime, boolean after)",setStartRule,java.util.SimpleTimeZone,"Sets the daylight saving time start rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",FreeText,,0
3675,jdk,java.util.SimpleTimeZone_goal.json,"setEndRule(int endMonth, int endDay, int endDayOfWeek, int endTime)",setEndRule,java.util.SimpleTimeZone,"Sets the daylight saving time end rule. For example, if daylight saving time ends on the last Sunday in October at 2 am in wall clock time, you can set the end rule by calling: setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2*60*60*1000);",FreeText,,0
3676,jdk,java.util.SimpleTimeZone_goal.json,"setEndRule(int endMonth, int endDay, int endTime)",setEndRule,java.util.SimpleTimeZone,"Sets the daylight saving time end rule to a fixed date within a month. This method is equivalent to: setEndRule(endMonth, endDay, 0, endTime)",FreeText,"receiverObjectClone.setEndRule(args[0],args[1],0,args[2]);
receiverObjectClone.equals(receiverObjectID)",1
3677,jdk,java.util.SimpleTimeZone_goal.json,"setEndRule(int endMonth, int endDay, int endDayOfWeek, int endTime, boolean after)",setEndRule,java.util.SimpleTimeZone,"Sets the daylight saving time end rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",FreeText,,0
3678,jdk,java.util.SimpleTimeZone_goal.json,getOffset(long date),getOffset,java.util.SimpleTimeZone,"Returns the offset of this time zone from UTC at the given time. If daylight saving time is in effect at the given time, the offset value is adjusted with the amount of daylight saving.",FreeText,,0
3679,jdk,java.util.SimpleTimeZone_goal.json,"getOffsets(long date, int[] offsets)",getOffsets,java.util.SimpleTimeZone,@see TimeZone#getOffsets,FreeText,,0
3680,jdk,java.util.SimpleTimeZone_goal.json,"getOffset(int era, int year, int month, int day, int dayOfWeek, int millis)",getOffset,java.util.SimpleTimeZone,"Returns the difference in milliseconds between local time and UTC, taking into account both the raw offset and the effect of daylight saving, for the specified date and time. This method assumes that the start and end month are distinct. It also uses a default GregorianCalendar object as its underlying calendar, such as for determining leap years. Do not use the result of this method with a calendar other than a default GregorianCalendar. Note: In general, clients should use Calendar.get(ZONE_OFFSET) + Calendar.get(DST_OFFSET) instead of calling this method.",FreeText,,0
3681,jdk,java.util.SimpleTimeZone_goal.json,getRawOffset(),getRawOffset,java.util.SimpleTimeZone,Gets the GMT offset for this time zone.,FreeText,,0
3682,jdk,java.util.SimpleTimeZone_goal.json,setRawOffset(int offsetMillis),setRawOffset,java.util.SimpleTimeZone,Sets the base time zone offset to GMT. This is the offset to add to UTC to get local time. @see #getRawOffset,FreeText,,0
3683,jdk,java.util.SimpleTimeZone_goal.json,setDSTSavings(int millisSavedDuringDST),setDSTSavings,java.util.SimpleTimeZone,Sets the amount of time in milliseconds that the clock is advanced during daylight saving time.,FreeText,,0
3684,jdk,java.util.SimpleTimeZone_goal.json,getDSTSavings(),getDSTSavings,java.util.SimpleTimeZone,Returns the amount of time in milliseconds that the clock is advanced during daylight saving time.,FreeText,,0
3685,jdk,java.util.SimpleTimeZone_goal.json,useDaylightTime(),useDaylightTime,java.util.SimpleTimeZone,Queries if this time zone uses daylight saving time.,FreeText,,0
3686,jdk,java.util.SimpleTimeZone_goal.json,observesDaylightTime(),observesDaylightTime,java.util.SimpleTimeZone,Returns true if this SimpleTimeZone observes Daylight Saving Time. This method is equivalent to #useDaylightTime().,FreeText,methodResultID==(receiverObjectClone.useDaylightTime()),1
3687,jdk,java.util.SimpleTimeZone_goal.json,inDaylightTime(java.util.Date date),inDaylightTime,java.util.SimpleTimeZone,Queries if the given date is in daylight saving time.,FreeText,,0
3688,jdk,java.util.SimpleTimeZone_goal.json,clone(),clone,java.util.SimpleTimeZone,Returns a clone of this SimpleTimeZone instance.,FreeText,,0
3689,jdk,java.util.SimpleTimeZone_goal.json,hashCode(),hashCode,java.util.SimpleTimeZone,Generates the hash code for the SimpleDateFormat object.,FreeText,,0
3690,jdk,java.util.SimpleTimeZone_goal.json,equals(java.lang.Object obj),equals,java.util.SimpleTimeZone,Compares the equality of two SimpleTimeZone objects.,FreeText,,0
3691,jdk,java.util.SimpleTimeZone_goal.json,hasSameRules(java.util.TimeZone other),hasSameRules,java.util.SimpleTimeZone,Returns true if this zone has the same rules and offset as another zone.,FreeText,,0
3692,jdk,java.util.SimpleTimeZone_goal.json,toString(),toString,java.util.SimpleTimeZone,Returns a string representation of this time zone.,FreeText,,0
3693,jdk,java.util.Stack_goal.json,java.util.Stack(),java.util.Stack,java.util.Stack,Creates an empty Stack.,FreeText,,0
3694,jdk,java.util.Stack_goal.json,pop(),pop,java.util.Stack,Removes the object at the top of this stack and returns that object as the value of this function.,FreeText,,0
3695,jdk,java.util.Stack_goal.json,push(E item),push,java.util.Stack,Pushes an item onto the top of this stack. This has exactly the same effect as: <pre> addElement(item)</pre>,FreeText,receiverObjectClone.addElement(args[0]); receiverObjectClone.equals(receiverObjectID),1
3696,jdk,java.util.Stack_goal.json,empty(),empty,java.util.Stack,Tests if this stack is empty.,FreeText,,0
3697,jdk,java.util.Stack_goal.json,search(java.lang.Object o),search,java.util.Stack,"Returns the 1-based position where an object is on this stack. If the object o occurs as an item in this stack, this method returns the distance from the top of the stack of the occurrence nearest the top of the stack; the topmost item on the stack is considered to be at distance 1. The equals method is used to compare o to the items in this stack.",FreeText,,0
3698,jdk,java.util.Stack_goal.json,peek(),peek,java.util.Stack,Looks at the object at the top of this stack without removing it from the stack.,FreeText,,0
3699,jdk,java.util.TimeZone_goal.json,java.util.TimeZone(),java.util.TimeZone,java.util.TimeZone,"Sole constructor. (For invocation by subclass constructors, typically implicit.)",FreeText,,0
3700,jdk,java.util.TimeZone_goal.json,"getOffset(int era, int year, int month, int day, int dayOfWeek, int milliseconds)",getOffset,java.util.TimeZone,"Gets the time zone offset, for current date, modified in case of daylight savings. This is the offset to add to UTC to get local time.  This method returns a historically correct offset if an underlying TimeZone implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.",FreeText,,0
3701,jdk,java.util.TimeZone_goal.json,getOffset(long date),getOffset,java.util.TimeZone,"Returns the offset of this time zone from UTC at the specified date. If Daylight Saving Time is in effect at the specified date, the offset value is adjusted with the amount of daylight saving.  This method returns a historically correct offset value if an underlying TimeZone implementation subclass supports historical Daylight Saving Time schedule and GMT offset changes.",FreeText,,0
3702,jdk,java.util.TimeZone_goal.json,"getOffsets(long date, int[] offsets)",getOffsets,java.util.TimeZone,Gets the raw GMT offset and the amount of daylight saving of this time zone at the given time.,FreeText,,0
3703,jdk,java.util.TimeZone_goal.json,setRawOffset(int offsetMillis),setRawOffset,java.util.TimeZone,"Sets the base time zone offset to GMT. This is the offset to add to UTC to get local time.  If an underlying TimeZone implementation subclass supports historical GMT offset changes, the specified GMT offset is set as the latest GMT offset and the difference from the known latest GMT offset value is used to adjust all historical GMT offset values.",FreeText,,0
3704,jdk,java.util.TimeZone_goal.json,getRawOffset(),getRawOffset,java.util.TimeZone,"Returns the amount of time in milliseconds to add to UTC to get standard time in this time zone. Because this value is not affected by daylight saving time, it is called raw offset.  If an underlying TimeZone implementation subclass supports historical GMT offset changes, the method returns the raw offset value of the current date. In Honolulu, for example, its raw offset changed from GMT-10:30 to GMT-10:00 in 1947, and this method always returns -36000000 milliseconds (i.e., -10 hours).",FreeText,,0
3705,jdk,java.util.TimeZone_goal.json,getID(),getID,java.util.TimeZone,Gets the ID of this time zone.,FreeText,,0
3706,jdk,java.util.TimeZone_goal.json,setID(java.lang.String ID),setID,java.util.TimeZone,Sets the time zone ID. This does not change any other data in the time zone object.,FreeText,,0
3707,jdk,java.util.TimeZone_goal.json,getDisplayName(),getDisplayName,java.util.TimeZone,"Returns a long standard time name of this TimeZone suitable for presentation to the user in the default locale. This method is equivalent to: <pre> getDisplayName(false, #LONG, Locale.getDefault(Locale.Category#DISPLAY)) </pre>",FreeText,"methodResultID == getDisplayName(false, java.util.TimeZone.LONG, Locale.getDefault(Locale.Category#DISPLAY))",1
3708,jdk,java.util.TimeZone_goal.json,getDisplayName(java.util.Locale locale),getDisplayName,java.util.TimeZone,"Returns a long standard time name of this TimeZone suitable for presentation to the user in the specified locale. This method is equivalent to: <pre> getDisplayName(false, #LONG, locale) </pre>",FreeText,"methodResultID == getDisplayName(false, java.util.TimeZone.LONG, args[0])",1
3709,jdk,java.util.TimeZone_goal.json,"getDisplayName(boolean daylight, int style)",getDisplayName,java.util.TimeZone,"Returns a name in the specified style of this TimeZone suitable for presentation to the user in the default locale. If the specified daylight is true, a Daylight Saving Time name is returned (even if this TimeZone doesn't observe Daylight Saving Time). Otherwise, a Standard Time name is returned. This method is equivalent to: <pre> getDisplayName(daylight, style, Locale.getDefault(Locale.Category#DISPLAY)) </pre>",FreeText,"methodResultID == getDisplayName(args[0], args[1], Locale.getDefault(Locale.Category#DISPLAY)) ",1
3710,jdk,java.util.TimeZone_goal.json,"getDisplayName(boolean daylight, int style, java.util.Locale locale)",getDisplayName,java.util.TimeZone,"Returns a name in the specified style of this TimeZone suitable for presentation to the user in the specified locale. If the specified daylight is true, a Daylight Saving Time name is returned (even if this TimeZone doesn't observe Daylight Saving Time). Otherwise, a Standard Time name is returned. When looking up a time zone name, the ResourceBundle.Control#getCandidateLocales(String,Locale) default Locale search path of ResourceBundle derived from the specified locale is used. (No ResourceBundle.Control#getFallbackLocale(String,Locale) fallback Locale search is performed.) If a time zone name in any Locale of the search path, including Locale#ROOT, is found, the name is returned. Otherwise, a string in the normalized custom ID format is returned.",FreeText,,0
3711,jdk,java.util.TimeZone_goal.json,getDSTSavings(),getDSTSavings,java.util.TimeZone,"Returns the amount of time to be added to local standard time to get local wall clock time. The default implementation returns 3600000 milliseconds (i.e., one hour) if a call to #useDaylightTime() returns true. Otherwise, 0 (zero) is returned. If an underlying TimeZone implementation subclass supports historical and future Daylight Saving Time schedule changes, this method returns the amount of saving time of the last known Daylight Saving Time rule that can be a future prediction. If the amount of saving time at any given time stamp is required, construct a Calendar with this TimeZone and the time stamp, and call Calendar#get(int) Calendar.get(}Calendar#DST_OFFSET{@code ).",FreeText,,0
3712,jdk,java.util.TimeZone_goal.json,useDaylightTime(),useDaylightTime,java.util.TimeZone,"Queries if this TimeZone uses Daylight Saving Time. If an underlying TimeZone implementation subclass supports historical and future Daylight Saving Time schedule changes, this method refers to the last known Daylight Saving Time rule that can be a future prediction and may not be the same as the current rule. Consider calling #observesDaylightTime() if the current rule should also be taken into account.",FreeText,,0
3713,jdk,java.util.TimeZone_goal.json,observesDaylightTime(),observesDaylightTime,java.util.TimeZone,"Returns true if this TimeZone is currently in Daylight Saving Time, or if a transition from Standard Time to Daylight Saving Time occurs at any future time. The default implementation returns true if useDaylightTime() or inDaylightTime(new Date()) returns true.",FreeText,,0
3714,jdk,java.util.TimeZone_goal.json,inDaylightTime(java.util.Date date),inDaylightTime,java.util.TimeZone,Queries if the given date is in Daylight Saving Time in this time zone.,FreeText,,0
3715,jdk,java.util.TimeZone_goal.json,getTimeZone(java.lang.String ID),getTimeZone,java.util.TimeZone,Gets the TimeZone for the given ID.,FreeText,,0
3716,jdk,java.util.TimeZone_goal.json,getTimeZone(java.time.ZoneId zoneId),getTimeZone,java.util.TimeZone,Gets the TimeZone for the given zoneId.,FreeText,,0
3717,jdk,java.util.TimeZone_goal.json,toZoneId(),toZoneId,java.util.TimeZone,Converts this TimeZone object to a ZoneId.,FreeText,,0
3718,jdk,java.util.TimeZone_goal.json,getAvailableIDs(int rawOffset),getAvailableIDs,java.util.TimeZone,Gets the available IDs according to the given time zone offset in milliseconds.,FreeText,,0
3719,jdk,java.util.TimeZone_goal.json,getAvailableIDs(),getAvailableIDs,java.util.TimeZone,Gets all the available IDs supported.,FreeText,,0
3720,jdk,java.util.TimeZone_goal.json,getDefault(),getDefault,java.util.TimeZone,"Gets the default TimeZone of the Java virtual machine. If the cached default TimeZone is available, its clone is returned. Otherwise, the method takes the following steps to determine the default time zone.  <li>Use the user.timezone property value as the default time zone ID if it's available.</li> <li>Detect the platform time zone ID. The source of the platform time zone and ID mapping may vary with implementation.</li> <li>Use GMT as the last resort if the given or detected time zone ID is unknown.</li>  The default TimeZone created from the ID is cached, and its clone is returned. The user.timezone property value is set to the ID upon return.",FreeText,,0
3721,jdk,java.util.TimeZone_goal.json,getDefaultRef(),getDefaultRef,java.util.TimeZone,Returns the reference to the default TimeZone object. This method doesn't create a clone.,FreeText,,0
3722,jdk,java.util.TimeZone_goal.json,setDefault(java.util.TimeZone zone),setDefault,java.util.TimeZone,"Sets the TimeZone that is returned by the getDefault method. zone is cached. If zone is null, the cached default TimeZone is cleared. This method doesn't change the value of the user.timezone property.",FreeText,,0
3723,jdk,java.util.TimeZone_goal.json,hasSameRules(java.util.TimeZone other),hasSameRules,java.util.TimeZone,"Returns true if this zone has the same rule and offset as another zone. That is, if this zone differs only in ID, if at all. Returns false if the other zone is null.",FreeText,,0
3724,jdk,java.util.TimeZone_goal.json,clone(),clone,java.util.TimeZone,Creates a copy of this TimeZone.,FreeText,,0
3725,jdk,java.util.Vector_goal.json,lastIndexOf(java.lang.Object o),lastIndexOf,java.util.Vector,"Returns the index of the last occurrence of the specified element in this vector, or -1 if this vector does not contain the element. More formally, returns the highest index i such that (o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))), or -1 if there is no such index.",FreeText,,0
3726,jdk,java.util.Vector_goal.json,isEmpty(),isEmpty,java.util.Vector,Tests if this vector has no components.,FreeText,,0
3727,jdk,java.util.Vector_goal.json,"setElementAt(E obj, int index)",setElementAt,java.util.Vector,"Sets the component at the specified index of this vector to be the specified object. The previous component at that position is discarded. The index must be a value greater than or equal to 0 and less than the current size of the vector. This method is identical in functionality to the set(int, E) method (which is part of the List interface). Note that the set method reverses the order of the parameters, to more closely match array usage. Note also that the set method returns the old value that was stored at the specified position.",FreeText,"receiverObjectClone.set(args[1],args[0]); receiverObjectClone.equals(receiverObjectID)",1
3728,jdk,java.util.Vector_goal.json,"lastIndexOf(java.lang.Object o, int index)",lastIndexOf,java.util.Vector,"Returns the index of the last occurrence of the specified element in this vector, searching backwards from index, or returns -1 if the element is not found. More formally, returns the highest index i such that (i&nbsp;<=&nbsp;index&nbsp;&&&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))), or -1 if there is no such index.",FreeText,,0
3729,jdk,java.util.Vector_goal.json,removeIf(java.util.function.Predicate<? super E> filter),removeIf,java.util.Vector,,FreeText,,0
3730,jdk,java.util.Vector_goal.json,elementData(int index),elementData,java.util.Vector,,FreeText,,0
3731,jdk,java.util.Vector_goal.json,lastElement(),lastElement,java.util.Vector,Returns the last component of the vector.,FreeText,,0
3732,jdk,java.util.Vector_goal.json,remove(java.lang.Object o),remove,java.util.Vector,"Removes the first occurrence of the specified element in this Vector If the Vector does not contain the element, it is unchanged. More formally, removes the element with the lowest index i such that (o==null ? get(i)==null : o.equals(get(i))) (if such an element exists).",FreeText,,0
3733,jdk,java.util.Vector_goal.json,removeAll(java.util.Collection<?> c),removeAll,java.util.Vector,Removes from this Vector all of its elements that are contained in the specified Collection.,FreeText,,0
3734,jdk,java.util.Vector_goal.json,java.util.Vector(),java.util.Vector,java.util.Vector,Constructs an empty vector so that its internal data array has size 10 and its standard capacity increment is zero.,FreeText,,0
3735,jdk,java.util.Vector_goal.json,clone(),clone,java.util.Vector,"Returns a clone of this vector. The copy will contain a reference to a clone of the internal data array, not a reference to the original internal data array of this Vector object.",FreeText,,0
3736,jdk,java.util.Vector_goal.json,containsAll(java.util.Collection<?> c),containsAll,java.util.Vector,Returns true if this Vector contains all of the elements in the specified Collection.,FreeText,,0
3737,jdk,java.util.Vector_goal.json,java.util.Vector(int initialCapacity),java.util.Vector,java.util.Vector,Constructs an empty vector with the specified initial capacity and with its capacity increment equal to zero.,FreeText,,0
3738,jdk,java.util.Vector_goal.json,removeAllElements(),removeAllElements,java.util.Vector,Removes all components from this vector and sets its size to zero. This method is identical in functionality to the #clear method (which is part of the List interface).,FreeText,receiverObjectClone.clear();receiverObjectClone.equals(receiverObjectID),1
3739,jdk,java.util.Vector_goal.json,ensureCapacity(int minCapacity),ensureCapacity,java.util.Vector,"Increases the capacity of this vector, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument. If the current capacity of this vector is less than minCapacity, then its capacity is increased by replacing its internal data array, kept in the field elementData, with a larger one. The size of the new data array will be the old size plus capacityIncrement, unless the value of capacityIncrement is less than or equal to zero, in which case the new capacity will be twice the old capacity; but if this new size is still smaller than minCapacity, then the new capacity will be minCapacity.",FreeText,,0
3740,jdk,java.util.Vector_goal.json,"insertElementAt(E obj, int index)",insertElementAt,java.util.Vector,"Inserts the specified object as a component in this vector at the specified index. Each component in this vector with an index greater or equal to the specified index is shifted upward to have an index one greater than the value it had previously. The index must be a value greater than or equal to 0 and less than or equal to the current size of the vector. (If the index is equal to the current size of the vector, the new element is appended to the Vector.) This method is identical in functionality to the add(int, E) method (which is part of the List interface). Note that the add method reverses the order of the parameters, to more closely match array usage.",FreeText," receiverObjectClone.add(args[1],args[0]); receiverObjectClone.equals(receiverObjectID)",1
3741,jdk,java.util.Vector_goal.json,addAll(java.util.Collection<? extends E> c),addAll,java.util.Vector,"Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)",FreeText,,0
3742,jdk,java.util.Vector_goal.json,forEach(java.util.function.Consumer<? super E> action),forEach,java.util.Vector,,FreeText,,0
3743,jdk,java.util.Vector_goal.json,sort(java.util.Comparator<? super E> c),sort,java.util.Vector,,FreeText,,0
3744,jdk,java.util.Vector_goal.json,addElement(E obj),addElement,java.util.Vector,"Adds the specified component to the end of this vector, increasing its size by one. The capacity of this vector is increased if its size becomes greater than its capacity. This method is identical in functionality to the add(E) method (which is part of the List interface).",FreeText, receiverObjectClone.add(args[0]); receiverObjectClone.equals(receiverObjectID),1
3745,jdk,java.util.Vector_goal.json,toArray(),toArray,java.util.Vector,Returns an array containing all of the elements in this Vector in the correct order.,FreeText,,0
3746,jdk,java.util.Vector_goal.json,get(int index),get,java.util.Vector,Returns the element at the specified position in this Vector.,FreeText,,0
3747,jdk,java.util.Vector_goal.json,elements(),elements,java.util.Vector,"Returns an enumeration of the components of this vector. The returned Enumeration object will generate all items in this vector. The first item generated is the item at index 0, then the item at index 1, and so on.",FreeText,,0
3748,jdk,java.util.Vector_goal.json,"subList(int fromIndex, int toIndex)",subList,java.util.Vector,"Returns a view of the portion of this List between fromIndex, inclusive, and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned List is empty.) The returned List is backed by this List, so changes in the returned List are reflected in this List, and vice-versa. The returned List supports all of the optional List operations supported by this List. This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a List can be used as a range operation by operating on a subList view instead of a whole List. For example, the following idiom removes a range of elements from a List:  list.subList(from, to).clear();  Similar idioms may be constructed for indexOf and lastIndexOf, and all of the algorithms in the Collections class can be applied to a subList. The semantics of the List returned by this method become undefined if the backing list (i.e., this List) is structurally modified in any way other than via the returned List. (Structural modifications are those that change the size of the List, or otherwise perturb it in such a fashion that iterations in progress may yield incorrect results.)",FreeText,,0
3749,jdk,java.util.Vector_goal.json,retainAll(java.util.Collection<?> c),retainAll,java.util.Vector,"Retains only the elements in this Vector that are contained in the specified Collection. In other words, removes from this Vector all of its elements that are not contained in the specified Collection.",FreeText,,0
3750,jdk,java.util.Vector_goal.json,listIterator(),listIterator,java.util.Vector,Returns a list iterator over the elements in this list (in proper sequence). The returned list iterator is <i>fail-fast</i>. @see #listIterator(int),FreeText,,0
3751,jdk,java.util.Vector_goal.json,java.util.Vector(java.util.Collection<? extends E> c),java.util.Vector,java.util.Vector,"Constructs a vector containing the elements of the specified collection, in the order they are returned by the collection's iterator.",FreeText,,0
3752,jdk,java.util.Vector_goal.json,size(),size,java.util.Vector,Returns the number of components in this vector.,FreeText,,0
3753,jdk,java.util.Vector_goal.json,removeElementAt(int index),removeElementAt,java.util.Vector,Deletes the component at the specified index. Each component in this vector with an index greater or equal to the specified index is shifted downward to have an index one smaller than the value it had previously. The size of this vector is decreased by 1. The index must be a value greater than or equal to 0 and less than the current size of the vector. This method is identical in functionality to the #remove(int) method (which is part of the List interface). Note that the remove method returns the old value that was stored at the specified position.,FreeText,receiverObjectClone.remove(args[0]); receiverObjectClone.equals(receiverObjectID),1
3754,jdk,java.util.Vector_goal.json,add(E e),add,java.util.Vector,Appends the specified element to the end of this Vector.,FreeText,,0
3755,jdk,java.util.Vector_goal.json,"removeRange(int fromIndex, int toIndex)",removeRange,java.util.Vector,"Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive. Shifts any succeeding elements to the left (reduces their index). This call shortens the list by (toIndex - fromIndex) elements. (If toIndex==fromIndex, this operation has no effect.)",FreeText,,0
3756,jdk,java.util.Vector_goal.json,trimToSize(),trimToSize,java.util.Vector,"Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field elementData, with a smaller one. An application can use this operation to minimize the storage of a vector.",FreeText,,0
3757,jdk,java.util.Vector_goal.json,capacity(),capacity,java.util.Vector,Returns the current capacity of this vector.,FreeText,,0
3758,jdk,java.util.Vector_goal.json,copyInto(java.lang.Object[] anArray),copyInto,java.util.Vector,Copies the components of this vector into the specified array. The item at index k in this vector is copied into component k of anArray.,FreeText,,0
3759,jdk,java.util.Vector_goal.json,toString(),toString,java.util.Vector,"Returns a string representation of this Vector, containing the String representation of each element.",FreeText,,0
3760,jdk,java.util.Vector_goal.json,listIterator(int index),listIterator,java.util.Vector,"Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list. The specified index indicates the first element that would be returned by an initial call to ListIterator#next next. An initial call to ListIterator#previous previous would return the element with the specified index minus one. The returned list iterator is <i>fail-fast</i>.",FreeText,,0
3761,jdk,java.util.Vector_goal.json,iterator(),iterator,java.util.Vector,Returns an iterator over the elements in this list in proper sequence. The returned iterator is <i>fail-fast</i>.,FreeText,,0
3762,jdk,java.util.Vector_goal.json,"add(int index, E element)",add,java.util.Vector,Inserts the specified element at the specified position in this Vector. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).,FreeText,,0
3763,jdk,java.util.Vector_goal.json,setSize(int newSize),setSize,java.util.Vector,"Sets the size of this vector. If the new size is greater than the current size, new null items are added to the end of the vector. If the new size is less than the current size, all components at index newSize and greater are discarded.",FreeText,,0
3764,jdk,java.util.Vector_goal.json,"addAll(int index, java.util.Collection<? extends E> c)",addAll,java.util.Vector,Inserts all of the elements in the specified Collection into this Vector at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the Vector in the order that they are returned by the specified Collection's iterator.,FreeText,,0
3765,jdk,java.util.Vector_goal.json,spliterator(),spliterator,java.util.Vector,"Creates a <a href=""Spliterator.html#binding"">late-binding</a> and fail-fast Spliterator over the elements in this list. The Spliterator reports Spliterator#SIZED, Spliterator#SUBSIZED, and Spliterator#ORDERED. Overriding implementations should document the reporting of additional characteristic values.",FreeText,,0
3766,jdk,java.util.Vector_goal.json,"java.util.Vector(int initialCapacity, int capacityIncrement)",java.util.Vector,java.util.Vector,Constructs an empty vector with the specified initial capacity and capacity increment.,FreeText,,0
3767,jdk,java.util.Vector_goal.json,"indexOf(java.lang.Object o, int index)",indexOf,java.util.Vector,"Returns the index of the first occurrence of the specified element in this vector, searching forwards from index, or returns -1 if the element is not found. More formally, returns the lowest index i such that (i&nbsp;>=&nbsp;index&nbsp;&&&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))), or -1 if there is no such index.",FreeText,,0
3768,jdk,java.util.Vector_goal.json,firstElement(),firstElement,java.util.Vector,Returns the first component (the item at index {@code 0}) of this vector.,FreeText,,0
3769,jdk,java.util.Vector_goal.json,replaceAll(java.util.function.UnaryOperator<E> operator),replaceAll,java.util.Vector,,FreeText,,0
3770,jdk,java.util.Vector_goal.json,"set(int index, E element)",set,java.util.Vector,Replaces the element at the specified position in this Vector with the specified element.,FreeText,,0
3771,jdk,java.util.Vector_goal.json,clear(),clear,java.util.Vector,Removes all of the elements from this Vector. The Vector will be empty after this call returns (unless it throws an exception).,FreeText,,0
3772,jdk,java.util.Vector_goal.json,remove(int index),remove,java.util.Vector,Removes the element at the specified position in this Vector. Shifts any subsequent elements to the left (subtracts one from their indices). Returns the element that was removed from the Vector.,FreeText,,0
3773,jdk,java.util.Vector_goal.json,toArray(T[] a),toArray,java.util.Vector,"Returns an array containing all of the elements in this Vector in the correct order; the runtime type of the returned array is that of the specified array. If the Vector fits in the specified array, it is returned therein. Otherwise, a new array is allocated with the runtime type of the specified array and the size of this Vector. If the Vector fits in the specified array with room to spare (i.e., the array has more elements than the Vector), the element in the array immediately following the end of the Vector is set to null. (This is useful in determining the length of the Vector only if the caller knows that the Vector does not contain any null elements.)",FreeText,,0
3774,jdk,java.util.Vector_goal.json,removeElement(java.lang.Object obj),removeElement,java.util.Vector,"Removes the first (lowest-indexed) occurrence of the argument from this vector. If the object is found in this vector, each component in the vector with an index greater or equal to the object's index is shifted downward to have an index one smaller than the value it had previously. This method is identical in functionality to the #remove(Object) method (which is part of the List interface).",FreeText,methodResultID==(receiverObjectClone.remove(args[0])),1
3775,jdk,java.util.Vector_goal.json,contains(java.lang.Object o),contains,java.util.Vector,"Returns true if this vector contains the specified element. More formally, returns true if and only if this vector contains at least one element e such that (o==null&nbsp;?&nbsp;e==null&nbsp;:&nbsp;o.equals(e)).",FreeText,,0
3776,jdk,java.util.Vector_goal.json,indexOf(java.lang.Object o),indexOf,java.util.Vector,"Returns the index of the first occurrence of the specified element in this vector, or -1 if this vector does not contain the element. More formally, returns the lowest index i such that (o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))), or -1 if there is no such index.",FreeText,,0
3777,jdk,java.util.Vector_goal.json,hashCode(),hashCode,java.util.Vector,Returns the hash code value for this Vector.,FreeText,,0
3778,jdk,java.util.Vector_goal.json,elementAt(int index),elementAt,java.util.Vector,Returns the component at the specified index. This method is identical in functionality to the #get(int) method (which is part of the List interface).,FreeText,methodResultID.equals(receiverObjectClone.get(args[0])),1
3779,jdk,java.util.Vector_goal.json,equals(java.lang.Object o),equals,java.util.Vector,"Compares the specified Object with this Vector for equality. Returns true if and only if the specified Object is also a List, both Lists have the same size, and all corresponding pairs of elements in the two Lists are equal. (Two elements e1 and e2 are equal if (e1==null ? e2==null : e1.equals(e2)).) In other words, two Lists are defined to be equal if they contain the same elements in the same order.",FreeText,,0
3780,math,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator_goal.json,"addSamplePoint(double x, double[]... value)",addSamplePoint,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,This method must be called once for each sample point. It is allowed to mix some calls with values only with calls with values and first derivatives.   The point abscissae for all calls <em>must</em> be different.,FreeText,,0
3781,math,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator_goal.json,getPolynomials(),getPolynomials,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,,FreeText,,0
3782,math,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator_goal.json,value(double x),value,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,"Calling this method is equivalent to call the PolynomialFunction#value(double) value methods of all polynomials returned by #getPolynomials() getPolynomials, except it does not build the intermediate polynomials, so this method is faster and numerically more stable.",FreeText,,0
3783,math,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator_goal.json,value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure x),value,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,"Calling this method is equivalent to call the PolynomialFunction#value(DerivativeStructure) value methods of all polynomials returned by #getPolynomials() getPolynomials, except it does not build the intermediate polynomials, so this method is faster and numerically more stable.",FreeText,,0
3784,math,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator_goal.json,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator(),org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,org.apache.commons.math3.analysis.interpolation.HermiteInterpolator,,FreeText,,0
3785,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,org.apache.commons.math3.analysis.interpolation.LoessInterpolator(),org.apache.commons.math3.analysis.interpolation.LoessInterpolator,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,"Constructs a new LoessInterpolator with a bandwidth of #DEFAULT_BANDWIDTH, #DEFAULT_ROBUSTNESS_ITERS robustness iterations and an accuracy of {#link #DEFAULT_ACCURACY}. See #LoessInterpolator(double, int, double) for an explanation of the parameters.",FreeText,,0
3786,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,"smooth(double[] xval, double[] yval)",smooth,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,Compute a loess fit on the data at the original abscissae.,FreeText,,0
3787,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,"org.apache.commons.math3.analysis.interpolation.LoessInterpolator(double bandwidth, int robustnessIters)",org.apache.commons.math3.analysis.interpolation.LoessInterpolator,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,"Construct a new LoessInterpolator with given bandwidth and number of robustness iterations.  Calling this constructor is equivalent to calling {link #LoessInterpolator(double, int, double) LoessInterpolator(bandwidth, robustnessIters, LoessInterpolator.DEFAULT_ACCURACY)",FreeText,"methodResultID.equals(new LoessInterpolator(args[0], args[1], LoessInterpolator.DEFAULT_ACCURACY))",1
3788,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,"org.apache.commons.math3.analysis.interpolation.LoessInterpolator(double bandwidth, int robustnessIters, double accuracy)",org.apache.commons.math3.analysis.interpolation.LoessInterpolator,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,"Construct a new LoessInterpolator with given bandwidth, number of robustness iterations and accuracy.",FreeText,,0
3789,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,"interpolate(double[] xval, double[] yval)",interpolate,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,Compute an interpolating function by performing a loess fit on the data at the original abscissae and then building a cubic spline with a org.apache.commons.math3.analysis.interpolation.SplineInterpolator on the resulting fit.,FreeText,,0
3790,math,org.apache.commons.math3.analysis.interpolation.LoessInterpolator_goal.json,"smooth(double[] xval, double[] yval, double[] weights)",smooth,org.apache.commons.math3.analysis.interpolation.LoessInterpolator,Compute a weighted loess fit on the data at the original abscissae.,FreeText,,0
3791,math,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator_goal.json,"org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator(int elements, int exponent)",org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator,,FreeText,,0
3792,math,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator_goal.json,"interpolate(double[][] xval, double[] yval)",interpolate,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator,{@inheritDoc},FreeText,,0
3793,math,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator_goal.json,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator(),org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator,org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator,"Create a microsphere interpolator with default settings. Calling this constructor is equivalent to call #MicrosphereInterpolator(int, int) MicrosphereInterpolator(MicrosphereInterpolator.DEFAULT_MICROSPHERE_ELEMENTS, MicrosphereInterpolator.DEFAULT_BRIGHTNESS_EXPONENT).",FreeText,,0
3794,math,org.apache.commons.math3.dfp.DfpField_goal.json,getSqr2Split(),getSqr2Split,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3795,math,org.apache.commons.math3.dfp.DfpField_goal.json,getLn2(),getLn2,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3796,math,org.apache.commons.math3.dfp.DfpField_goal.json,setIEEEFlagsBits(int bits),setIEEEFlagsBits,org.apache.commons.math3.dfp.DfpField,Calling this method is equivalent to call setIEEEFlags(getIEEEFlags() | bits),FreeText,,0
3797,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3798,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(org.apache.commons.math3.dfp.Dfp d),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3799,math,org.apache.commons.math3.dfp.DfpField_goal.json,getE(),getE,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3800,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(java.lang.String s),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3801,math,org.apache.commons.math3.dfp.DfpField_goal.json,getSqr2Reciprocal(),getSqr2Reciprocal,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3802,math,org.apache.commons.math3.dfp.DfpField_goal.json,setIEEEFlags(int flags),setIEEEFlags,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3803,math,org.apache.commons.math3.dfp.DfpField_goal.json,getSqr3(),getSqr3,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3804,math,org.apache.commons.math3.dfp.DfpField_goal.json,getTwo(),getTwo,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3805,math,org.apache.commons.math3.dfp.DfpField_goal.json,"newDfp(byte sign, byte nans)",newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3806,math,org.apache.commons.math3.dfp.DfpField_goal.json,getZero(),getZero,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3807,math,org.apache.commons.math3.dfp.DfpField_goal.json,getLn5(),getLn5,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3808,math,org.apache.commons.math3.dfp.DfpField_goal.json,"computeLn(org.apache.commons.math3.dfp.Dfp a, org.apache.commons.math3.dfp.Dfp one, org.apache.commons.math3.dfp.Dfp two)",computeLn,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3809,math,org.apache.commons.math3.dfp.DfpField_goal.json,getSqr2(),getSqr2,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3810,math,org.apache.commons.math3.dfp.DfpField_goal.json,getRuntimeClass(),getRuntimeClass,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3811,math,org.apache.commons.math3.dfp.DfpField_goal.json,clearIEEEFlags(),clearIEEEFlags,org.apache.commons.math3.dfp.DfpField,@see #getIEEEFlags() @see #setIEEEFlags(int) @see #setIEEEFlagsBits(int) @see #FLAG_INVALID @see #FLAG_DIV_ZERO @see #FLAG_OVERFLOW @see #FLAG_UNDERFLOW @see #FLAG_INEXACT,FreeText,,0
3812,math,org.apache.commons.math3.dfp.DfpField_goal.json,getLn5Split(),getLn5Split,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3813,math,org.apache.commons.math3.dfp.DfpField_goal.json,getLn2Split(),getLn2Split,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3814,math,org.apache.commons.math3.dfp.DfpField_goal.json,getPi(),getPi,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3815,math,org.apache.commons.math3.dfp.DfpField_goal.json,getIEEEFlags(),getIEEEFlags,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3816,math,org.apache.commons.math3.dfp.DfpField_goal.json,getESplit(),getESplit,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3817,math,org.apache.commons.math3.dfp.DfpField_goal.json,setRoundingMode(org.apache.commons.math3.dfp.DfpField$RoundingMode mode),setRoundingMode,org.apache.commons.math3.dfp.DfpField,"If not set, the default value is RoundingMode#ROUND_HALF_EVEN.",FreeText,,0
3818,math,org.apache.commons.math3.dfp.DfpField_goal.json,getPiSplit(),getPiSplit,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3819,math,org.apache.commons.math3.dfp.DfpField_goal.json,getRoundingMode(),getRoundingMode,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3820,math,org.apache.commons.math3.dfp.DfpField_goal.json,getSqr3Reciprocal(),getSqr3Reciprocal,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3821,math,org.apache.commons.math3.dfp.DfpField_goal.json,"computeExp(org.apache.commons.math3.dfp.Dfp a, org.apache.commons.math3.dfp.Dfp one)",computeExp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3822,math,org.apache.commons.math3.dfp.DfpField_goal.json,getLn10(),getLn10,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3823,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(byte x),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3824,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(int x),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3825,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(long x),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3826,math,org.apache.commons.math3.dfp.DfpField_goal.json,newDfp(double x),newDfp,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3827,math,org.apache.commons.math3.dfp.DfpField_goal.json,getRadixDigits(),getRadixDigits,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3828,math,org.apache.commons.math3.dfp.DfpField_goal.json,org.apache.commons.math3.dfp.DfpField(int decimalDigits),org.apache.commons.math3.dfp.DfpField,org.apache.commons.math3.dfp.DfpField,"Note that since the Dfp class uses 10000 as its radix, each radix digit is equivalent to 4 decimal digits. This implies that asking for 13, 14, 15 or 16 decimal digits will really lead to a 4 radix 10000 digits in all cases.",FreeText,,0
3829,math,org.apache.commons.math3.dfp.DfpField_goal.json,getOne(),getOne,org.apache.commons.math3.dfp.DfpField,,FreeText,,0
3830,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,addObservedPoint(org.apache.commons.math3.fitting.WeightedObservedPoint observed),addObservedPoint,org.apache.commons.math3.fitting.CurveFitter,,FreeText,,0
3831,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,"fit(int maxEval, T f, double[] initialGuess)",fit,org.apache.commons.math3.fitting.CurveFitter,Fit a curve. This method compute the coefficients of the curve that best fit the sample of observed points previously given through calls to the #addObservedPoint(WeightedObservedPoint) addObservedPoint method.,FreeText,,0
3832,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,"addObservedPoint(double weight, double x, double y)",addObservedPoint,org.apache.commons.math3.fitting.CurveFitter,,FreeText,,0
3833,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,getObservations(),getObservations,org.apache.commons.math3.fitting.CurveFitter,,FreeText,,0
3834,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,clearObservations(),clearObservations,org.apache.commons.math3.fitting.CurveFitter,Remove all observations.,FreeText,,0
3835,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,"fit(T f, double[] initialGuess)",fit,org.apache.commons.math3.fitting.CurveFitter,Fit a curve. This method compute the coefficients of the curve that best fit the sample of observed points previously given through calls to the #addObservedPoint(WeightedObservedPoint) addObservedPoint method.,FreeText,,0
3836,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,"addObservedPoint(double x, double y)",addObservedPoint,org.apache.commons.math3.fitting.CurveFitter,"Calling this method is equivalent to call addObservedPoint(1.0, x, y).",FreeText,"addObservedPoint(1.0, args[0], args[1])",1
3837,math,org.apache.commons.math3.fitting.CurveFitter_goal.json,org.apache.commons.math3.fitting.CurveFitter(org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer optimizer),org.apache.commons.math3.fitting.CurveFitter,org.apache.commons.math3.fitting.CurveFitter,Simple constructor.,FreeText,,0
3838,math,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker_goal.json,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker(double tol),org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker,"Create a convergence checker for the RMS with the same relative and absolute tolerance. Convenience constructor for when the relative and absolute tolerances are the same. Same as new EvaluationRmsChecker(tol, tol).",FreeText,"methodResultID.equals(new EvaluationRmsChecker(args[0], args[0])",1
3839,math,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker_goal.json,"converged(int iteration, org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation previous, org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation current)",converged,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker,,FreeText,,0
3840,math,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker_goal.json,"org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker(double relTol, double absTol)",org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker,org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker,Create a convergence checker for the RMS with a relative and absolute tolerance. The optimization has converged when the RMS of consecutive evaluations are equal to within the given relative tolerance or absolute tolerance.,FreeText,,0
3841,math,org.apache.commons.math3.fitting.WeightedObservedPoints_goal.json,"add(double weight, double x, double y)",add,org.apache.commons.math3.fitting.WeightedObservedPoints,Adds a point to the sample.,FreeText,,0
3842,math,org.apache.commons.math3.fitting.WeightedObservedPoints_goal.json,clear(),clear,org.apache.commons.math3.fitting.WeightedObservedPoints,Removes all observations from this container.,FreeText,,0
3843,math,org.apache.commons.math3.fitting.WeightedObservedPoints_goal.json,"add(double x, double y)",add,org.apache.commons.math3.fitting.WeightedObservedPoints,"Adds a point to the sample. Calling this method is equivalent to calling add(1.0, x, y).",FreeText,"add(1.0, args[0], args[1])",1
3844,math,org.apache.commons.math3.fitting.WeightedObservedPoints_goal.json,toList(),toList,org.apache.commons.math3.fitting.WeightedObservedPoints,"Gets a snapshot of the observed points. The list of stored points is copied in order to ensure that modification of the returned instance does not affect this container. Conversely, further modification of this container (through the add or clear methods) will not affect the returned list.",FreeText,,0
3845,math,org.apache.commons.math3.fitting.WeightedObservedPoints_goal.json,add(org.apache.commons.math3.fitting.WeightedObservedPoint observed),add,org.apache.commons.math3.fitting.WeightedObservedPoints,Adds a point to the sample.,FreeText,,0
3846,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,isNaN(),isNaN,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3847,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> v)",subtract,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3848,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double a1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u1, double a2, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u2, double a3, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u3)",org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
3849,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,dotProduct(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> v),dotProduct,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3850,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,distance1(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),distance1,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3851,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,distance(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),distance,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,"@deprecated as of 3.3, replaced with #distance(Point)",FreeText,,0
3852,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,distance(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),distance,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3853,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getX(),getX,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3854,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getZero(),getZero,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3855,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,negate(),negate,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3856,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getNorm(),getNorm,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3857,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getNorm1(),getNorm1,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3858,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,hashCode(),hashCode,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Get a hashCode for the 1D vector.  All NaN values have the same hash code.,FreeText,,0
3859,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double x),org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Build a vector from its coordinates,FreeText,,0
3860,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.oned.Vector1D p1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D p2)",distance,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNorm()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNorm()),1
3861,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.oned.Vector1D p1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D p2)",distanceInf,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNormInf()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormInf()),1
3862,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,add(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> v),add,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3863,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"add(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> v)",add,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3864,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,toString(java.text.NumberFormat format),toString,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3865,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,distanceInf(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),distanceInf,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3866,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getSpace(),getSpace,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3867,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double a1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u1, double a2, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u2, double a3, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u3, double a4, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u4)",org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
3868,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getNormSq(),getNormSq,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3869,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3870,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,toString(),toString,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3871,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,getNormInf(),getNormInf,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3872,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,subtract(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),subtract,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3873,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.oned.Vector1D p1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D p2)",distanceSq,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNormSq()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormSq()),1
3874,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double a1, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u1, double a2, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u2)",org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
3875,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,normalize(),normalize,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3876,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,distanceSq(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> p),distanceSq,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3877,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,"org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double a, org.apache.commons.math3.geometry.euclidean.oned.Vector1D u)",org.apache.commons.math3.geometry.euclidean.oned.Vector1D,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
3878,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,equals(java.lang.Object other),equals,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,"Test for the equality of two 1D vectors.  If all coordinates of two 1D vectors are exactly the same, and none are <code>Double.NaN</code>, the two 1D vectors are considered to be equal.   <code>NaN</code> coordinates are considered to affect globally the vector and be equals to each other - i.e, if either (or all) coordinates of the 1D vector are equal to <code>Double.NaN</code>, the 1D vector is equal to #NaN.",FreeText,,0
3879,math,org.apache.commons.math3.geometry.euclidean.oned.Vector1D_goal.json,scalarMultiply(double a),scalarMultiply,org.apache.commons.math3.geometry.euclidean.oned.Vector1D,,FreeText,,0
3880,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u)",applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3881,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, T alpha1, T alpha2, T alpha3)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Cardan rotations are three successive rotations around the canonical axes X, Y and Z, each axis being used once. There are 6 such sets of rotations (XYZ, XZY, YXZ, YZX, ZXY and ZYX). Euler rotations are three successive rotations around the canonical axes X, Y and Z, the first and last rotations being around the same axis. There are 6 such sets of rotations (XYX, XZX, YXY, YZY, ZXZ and ZYZ), the most popular one being ZXZ. Beware that many people routinely use the term Euler angles even for what really are Cardan angles (this confusion is especially widespread in the aerospace business where Roll, Pitch and Yaw angles are often wrongly tagged as Euler angles).",FreeText,,0
3882,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getAxis(),getAxis,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3883,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyTo(T[] in, T[] out)",applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3884,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r1, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r2)",distance,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"The <i>distance</i> is intended here as a way to check if two rotations are almost similar (i.e. they transform vectors the same way) or very different. It is mathematically defined as the angle of the rotation r that prepended to one of the rotations gives the other one:  r<sub>1</sub>(r) = r<sub>2</sub>  This distance is an angle between 0 and &pi;. Its value is the smallest possible upper bound of the angle in radians between r<sub>1</sub>(v) and r<sub>2</sub>(v) for all possible vectors v. This upper bound is reached for some v. The distance is equal to 0 if and only if the two rotations are identical. Comparing two rotations should always be done using this value rather than for example comparing the components of the quaternions. It is much more stable, and has a geometric meaning. Also comparing quaternions components is error prone since for example quaternions (0.36, 0.48, -0.48, -0.64) and (-0.36, -0.48, 0.48, 0.64) represent exactly the same rotation despite their components are different (they are exact opposites).",FreeText,,0
3885,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r),applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Calling this method is equivalent to call #compose(FieldRotation, RotationConvention) compose(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.compose(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
3886,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r),applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Calling this method is equivalent to call #compose(Rotation, RotationConvention) compose(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.compose(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
3887,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"composeInverse(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",composeInverse,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the inverse of the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the inverse image of v by r2 (i.e. r2.applyInverseTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.composeInverse(r1).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed, which means it is the <em>innermost</em> rotation that will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.revert().composeInverse(r2.revert(), RotationConvention.FRAME_TRANSFORM).",FreeText,,0
3888,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",composeInverse,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the inverse of the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the inverse image of v by r2 (i.e. r2.applyInverseTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.composeInverse(r1).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed, which means it is the <em>innermost</em> rotation that will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.revert().composeInverse(r2.revert(), RotationConvention.FRAME_TRANSFORM).",FreeText,,0
3889,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getQ0(),getQ0,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3890,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyInverseTo(double[] in, T[] out)",applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3891,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getQ1(),getQ1,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3892,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u),applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3893,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u),applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3894,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention, T alpha1, T alpha2, T alpha3)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Cardan rotations are three successive rotations around the canonical axes X, Y and Z, each axis being used once. There are 6 such sets of rotations (XYZ, XZY, YXZ, YZX, ZXY and ZYX). Euler rotations are three successive rotations around the canonical axes X, Y and Z, the first and last rotations being around the same axis. There are 6 such sets of rotations (XYX, XZX, YXY, YZY, ZXZ and ZYZ), the most popular one being ZXZ. Beware that many people routinely use the term Euler angles even for what really are Cardan angles (this confusion is especially widespread in the aerospace business where Roll, Pitch and Yaw angles are often wrongly tagged as Euler angles).",FreeText,,0
3895,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getQ3(),getQ3,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3896,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(T q0, T q1, T q2, T q3, boolean needsNormalization)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"A rotation can be built from a <em>normalized</em> quaternion, i.e. a quaternion for which q<sub>0</sub><sup>2</sup> + q<sub>1</sub><sup>2</sup> + q<sub>2</sub><sup>2</sup> + q<sub>3</sub><sup>2</sup> = 1. If the quaternion is not normalized, the constructor can normalize it in a preprocessing step. Note that some conventions put the scalar part of the quaternion as the 4<sup>th</sup> component and the vector part as the first three components. This is <em>not</em> our convention. We put the scalar part as the first component.",FreeText,,0
3897,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",getAngles,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"The equations show that each rotation can be defined by two different values of the Cardan or Euler angles set. For example if Cardan angles are used, the rotation defined by the angles a<sub>1</sub>, a<sub>2</sub> and a<sub>3</sub> is the same as the rotation defined by the angles &pi; + a<sub>1</sub>, &pi; - a<sub>2</sub> and &pi; + a<sub>3</sub>. This method implements the following arbitrary choices:  <li>for Cardan angles, the chosen set is the one for which the second angle is between -&pi;/2 and &pi;/2 (i.e its cosine is positive),</li> <li>for Euler angles, the chosen set is the one for which the second angle is between 0 and &pi; (i.e its sine is positive).</li>  Cardan and Euler angle have a very disappointing drawback: all of them have singularities. This means that if the instance is too close to the singularities corresponding to the given rotation order, it will be impossible to retrieve the angles. For Cardan angles, this is often called gimbal lock. There is <em>nothing</em> to do to prevent this, it is an intrinsic problem with Cardan and Euler representation (but not a problem with the rotation itself, which is perfectly well defined). For Cardan angles, singularities occur when the second angle is close to -&pi;/2 or +&pi;/2, for Euler angle singularities occur when the second angle is close to 0 or &pi;, this implies that the identity rotation is always singular for Euler angles!",FreeText,,0
3898,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(T[][] m, double threshold)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Rotation matrices are orthogonal matrices, i.e. unit matrices (which are matrices for which m.m<sup>T</sup> = I) with real coefficients. The module of the determinant of unit matrices is 1, among the orthogonal 3X3 matrices, only the ones having a positive determinant (+1) are rotation matrices. <p>When a rotation is defined by a matrix with truncated values (typically when it is extracted from a technical sheet where only four to five significant digits are available), the matrix is not orthogonal anymore. This constructor handles this case transparently by using a copy of the given matrix and applying a correction to the copy in order to perfect its orthogonality. If the Frobenius norm of the correction needed is above the given threshold, then the matrix is considered to be too far from a true rotation matrix and an exception is thrown.<p>",FreeText,,0
3899,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention),getAxis,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Note that as #getAngle() always returns an angle between 0 and &pi;, changing the convention changes the direction of the axis, not the sign of the angle.",FreeText,,0
3900,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyInverseTo(T[] in, T[] out)",applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3901,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,toRotation(),toRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3902,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> axis, T angle, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"We use the convention that angles are oriented according to the effect of the rotation on vectors around the axis. That means that if (i, j, k) is a direct frame and if we first provide +k as the axis and &pi;/2 as the angle to this constructor, and then #applyTo(FieldVector3D) apply the instance to +i, we will get +j. Another way to represent our convention is to say that a rotation of angle &theta; about the unit vector (x, y, z) is the same as the rotation build from quaternion components { cos(-&theta;/2), x * sin(-&theta;/2), y * sin(-&theta;/2), z * sin(-&theta;/2) }. Note the minus sign on the angle! On the one hand this convention is consistent with a vectorial perspective (moving vectors in fixed frames), on the other hand it is different from conventions with a frame perspective (fixed vectors viewed from different frames) like the ones used for example in spacecraft attitude community or in the graphics community.",FreeText,,0
3903,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Except for possible scale factors, if the instance were applied to the pair (u<sub>1</sub>, u<sub>2</sub>) it will produce the pair (v<sub>1</sub>, v<sub>2</sub>). If the angular separation between u<sub>1</sub> and u<sub>2</sub> is not the same as the angular separation between v<sub>1</sub> and v<sub>2</sub>, then a corrected v'<sub>2</sub> will be used rather than v<sub>2</sub>, the corrected vector will be in the (&pm;v<sub>1</sub>, +v<sub>2</sub>) half-plane.",FreeText,,0
3904,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Except for a possible scale factor, if the instance were applied to the vector u it will produce the vector v. There is an infinite number of such rotations, this constructor choose the one with the smallest associated angle (i.e. the one whose axis is orthogonal to the (u, v) plane). If u and v are collinear, an arbitrary rotation axis is chosen.",FreeText,,0
3905,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getMatrix(),getMatrix,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3906,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation rOuter, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> rInner)",applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Applying the inverse of a rotation to another rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by rInner (i.e. rInner.applyTo(u) = v), let w be the inverse image of v by rOuter (i.e. rOuter.applyInverseTo(v) = w), then w = comp.applyTo(u), where comp = applyInverseTo(rOuter, rInner).",FreeText,,0
3907,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u)",applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3908,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3909,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3910,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getQ2(),getQ2,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3911,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order),getAngles,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"The equations show that each rotation can be defined by two different values of the Cardan or Euler angles set. For example if Cardan angles are used, the rotation defined by the angles a<sub>1</sub>, a<sub>2</sub> and a<sub>3</sub> is the same as the rotation defined by the angles &pi; + a<sub>1</sub>, &pi; - a<sub>2</sub> and &pi; + a<sub>3</sub>. This method implements the following arbitrary choices:  <li>for Cardan angles, the chosen set is the one for which the second angle is between -&pi;/2 and &pi;/2 (i.e its cosine is positive),</li> <li>for Euler angles, the chosen set is the one for which the second angle is between 0 and &pi; (i.e its sine is positive).</li>  Cardan and Euler angle have a very disappointing drawback: all of them have singularities. This means that if the instance is too close to the singularities corresponding to the given rotation order, it will be impossible to retrieve the angles. For Cardan angles, this is often called gimbal lock. There is <em>nothing</em> to do to prevent this, it is an intrinsic problem with Cardan and Euler representation (but not a problem with the rotation itself, which is perfectly well defined). For Cardan angles, singularities occur when the second angle is close to -&pi;/2 or +&pi;/2, for Euler angle singularities occur when the second angle is close to 0 or &pi;, this implies that the identity rotation is always singular for Euler angles!",FreeText,,0
3912,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyTo(double[] in, T[] out)",applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3913,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r1, org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> rInner)",applyTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Applying a rotation to another rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by rInner (i.e. rInner.applyTo(u) = v), let w be the image of v by rOuter (i.e. rOuter.applyTo(v) = w), then w = comp.applyTo(u), where comp = applyTo(rOuter, rInner).",FreeText,,0
3914,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,revert(),revert,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Build a rotation which reverse the effect of another rotation. This means that if r(u) = v, then r.revert(v) = u. The instance is not changed.",FreeText,,0
3915,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"compose(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",compose,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the image of v by rotation r2 (i.e. r2.applyTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.compose(r1, RotationConvention.VECTOR_OPERATOR).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.compose(r2, RotationConvention.FRAME_TRANSFORM).",FreeText,,0
3916,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",compose,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the image of v by rotation r2 (i.e. r2.applyTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.compose(r1, RotationConvention.VECTOR_OPERATOR).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.compose(r2, RotationConvention.FRAME_TRANSFORM).",FreeText,,0
3917,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,getAngle(),getAngle,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,,FreeText,,0
3918,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T> r),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Calling this method is equivalent to call #composeInverse(FieldRotation, RotationConvention) composeInverse(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.composeInverse(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
3919,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"Calling this method is equivalent to call #composeInverse(Rotation, RotationConvention) composeInverse(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.composeInverse(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
3920,math,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> axis, T angle)",org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,"We use the convention that angles are oriented according to the effect of the rotation on vectors around the axis. That means that if (i, j, k) is a direct frame and if we first provide +k as the axis and &pi;/2 as the angle to this constructor, and then #applyTo(FieldVector3D) apply the instance to +i, we will get +j. Another way to represent our convention is to say that a rotation of angle &theta; about the unit vector (x, y, z) is the same as the rotation build from quaternion components { cos(-&theta;/2), x * sin(-&theta;/2), y * sin(-&theta;/2), z * sin(-&theta;/2) }. Note the minus sign on the angle! On the one hand this convention is consistent with a vectorial perspective (moving vectors in fixed frames), on the other hand it is different from conventions with a frame perspective (fixed vectors viewed from different frames) like the ones used for example in spacecraft attitude community or in the graphics community.",FreeText,,0
3921,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",angle,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"This method computes the angular separation between two vectors using the dot product for well separated vectors and the cross product for almost aligned vectors. This allows to have a good accuracy in all cases, even for vectors very close to each other.",FreeText,,0
3922,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),distance1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm1()</code> except that no intermediate vector is built,FreeText,,0
3923,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),distance1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm1()</code> except that no intermediate vector is built,FreeText,,0
3924,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,scalarMultiply(T a),scalarMultiply,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3925,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,scalarMultiply(double a),scalarMultiply,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3926,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getX(),getX,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3927,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,isNaN(),isNaN,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Returns true if any coordinate of this vector is NaN; false otherwise,FreeText,,0
3928,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2, T a3, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u3)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
3929,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2, T a3, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u3)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
3930,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2, double a3, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u3)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
3931,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,hashCode(),hashCode,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Get a hashCode for the 3D vector.  All NaN values have the same hash code.,FreeText,,0
3932,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Returns true if any coordinate of this vector is infinite and none are NaN; false otherwise,FreeText,,0
3933,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,normalize(),normalize,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3934,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),distance,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm()</code> except that no intermediate vector is built,FreeText,,0
3935,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),distance,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm()</code> except that no intermediate vector is built,FreeText,,0
3936,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"angle(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",angle,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"This method computes the angular separation between two vectors using the dot product for well separated vectors and the cross product for almost aligned vectors. This allows to have a good accuracy in all cases, even for vectors very close to each other.",FreeText,,0
3937,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,toString(),toString,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3938,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"subtract(T factor, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v)",subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3939,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"subtract(T factor, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v)",subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3940,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v)",subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3941,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v)",subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3942,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distance,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNorm()),1
3943,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distance,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNorm()),1
3944,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distance,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm()</code> except that no intermediate vector is built,FreeText,,0
3945,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getNormSq(),getNormSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3946,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T alpha, T delta)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from its azimuthal coordinates,FreeText,,0
3947,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getDelta(),getDelta,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3948,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",dotProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3949,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",dotProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3950,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",dotProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3951,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,toVector3D(),toVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3952,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"add(T factor, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v)",add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3953,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"add(T factor, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v)",add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3954,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"add(double factor, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v)",add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3955,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"add(double factor, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v)",add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3956,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,add(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3957,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,add(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),add,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3958,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
3959,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
3960,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
3961,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,negate(),negate,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3962,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,toArray(),toArray,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3963,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getAlpha(),getAlpha,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3964,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),crossProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3965,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),crossProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3966,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2, T a3, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u3, T a4, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u4)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
3967,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, T a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2, T a3, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u3, T a4, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u4)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
3968,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u2, double a3, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u3, double a4, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u4)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
3969,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
3970,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T a, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
3971,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(double a, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> u)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
3972,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",angle,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"This method computes the angular separation between two vectors using the dot product for well separated vectors and the cross product for almost aligned vectors. This allows to have a good accuracy in all cases, even for vectors very close to each other.",FreeText,,0
3973,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distanceInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormInf()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNormInf()),1
3974,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distanceInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormInf()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNormInf()),1
3975,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distanceInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormInf()</code> except that no intermediate vector is built,FreeText,,0
3976,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distanceInf(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),distanceInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNormInf()</code> except that no intermediate vector is built,FreeText,,0
3977,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),distanceInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNormInf()</code> except that no intermediate vector is built,FreeText,,0
3978,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,toString(java.text.NumberFormat format),toString,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3979,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,orthogonal(),orthogonal,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"There are an infinite number of normalized vectors orthogonal to the instance. This method picks up one of them almost arbitrarily. It is useful when one needs to compute a reference frame with one of the axes in a predefined direction. The following example shows how to build a frame having the k axis aligned with the known vector u : <pre><code> Vector3D k = u.normalize(); Vector3D i = k.orthogonal(); Vector3D j = Vector3D.crossProduct(k, i); </code></pre>",FreeText,,0
3980,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getZ(),getZ,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3981,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T[] v),org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from its coordinates,FreeText,,0
3982,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getNorm1(),getNorm1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3983,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distance1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm1()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNorm1()),1
3984,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance1(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distance1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm1()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNorm1()),1
3985,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distance1,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm1()</code> except that no intermediate vector is built,FreeText,,0
3986,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,equals(java.lang.Object other),equals,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"Test for the equality of two 3D vectors.  If all coordinates of two 3D vectors are exactly the same, and none of their RealFieldElement#getReal() real part are <code>NaN</code>, the two 3D vectors are considered to be equal.   <code>NaN</code> coordinates are considered to affect globally the vector and be equals to each other - i.e, if either (or all) real part of the coordinates of the 3D vector are <code>NaN</code>, the 3D vector is <code>NaN</code>.",FreeText,,0
3987,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D(T x, T y, T z)",org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Build a vector from its coordinates,FreeText,,0
3988,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getNorm(),getNorm,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3989,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,dotProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),dotProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"The implementation uses specific multiplication and addition algorithms to preserve accuracy and reduce cancellation effects. It should be very accurate even for nearly orthogonal vectors.  @see MathArrays#linearCombination(double, double, double, double, double, double)",FreeText,,0
3990,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),dotProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,"The implementation uses specific multiplication and addition algorithms to preserve accuracy and reduce cancellation effects. It should be very accurate even for nearly orthogonal vectors.  @see MathArrays#linearCombination(double, double, double, double, double, double)",FreeText,,0
3991,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distanceSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormSq()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNormSq()),1
3992,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distanceSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormSq()</code> except that no intermediate vector is built,FreeText,methodResultID.equals(args[0].subtract(args[1]).getNormSq()),1
3993,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",distanceSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormSq()</code> except that no intermediate vector is built,FreeText,,0
3994,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",crossProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3995,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",crossProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3996,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,"crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v2)",crossProduct,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3997,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getY(),getY,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3998,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,subtract(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
3999,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),subtract,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
4000,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,getNormInf(),getNormInf,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,,FreeText,,0
4001,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distanceSq(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> v),distanceSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNormSq()</code> except that no intermediate vector is built,FreeText,,0
4002,math,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D_goal.json,distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v),distanceSq,org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,Calling this method is equivalent to calling: <code>q.subtract(p).getNormSq()</code> except that no intermediate vector is built,FreeText,,0
4003,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u),applyTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4004,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Except for a possible scale factor, if the instance were applied to the vector u it will produce the vector v. There is an infinite number of such rotations, this constructor choose the one with the smallest associated angle (i.e. the one whose axis is orthogonal to the (u, v) plane). If u and v are collinear, an arbitrary rotation axis is chosen.",FreeText,,0
4005,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention),getAxis,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Note that as #getAngle() always returns an angle between 0 and &pi;, changing the convention changes the direction of the axis, not the sign of the angle.",FreeText,,0
4006,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Except for possible scale factors, if the instance were applied to the pair (u<sub>1</sub>, u<sub>2</sub>) it will produce the pair (v<sub>1</sub>, v<sub>2</sub>). If the angular separation between u<sub>1</sub> and u<sub>2</sub> is not the same as the angular separation between v<sub>1</sub> and v<sub>2</sub>, then a corrected v'<sub>2</sub> will be used rather than v<sub>2</sub>, the corrected vector will be in the (&pm;v<sub>1</sub>, +v<sub>2</sub>) half-plane.",FreeText,,0
4007,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"compose(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",compose,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the image of v by rotation r2 (i.e. r2.applyTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.compose(r1, RotationConvention.VECTOR_OPERATOR).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.compose(r2, RotationConvention.FRAME_TRANSFORM).",FreeText,,0
4008,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getQ0(),getQ0,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4009,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"applyInverseTo(double[] in, double[] out)",applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4010,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.Rotation r1, org.apache.commons.math3.geometry.euclidean.threed.Rotation r2)",distance,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"The <i>distance</i> is intended here as a way to check if two rotations are almost similar (i.e. they transform vectors the same way) or very different. It is mathematically defined as the angle of the rotation r that prepended to one of the rotations gives the other one:  r<sub>1</sub>(r) = r<sub>2</sub>  This distance is an angle between 0 and &pi;. Its value is the smallest possible upper bound of the angle in radians between r<sub>1</sub>(v) and r<sub>2</sub>(v) for all possible vectors v. This upper bound is reached for some v. The distance is equal to 0 if and only if the two rotations are identical. Comparing two rotations should always be done using this value rather than for example comparing the components of the quaternions. It is much more stable, and has a geometric meaning. Also comparing quaternions components is error prone since for example quaternions (0.36, 0.48, -0.48, -0.64) and (-0.36, -0.48, 0.48, 0.64) represent exactly the same rotation despite their components are different (they are exact opposites).",FreeText,,0
4011,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getQ2(),getQ2,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4012,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getAngle(),getAngle,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4013,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getMatrix(),getMatrix,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4014,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(double[][] m, double threshold)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Rotation matrices are orthogonal matrices, i.e. unit matrices (which are matrices for which m.m<sup>T</sup> = I) with real coefficients. The module of the determinant of unit matrices is 1, among the orthogonal 3X3 matrices, only the ones having a positive determinant (+1) are rotation matrices. <p>When a rotation is defined by a matrix with truncated values (typically when it is extracted from a technical sheet where only four to five significant digits are available), the matrix is not orthogonal anymore. This constructor handles this case transparently by using a copy of the given matrix and applying a correction to the copy in order to perfect its orthogonality. If the Frobenius norm of the correction needed is above the given threshold, then the matrix is considered to be too far from a true rotation matrix and an exception is thrown.<p>",FreeText,,0
4015,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.Vector3D axis, double angle)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Calling this constructor is equivalent to call #Rotation(Vector3D, double, RotationConvention) new Rotation(axis, angle, RotationConvention.VECTOR_OPERATOR)",FreeText,,0
4016,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,revert(),revert,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Build a rotation which reverse the effect of another rotation. This means that if r(u) = v, then r.revert(v) = u. The instance is not changed.",FreeText,,0
4017,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention, double alpha1, double alpha2, double alpha3)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Cardan rotations are three successive rotations around the canonical axes X, Y and Z, each axis being used once. There are 6 such sets of rotations (XYZ, XZY, YXZ, YZX, ZXY and ZYX). Euler rotations are three successive rotations around the canonical axes X, Y and Z, the first and last rotations being around the same axis. There are 6 such sets of rotations (XYX, XZX, YXY, YZY, ZXZ and ZYZ), the most popular one being ZXZ. Beware that many people routinely use the term Euler angles even for what really are Cardan angles (this confusion is especially widespread in the aerospace business where Roll, Pitch and Yaw angles are often wrongly tagged as Euler angles).",FreeText,,0
4018,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, double alpha1, double alpha2, double alpha3)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Calling this constructor is equivalent to call #Rotation(RotationOrder, RotationConvention, double, double, double) new Rotation(order, RotationConvention.VECTOR_OPERATOR, alpha1, alpha2, alpha3)",FreeText,,0
4019,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"applyTo(double[] in, double[] out)",applyTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4020,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(org.apache.commons.math3.geometry.euclidean.threed.Vector3D axis, double angle, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4021,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getQ3(),getQ3,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4022,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"composeInverse(org.apache.commons.math3.geometry.euclidean.threed.Rotation r, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",composeInverse,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"If the semantics of the rotations composition corresponds to a RotationConvention#VECTOR_OPERATOR vector operator convention, applying the inverse of the instance to a rotation is computing the composition in an order compliant with the following rule : let u be any vector and v its image by r1 (i.e. r1.applyTo(u) = v}). Let {@code w be the inverse image of v by r2 (i.e. r2.applyInverseTo(v) = w}). Then {@code w = comp.applyTo(u), where comp = r2.composeInverse(r1).   If the semantics of the rotations composition corresponds to a RotationConvention#FRAME_TRANSFORM frame transform convention, the application order will be reversed, which means it is the <em>innermost</em> rotation that will be reversed. So keeping the exact same meaning of all r1, r2, u, v, w and comp as above, comp could also be computed as comp = r1.revert().composeInverse(r2.revert(), RotationConvention.FRAME_TRANSFORM).",FreeText,,0
4023,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,applyTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r),applyTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Calling this method is equivalent to call #compose(Rotation, RotationConvention) compose(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.compose(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
4024,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Rotation(double q0, double q1, double q2, double q3, boolean needsNormalization)",org.apache.commons.math3.geometry.euclidean.threed.Rotation,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"A rotation can be built from a <em>normalized</em> quaternion, i.e. a quaternion for which q<sub>0</sub><sup>2</sup> + q<sub>1</sub><sup>2</sup> + q<sub>2</sub><sup>2</sup> + q<sub>3</sub><sup>2</sup> = 1. If the quaternion is not normalized, the constructor can normalize it in a preprocessing step. Note that some conventions put the scalar part of the quaternion as the 4<sup>th</sup> component and the vector part as the first three components. This is <em>not</em> our convention. We put the scalar part as the first component.",FreeText,,0
4025,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order),getAngles,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Calling this method is equivalent to call #getAngles(RotationOrder, RotationConvention) getAngles(order, RotationConvention.VECTOR_OPERATOR)",FreeText,"java.util.Arrays.equals(methodResultID, receiverObjectClone.getAngles(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
4026,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,"getAngles(org.apache.commons.math3.geometry.euclidean.threed.RotationOrder order, org.apache.commons.math3.geometry.euclidean.threed.RotationConvention convention)",getAngles,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"The equations show that each rotation can be defined by two different values of the Cardan or Euler angles set. For example if Cardan angles are used, the rotation defined by the angles a<sub>1</sub>, a<sub>2</sub> and a<sub>3</sub> is the same as the rotation defined by the angles &pi; + a<sub>1</sub>, &pi; - a<sub>2</sub> and &pi; + a<sub>3</sub>. This method implements the following arbitrary choices:  <li>for Cardan angles, the chosen set is the one for which the second angle is between -&pi;/2 and &pi;/2 (i.e its cosine is positive),</li> <li>for Euler angles, the chosen set is the one for which the second angle is between 0 and &pi; (i.e its sine is positive).</li>  Cardan and Euler angle have a very disappointing drawback: all of them have singularities. This means that if the instance is too close to the singularities corresponding to the given rotation order, it will be impossible to retrieve the angles. For Cardan angles, this is often called gimbal lock. There is <em>nothing</em> to do to prevent this, it is an intrinsic problem with Cardan and Euler representation (but not a problem with the rotation itself, which is perfectly well defined). For Cardan angles, singularities occur when the second angle is close to -&pi;/2 or +&pi;/2, for Euler angle singularities occur when the second angle is close to 0 or &pi;, this implies that the identity rotation is always singular for Euler angles!",FreeText,,0
4027,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D u),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4028,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Rotation r),applyInverseTo,org.apache.commons.math3.geometry.euclidean.threed.Rotation,"Calling this method is equivalent to call #composeInverse(Rotation, RotationConvention) composeInverse(r, RotationConvention.VECTOR_OPERATOR).",FreeText,"methodResultID.equals(receiverObjectClone.composeInverse(args[0],org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR))",1
4029,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getQ1(),getQ1,org.apache.commons.math3.geometry.euclidean.threed.Rotation,,FreeText,,0
4030,math,org.apache.commons.math3.geometry.euclidean.threed.Rotation_goal.json,getAxis(),getAxis,org.apache.commons.math3.geometry.euclidean.threed.Rotation,Calling this method is equivalent to call #getAxis(RotationConvention) getAxis(RotationConvention.VECTOR_OPERATOR),FreeText,methodResultID.equals(receiverObjectClone.getAxis(org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.VECTOR_OPERATOR)),1
4031,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double a, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
4032,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v)",subtract,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4033,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,scalarMultiply(double a),scalarMultiply,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4034,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getZero(),getZero,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4035,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2, double a3, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u3)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
4036,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double[] v),org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from its coordinates,FreeText,,0
4037,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getNorm(),getNorm,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4038,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getNormInf(),getNormInf,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4039,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,crossProduct(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),crossProduct,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4040,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
4041,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,toArray(),toArray,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4042,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getSpace(),getSpace,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4043,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,negate(),negate,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4044,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"distance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distance1,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm1()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNorm1()),1
4045,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,toString(),toString,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4046,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,distanceInf(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),distanceInf,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4047,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distanceSq,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormSq()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormSq()),1
4048,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,equals(java.lang.Object other),equals,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,"Test for the equality of two 3D vectors.  If all coordinates of two 3D vectors are exactly the same, and none are <code>Double.NaN</code>, the two 3D vectors are considered to be equal.   <code>NaN</code> coordinates are considered to affect globally the vector and be equals to each other - i.e, if either (or all) coordinates of the 3D vector are equal to <code>Double.NaN</code>, the 3D vector is equal to #NaN.",FreeText,,0
4049,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distance,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNorm()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNorm()),1
4050,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double alpha, double delta)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from its azimuthal coordinates,FreeText,,0
4051,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4052,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getAlpha(),getAlpha,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4053,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,hashCode(),hashCode,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Get a hashCode for the 3D vector.  All NaN values have the same hash code.,FreeText,,0
4054,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getZ(),getZ,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4055,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getNorm1(),getNorm1,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4056,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,normalize(),normalize,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4057,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,distance1(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),distance1,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4058,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,distanceSq(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),distanceSq,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4059,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,toString(java.text.NumberFormat format),toString,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4060,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getDelta(),getDelta,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4061,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getX(),getX,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4062,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,dotProduct(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),dotProduct,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,"The implementation uses specific multiplication and addition algorithms to preserve accuracy and reduce cancellation effects. It should be very accurate even for nearly orthogonal vectors.  @see MathArrays#linearCombination(double, double, double, double, double, double)",FreeText,,0
4063,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getY(),getY,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4064,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,subtract(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),subtract,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4065,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,distance(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),distance,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4066,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,distance(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),distance,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4067,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"add(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v)",add,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4068,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,orthogonal(),orthogonal,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,"There are an infinite number of normalized vectors orthogonal to the instance. This method picks up one of them almost arbitrarily. It is useful when one needs to compute a reference frame with one of the axes in a predefined direction. The following example shows how to build a frame having the k axis aligned with the known vector u : <pre><code> Vector3D k = u.normalize(); Vector3D i = k.orthogonal(); Vector3D j = Vector3D.crossProduct(k, i); </code></pre>",FreeText,,0
4069,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,add(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> v),add,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4070,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"angle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",angle,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,"This method computes the angular separation between two vectors using the dot product for well separated vectors and the cross product for almost aligned vectors. This allows to have a good accuracy in all cases, even for vectors very close to each other.",FreeText,,0
4071,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"dotProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",dotProduct,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4072,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,getNormSq(),getNormSq,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4073,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double a1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u1, double a2, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u2, double a3, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u3, double a4, org.apache.commons.math3.geometry.euclidean.threed.Vector3D u4)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
4074,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",crossProduct,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4075,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D v1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D v2)",distanceInf,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Calling this method is equivalent to calling: <code>v1.subtract(v2).getNormInf()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormInf()),1
4076,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,"org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double x, double y, double z)",org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,Build a vector from its coordinates,FreeText,,0
4077,math,org.apache.commons.math3.geometry.euclidean.threed.Vector3D_goal.json,isNaN(),isNaN,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,,FreeText,,0
4078,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,scalarMultiply(double a),scalarMultiply,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4079,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,distanceInf(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),distanceInf,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4080,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"distanceSq(org.apache.commons.math3.geometry.euclidean.twod.Vector2D p1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D p2)",distanceSq,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNormSq()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormSq()),1
4081,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,normalize(),normalize,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4082,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"distance(org.apache.commons.math3.geometry.euclidean.twod.Vector2D p1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D p2)",distance,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNorm()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNorm()),1
4083,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,distance(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),distance,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4084,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,distance(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),distance,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4085,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double a1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u1, double a2, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u2, double a3, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u3)",org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from three other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3,FreeText,,0
4086,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double a1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u1, double a2, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u2, double a3, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u3, double a4, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u4)",org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from four other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2 + a3 * u3 + a4 * u4,FreeText,,0
4087,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getNormSq(),getNormSq,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4088,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double[] v),org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from its coordinates,FreeText,,0
4089,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double a1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u1, double a2, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u2)",org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from two other ones and corresponding scale factors. The vector built will be a1 * u1 + a2 * u2,FreeText,,0
4090,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getNorm(),getNorm,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4091,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"crossProduct(org.apache.commons.math3.geometry.euclidean.twod.Vector2D p1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D p2)",crossProduct,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,"Compute the cross-product of the instance and the given points.  The cross product can be used to determine the location of a point with regard to the line formed by (p1, p2) and is calculated as: \[ P = (x_2 - x_1)(y_3 - y_1) - (y_2 - y_1)(x_3 - x_1) \] with \(p3 = (x_3, y_3)\) being this instance.  If the result is 0, the points are collinear, i.e. lie on a single straight line L; if it is positive, this point lies to the left, otherwise to the right of the line formed by (p1, p2).",FreeText,,0
4092,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,toString(),toString,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4093,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,toArray(),toArray,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4094,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,toString(java.text.NumberFormat format),toString,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4095,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double x, double y)",org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from its coordinates,FreeText,,0
4096,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4097,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getNormInf(),getNormInf,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4098,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,distance1(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),distance1,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4099,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,dotProduct(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> v),dotProduct,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4100,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getNorm1(),getNorm1,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4101,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> v)",subtract,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4102,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,distanceSq(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),distanceSq,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4103,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"add(double factor, org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> v)",add,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4104,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getY(),getY,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4105,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,add(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> v),add,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4106,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"distanceInf(org.apache.commons.math3.geometry.euclidean.twod.Vector2D p1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D p2)",distanceInf,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Calling this method is equivalent to calling: <code>p1.subtract(p2).getNormInf()</code> except that no intermediate vector is built,FreeText,methodResultID==(args[0].subtract(args[1]).getNormInf()),1
4107,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"angle(org.apache.commons.math3.geometry.euclidean.twod.Vector2D v1, org.apache.commons.math3.geometry.euclidean.twod.Vector2D v2)",angle,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,"This method computes the angular separation between two vectors using the dot product for well separated vectors and the cross product for almost aligned vectors. This allows to have a good accuracy in all cases, even for vectors very close to each other.",FreeText,,0
4108,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,negate(),negate,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4109,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,isNaN(),isNaN,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4110,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,subtract(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> p),subtract,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4111,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getZero(),getZero,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4112,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,equals(java.lang.Object other),equals,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,"Test for the equality of two 2D vectors.  If all coordinates of two 2D vectors are exactly the same, and none are <code>Double.NaN</code>, the two 2D vectors are considered to be equal.   <code>NaN</code> coordinates are considered to affect globally the vector and be equals to each other - i.e, if either (or all) coordinates of the 2D vector are equal to <code>Double.NaN</code>, the 2D vector is equal to #NaN.",FreeText,,0
4113,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,hashCode(),hashCode,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Get a hashCode for the 2D vector.  All NaN values have the same hash code.,FreeText,,0
4114,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getX(),getX,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4115,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,"org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double a, org.apache.commons.math3.geometry.euclidean.twod.Vector2D u)",org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,Build a vector from another one and a scale factor. The vector built will be a * u,FreeText,,0
4116,math,org.apache.commons.math3.geometry.euclidean.twod.Vector2D_goal.json,getSpace(),getSpace,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,,FreeText,,0
4117,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getXAxis(),getXAxis,org.apache.commons.math3.geometry.spherical.twod.Circle,This method returns the same value as #getPointAt(double) getPointAt(0.0) but it does not do any computation and always return the same instance.,FreeText,methodResultID.equals(receiverObjectClone.getPointAt(0.0)),1
4118,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,copySelf(),copySelf,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4119,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,project(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.twod.Sphere2D> point),project,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4120,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getPole(),getPole,org.apache.commons.math3.geometry.spherical.twod.Circle,"As the circle is a great circle, the pole does <em>not</em> belong to it.",FreeText,,0
4121,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getInsideArc(org.apache.commons.math3.geometry.spherical.twod.Circle other),getInsideArc,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4122,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getOffset(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.twod.Sphere2D> point),getOffset,org.apache.commons.math3.geometry.spherical.twod.Circle,@see #getOffset(Vector3D),FreeText,,0
4123,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getTransform(org.apache.commons.math3.geometry.euclidean.threed.Rotation rotation),getTransform,org.apache.commons.math3.geometry.spherical.twod.Circle,Transform} embedding a 3D rotation.,FreeText,,0
4124,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,wholeSpace(),wholeSpace,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4125,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getReverse(),getReverse,org.apache.commons.math3.geometry.spherical.twod.Circle,"Get a circle with reversed orientation with respect to the instance. A new object is built, the instance is untouched.",FreeText,,0
4126,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D newPole),reset,org.apache.commons.math3.geometry.spherical.twod.Circle,The circle is oriented in the trigonometric direction around pole.,FreeText,,0
4127,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getPointAt(double alpha),getPointAt,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4128,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,toSubSpace(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.twod.Sphere2D> point),toSubSpace,org.apache.commons.math3.geometry.spherical.twod.Circle,@see #getPhase(Vector3D),FreeText,,0
4129,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,wholeHyperplane(),wholeHyperplane,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4130,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.spherical.twod.Sphere2D> other),sameOrientationAs,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4131,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,org.apache.commons.math3.geometry.spherical.twod.Circle(org.apache.commons.math3.geometry.spherical.twod.Circle circle),org.apache.commons.math3.geometry.spherical.twod.Circle,org.apache.commons.math3.geometry.spherical.twod.Circle,"The created instance is completely independent from the original instance, it is a deep copy.",FreeText,,0
4132,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getTolerance(),getTolerance,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4133,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getPhase(org.apache.commons.math3.geometry.euclidean.threed.Vector3D direction),getPhase,org.apache.commons.math3.geometry.spherical.twod.Circle,The direction may not belong to the circle as the phase is computed for the meridian plane between the circle pole and the direction.,FreeText,,0
4134,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,revertSelf(),revertSelf,org.apache.commons.math3.geometry.spherical.twod.Circle,,FreeText,,0
4135,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getYAxis(),getYAxis,org.apache.commons.math3.geometry.spherical.twod.Circle,This method returns the same value as #getPointAt(double) getPointAt(0.5 * FastMath.PI) but it does not do any computation and always return the same instance.,FreeText,methodResultID.equals(getPointAt(0.5 * FastMath.PI)),1
4136,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,"org.apache.commons.math3.geometry.spherical.twod.Circle(org.apache.commons.math3.geometry.euclidean.threed.Vector3D pole, double tolerance)",org.apache.commons.math3.geometry.spherical.twod.Circle,org.apache.commons.math3.geometry.spherical.twod.Circle,The circle is oriented in the trigonometric direction around pole.,FreeText,,0
4137,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,"org.apache.commons.math3.geometry.spherical.twod.Circle(org.apache.commons.math3.geometry.spherical.twod.S2Point first, org.apache.commons.math3.geometry.spherical.twod.S2Point second, double tolerance)",org.apache.commons.math3.geometry.spherical.twod.Circle,org.apache.commons.math3.geometry.spherical.twod.Circle,The circle is oriented from first to second point using the path smaller than \( \pi \).,FreeText,,0
4138,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,toSpace(org.apache.commons.math3.geometry.Point<org.apache.commons.math3.geometry.spherical.oned.Sphere1D> point),toSpace,org.apache.commons.math3.geometry.spherical.twod.Circle,@see #getPointAt(double),FreeText,,0
4139,math,org.apache.commons.math3.geometry.spherical.twod.Circle_goal.json,getOffset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D direction),getOffset,org.apache.commons.math3.geometry.spherical.twod.Circle,"The offset is defined as the angular distance between the circle center and the direction minus the circle radius. It is therefore 0 on the circle, positive for directions outside of the cone delimited by the circle, and negative inside the cone.",FreeText,,0
4140,math,org.apache.commons.math3.geometry.Vector_goal.json,getZero(),getZero,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4141,math,org.apache.commons.math3.geometry.Vector_goal.json,distance1(org.apache.commons.math3.geometry.Vector<S> v),distance1,org.apache.commons.math3.geometry.Vector,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm1()</code> except that no intermediate vector is built,FreeText,,0
4142,math,org.apache.commons.math3.geometry.Vector_goal.json,getNorm1(),getNorm1,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4143,math,org.apache.commons.math3.geometry.Vector_goal.json,distanceSq(org.apache.commons.math3.geometry.Vector<S> v),distanceSq,org.apache.commons.math3.geometry.Vector,Calling this method is equivalent to calling: <code>q.subtract(p).getNormSq()</code> except that no intermediate vector is built,FreeText,,0
4144,math,org.apache.commons.math3.geometry.Vector_goal.json,add(org.apache.commons.math3.geometry.Vector<S> v),add,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4145,math,org.apache.commons.math3.geometry.Vector_goal.json,dotProduct(org.apache.commons.math3.geometry.Vector<S> v),dotProduct,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4146,math,org.apache.commons.math3.geometry.Vector_goal.json,getNormSq(),getNormSq,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4147,math,org.apache.commons.math3.geometry.Vector_goal.json,normalize(),normalize,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4148,math,org.apache.commons.math3.geometry.Vector_goal.json,distance(org.apache.commons.math3.geometry.Vector<S> v),distance,org.apache.commons.math3.geometry.Vector,Calling this method is equivalent to calling: <code>q.subtract(p).getNorm()</code> except that no intermediate vector is built,FreeText,,0
4149,math,org.apache.commons.math3.geometry.Vector_goal.json,getNorm(),getNorm,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4150,math,org.apache.commons.math3.geometry.Vector_goal.json,toString(java.text.NumberFormat format),toString,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4151,math,org.apache.commons.math3.geometry.Vector_goal.json,distanceInf(org.apache.commons.math3.geometry.Vector<S> v),distanceInf,org.apache.commons.math3.geometry.Vector,Calling this method is equivalent to calling: <code>q.subtract(p).getNormInf()</code> except that no intermediate vector is built,FreeText,,0
4152,math,org.apache.commons.math3.geometry.Vector_goal.json,subtract(org.apache.commons.math3.geometry.Vector<S> v),subtract,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4153,math,org.apache.commons.math3.geometry.Vector_goal.json,scalarMultiply(double a),scalarMultiply,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4154,math,org.apache.commons.math3.geometry.Vector_goal.json,"subtract(double factor, org.apache.commons.math3.geometry.Vector<S> v)",subtract,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4155,math,org.apache.commons.math3.geometry.Vector_goal.json,getNormInf(),getNormInf,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4156,math,org.apache.commons.math3.geometry.Vector_goal.json,negate(),negate,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4157,math,org.apache.commons.math3.geometry.Vector_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.geometry.Vector,Returns true if any coordinate of this vector is infinite and none are NaN; false otherwise,FreeText,,0
4158,math,org.apache.commons.math3.geometry.Vector_goal.json,"add(double factor, org.apache.commons.math3.geometry.Vector<S> v)",add,org.apache.commons.math3.geometry.Vector,,FreeText,,0
4159,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"createMatrix(int rowDimension, int columnDimension)",createMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4160,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T> field, T[][] d, boolean copyArray)",org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,"Create a new FieldMatrix<T> using the input array as the underlying data array. If an array is built specially in order to be embedded in a FieldMatrix<T> and not used directly, the copyArray may be set to false. This will prevent the copying and improve performance as no new array will be built and no data will be copied.",FreeText,,0
4161,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"getEntry(int row, int column)",getEntry,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4162,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"setEntry(int row, int column, T value)",setEntry,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4163,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][] d, boolean copyArray)",org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,"Create a new FieldMatrix<T> using the input array as the underlying data array. If an array is built specially in order to be embedded in a FieldMatrix<T> and not used directly, the copyArray may be set to false. This will prevent the copying and improve performance as no new array will be built and no data will be copied.",FreeText,,0
4164,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor),walkInRowOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4165,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor),walkInRowOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4166,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[][] d),org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,"Create a new FieldMatrix<T> using the input array as the underlying data array. The input array is copied, not referenced. This constructor has the same effect as calling #Array2DRowFieldMatrix(FieldElement[][], boolean) with the second argument set to true.",FreeText,,0
4167,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,getData(),getData,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4168,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T> field, T[][] d)",org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,"Create a new FieldMatrix<T> using the input array as the underlying data array. The input array is copied, not referenced. This constructor has the same effect as calling #Array2DRowFieldMatrix(FieldElement[][], boolean) with the second argument set to true.",FreeText,,0
4169,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,getDataRef(),getDataRef,org.apache.commons.math3.linear.Array2DRowFieldMatrix,"Get a reference to the underlying data array. This methods returns internal data, not fresh copy of it.",FreeText,,0
4170,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,getColumnDimension(),getColumnDimension,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4171,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"addToEntry(int row, int column, T increment)",addToEntry,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4172,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor),walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4173,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor),walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4174,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,add(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> m),add,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Add m to this matrix.,FreeText,,0
4175,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,preMultiply(T[] v),preMultiply,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4176,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> m),multiply,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Postmultiplying this matrix by m.,FreeText,,0
4177,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"multiplyEntry(int row, int column, T factor)",multiplyEntry,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4178,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"setSubMatrix(T[][] subMatrix, int row, int column)",setSubMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4179,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,operate(T[] v),operate,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4180,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T> field, T[] v)",org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Create a new (column) FieldMatrix<T> using v as the data for the unique column of the created matrix. The input array is copied.,FreeText,,0
4181,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,getRowDimension(),getRowDimension,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4182,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4183,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4184,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T> field, int rowDimension, int columnDimension)",org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Create a new FieldMatrix<T> with the supplied row and column dimensions.,FreeText,,0
4185,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowFieldMatrix(T[] v),org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Create a new (column) FieldMatrix<T> using v as the data for the unique column of the created matrix. The input array is copied.,FreeText,,0
4186,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4187,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,"walkInColumnOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4188,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowFieldMatrix(org.apache.commons.math3.Field<T> field),org.apache.commons.math3.linear.Array2DRowFieldMatrix,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Creates a matrix with no data,FreeText,,0
4189,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,subtract(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T> m),subtract,org.apache.commons.math3.linear.Array2DRowFieldMatrix,Subtract m from this matrix.,FreeText,,0
4190,math,org.apache.commons.math3.linear.Array2DRowFieldMatrix_goal.json,copy(),copy,org.apache.commons.math3.linear.Array2DRowFieldMatrix,,FreeText,,0
4191,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] d, boolean copyArray)",org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,"Create a new RealMatrix using the input array as the underlying data array. If an array is built specially in order to be embedded in a RealMatrix and not used directly, the copyArray may be set to false. This will prevent the copying and improve performance as no new array will be built and no data will be copied.",FreeText,,0
4192,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,add(org.apache.commons.math3.linear.Array2DRowRealMatrix m),add,org.apache.commons.math3.linear.Array2DRowRealMatrix,Compute the sum of this and m.,FreeText,,0
4193,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor),walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4194,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor),walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4195,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"createMatrix(int rowDimension, int columnDimension)",createMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4196,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowRealMatrix(),org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,Creates a matrix with no data,FreeText,,0
4197,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"addToEntry(int row, int column, double increment)",addToEntry,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4198,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,copy(),copy,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4199,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,getDataRef(),getDataRef,org.apache.commons.math3.linear.Array2DRowRealMatrix,Get a reference to the underlying data array.,FreeText,,0
4200,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4201,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4202,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"multiplyEntry(int row, int column, double factor)",multiplyEntry,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4203,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] d),org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,"Create a new RealMatrix using the input array as the underlying data array. The input array is copied, not referenced. This constructor has the same effect as calling #Array2DRowRealMatrix(double[][], boolean) with the second argument set to true.",FreeText,,0
4204,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,operate(double[] v),operate,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4205,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"getEntry(int row, int column)",getEntry,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4206,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"org.apache.commons.math3.linear.Array2DRowRealMatrix(int rowDimension, int columnDimension)",org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,Create a new RealMatrix with the supplied row and column dimensions.,FreeText,,0
4207,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,getData(),getData,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4208,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"setSubMatrix(double[][] subMatrix, int row, int column)",setSubMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4209,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4210,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"walkInColumnOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInColumnOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4211,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,multiply(org.apache.commons.math3.linear.Array2DRowRealMatrix m),multiply,org.apache.commons.math3.linear.Array2DRowRealMatrix,Returns the result of postmultiplying this by m.,FreeText,,0
4212,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,getRowDimension(),getRowDimension,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4213,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,preMultiply(double[] v),preMultiply,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4214,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,"setEntry(int row, int column, double value)",setEntry,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4215,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,org.apache.commons.math3.linear.Array2DRowRealMatrix(double[] v),org.apache.commons.math3.linear.Array2DRowRealMatrix,org.apache.commons.math3.linear.Array2DRowRealMatrix,Create a new (column) RealMatrix using v as the data for the unique column of the created matrix. The input array is copied.,FreeText,,0
4216,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,subtract(org.apache.commons.math3.linear.Array2DRowRealMatrix m),subtract,org.apache.commons.math3.linear.Array2DRowRealMatrix,Returns this minus m.,FreeText,,0
4217,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,getColumnDimension(),getColumnDimension,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4218,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.RealMatrixChangingVisitor visitor),walkInRowOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4219,math,org.apache.commons.math3.linear.Array2DRowRealMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.RealMatrixPreservingVisitor visitor),walkInRowOrder,org.apache.commons.math3.linear.Array2DRowRealMatrix,,FreeText,,0
4220,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"addToEntry(int row, int column, T increment)",addToEntry,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4221,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,scalarMultiply(T d),scalarMultiply,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4222,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setRowVector(int row, org.apache.commons.math3.linear.FieldVector<T> vector)",setRowVector,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4223,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getColumnMatrix(int column),getColumnMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4224,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getRowMatrix(int row),getRowMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4225,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getRowDimension(),getRowDimension,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4226,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4227,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInRowOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4228,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor),walkInRowOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4229,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor),walkInRowOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4230,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,multiply(org.apache.commons.math3.linear.FieldMatrix<T> m),multiply,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4231,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getRow(int row),getRow,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4232,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getColumnDimension(),getColumnDimension,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4233,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInOptimizedOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4234,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor, int startRow, int endRow, int startColumn, int endColumn)",walkInOptimizedOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4235,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,subtract(org.apache.commons.math3.linear.BlockFieldMatrix<T> m),subtract,org.apache.commons.math3.linear.BlockFieldMatrix,Compute this - m.,FreeText,,0
4236,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setColumn(int column, T[] array)",setColumn,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4237,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,operate(T[] v),operate,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4238,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,transpose(),transpose,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4239,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,subtract(org.apache.commons.math3.linear.FieldMatrix<T> m),subtract,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4240,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setColumnMatrix(int column, org.apache.commons.math3.linear.FieldMatrix<T> matrix)",setColumnMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4241,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setEntry(int row, int column, T value)",setEntry,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4242,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getColumnVector(int column),getColumnVector,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4243,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,org.apache.commons.math3.linear.BlockFieldMatrix(T[][] rawData),org.apache.commons.math3.linear.BlockFieldMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,"Create a new dense matrix copying entries from raw layout data. The input array <em>must</em> already be in raw layout. Calling this constructor is equivalent to call: <pre>matrix = new BlockFieldMatrix<T>(getField(), rawData.length, rawData[0].length, toBlocksLayout(rawData), false);</pre>",FreeText,,0
4244,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getColumn(int column),getColumn,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4245,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)",getSubMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4246,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"org.apache.commons.math3.linear.BlockFieldMatrix(int rows, int columns, T[][] blockData, boolean copyArray)",org.apache.commons.math3.linear.BlockFieldMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,Create a new dense matrix copying entries from block layout data. The input array <em>must</em> already be in blocks layout.,FreeText,,0
4247,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,copy(),copy,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4248,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"createBlocksLayout(org.apache.commons.math3.Field<T> field, int rows, int columns)",createBlocksLayout,org.apache.commons.math3.linear.BlockFieldMatrix,"Create a data array in blocks layout.  This method can be used to create the array argument of the #BlockFieldMatrix(int, int, FieldElement[][], boolean) constructor.",FreeText,,0
4249,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,add(org.apache.commons.math3.linear.BlockFieldMatrix<T> m),add,org.apache.commons.math3.linear.BlockFieldMatrix,Compute the sum of this and m.,FreeText,,0
4250,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getData(),getData,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4251,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,multiply(org.apache.commons.math3.linear.BlockFieldMatrix<T> m),multiply,org.apache.commons.math3.linear.BlockFieldMatrix,Returns the result of postmultiplying this by m.,FreeText,,0
4252,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,toBlocksLayout(T[][] rawData),toBlocksLayout,org.apache.commons.math3.linear.BlockFieldMatrix,"Convert a data array from raw layout to blocks layout.  Raw layout is the straightforward layout where element at row i and column j is in array element <code>rawData[i][j]</code>. Blocks layout is the layout used in BlockFieldMatrix instances, where the matrix is split in square blocks (except at right and bottom side where blocks may be rectangular to fit matrix size) and each block is stored in a flattened one-dimensional array.   This method creates an array in blocks layout from an input array in raw layout. It can be used to provide the array argument of the #BlockFieldMatrix(int, int, FieldElement[][], boolean) constructor.",FreeText,,0
4253,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setRowMatrix(int row, org.apache.commons.math3.linear.BlockFieldMatrix<T> matrix)",setRowMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,Sets the entries in row number row as a row matrix. Row indices start at 0.,FreeText,,0
4254,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,add(org.apache.commons.math3.linear.FieldMatrix<T> m),add,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4255,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"org.apache.commons.math3.linear.BlockFieldMatrix(org.apache.commons.math3.Field<T> field, int rows, int columns)",org.apache.commons.math3.linear.BlockFieldMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,Create a new matrix with the supplied row and column dimensions.,FreeText,,0
4256,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"createMatrix(int rowDimension, int columnDimension)",createMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4257,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T> visitor),walkInOptimizedOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4258,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,walkInOptimizedOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T> visitor),walkInOptimizedOrder,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4259,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,preMultiply(T[] v),preMultiply,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4260,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setRowMatrix(int row, org.apache.commons.math3.linear.FieldMatrix<T> matrix)",setRowMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4261,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setColumnMatrix(int column, org.apache.commons.math3.linear.BlockFieldMatrix<T> matrix)",setColumnMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,Sets the entries in column number column as a column matrix. Column indices start at 0.,FreeText,,0
4262,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,scalarAdd(T d),scalarAdd,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4263,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setRow(int row, T[] array)",setRow,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4264,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"multiplyEntry(int row, int column, T factor)",multiplyEntry,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4265,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"getEntry(int row, int column)",getEntry,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4266,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,getRowVector(int row),getRowVector,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4267,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setColumnVector(int column, org.apache.commons.math3.linear.FieldVector<T> vector)",setColumnVector,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4268,math,org.apache.commons.math3.linear.BlockFieldMatrix_goal.json,"setSubMatrix(T[][] subMatrix, int row, int column)",setSubMatrix,org.apache.commons.math3.linear.BlockFieldMatrix,,FreeText,,0
4269,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,getDeterminant(),getDeterminant,org.apache.commons.math3.linear.CholeskyDecomposition,Return the determinant of the matrix,FreeText,,0
4270,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,getSolver(),getSolver,org.apache.commons.math3.linear.CholeskyDecomposition,Get a solver for finding the A &times; X = B solution in least square sense.,FreeText,,0
4271,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,getLT(),getLT,org.apache.commons.math3.linear.CholeskyDecomposition,Returns the transpose of the matrix L of the decomposition. L<sup>T</sup> is an upper-triangular matrix,FreeText,,0
4272,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,getL(),getL,org.apache.commons.math3.linear.CholeskyDecomposition,Returns the matrix L of the decomposition. L is an lower-triangular matrix,FreeText,,0
4273,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,org.apache.commons.math3.linear.CholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix matrix),org.apache.commons.math3.linear.CholeskyDecomposition,org.apache.commons.math3.linear.CholeskyDecomposition,"Calculates the Cholesky decomposition of the given matrix.  Calling this constructor is equivalent to call #CholeskyDecomposition(RealMatrix, double, double) with the thresholds set to the default values #DEFAULT_RELATIVE_SYMMETRY_THRESHOLD and #DEFAULT_ABSOLUTE_POSITIVITY_THRESHOLD",FreeText,,0
4274,math,org.apache.commons.math3.linear.CholeskyDecomposition_goal.json,"org.apache.commons.math3.linear.CholeskyDecomposition(org.apache.commons.math3.linear.RealMatrix matrix, double relativeSymmetryThreshold, double absolutePositivityThreshold)",org.apache.commons.math3.linear.CholeskyDecomposition,org.apache.commons.math3.linear.CholeskyDecomposition,Calculates the Cholesky decomposition of the given matrix.,FreeText,,0
4275,math,org.apache.commons.math3.linear.RealVector_goal.json,mapAdd(double d),mapAdd,org.apache.commons.math3.linear.RealVector,Add a value to each entry. Returns a new vector. Does not change instance data.,FreeText,,0
4276,math,org.apache.commons.math3.linear.RealVector_goal.json,walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor),walkInDefaultOrder,org.apache.commons.math3.linear.RealVector,Visits (but does not alter) all entries of this vector in default order (increasing index).,FreeText,,0
4277,math,org.apache.commons.math3.linear.RealVector_goal.json,mapSubtract(double d),mapSubtract,org.apache.commons.math3.linear.RealVector,Subtract a value from each entry. Returns a new vector. Does not change instance data.,FreeText,,0
4278,math,org.apache.commons.math3.linear.RealVector_goal.json,mapDivideToSelf(double d),mapDivideToSelf,org.apache.commons.math3.linear.RealVector,Divide each entry by the argument. The instance is changed in-place.,FreeText,,0
4279,math,org.apache.commons.math3.linear.RealVector_goal.json,mapDivide(double d),mapDivide,org.apache.commons.math3.linear.RealVector,Divide each entry by the argument. Returns a new vector. Does not change instance data.,FreeText,,0
4280,math,org.apache.commons.math3.linear.RealVector_goal.json,checkVectorDimensions(int n),checkVectorDimensions,org.apache.commons.math3.linear.RealVector,Check if instance dimension is equal to some expected value.,FreeText,,0
4281,math,org.apache.commons.math3.linear.RealVector_goal.json,"combineToSelf(double a, double b, org.apache.commons.math3.linear.RealVector y)",combineToSelf,org.apache.commons.math3.linear.RealVector,Updates this with the linear combination of this and y.,FreeText,,0
4282,math,org.apache.commons.math3.linear.RealVector_goal.json,mapAddToSelf(double d),mapAddToSelf,org.apache.commons.math3.linear.RealVector,Add a value to each entry. The instance is changed in-place.,FreeText,,0
4283,math,org.apache.commons.math3.linear.RealVector_goal.json,"checkIndices(int start, int end)",checkIndices,org.apache.commons.math3.linear.RealVector,Checks that the indices of a subvector are valid.,FreeText,,0
4284,math,org.apache.commons.math3.linear.RealVector_goal.json,"walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor, int start, int end)",walkInOptimizedOrder,org.apache.commons.math3.linear.RealVector,Visits (but does not alter) some entries of this vector in optimized order. The order in which the entries are visited is selected so as to lead to the most efficient implementation; it might depend on the concrete implementation of this abstract class.,FreeText,,0
4285,math,org.apache.commons.math3.linear.RealVector_goal.json,"walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor, int start, int end)",walkInOptimizedOrder,org.apache.commons.math3.linear.RealVector,Visits (and possibly change) some entries of this vector in optimized order. The order in which the entries are visited is selected so as to lead to the most efficient implementation; it might depend on the concrete implementation of this abstract class.,FreeText,,0
4286,math,org.apache.commons.math3.linear.RealVector_goal.json,"setEntry(int index, double value)",setEntry,org.apache.commons.math3.linear.RealVector,Set a single element.,FreeText,,0
4287,math,org.apache.commons.math3.linear.RealVector_goal.json,"combine(double a, double b, org.apache.commons.math3.linear.RealVector y)",combine,org.apache.commons.math3.linear.RealVector,"Returns a new vector representing a * this + b * y, the linear combination of this and y. Returns a new vector. Does not change instance data.",FreeText,,0
4288,math,org.apache.commons.math3.linear.RealVector_goal.json,append(org.apache.commons.math3.linear.RealVector v),append,org.apache.commons.math3.linear.RealVector,Construct a new vector by appending a vector to this vector.,FreeText,,0
4289,math,org.apache.commons.math3.linear.RealVector_goal.json,unitize(),unitize,org.apache.commons.math3.linear.RealVector,Converts this vector into a unit vector. The instance itself is changed by this method.,FreeText,,0
4290,math,org.apache.commons.math3.linear.RealVector_goal.json,getL1Distance(org.apache.commons.math3.linear.RealVector v),getL1Distance,org.apache.commons.math3.linear.RealVector,"Distance between two vectors. This method computes the distance consistent with L<sub>1</sub> norm, i.e. the sum of the absolute values of the elements differences.",FreeText,,0
4291,math,org.apache.commons.math3.linear.RealVector_goal.json,mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction function),mapToSelf,org.apache.commons.math3.linear.RealVector,Acts as if it is implemented as:  Entry e = null; for(Iterator<Entry> it = iterator(); it.hasNext(); e = it.next()) { e.setValue(function.value(e.getValue())); }  Entries of this vector are modified in-place by this method.,FreeText,,0
4292,math,org.apache.commons.math3.linear.RealVector_goal.json,getDimension(),getDimension,org.apache.commons.math3.linear.RealVector,Returns the size of the vector.,FreeText,,0
4293,math,org.apache.commons.math3.linear.RealVector_goal.json,copy(),copy,org.apache.commons.math3.linear.RealVector,Returns a (deep) copy of this vector.,FreeText,,0
4294,math,org.apache.commons.math3.linear.RealVector_goal.json,getNorm(),getNorm,org.apache.commons.math3.linear.RealVector,Returns the L2 norm of the vector. <p>The L2 norm is the root of the sum of the squared elements.</p>,FreeText,,0
4295,math,org.apache.commons.math3.linear.RealVector_goal.json,"walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor, int start, int end)",walkInDefaultOrder,org.apache.commons.math3.linear.RealVector,Visits (and possibly alters) some entries of this vector in default order (increasing index).,FreeText,,0
4296,math,org.apache.commons.math3.linear.RealVector_goal.json,isNaN(),isNaN,org.apache.commons.math3.linear.RealVector,Check whether any coordinate of this vector is NaN.,FreeText,,0
4297,math,org.apache.commons.math3.linear.RealVector_goal.json,getMaxValue(),getMaxValue,org.apache.commons.math3.linear.RealVector,Get the value of the maximum entry.,FreeText,,0
4298,math,org.apache.commons.math3.linear.RealVector_goal.json,subtract(org.apache.commons.math3.linear.RealVector v),subtract,org.apache.commons.math3.linear.RealVector,Subtract v from this vector. Returns a new vector. Does not change instance data.,FreeText,,0
4299,math,org.apache.commons.math3.linear.RealVector_goal.json,getDistance(org.apache.commons.math3.linear.RealVector v),getDistance,org.apache.commons.math3.linear.RealVector,"Distance between two vectors. This method computes the distance consistent with the L<sub>2</sub> norm, i.e. the square root of the sum of element differences, or Euclidean distance.",FreeText,,0
4300,math,org.apache.commons.math3.linear.RealVector_goal.json,projection(org.apache.commons.math3.linear.RealVector v),projection,org.apache.commons.math3.linear.RealVector,Find the orthogonal projection of this vector onto another vector.,FreeText,,0
4301,math,org.apache.commons.math3.linear.RealVector_goal.json,set(double value),set,org.apache.commons.math3.linear.RealVector,Set all elements to a single value.,FreeText,,0
4302,math,org.apache.commons.math3.linear.RealVector_goal.json,getEntry(int index),getEntry,org.apache.commons.math3.linear.RealVector,Return the entry at the specified index.,FreeText,,0
4303,math,org.apache.commons.math3.linear.RealVector_goal.json,walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor),walkInOptimizedOrder,org.apache.commons.math3.linear.RealVector,Visits (and possibly alters) all entries of this vector in optimized order. The order in which the entries are visited is selected so as to lead to the most efficient implementation; it might depend on the concrete implementation of this abstract class.,FreeText,,0
4304,math,org.apache.commons.math3.linear.RealVector_goal.json,getMinValue(),getMinValue,org.apache.commons.math3.linear.RealVector,Get the value of the minimum entry.,FreeText,,0
4305,math,org.apache.commons.math3.linear.RealVector_goal.json,append(double d),append,org.apache.commons.math3.linear.RealVector,Construct a new vector by appending a double to this vector.,FreeText,,0
4306,math,org.apache.commons.math3.linear.RealVector_goal.json,checkIndex(int index),checkIndex,org.apache.commons.math3.linear.RealVector,Check if an index is valid.,FreeText,,0
4307,math,org.apache.commons.math3.linear.RealVector_goal.json,sparseIterator(),sparseIterator,org.apache.commons.math3.linear.RealVector,"Create a sparse iterator over the vector, which may omit some entries. The ommitted entries are either exact zeroes (for dense implementations) or are the entries which are not stored (for real sparse vectors). No guarantees are made about order of iteration. Note: derived classes are required to return an Iterator that returns non-null Entry objects as long as Iterator#hasNext() returns true.",FreeText,,0
4308,math,org.apache.commons.math3.linear.RealVector_goal.json,walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorChangingVisitor visitor),walkInDefaultOrder,org.apache.commons.math3.linear.RealVector,Visits (and possibly alters) all entries of this vector in default order (increasing index).,FreeText,,0
4309,math,org.apache.commons.math3.linear.RealVector_goal.json,"walkInDefaultOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor, int start, int end)",walkInDefaultOrder,org.apache.commons.math3.linear.RealVector,Visits (but does not alter) some entries of this vector in default order (increasing index).,FreeText,,0
4310,math,org.apache.commons.math3.linear.RealVector_goal.json,add(org.apache.commons.math3.linear.RealVector v),add,org.apache.commons.math3.linear.RealVector,Compute the sum of this vector and v. Returns a new vector. Does not change instance data.,FreeText,,0
4311,math,org.apache.commons.math3.linear.RealVector_goal.json,hashCode(),hashCode,org.apache.commons.math3.linear.RealVector,{@inheritDoc}. This method must be overriden by concrete subclasses of RealVector (current implementation throws an exception).,FreeText,,0
4312,math,org.apache.commons.math3.linear.RealVector_goal.json,unmodifiableRealVector(org.apache.commons.math3.linear.RealVector v),unmodifiableRealVector,org.apache.commons.math3.linear.RealVector,"Returns an unmodifiable view of the specified vector. The returned vector has read-only access. An attempt to modify it will result in a MathUnsupportedOperationException. However, the returned vector is not immutable, since any modification of v will also change the returned view. For example, in the following piece of code  RealVector v = new ArrayRealVector(2); RealVector w = RealVector.unmodifiableRealVector(v); v.setEntry(0, 1.2); v.setEntry(1, -3.4);  the changes will be seen in the w view of v.",FreeText,,0
4313,math,org.apache.commons.math3.linear.RealVector_goal.json,"setSubVector(int index, org.apache.commons.math3.linear.RealVector v)",setSubVector,org.apache.commons.math3.linear.RealVector,Set a sequence of consecutive elements.,FreeText,,0
4314,math,org.apache.commons.math3.linear.RealVector_goal.json,ebeMultiply(org.apache.commons.math3.linear.RealVector v),ebeMultiply,org.apache.commons.math3.linear.RealVector,Element-by-element multiplication.,FreeText,,0
4315,math,org.apache.commons.math3.linear.RealVector_goal.json,getMaxIndex(),getMaxIndex,org.apache.commons.math3.linear.RealVector,Get the index of the maximum entry.,FreeText,,0
4316,math,org.apache.commons.math3.linear.RealVector_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.linear.RealVector,Check whether any coordinate of this vector is infinite and none are NaN.,FreeText,,0
4317,math,org.apache.commons.math3.linear.RealVector_goal.json,ebeDivide(org.apache.commons.math3.linear.RealVector v),ebeDivide,org.apache.commons.math3.linear.RealVector,Element-by-element division.,FreeText,,0
4318,math,org.apache.commons.math3.linear.RealVector_goal.json,mapMultiply(double d),mapMultiply,org.apache.commons.math3.linear.RealVector,Multiply each entry by the argument. Returns a new vector. Does not change instance data.,FreeText,,0
4319,math,org.apache.commons.math3.linear.RealVector_goal.json,walkInOptimizedOrder(org.apache.commons.math3.linear.RealVectorPreservingVisitor visitor),walkInOptimizedOrder,org.apache.commons.math3.linear.RealVector,Visits (but does not alter) all entries of this vector in optimized order. The order in which the entries are visited is selected so as to lead to the most efficient implementation; it might depend on the concrete implementation of this abstract class.,FreeText,,0
4320,math,org.apache.commons.math3.linear.RealVector_goal.json,checkVectorDimensions(org.apache.commons.math3.linear.RealVector v),checkVectorDimensions,org.apache.commons.math3.linear.RealVector,Check if instance and specified vectors have the same dimension.,FreeText,,0
4321,math,org.apache.commons.math3.linear.RealVector_goal.json,outerProduct(org.apache.commons.math3.linear.RealVector v),outerProduct,org.apache.commons.math3.linear.RealVector,Compute the outer product.,FreeText,,0
4322,math,org.apache.commons.math3.linear.RealVector_goal.json,map(org.apache.commons.math3.analysis.UnivariateFunction function),map,org.apache.commons.math3.linear.RealVector,Acts as if implemented as:  return copy().mapToSelf(function);  Returns a new vector. Does not change instance data.,FreeText,methodResultID.equals(copy().mapToSelf(args[0])),1
4323,math,org.apache.commons.math3.linear.RealVector_goal.json,mapMultiplyToSelf(double d),mapMultiplyToSelf,org.apache.commons.math3.linear.RealVector,Multiply each entry. The instance is changed in-place.,FreeText,,0
4324,math,org.apache.commons.math3.linear.RealVector_goal.json,"addToEntry(int index, double increment)",addToEntry,org.apache.commons.math3.linear.RealVector,Change an entry at the specified index.,FreeText,,0
4325,math,org.apache.commons.math3.linear.RealVector_goal.json,getMinIndex(),getMinIndex,org.apache.commons.math3.linear.RealVector,Get the index of the minimum entry.,FreeText,,0
4326,math,org.apache.commons.math3.linear.RealVector_goal.json,getL1Norm(),getL1Norm,org.apache.commons.math3.linear.RealVector,Returns the L1 norm of the vector. <p>The L1 norm is the sum of the absolute values of the elements.</p>,FreeText,,0
4327,math,org.apache.commons.math3.linear.RealVector_goal.json,getLInfDistance(org.apache.commons.math3.linear.RealVector v),getLInfDistance,org.apache.commons.math3.linear.RealVector,"Distance between two vectors. This method computes the distance consistent with L<sub>&infin;</sub> norm, i.e. the max of the absolute values of element differences.",FreeText,,0
4328,math,org.apache.commons.math3.linear.RealVector_goal.json,mapSubtractToSelf(double d),mapSubtractToSelf,org.apache.commons.math3.linear.RealVector,Subtract a value from each entry. The instance is changed in-place.,FreeText,,0
4329,math,org.apache.commons.math3.linear.RealVector_goal.json,toArray(),toArray,org.apache.commons.math3.linear.RealVector,Convert the vector to an array of {@code double}s. The array is independent from this vector data: the elements are copied.,FreeText,,0
4330,math,org.apache.commons.math3.linear.RealVector_goal.json,equals(java.lang.Object other),equals,org.apache.commons.math3.linear.RealVector,"Test for the equality of two real vectors. If all coordinates of two real vectors are exactly the same, and none are NaN, the two real vectors are considered to be equal. NaN coordinates are considered to affect globally the vector and be equals to each other - i.e, if either (or all) coordinates of the real vector are equal to NaN, the real vector is equal to a vector with all NaN coordinates.   This method <em>must</em> be overriden by concrete subclasses of RealVector (the current implementation throws an exception).",FreeText,,0
4331,math,org.apache.commons.math3.linear.RealVector_goal.json,dotProduct(org.apache.commons.math3.linear.RealVector v),dotProduct,org.apache.commons.math3.linear.RealVector,Compute the dot product of this vector with v.,FreeText,,0
4332,math,org.apache.commons.math3.linear.RealVector_goal.json,getLInfNorm(),getLInfNorm,org.apache.commons.math3.linear.RealVector,Returns the L&infin; norm of the vector. <p>The L&infin; norm is the max of the absolute values of the elements.</p>,FreeText,,0
4333,math,org.apache.commons.math3.linear.RealVector_goal.json,iterator(),iterator,org.apache.commons.math3.linear.RealVector,Generic dense iterator. Iteration is in increasing order of the vector index. Note: derived classes are required to return an Iterator that returns non-null Entry objects as long as Iterator#hasNext() returns true.,FreeText,,0
4334,math,org.apache.commons.math3.linear.RealVector_goal.json,"getSubVector(int index, int n)",getSubVector,org.apache.commons.math3.linear.RealVector,Get a subvector from consecutive elements.,FreeText,,0
4335,math,org.apache.commons.math3.linear.RealVector_goal.json,cosine(org.apache.commons.math3.linear.RealVector v),cosine,org.apache.commons.math3.linear.RealVector,Computes the cosine of the angle between this vector and the argument.,FreeText,,0
4336,math,org.apache.commons.math3.linear.RealVector_goal.json,unitVector(),unitVector,org.apache.commons.math3.linear.RealVector,Creates a unit vector pointing in the direction of this vector. The instance is not changed by this method.,FreeText,,0
4337,math,org.apache.commons.math3.ode.FieldODEStateAndDerivative_goal.json,"org.apache.commons.math3.ode.FieldODEStateAndDerivative(T time, T[] state, T[] derivative, T[][] secondaryState, T[][] secondaryDerivative)",org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,,FreeText,,0
4338,math,org.apache.commons.math3.ode.FieldODEStateAndDerivative_goal.json,getDerivative(),getDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,,FreeText,,0
4339,math,org.apache.commons.math3.ode.FieldODEStateAndDerivative_goal.json,"org.apache.commons.math3.ode.FieldODEStateAndDerivative(T time, T[] state, T[] derivative)",org.apache.commons.math3.ode.FieldODEStateAndDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,"Calling this constructor is equivalent to call #FieldODEStateAndDerivative(RealFieldElement, RealFieldElement[], RealFieldElement[], RealFieldElement[][], RealFieldElement[][]) FieldODEStateAndDerivative(time, state, derivative, null, null).",FreeText,,0
4340,math,org.apache.commons.math3.ode.FieldODEStateAndDerivative_goal.json,getSecondaryDerivative(int index),getSecondaryDerivative,org.apache.commons.math3.ode.FieldODEStateAndDerivative,,FreeText,,0
4341,math,org.apache.commons.math3.ode.FieldODEState_goal.json,"org.apache.commons.math3.ode.FieldODEState(T time, T[] state)",org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.ode.FieldODEState,"Calling this constructor is equivalent to call #FieldODEState(RealFieldElement, RealFieldElement[], RealFieldElement[][]) FieldODEState(time, state, null).",FreeText,,0
4342,math,org.apache.commons.math3.ode.FieldODEState_goal.json,"org.apache.commons.math3.ode.FieldODEState(T time, T[] state, T[][] secondaryState)",org.apache.commons.math3.ode.FieldODEState,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4343,math,org.apache.commons.math3.ode.FieldODEState_goal.json,"copy(org.apache.commons.math3.Field<T> field, T[][] original)",copy,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4344,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getStateDimension(),getStateDimension,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4345,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getNumberOfSecondaryStates(),getNumberOfSecondaryStates,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4346,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getState(),getState,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4347,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getSecondaryStateDimension(int index),getSecondaryStateDimension,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4348,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getTime(),getTime,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4349,math,org.apache.commons.math3.ode.FieldODEState_goal.json,getSecondaryState(int index),getSecondaryState,org.apache.commons.math3.ode.FieldODEState,,FreeText,,0
4350,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,"setPoint(int index, org.apache.commons.math3.optim.PointValuePair point)",setPoint,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Store a new point at location index. Note that no deep-copy of point is performed.,FreeText,,0
4351,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,getPoints(),getPoints,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Get the points of the simplex.,FreeText,,0
4352,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,getDimension(),getDimension,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Get simplex dimension.,FreeText,,0
4353,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,getPoint(int index),getPoint,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Get the simplex point stored at the requested index.,FreeText,,0
4354,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex(double[] steps),org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,"The start configuration for simplex is built from a box parallel to the canonical axes of the space. The simplex is the subset of vertices of a box parallel to the canonical axes. It is built as the path followed while traveling from one vertex of the box to the diagonally opposite vertex moving only along the box edges. The first vertex of the box will be located at the start point of the optimization. As an example, in dimension 3 a simplex has 4 vertices. Setting the steps to (1, 10, 2) and the start point to (1, 1, 1) would imply the start simplex would be: { (1, 1, 1), (2, 1, 1), (2, 11, 1), (2, 11, 3) }. The first vertex would be set to the start point at (1, 1, 1) and the last vertex would be set to the diagonally opposite vertex at (2, 11, 3).",FreeText,,0
4355,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,setPoints(org.apache.commons.math3.optim.PointValuePair[] points),setPoints,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Replace all points. Note that no deep-copy of points is performed.,FreeText,,0
4356,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,"evaluate(org.apache.commons.math3.analysis.MultivariateFunction evaluationFunction, java.util.Comparator<org.apache.commons.math3.optim.PointValuePair> comparator)",evaluate,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Evaluate all the non-evaluated points of the simplex.,FreeText,,0
4357,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,"replaceWorstPoint(org.apache.commons.math3.optim.PointValuePair pointValuePair, java.util.Comparator<org.apache.commons.math3.optim.PointValuePair> comparator)",replaceWorstPoint,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Replace the worst point of the simplex by a new point.,FreeText,,0
4358,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,"iterate(org.apache.commons.math3.analysis.MultivariateFunction evaluationFunction, java.util.Comparator<org.apache.commons.math3.optim.PointValuePair> comparator)",iterate,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Compute the next simplex of the algorithm.,FreeText,,0
4359,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex(double[][] referenceSimplex),org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,The real initial simplex will be set up by moving the reference simplex such that its first point is located at the start point of the optimization.,FreeText,,0
4360,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,build(double[] startPoint),build,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Build an initial simplex.,FreeText,,0
4361,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex(int n),org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Build a unit hypercube simplex.,FreeText,,0
4362,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex(int n, double sideLength)",org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,Build a hypercube simplex with the given side length.,FreeText,,0
4363,math,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_goal.json,getSize(),getSize,org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex,"Get simplex size. After calling the #build(double[]) build method, this method will will be equivalent to getDimension() + 1.",FreeText,,0
4364,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,"evaluate(org.apache.commons.math3.analysis.MultivariateFunction evaluationFunction, java.util.Comparator<org.apache.commons.math3.optimization.PointValuePair> comparator)",evaluate,org.apache.commons.math3.optimization.direct.AbstractSimplex,Evaluate all the non-evaluated points of the simplex.,FreeText,,0
4365,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,org.apache.commons.math3.optimization.direct.AbstractSimplex(double[] steps),org.apache.commons.math3.optimization.direct.AbstractSimplex,org.apache.commons.math3.optimization.direct.AbstractSimplex,"The start configuration for simplex is built from a box parallel to the canonical axes of the space. The simplex is the subset of vertices of a box parallel to the canonical axes. It is built as the path followed while traveling from one vertex of the box to the diagonally opposite vertex moving only along the box edges. The first vertex of the box will be located at the start point of the optimization. As an example, in dimension 3 a simplex has 4 vertices. Setting the steps to (1, 10, 2) and the start point to (1, 1, 1) would imply the start simplex would be: { (1, 1, 1), (2, 1, 1), (2, 11, 1), (2, 11, 3) }. The first vertex would be set to the start point at (1, 1, 1) and the last vertex would be set to the diagonally opposite vertex at (2, 11, 3).",FreeText,,0
4366,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,getSize(),getSize,org.apache.commons.math3.optimization.direct.AbstractSimplex,"Get simplex size. After calling the #build(double[]) build method, this method will will be equivalent to getDimension() + 1.",FreeText,,0
4367,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,org.apache.commons.math3.optimization.direct.AbstractSimplex(double[][] referenceSimplex),org.apache.commons.math3.optimization.direct.AbstractSimplex,org.apache.commons.math3.optimization.direct.AbstractSimplex,The real initial simplex will be set up by moving the reference simplex such that its first point is located at the start point of the optimization.,FreeText,,0
4368,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,getDimension(),getDimension,org.apache.commons.math3.optimization.direct.AbstractSimplex,Get simplex dimension.,FreeText,,0
4369,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,getPoints(),getPoints,org.apache.commons.math3.optimization.direct.AbstractSimplex,Get the points of the simplex.,FreeText,,0
4370,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,getPoint(int index),getPoint,org.apache.commons.math3.optimization.direct.AbstractSimplex,Get the simplex point stored at the requested index.,FreeText,,0
4371,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,"org.apache.commons.math3.optimization.direct.AbstractSimplex(int n, double sideLength)",org.apache.commons.math3.optimization.direct.AbstractSimplex,org.apache.commons.math3.optimization.direct.AbstractSimplex,Build a hypercube simplex with the given side length.,FreeText,,0
4372,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,build(double[] startPoint),build,org.apache.commons.math3.optimization.direct.AbstractSimplex,Build an initial simplex.,FreeText,,0
4373,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,"setPoint(int index, org.apache.commons.math3.optimization.PointValuePair point)",setPoint,org.apache.commons.math3.optimization.direct.AbstractSimplex,Store a new point at location index. Note that no deep-copy of point is performed.,FreeText,,0
4374,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,org.apache.commons.math3.optimization.direct.AbstractSimplex(int n),org.apache.commons.math3.optimization.direct.AbstractSimplex,org.apache.commons.math3.optimization.direct.AbstractSimplex,Build a unit hypercube simplex.,FreeText,,0
4375,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,"iterate(org.apache.commons.math3.analysis.MultivariateFunction evaluationFunction, java.util.Comparator<org.apache.commons.math3.optimization.PointValuePair> comparator)",iterate,org.apache.commons.math3.optimization.direct.AbstractSimplex,Compute the next simplex of the algorithm.,FreeText,,0
4376,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,"replaceWorstPoint(org.apache.commons.math3.optimization.PointValuePair pointValuePair, java.util.Comparator<org.apache.commons.math3.optimization.PointValuePair> comparator)",replaceWorstPoint,org.apache.commons.math3.optimization.direct.AbstractSimplex,Replace the worst point of the simplex by a new point.,FreeText,,0
4377,math,org.apache.commons.math3.optimization.direct.AbstractSimplex_goal.json,setPoints(org.apache.commons.math3.optimization.PointValuePair[] points),setPoints,org.apache.commons.math3.optimization.direct.AbstractSimplex,Replace all points. Note that no deep-copy of points is performed.,FreeText,,0
4378,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,getObservations(),getObservations,org.apache.commons.math3.optimization.fitting.CurveFitter,,FreeText,,0
4379,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,"addObservedPoint(double x, double y)",addObservedPoint,org.apache.commons.math3.optimization.fitting.CurveFitter,"Calling this method is equivalent to call addObservedPoint(1.0, x, y).",FreeText,,0
4380,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,"addObservedPoint(double weight, double x, double y)",addObservedPoint,org.apache.commons.math3.optimization.fitting.CurveFitter,,FreeText,,0
4381,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,clearObservations(),clearObservations,org.apache.commons.math3.optimization.fitting.CurveFitter,Remove all observations.,FreeText,,0
4382,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,"fit(T f, double[] initialGuess)",fit,org.apache.commons.math3.optimization.fitting.CurveFitter,Fit a curve. This method compute the coefficients of the curve that best fit the sample of observed points previously given through calls to the #addObservedPoint(WeightedObservedPoint) addObservedPoint method.,FreeText,,0
4383,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,"fit(int maxEval, T f, double[] initialGuess)",fit,org.apache.commons.math3.optimization.fitting.CurveFitter,Fit a curve. This method compute the coefficients of the curve that best fit the sample of observed points previously given through calls to the #addObservedPoint(WeightedObservedPoint) addObservedPoint method.,FreeText,,0
4384,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,org.apache.commons.math3.optimization.fitting.CurveFitter(org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer optimizer),org.apache.commons.math3.optimization.fitting.CurveFitter,org.apache.commons.math3.optimization.fitting.CurveFitter,,FreeText,,0
4385,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,org.apache.commons.math3.optimization.fitting.CurveFitter(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorOptimizer optimizer),org.apache.commons.math3.optimization.fitting.CurveFitter,org.apache.commons.math3.optimization.fitting.CurveFitter,,FreeText,,0
4386,math,org.apache.commons.math3.optimization.fitting.CurveFitter_goal.json,addObservedPoint(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint observed),addObservedPoint,org.apache.commons.math3.optimization.fitting.CurveFitter,,FreeText,,0
4387,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,append(org.apache.commons.math3.stat.correlation.StorelessCovariance sc),append,org.apache.commons.math3.stat.correlation.StorelessCovariance,"Appends sc to this, effectively aggregating the computations in sc with this. After invoking this method, covariances returned should be close to what would have been obtained by performing all of the #increment(double[]) operations in sc directly on this.",FreeText,,0
4388,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,increment(double[] data),increment,org.apache.commons.math3.stat.correlation.StorelessCovariance,Increment the covariance matrix with one row of data.,FreeText,,0
4389,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,getData(),getData,org.apache.commons.math3.stat.correlation.StorelessCovariance,Return the covariance matrix as two-dimensional array.,FreeText,,0
4390,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,org.apache.commons.math3.stat.correlation.StorelessCovariance(int dim),org.apache.commons.math3.stat.correlation.StorelessCovariance,org.apache.commons.math3.stat.correlation.StorelessCovariance,Create a bias corrected covariance matrix with a given dimension.,FreeText,,0
4391,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,"getCovariance(int xIndex, int yIndex)",getCovariance,org.apache.commons.math3.stat.correlation.StorelessCovariance,Get the covariance for an individual element of the covariance matrix.,FreeText,,0
4392,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,getN(),getN,org.apache.commons.math3.stat.correlation.StorelessCovariance,"This Covariance method is not supported by a StorelessCovariance, since the number of bivariate observations does not have to be the same for different pairs of covariates - i.e., N as defined in Covariance#getN() is undefined.",FreeText,,0
4393,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,getCovarianceMatrix(),getCovarianceMatrix,org.apache.commons.math3.stat.correlation.StorelessCovariance,{@inheritDoc},FreeText,,0
4394,math,org.apache.commons.math3.stat.correlation.StorelessCovariance_goal.json,"org.apache.commons.math3.stat.correlation.StorelessCovariance(int dim, boolean biasCorrected)",org.apache.commons.math3.stat.correlation.StorelessCovariance,org.apache.commons.math3.stat.correlation.StorelessCovariance,Create a covariance matrix with a given number of rows and columns and the indicated bias correction.,FreeText,,0
4395,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,clear(),clear,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,{@inheritDoc},FreeText,,0
4396,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,"evaluate(double[] values, int begin, int length)",evaluate,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,"This default implementation calls #clear, then invokes #increment in a loop over the specified portion of the input array, and then uses #getResult to compute the return value.  Note that this implementation changes the internal state of the statistic. Its side effects are the same as invoking #clear and then #incrementAll(double[], int, int).  Implementations may override this method with a more efficient and possibly more accurate implementation that works directly with the input array.  If the array is null or the index parameters are not valid, an MathIllegalArgumentException is thrown.",FreeText,,0
4397,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,equals(java.lang.Object object),equals,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,Returns true iff object is an AbstractStorelessUnivariateStatistic returning the same values as this for getResult() and getN(),FreeText,,0
4398,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,"incrementAll(double[] values, int begin, int length)",incrementAll,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,This default implementation just calls #increment in a loop over the specified portion of the input array.  Throws IllegalArgumentException if the input values array is null.,FreeText,,0
4399,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,incrementAll(double[] values),incrementAll,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,This default implementation just calls #increment in a loop over the input array.  Throws IllegalArgumentException if the input values array is null.,FreeText,,0
4400,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,hashCode(),hashCode,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,Returns hash code based on getResult() and getN(),FreeText,,0
4401,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,copy(),copy,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,{@inheritDoc},FreeText,,0
4402,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,increment(double d),increment,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,{@inheritDoc},FreeText,,0
4403,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,getResult(),getResult,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,{@inheritDoc},FreeText,,0
4404,math,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic_goal.json,evaluate(double[] values),evaluate,org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic,"This default implementation calls #clear, then invokes #increment in a loop over the the input array, and then uses #getResult to compute the return value.  Note that this implementation changes the internal state of the statistic. Its side effects are the same as invoking #clear and then #incrementAll(double[]).  Implementations may override this method with a more efficient and possibly more accurate implementation that works directly with the input array.  If the array is null, a MathIllegalArgumentException is thrown.",FreeText,,0
4405,math,org.apache.commons.math3.stat.StatUtils_goal.json,sumSq(double[] values),sumSq,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the squares of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the array is null.",FreeText,,0
4406,math,org.apache.commons.math3.stat.StatUtils_goal.json,sumLog(double[] values),sumLog,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the natural logs of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.",FreeText,,0
4407,math,org.apache.commons.math3.stat.StatUtils_goal.json,mean(double[] values),mean,org.apache.commons.math3.stat.StatUtils,"Returns the arithmetic mean of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.moment.Mean for details on the computing algorithm.",FreeText,,0
4408,math,org.apache.commons.math3.stat.StatUtils_goal.json,populationVariance(double[] values),populationVariance,org.apache.commons.math3.stat.StatUtils,"Returns the  population variance of the entries in the input array, or Double.NaN if the array is empty.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the formula and computing algorithm.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null.",FreeText,,0
4409,math,org.apache.commons.math3.stat.StatUtils_goal.json,"meanDifference(double[] sample1, double[] sample2)",meanDifference,org.apache.commons.math3.stat.StatUtils,"Returns the mean of the (signed) differences between corresponding elements of the input arrays -- i.e., sum(sample1[i] - sample2[i]) / sample1.length.",FreeText,,0
4410,math,org.apache.commons.math3.stat.StatUtils_goal.json,"max(double[] values, int begin, int length)",max,org.apache.commons.math3.stat.StatUtils,"Returns the maximum of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.  <ul> <li>The result is <code>NaN</code> iff all values are <code>NaN</code> (i.e. <code>NaN</code> values have no impact on the value of the statistic).</li> <li>If any of the values equals <code>Double.POSITIVE_INFINITY</code>, the result is <code>Double.POSITIVE_INFINITY.</code></li> </ul>",FreeText,,0
4411,math,org.apache.commons.math3.stat.StatUtils_goal.json,normalize(double[] sample),normalize,org.apache.commons.math3.stat.StatUtils,"Normalize (standardize) the sample, so it is has a mean of 0 and a standard deviation of 1.",FreeText,,0
4412,math,org.apache.commons.math3.stat.StatUtils_goal.json,"variance(double[] values, int begin, int length)",variance,org.apache.commons.math3.stat.StatUtils,"Returns the variance of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty. This method returns the bias-corrected sample variance (using n - 1 in the denominator). Use #populationVariance(double[], int, int) for the non-bias-corrected population variance.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.",FreeText,,0
4413,math,org.apache.commons.math3.stat.StatUtils_goal.json,"sumSq(double[] values, int begin, int length)",sumSq,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the squares of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.",FreeText,,0
4414,math,org.apache.commons.math3.stat.StatUtils_goal.json,"sumDifference(double[] sample1, double[] sample2)",sumDifference,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the (signed) differences between corresponding elements of the input arrays -- i.e., sum(sample1[i] - sample2[i]).",FreeText,,0
4415,math,org.apache.commons.math3.stat.StatUtils_goal.json,geometricMean(double[] values),geometricMean,org.apache.commons.math3.stat.StatUtils,"Returns the geometric mean of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.moment.GeometricMean for details on the computing algorithm.",FreeText,,0
4416,math,org.apache.commons.math3.stat.StatUtils_goal.json,"percentile(double[] values, double p)",percentile,org.apache.commons.math3.stat.StatUtils,Returns an estimate of the pth percentile of the values in the values array. <p> <ul> <li>Returns <code>Double.NaN</code> if values has length <code>0</code></li></p> <li>Returns (for any value of p) <code>values[0]</code> if values has length <code>1</code></li> <li>Throws <code>IllegalArgumentException</code> if values is null or p is not a valid quantile value (p must be greater than 0 and less than or equal to 100)</li> </ul></p>  See org.apache.commons.math3.stat.descriptive.rank.Percentile for a description of the percentile estimation algorithm used.,FreeText,,0
4417,math,org.apache.commons.math3.stat.StatUtils_goal.json,"variance(double[] values, double mean)",variance,org.apache.commons.math3.stat.StatUtils,"Returns the variance of the entries in the input array, using the precomputed mean value. Returns Double.NaN if the array is empty. This method returns the bias-corrected sample variance (using n - 1 in the denominator). Use #populationVariance(double[], double) for the non-bias-corrected population variance.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  The formula used assumes that the supplied mean value is the arithmetic mean of the sample data, not a known population parameter. This method is supplied only to save computation when the mean has already been computed.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null.",FreeText,,0
4418,math,org.apache.commons.math3.stat.StatUtils_goal.json,"geometricMean(double[] values, int begin, int length)",geometricMean,org.apache.commons.math3.stat.StatUtils,"Returns the geometric mean of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.moment.GeometricMean for details on the computing algorithm.",FreeText,,0
4419,math,org.apache.commons.math3.stat.StatUtils_goal.json,product(double[] values),product,org.apache.commons.math3.stat.StatUtils,"Returns the product of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the array is null.",FreeText,,0
4420,math,org.apache.commons.math3.stat.StatUtils_goal.json,min(double[] values),min,org.apache.commons.math3.stat.StatUtils,"Returns the minimum of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>MathIllegalArgumentException</code> if the array is null.  <ul> <li>The result is <code>NaN</code> iff all values are <code>NaN</code> (i.e. <code>NaN</code> values have no impact on the value of the statistic).</li> <li>If any of the values equals <code>Double.NEGATIVE_INFINITY</code>, the result is <code>Double.NEGATIVE_INFINITY.</code></li> </ul>",FreeText,,0
4421,math,org.apache.commons.math3.stat.StatUtils_goal.json,sum(double[] values),sum,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the values in the input array, or Double.NaN if the array is empty.  Throws <code>IllegalArgumentException</code> if the input array is null.",FreeText,,0
4422,math,org.apache.commons.math3.stat.StatUtils_goal.json,"populationVariance(double[] values, double mean)",populationVariance,org.apache.commons.math3.stat.StatUtils,"Returns the  population variance of the entries in the input array, using the precomputed mean value. Returns Double.NaN if the array is empty.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  The formula used assumes that the supplied mean value is the arithmetic mean of the sample data, not a known population parameter. This method is supplied only to save computation when the mean has already been computed.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null.",FreeText,,0
4423,math,org.apache.commons.math3.stat.StatUtils_goal.json,max(double[] values),max,org.apache.commons.math3.stat.StatUtils,"Returns the maximum of the entries in the input array, or Double.NaN if the array is empty.  Throws <code>MathIllegalArgumentException</code> if the array is null.  <ul> <li>The result is <code>NaN</code> iff all values are <code>NaN</code> (i.e. <code>NaN</code> values have no impact on the value of the statistic).</li> <li>If any of the values equals <code>Double.POSITIVE_INFINITY</code>, the result is <code>Double.POSITIVE_INFINITY.</code></li> </ul>",FreeText,,0
4424,math,org.apache.commons.math3.stat.StatUtils_goal.json,"mode(double[] sample, int begin, int length)",mode,org.apache.commons.math3.stat.StatUtils,"Returns the sample mode(s). The mode is the most frequently occurring value in the sample. If there is a unique value with maximum frequency, this value is returned as the only element of the output array. Otherwise, the returned array contains the maximum frequency elements in increasing order. For example, if sample is {0, 12, 5, 6, 0, 13, 5, 17}, the returned array will have length two, with 0 in the first element and 5 in the second. NaN values are ignored when computing the mode - i.e., NaNs will never appear in the output array. If the sample includes only NaNs or has length 0, an empty array is returned.",FreeText,,0
4425,math,org.apache.commons.math3.stat.StatUtils_goal.json,"product(double[] values, int begin, int length)",product,org.apache.commons.math3.stat.StatUtils,"Returns the product of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.",FreeText,,0
4426,math,org.apache.commons.math3.stat.StatUtils_goal.json,"populationVariance(double[] values, double mean, int begin, int length)",populationVariance,org.apache.commons.math3.stat.StatUtils,"Returns the  population variance of the entries in the specified portion of the input array, using the precomputed mean value. Returns Double.NaN if the designated subarray is empty.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  The formula used assumes that the supplied mean value is the arithmetic mean of the sample data, not a known population parameter. This method is supplied only to save computation when the mean has already been computed.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.",FreeText,,0
4427,math,org.apache.commons.math3.stat.StatUtils_goal.json,"sumLog(double[] values, int begin, int length)",sumLog,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the natural logs of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.",FreeText,,0
4428,math,org.apache.commons.math3.stat.StatUtils_goal.json,"variance(double[] values, double mean, int begin, int length)",variance,org.apache.commons.math3.stat.StatUtils,"Returns the variance of the entries in the specified portion of the input array, using the precomputed mean value. Returns Double.NaN if the designated subarray is empty. This method returns the bias-corrected sample variance (using n - 1 in the denominator). Use #populationVariance(double[], double, int, int) for the non-bias-corrected population variance.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  The formula used assumes that the supplied mean value is the arithmetic mean of the sample data, not a known population parameter. This method is supplied only to save computation when the mean has already been computed.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.",FreeText,,0
4429,math,org.apache.commons.math3.stat.StatUtils_goal.json,variance(double[] values),variance,org.apache.commons.math3.stat.StatUtils,"Returns the variance of the entries in the input array, or Double.NaN if the array is empty. This method returns the bias-corrected sample variance (using n - 1 in the denominator). Use #populationVariance(double[]) for the non-bias-corrected population variance.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null.",FreeText,,0
4430,math,org.apache.commons.math3.stat.StatUtils_goal.json,mode(double[] sample),mode,org.apache.commons.math3.stat.StatUtils,"Returns the sample mode(s). The mode is the most frequently occurring value in the sample. If there is a unique value with maximum frequency, this value is returned as the only element of the output array. Otherwise, the returned array contains the maximum frequency elements in increasing order. For example, if sample is {0, 12, 5, 6, 0, 13, 5, 17}, the returned array will have length two, with 0 in the first element and 5 in the second. NaN values are ignored when computing the mode - i.e., NaNs will never appear in the output array. If the sample includes only NaNs or has length 0, an empty array is returned.",FreeText,,0
4431,math,org.apache.commons.math3.stat.StatUtils_goal.json,"sum(double[] values, int begin, int length)",sum,org.apache.commons.math3.stat.StatUtils,"Returns the sum of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.",FreeText,,0
4432,math,org.apache.commons.math3.stat.StatUtils_goal.json,"varianceDifference(double[] sample1, double[] sample2, double meanDifference)",varianceDifference,org.apache.commons.math3.stat.StatUtils,"Returns the variance of the (signed) differences between corresponding elements of the input arrays -- i.e., var(sample1[i] - sample2[i]).",FreeText,,0
4433,math,org.apache.commons.math3.stat.StatUtils_goal.json,"mean(double[] values, int begin, int length)",mean,org.apache.commons.math3.stat.StatUtils,"Returns the arithmetic mean of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>IllegalArgumentException</code> if the array is null.  See org.apache.commons.math3.stat.descriptive.moment.Mean for details on the computing algorithm.",FreeText,,0
4434,math,org.apache.commons.math3.stat.StatUtils_goal.json,"min(double[] values, int begin, int length)",min,org.apache.commons.math3.stat.StatUtils,"Returns the minimum of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.  <ul> <li>The result is <code>NaN</code> iff all values are <code>NaN</code> (i.e. <code>NaN</code> values have no impact on the value of the statistic).</li> <li>If any of the values equals <code>Double.NEGATIVE_INFINITY</code>, the result is <code>Double.NEGATIVE_INFINITY.</code></li> </ul>",FreeText,,0
4435,math,org.apache.commons.math3.stat.StatUtils_goal.json,"populationVariance(double[] values, int begin, int length)",populationVariance,org.apache.commons.math3.stat.StatUtils,"Returns the  population variance of the entries in the specified portion of the input array, or Double.NaN if the designated subarray is empty.  See org.apache.commons.math3.stat.descriptive.moment.Variance for details on the computing algorithm.  Returns 0 for a single-value (i.e. length = 1) sample.  Throws <code>MathIllegalArgumentException</code> if the array is null or the array index parameters are not valid.",FreeText,,0
4436,math,org.apache.commons.math3.stat.StatUtils_goal.json,"percentile(double[] values, int begin, int length, double p)",percentile,org.apache.commons.math3.stat.StatUtils,"Returns an estimate of the pth percentile of the values in the values array, starting with the element in (0-based) position begin in the array and including length values. <p> <ul> <li>Returns <code>Double.NaN</code> if <code>length = 0</code></li> <li>Returns (for any value of p) <code>values[begin]</code> if <code>length = 1 </code></li> <li>Throws <code>MathIllegalArgumentException</code> if values is null , begin or length is invalid, or p is not a valid quantile value (p must be greater than 0 and less than or equal to 100)</li> </ul></p>  See org.apache.commons.math3.stat.descriptive.rank.Percentile for a description of the percentile estimation algorithm used.",FreeText,,0
4437,math,org.apache.commons.math3.util.Decimal64_goal.json,abs(),abs,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4438,math,org.apache.commons.math3.util.Decimal64_goal.json,compareTo(org.apache.commons.math3.util.Decimal64 o),compareTo,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation returns the same value as  new Double(this.doubleValue()).compareTo(new Double(o.doubleValue()))  @see Double#compareTo(Double),FreeText,,0
4439,math,org.apache.commons.math3.util.Decimal64_goal.json,cbrt(),cbrt,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4440,math,org.apache.commons.math3.util.Decimal64_goal.json,pow(int n),pow,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4441,math,org.apache.commons.math3.util.Decimal64_goal.json,log1p(),log1p,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4442,math,org.apache.commons.math3.util.Decimal64_goal.json,hashCode(),hashCode,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation returns the same value as new Double(this.doubleValue()).hashCode() @see Double#hashCode(),FreeText,,0
4443,math,org.apache.commons.math3.util.Decimal64_goal.json,sqrt(),sqrt,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4444,math,org.apache.commons.math3.util.Decimal64_goal.json,pow(double p),pow,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4445,math,org.apache.commons.math3.util.Decimal64_goal.json,sin(),sin,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4446,math,org.apache.commons.math3.util.Decimal64_goal.json,multiply(int n),multiply,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.multiply(n).equals(new Decimal64(n * this.doubleValue())).,FreeText,,0
4447,math,org.apache.commons.math3.util.Decimal64_goal.json,atan(),atan,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4448,math,org.apache.commons.math3.util.Decimal64_goal.json,cos(),cos,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4449,math,org.apache.commons.math3.util.Decimal64_goal.json,org.apache.commons.math3.util.Decimal64(double x),org.apache.commons.math3.util.Decimal64,org.apache.commons.math3.util.Decimal64,Creates a new instance of this class.,FreeText,,0
4450,math,org.apache.commons.math3.util.Decimal64_goal.json,asinh(),asinh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4451,math,org.apache.commons.math3.util.Decimal64_goal.json,hypot(org.apache.commons.math3.util.Decimal64 y),hypot,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4452,math,org.apache.commons.math3.util.Decimal64_goal.json,divide(org.apache.commons.math3.util.Decimal64 a),divide,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.divide(a).equals(new Decimal64(this.doubleValue() / a.doubleValue())).,FreeText,,0
4453,math,org.apache.commons.math3.util.Decimal64_goal.json,divide(double a),divide,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4454,math,org.apache.commons.math3.util.Decimal64_goal.json,reciprocal(),reciprocal,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.reciprocal().equals(new Decimal64(1.0 / this.doubleValue())).,FreeText,,0
4455,math,org.apache.commons.math3.util.Decimal64_goal.json,longValue(),longValue,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation performs casting to a long.,FreeText,,0
4456,math,org.apache.commons.math3.util.Decimal64_goal.json,ceil(),ceil,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4457,math,org.apache.commons.math3.util.Decimal64_goal.json,scalb(int n),scalb,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4458,math,org.apache.commons.math3.util.Decimal64_goal.json,subtract(org.apache.commons.math3.util.Decimal64 a),subtract,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.subtract(a).equals(new Decimal64(this.doubleValue() - a.doubleValue())).,FreeText,,0
4459,math,org.apache.commons.math3.util.Decimal64_goal.json,subtract(double a),subtract,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4460,math,org.apache.commons.math3.util.Decimal64_goal.json,equals(java.lang.Object obj),equals,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4461,math,org.apache.commons.math3.util.Decimal64_goal.json,log10(),log10,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4462,math,org.apache.commons.math3.util.Decimal64_goal.json,floatValue(),floatValue,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation performs casting to a float.,FreeText,,0
4463,math,org.apache.commons.math3.util.Decimal64_goal.json,byteValue(),byteValue,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation performs casting to a byte.,FreeText,,0
4464,math,org.apache.commons.math3.util.Decimal64_goal.json,floor(),floor,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4465,math,org.apache.commons.math3.util.Decimal64_goal.json,signum(),signum,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4466,math,org.apache.commons.math3.util.Decimal64_goal.json,toString(),toString,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The returned String is equal to Double.toString(this.doubleValue()) @see Double#toString(double),FreeText,methodResultID.equals(Double.toString(this.doubleValue())),1
4467,math,org.apache.commons.math3.util.Decimal64_goal.json,rint(),rint,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4468,math,org.apache.commons.math3.util.Decimal64_goal.json,rootN(int n),rootN,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4469,math,org.apache.commons.math3.util.Decimal64_goal.json,round(),round,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4470,math,org.apache.commons.math3.util.Decimal64_goal.json,multiply(org.apache.commons.math3.util.Decimal64 a),multiply,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.multiply(a).equals(new Decimal64(this.doubleValue() * a.doubleValue())).,FreeText,,0
4471,math,org.apache.commons.math3.util.Decimal64_goal.json,multiply(double a),multiply,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4472,math,org.apache.commons.math3.util.Decimal64_goal.json,tanh(),tanh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4473,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(org.apache.commons.math3.util.Decimal64[] a, org.apache.commons.math3.util.Decimal64[] b)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4474,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(double[] a, org.apache.commons.math3.util.Decimal64[] b)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4475,math,org.apache.commons.math3.util.Decimal64_goal.json,atan2(org.apache.commons.math3.util.Decimal64 x),atan2,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4476,math,org.apache.commons.math3.util.Decimal64_goal.json,shortValue(),shortValue,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation performs casting to a short.,FreeText,,0
4477,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(org.apache.commons.math3.util.Decimal64 a1, org.apache.commons.math3.util.Decimal64 b1, org.apache.commons.math3.util.Decimal64 a2, org.apache.commons.math3.util.Decimal64 b2, org.apache.commons.math3.util.Decimal64 a3, org.apache.commons.math3.util.Decimal64 b3)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4478,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(double a1, org.apache.commons.math3.util.Decimal64 b1, double a2, org.apache.commons.math3.util.Decimal64 b2, double a3, org.apache.commons.math3.util.Decimal64 b3)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4479,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(org.apache.commons.math3.util.Decimal64 a1, org.apache.commons.math3.util.Decimal64 b1, org.apache.commons.math3.util.Decimal64 a2, org.apache.commons.math3.util.Decimal64 b2, org.apache.commons.math3.util.Decimal64 a3, org.apache.commons.math3.util.Decimal64 b3, org.apache.commons.math3.util.Decimal64 a4, org.apache.commons.math3.util.Decimal64 b4)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4480,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(double a1, org.apache.commons.math3.util.Decimal64 b1, double a2, org.apache.commons.math3.util.Decimal64 b2, double a3, org.apache.commons.math3.util.Decimal64 b3, double a4, org.apache.commons.math3.util.Decimal64 b4)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4481,math,org.apache.commons.math3.util.Decimal64_goal.json,getField(),getField,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4482,math,org.apache.commons.math3.util.Decimal64_goal.json,exp(),exp,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4483,math,org.apache.commons.math3.util.Decimal64_goal.json,doubleValue(),doubleValue,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4484,math,org.apache.commons.math3.util.Decimal64_goal.json,pow(org.apache.commons.math3.util.Decimal64 e),pow,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4485,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(org.apache.commons.math3.util.Decimal64 a1, org.apache.commons.math3.util.Decimal64 b1, org.apache.commons.math3.util.Decimal64 a2, org.apache.commons.math3.util.Decimal64 b2)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4486,math,org.apache.commons.math3.util.Decimal64_goal.json,"linearCombination(double a1, org.apache.commons.math3.util.Decimal64 b1, double a2, org.apache.commons.math3.util.Decimal64 b2)",linearCombination,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4487,math,org.apache.commons.math3.util.Decimal64_goal.json,add(org.apache.commons.math3.util.Decimal64 a),add,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.add(a).equals(new Decimal64(this.doubleValue() + a.doubleValue())).,FreeText,,0
4488,math,org.apache.commons.math3.util.Decimal64_goal.json,add(double a),add,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4489,math,org.apache.commons.math3.util.Decimal64_goal.json,acosh(),acosh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4490,math,org.apache.commons.math3.util.Decimal64_goal.json,log(),log,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4491,math,org.apache.commons.math3.util.Decimal64_goal.json,asin(),asin,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4492,math,org.apache.commons.math3.util.Decimal64_goal.json,getReal(),getReal,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4493,math,org.apache.commons.math3.util.Decimal64_goal.json,intValue(),intValue,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation performs casting to a int.,FreeText,,0
4494,math,org.apache.commons.math3.util.Decimal64_goal.json,isInfinite(),isInfinite,org.apache.commons.math3.util.Decimal64,Returns true if this double precision number is infinite (Double#POSITIVE_INFINITY or Double#NEGATIVE_INFINITY).,FreeText,,0
4495,math,org.apache.commons.math3.util.Decimal64_goal.json,acos(),acos,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4496,math,org.apache.commons.math3.util.Decimal64_goal.json,sinh(),sinh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4497,math,org.apache.commons.math3.util.Decimal64_goal.json,isNaN(),isNaN,org.apache.commons.math3.util.Decimal64,"Returns true if this double precision number is Not-a-Number ({@code NaN}), false otherwise.",FreeText,,0
4498,math,org.apache.commons.math3.util.Decimal64_goal.json,tan(),tan,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4499,math,org.apache.commons.math3.util.Decimal64_goal.json,atanh(),atanh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4500,math,org.apache.commons.math3.util.Decimal64_goal.json,cosh(),cosh,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4501,math,org.apache.commons.math3.util.Decimal64_goal.json,expm1(),expm1,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4502,math,org.apache.commons.math3.util.Decimal64_goal.json,negate(),negate,org.apache.commons.math3.util.Decimal64,{@inheritDoc} The current implementation strictly enforces this.negate().equals(new Decimal64(-this.doubleValue())).,FreeText,,0
4503,math,org.apache.commons.math3.util.Decimal64_goal.json,remainder(double a),remainder,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4504,math,org.apache.commons.math3.util.Decimal64_goal.json,remainder(org.apache.commons.math3.util.Decimal64 a),remainder,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4505,math,org.apache.commons.math3.util.Decimal64_goal.json,copySign(org.apache.commons.math3.util.Decimal64 sign),copySign,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4506,math,org.apache.commons.math3.util.Decimal64_goal.json,copySign(double sign),copySign,org.apache.commons.math3.util.Decimal64,,FreeText,,0
4507,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
4508,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
4509,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractListMultimap,"Compares the specified object to this multimap for equality. Two ListMultimap instances are equal if, for each key, they contain the same values in the same order. If the value orderings disagree, the multimaps will not be considered equal.",FreeText,,0
4510,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the Multimap interface.",FreeText,,0
4511,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractListMultimap,"{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has List values.",FreeText,,0
4512,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,"com.google.common.collect.AbstractListMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractListMultimap,com.google.common.collect.AbstractListMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
4513,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractListMultimap,,FreeText,,0
4514,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractListMultimap,,FreeText,,0
4515,sbes-guava,com.google.common.collect.AbstractListMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractListMultimap,Stores a key-value pair in the multimap.,FreeText,,0
4516,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is immutable.,FreeText,,0
4517,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is not serializable.,FreeText,,0
4518,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"setMap(java.util.Map<K, java.util.Collection<V>> map)",setMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4519,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractMapBasedMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values for one key, followed by the values of a second key, and so on. Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the time the entry is returned by a method call to the collection or its iterator.",FreeText,,0
4520,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"wrapCollection(K key, java.util.Collection<V> collection)",wrapCollection,com.google.common.collect.AbstractMapBasedMultimap,"Generates a decorated collection that remains consistent with the values in the multimap for the provided key. Changes to the multimap may alter the returned collection, and vice versa.",FreeText,,0
4521,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMapBasedMultimap,"Returns an iterator across all key-value map entries, used by entries().iterator() and values().iterator(). The default behavior, which traverses the values for one key, the values for a second key, and so on, suffices for most AbstractMapBasedMultimap implementations.",FreeText,,0
4522,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates the collection of values for a single key. Collections with weak, soft, or phantom references are not supported. Each call to createCollection should create a new instance. The returned collection class determines whether duplicate key-value pairs are allowed.",FreeText,,0
4523,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,unmodifiableCollectionSubclass(java.util.Collection<V> collection),unmodifiableCollectionSubclass,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4524,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4525,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4526,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates an unmodifiable, empty collection of values. This is used in #removeAll on an empty key.",FreeText,,0
4527,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,size(),size,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4528,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,values(),values,com.google.common.collect.AbstractMapBasedMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values for one key, followed by the values of a second key, and so on.",FreeText,,0
4529,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractMapBasedMultimap,{@inheritDoc} The returned collection is immutable.,FreeText,,0
4530,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4531,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,clear(),clear,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4532,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"com.google.common.collect.AbstractMapBasedMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractMapBasedMultimap,com.google.common.collect.AbstractMapBasedMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
4533,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4534,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4535,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractMapBasedMultimap,,FreeText,,0
4536,sbes-guava,com.google.common.collect.AbstractMapBasedMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.AbstractMapBasedMultimap,"Creates the collection of values for an explicitly provided key. By default, it simply calls #createCollection(), which is the correct behavior for most implementations. The LinkedHashMultimap class overrides it.",FreeText,,0
4537,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.AbstractMapBasedMultiset,"{@inheritDoc} Invoking Multiset.Entry#getCount on an entry in the returned set always returns the current count of that element in the multiset, as opposed to the count at the time the entry was retrieved.",FreeText,,0
4538,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4539,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.AbstractMapBasedMultiset,{@inheritDoc},FreeText,,0
4540,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4541,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4542,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"setBackingMap(java.util.Map<E, com.google.common.collect.Count> backingMap)",setBackingMap,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4543,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,"com.google.common.collect.AbstractMapBasedMultiset(java.util.Map<E, com.google.common.collect.Count> backingMap)",com.google.common.collect.AbstractMapBasedMultiset,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4544,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4545,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4546,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,clear(),clear,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4547,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,size(),size,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4548,sbes-guava,com.google.common.collect.AbstractMapBasedMultiset_goal.json,iterator(),iterator,com.google.common.collect.AbstractMapBasedMultiset,,FreeText,,0
4549,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMultimap,,FreeText,,0
4550,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,createValues(),createValues,com.google.common.collect.AbstractMultimap,,FreeText,,0
4551,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractMultimap,"Returns the hash code for this multimap. The hash code of a multimap is defined as the hash code of the map view, as returned by Multimap#asMap. @see Map#hashCode",FreeText,,0
4552,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,keySet(),keySet,com.google.common.collect.AbstractMultimap,,FreeText,,0
4553,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractMultimap,,FreeText,,0
4554,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractMultimap,,FreeText,,0
4555,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,keys(),keys,com.google.common.collect.AbstractMultimap,,FreeText,,0
4556,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,values(),values,com.google.common.collect.AbstractMultimap,,FreeText,,0
4557,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,toString(),toString,com.google.common.collect.AbstractMultimap,"Returns a string representation of the multimap, generated by calling toString on the map returned by Multimap#asMap.",FreeText,,0
4558,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.AbstractMultimap,,FreeText,,0
4559,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractMultimap,,FreeText,,0
4560,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.AbstractMultimap,,FreeText,,0
4561,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,createKeys(),createKeys,com.google.common.collect.AbstractMultimap,,FreeText,,0
4562,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.AbstractMultimap,,FreeText,,0
4563,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.AbstractMultimap,,FreeText,,0
4564,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractMultimap,,FreeText,,0
4565,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.AbstractMultimap,,FreeText,,0
4566,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.AbstractMultimap,,FreeText,,0
4567,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractMultimap,,FreeText,,0
4568,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.AbstractMultimap,,FreeText,,0
4569,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.AbstractMultimap,,FreeText,,0
4570,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractMultimap,,FreeText,,0
4571,sbes-guava,com.google.common.collect.AbstractMultimap_goal.json,"containsEntry(java.lang.Object key, java.lang.Object value)",containsEntry,com.google.common.collect.AbstractMultimap,,FreeText,,0
4572,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractMultiset,"{@inheritDoc} This implementation returns true if object is a multiset of the same size and if, for each element, the two multisets have the same count.",FreeText,,0
4573,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,addAll(java.util.Collection<? extends E> elementsToAdd),addAll,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation is highly efficient when elementsToAdd is itself a Multiset.,FreeText,,0
4574,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,add(E element),add,com.google.common.collect.AbstractMultiset,,FreeText,,0
4575,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,remove(java.lang.Object element),remove,com.google.common.collect.AbstractMultiset,,FreeText,,0
4576,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation returns the hash code of Multiset#entrySet().,FreeText,,0
4577,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.AbstractMultiset,,FreeText,,0
4578,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.AbstractMultiset,,FreeText,,0
4579,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.AbstractMultiset,,FreeText,,0
4580,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.AbstractMultiset,,FreeText,,0
4581,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.AbstractMultiset,,FreeText,,0
4582,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,iterator(),iterator,com.google.common.collect.AbstractMultiset,,FreeText,,0
4583,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,clear(),clear,com.google.common.collect.AbstractMultiset,,FreeText,,0
4584,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.AbstractMultiset,"Creates a new instance of this multiset's element set, which will be returned by #elementSet().",FreeText,,0
4585,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractMultiset,,FreeText,,0
4586,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,toString(),toString,com.google.common.collect.AbstractMultiset,{@inheritDoc} This implementation returns the result of invoking toString on Multiset#entrySet().,FreeText,,0
4587,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,size(),size,com.google.common.collect.AbstractMultiset,,FreeText,,0
4588,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.AbstractMultiset,,FreeText,,0
4589,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,removeAll(java.util.Collection<?> elementsToRemove),removeAll,com.google.common.collect.AbstractMultiset,,FreeText,,0
4590,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,retainAll(java.util.Collection<?> elementsToRetain),retainAll,com.google.common.collect.AbstractMultiset,,FreeText,,0
4591,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.AbstractMultiset,,FreeText,,0
4592,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.AbstractMultiset,,FreeText,,0
4593,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,contains(java.lang.Object element),contains,com.google.common.collect.AbstractMultiset,,FreeText,,0
4594,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.AbstractMultiset,,FreeText,,0
4595,sbes-guava,com.google.common.collect.AbstractMultiset_goal.json,createEntrySet(),createEntrySet,com.google.common.collect.AbstractMultiset,,FreeText,,0
4596,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractSetMultimap,,FreeText,,0
4597,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,entries(),entries,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
4598,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractSetMultimap,,FreeText,,0
4599,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
4600,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.AbstractSetMultimap,Stores a key-value pair in the multimap.,FreeText,,0
4601,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface.",FreeText,,0
4602,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.AbstractSetMultimap,"Compares the specified object to this multimap for equality. Two SetMultimap instances are equal if, for each key, they contain the same values. Equality does not depend on the ordering of keys or values.",FreeText,,0
4603,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,"com.google.common.collect.AbstractSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSetMultimap,com.google.common.collect.AbstractSetMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
4604,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Though the method signature doesn't say so explicitly, the returned map has Set values.",FreeText,,0
4605,sbes-guava,com.google.common.collect.AbstractSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractSetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
4606,sbes-guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
4607,sbes-guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,"com.google.common.collect.AbstractSortedKeySortedSetMultimap(java.util.SortedMap<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSortedKeySortedSetMultimap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
4608,sbes-guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
4609,sbes-guava,com.google.common.collect.AbstractSortedKeySortedSetMultimap_goal.json,keySet(),keySet,com.google.common.collect.AbstractSortedKeySortedSetMultimap,,FreeText,,0
4610,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,pollLastEntry(),pollLastEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4611,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,com.google.common.collect.AbstractSortedMultiset(),com.google.common.collect.AbstractSortedMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4612,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,pollFirstEntry(),pollFirstEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4613,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,"subMultiset(E fromElement, com.google.common.collect.BoundType fromBoundType, E toElement, com.google.common.collect.BoundType toBoundType)",subMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4614,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4615,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,com.google.common.collect.AbstractSortedMultiset(java.util.Comparator<? super E> comparator),com.google.common.collect.AbstractSortedMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4616,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,firstEntry(),firstEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4617,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingMultiset(),descendingMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4618,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,createDescendingMultiset(),createDescendingMultiset,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4619,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4620,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,lastEntry(),lastEntry,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4621,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,comparator(),comparator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4622,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingIterator(),descendingIterator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4623,sbes-guava,com.google.common.collect.AbstractSortedMultiset_goal.json,descendingEntryIterator(),descendingEntryIterator,com.google.common.collect.AbstractSortedMultiset,,FreeText,,0
4624,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,"com.google.common.collect.AbstractSortedSetMultimap(java.util.Map<K, java.util.Collection<V>> map)",com.google.common.collect.AbstractSortedSetMultimap,com.google.common.collect.AbstractSortedSetMultimap,Creates a new multimap that uses the provided map.,FreeText,,0
4625,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,get(K key),get,com.google.common.collect.AbstractSortedSetMultimap,"Returns a collection view of all values associated with a key. If no mappings in the multimap have the provided key, an empty collection is returned. Changes to the returned collection will update the underlying multimap, and vice versa. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface.",FreeText,,0
4626,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.AbstractSortedSetMultimap,,FreeText,,0
4627,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.AbstractSortedSetMultimap,"Stores a collection of values with the same key, replacing any existing values for that key. The returned collection is immutable. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
4628,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,createUnmodifiableEmptyCollection(),createUnmodifiableEmptyCollection,com.google.common.collect.AbstractSortedSetMultimap,,FreeText,,0
4629,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.AbstractSortedSetMultimap,"Returns a map view that associates each key with the corresponding values in the multimap. Changes to the returned map, such as element removal, will update the underlying multimap. The map does not support setValue on its entries, put, or putAll. When passed a key that is present in the map, asMap().get(Object) has the same behavior as #get, returning a live collection. When passed a key that is not present, however, asMap().get(Object) returns null instead of an empty collection. Though the method signature doesn't say so explicitly, the returned map has SortedSet values.",FreeText,,0
4630,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.AbstractSortedSetMultimap,"Removes all values associated with a given key. The returned collection is immutable. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the Collection specified in the Multimap interface.",FreeText,,0
4631,sbes-guava,com.google.common.collect.AbstractSortedSetMultimap_goal.json,values(),values,com.google.common.collect.AbstractSortedSetMultimap,"{@inheritDoc} Consequently, the values do not follow their natural ordering or the ordering of the value comparator.",FreeText,,0
4632,sbes-guava,com.google.common.collect.AbstractTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.AbstractTable,,FreeText,,0
4633,sbes-guava,com.google.common.collect.AbstractTable_goal.json,clear(),clear,com.google.common.collect.AbstractTable,,FreeText,,0
4634,sbes-guava,com.google.common.collect.AbstractTable_goal.json,createValues(),createValues,com.google.common.collect.AbstractTable,,FreeText,,0
4635,sbes-guava,com.google.common.collect.AbstractTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.AbstractTable,,FreeText,,0
4636,sbes-guava,com.google.common.collect.AbstractTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.AbstractTable,,FreeText,,0
4637,sbes-guava,com.google.common.collect.AbstractTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.AbstractTable,,FreeText,,0
4638,sbes-guava,com.google.common.collect.AbstractTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.AbstractTable,,FreeText,,0
4639,sbes-guava,com.google.common.collect.AbstractTable_goal.json,createCellSet(),createCellSet,com.google.common.collect.AbstractTable,,FreeText,,0
4640,sbes-guava,com.google.common.collect.AbstractTable_goal.json,valuesIterator(),valuesIterator,com.google.common.collect.AbstractTable,,FreeText,,0
4641,sbes-guava,com.google.common.collect.AbstractTable_goal.json,values(),values,com.google.common.collect.AbstractTable,,FreeText,,0
4642,sbes-guava,com.google.common.collect.AbstractTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.AbstractTable,,FreeText,,0
4643,sbes-guava,com.google.common.collect.AbstractTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.AbstractTable,,FreeText,,0
4644,sbes-guava,com.google.common.collect.AbstractTable_goal.json,isEmpty(),isEmpty,com.google.common.collect.AbstractTable,,FreeText,,0
4645,sbes-guava,com.google.common.collect.AbstractTable_goal.json,cellSet(),cellSet,com.google.common.collect.AbstractTable,,FreeText,,0
4646,sbes-guava,com.google.common.collect.AbstractTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.AbstractTable,,FreeText,,0
4647,sbes-guava,com.google.common.collect.AbstractTable_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.AbstractTable,,FreeText,,0
4648,sbes-guava,com.google.common.collect.AbstractTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.AbstractTable,,FreeText,,0
4649,sbes-guava,com.google.common.collect.AbstractTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.AbstractTable,,FreeText,,0
4650,sbes-guava,com.google.common.collect.AbstractTable_goal.json,toString(),toString,com.google.common.collect.AbstractTable,Returns the string representation rowMap().toString().,FreeText,,0
4651,sbes-guava,com.google.common.collect.AbstractTable_goal.json,hashCode(),hashCode,com.google.common.collect.AbstractTable,,FreeText,,0
4652,sbes-guava,com.google.common.collect.AbstractTable_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.AbstractTable,,FreeText,,0
4653,sbes-guava,com.google.common.collect.ArrayListMultimap_goal.json,create(),create,com.google.common.collect.ArrayListMultimap,"Creates a new, empty ArrayListMultimap with the default initial capacities.",FreeText,,0
4654,sbes-guava,com.google.common.collect.ArrayListMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.ArrayListMultimap,Constructs an ArrayListMultimap with the same mappings as the specified multimap.,FreeText,,0
4655,sbes-guava,com.google.common.collect.ArrayListMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.ArrayListMultimap,"Creates a new, empty ArrayList to hold the collection of values for an arbitrary key.",FreeText,,0
4656,sbes-guava,com.google.common.collect.ArrayListMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.ArrayListMultimap,Constructs an empty ArrayListMultimap with enough capacity to hold the specified numbers of keys and values without resizing.,FreeText,,0
4657,sbes-guava,com.google.common.collect.ArrayListMultimap_goal.json,trimToSize(),trimToSize,com.google.common.collect.ArrayListMultimap,"Reduces the memory used by this ArrayListMultimap, if feasible.",FreeText,,0
4658,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.ConcurrentHashMultiset,"Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed.",FreeText,,0
4659,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"setCount(E element, int expectedOldCount, int newCount)",setCount,com.google.common.collect.ConcurrentHashMultiset,"Sets the number of occurrences of element to newCount, but only if the count is currently expectedOldCount. If element does not appear in the multiset exactly expectedOldCount times, no changes will be made.",FreeText,,0
4660,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,createEntrySet(),createEntrySet,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4661,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,toArray(T[] array),toArray,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4662,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,createElementSet(),createElementSet,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4663,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,clear(),clear,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4664,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.ConcurrentHashMultiset,Returns the number of occurrences of element in this multiset.,FreeText,,0
4665,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new ConcurrentHashMultiset containing the specified elements, using the default initial capacity, load factor, and concurrency settings. This implementation is highly efficient when elements is itself a Multiset.",FreeText,,0
4666,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,size(),size,com.google.common.collect.ConcurrentHashMultiset,"{@inheritDoc} If the data in the multiset is modified by any other threads during this method, it is undefined which (if any) of these modifications will be reflected in the result.",FreeText,,0
4667,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,isEmpty(),isEmpty,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4668,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4669,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,toArray(),toArray,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4670,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"com.google.common.collect.ConcurrentHashMultiset(java.util.concurrent.ConcurrentMap<E, java.util.concurrent.atomic.AtomicInteger> countMap)",com.google.common.collect.ConcurrentHashMultiset,com.google.common.collect.ConcurrentHashMultiset,"Creates an instance using countMap to store elements and their counts. This instance will assume ownership of countMap, and other code should not maintain references to the map or modify it in any way.",FreeText,,0
4671,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.ConcurrentHashMultiset,,FreeText,,0
4672,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(com.google.common.collect.MapMaker mapMaker),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new, empty ConcurrentHashMultiset using mapMaker to construct the internal backing map. If this MapMaker is configured to use entry eviction of any kind, this eviction applies to all occurrences of a given element as a single unit. However, most updates to the multiset do not count as map updates at all, since we're usually just mutating the value stored in the map, so MapMaker#expireAfterAccess makes sense (evict the entry that was queried or updated longest ago), but MapMaker#expireAfterWrite doesn't, because the eviction time is measured from when we saw the first occurrence of the object. The returned multiset is serializable but any serialization caveats given in MapMaker apply. Finally, soft/weak values can be used but are not very useful: the values are created internally and not exposed externally, so no one else will have a strong reference to the values. Weak keys on the other hand can be useful in some scenarios.",FreeText,,0
4673,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.ConcurrentHashMultiset,Adds a number of occurrences of the specified element to this multiset.,FreeText,,0
4674,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,create(),create,com.google.common.collect.ConcurrentHashMultiset,"Creates a new, empty ConcurrentHashMultiset using the default initial capacity, load factor, and concurrency settings.",FreeText,,0
4675,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"removeExactly(java.lang.Object element, int occurrences)",removeExactly,com.google.common.collect.ConcurrentHashMultiset,"Removes exactly the specified number of occurrences of element, or makes no change if this is not possible. This method, in contrast to #remove(Object, int), has no effect when the element count is smaller than occurrences.",FreeText,,0
4676,sbes-guava,com.google.common.collect.ConcurrentHashMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.ConcurrentHashMultiset,Adds or removes occurrences of element such that the #count of the element becomes count.,FreeText,,0
4677,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.HashBasedTable,,FreeText,,0
4678,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.HashBasedTable,,FreeText,,0
4679,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.HashBasedTable,,FreeText,,0
4680,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.HashBasedTable,,FreeText,,0
4681,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"com.google.common.collect.HashBasedTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.collect.HashBasedTable$Factory<C, V> factory)",com.google.common.collect.HashBasedTable,com.google.common.collect.HashBasedTable,,FreeText,,0
4682,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.HashBasedTable,,FreeText,,0
4683,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"create(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",create,com.google.common.collect.HashBasedTable,Creates a HashBasedTable with the same mappings as the specified table.,FreeText,,0
4684,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,create(),create,com.google.common.collect.HashBasedTable,Creates an empty HashBasedTable.,FreeText,,0
4685,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"create(int expectedRows, int expectedCellsPerRow)",create,com.google.common.collect.HashBasedTable,Creates an empty HashBasedTable with the specified map sizes.,FreeText,,0
4686,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.HashBasedTable,,FreeText,,0
4687,sbes-guava,com.google.common.collect.HashBasedTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.HashBasedTable,,FreeText,,0
4688,sbes-guava,com.google.common.collect.HashMultimap_goal.json,create(),create,com.google.common.collect.HashMultimap,"Creates a new, empty HashMultimap with the default initial capacities.",FreeText,,0
4689,sbes-guava,com.google.common.collect.HashMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.HashMultimap,{@inheritDoc} Creates an empty HashSet for a collection of values for one key.,FreeText,,0
4690,sbes-guava,com.google.common.collect.HashMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.HashMultimap,"Constructs a HashMultimap with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap.",FreeText,,0
4691,sbes-guava,com.google.common.collect.HashMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.HashMultimap,Constructs an empty HashMultimap with enough capacity to hold the specified numbers of keys and values without rehashing.,FreeText,,0
4692,sbes-guava,com.google.common.collect.HashMultiset_goal.json,create(int distinctElements),create,com.google.common.collect.HashMultiset,"Creates a new, empty HashMultiset with the specified expected number of distinct elements.",FreeText,,0
4693,sbes-guava,com.google.common.collect.HashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.HashMultiset,Creates a new HashMultiset containing the specified elements. This implementation is highly efficient when elements is itself a Multiset.,FreeText,,0
4694,sbes-guava,com.google.common.collect.HashMultiset_goal.json,create(),create,com.google.common.collect.HashMultiset,"Creates a new, empty HashMultiset using the default initial capacity.",FreeText,,0
4695,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,toArray(T[] other),toArray,com.google.common.collect.ImmutableCollection,,FreeText,,0
4696,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,com.google.common.collect.ImmutableCollection(),com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableCollection,,FreeText,,0
4697,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,removeAll(java.util.Collection<?> oldElements),removeAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4698,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,addAll(java.util.Collection<? extends E> newElements),addAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4699,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,remove(java.lang.Object object),remove,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4700,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,clear(),clear,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4701,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,asList(),asList,com.google.common.collect.ImmutableCollection,"Returns an ImmutableList containing the same elements, in the same order, as this collection. Performance note: in most cases this method can return quickly without actually copying anything. The exact circumstances under which the copy is performed are undefined and subject to change.",FreeText,,0
4702,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,contains(java.lang.Object object),contains,com.google.common.collect.ImmutableCollection,,FreeText,,0
4703,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,add(E e),add,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4704,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,retainAll(java.util.Collection<?> elementsToKeep),retainAll,com.google.common.collect.ImmutableCollection,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4705,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,isPartialView(),isPartialView,com.google.common.collect.ImmutableCollection,Returns true if this immutable collection's implementation contains references to user-created objects that aren't accessible via this collection's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.,FreeText,,0
4706,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,iterator(),iterator,com.google.common.collect.ImmutableCollection,Returns an unmodifiable iterator across the elements in this collection.,FreeText,,0
4707,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,"copyIntoArray(java.lang.Object[] dst, int offset)",copyIntoArray,com.google.common.collect.ImmutableCollection,Copies the contents of this immutable collection into the specified array at the specified offset. Returns offset + size().,FreeText,,0
4708,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,writeReplace(),writeReplace,com.google.common.collect.ImmutableCollection,,FreeText,,0
4709,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,toArray(),toArray,com.google.common.collect.ImmutableCollection,,FreeText,,0
4710,sbes-guava,com.google.common.collect.ImmutableCollection_goal.json,createAsList(),createAsList,com.google.common.collect.ImmutableCollection,,FreeText,,0
4711,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
4712,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,builder(),builder,com.google.common.collect.ImmutableListMultimap,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
4713,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1)",of,com.google.common.collect.ImmutableListMultimap,Returns an immutable multimap containing a single entry.,FreeText,,0
4714,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
4715,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",copyOf,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the same mappings as multimap. The generated multimap's key and value orderings correspond to the iteration ordering of the multimap.asMap() view. Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",FreeText,,0
4716,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ImmutableListMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4717,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"com.google.common.collect.ImmutableListMultimap(com.google.common.collect.ImmutableMap<K, com.google.common.collect.ImmutableList<V>> map, int size)",com.google.common.collect.ImmutableListMultimap,com.google.common.collect.ImmutableListMultimap,,FreeText,,0
4718,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,get(K key),get,com.google.common.collect.ImmutableListMultimap,"Returns an immutable list of the values for the given key. If no mappings in the multimap have the provided key, an empty immutable list is returned. The values are in the same order as the parameters used to build this multimap.",FreeText,,0
4719,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",copyOf,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the specified entries. The returned multimap iterates over keys in the order they were first encountered in the input, and the values for each key are iterated in the order they were encountered.",FreeText,,0
4720,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
4721,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,"of(K k1, V v1, K k2, V v2)",of,com.google.common.collect.ImmutableListMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
4722,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,of(),of,com.google.common.collect.ImmutableListMultimap,,FreeText,,0
4723,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ImmutableListMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4724,sbes-guava,com.google.common.collect.ImmutableListMultimap_goal.json,inverse(),inverse,com.google.common.collect.ImmutableListMultimap,"{@inheritDoc} Because an inverse of a list multimap can contain multiple pairs with the same key and value, this method returns an ImmutableListMultimap rather than the ImmutableMultimap specified in the ImmutableMultimap class.",FreeText,,0
4725,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4726,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,values(),values,com.google.common.collect.ImmutableMultimap,"Returns an immutable collection of the values in this multimap. Its iterator traverses the values for the first key, the values for the second key, and so on.",FreeText,,0
4727,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,createKeys(),createKeys,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4728,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in order.",FreeText,,0
4729,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,inverse(),inverse,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap which is the inverse of this one. For every key-value mapping in the original, the result will have a mapping with key and value reversed.",FreeText,,0
4730,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4731,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,get(K key),get,com.google.common.collect.ImmutableMultimap,"Returns an immutable collection of the values for the given key. If no mappings in the multimap have the provided key, an empty immutable collection is returned. The values are in the same order as the parameters used to build this multimap.",FreeText,,0
4732,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,of(),of,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4733,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"copyOf(java.lang.Iterable<? extends java.util.Map$Entry<? extends K, ? extends V>> entries)",copyOf,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the specified entries. The returned multimap iterates over keys in the order they were first encountered in the input, and the values for each key are iterated in the order they were encountered.",FreeText,,0
4734,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4735,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"copyOf(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",copyOf,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the same mappings as multimap, in the ""key-grouped"" iteration order described in the class documentation. Despite the method name, this method attempts to avoid actually copying the data when it is safe to do so. The exact circumstances under which a copy will or will not be performed are undocumented and subject to change.",FreeText,,0
4736,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4737,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,keys(),keys,com.google.common.collect.ImmutableMultimap,"Returns an immutable multiset containing all the keys in this multimap, in the same order and with the same frequencies as they appear in this multimap; to get only a single occurrence of each key, use #keySet.",FreeText,,0
4738,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,asMap(),asMap,com.google.common.collect.ImmutableMultimap,Returns an immutable map that associates each key with its corresponding values in the multimap. Keys and values appear in the same order as in this multimap.,FreeText,,0
4739,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,createValues(),createValues,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4740,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"com.google.common.collect.ImmutableMultimap(com.google.common.collect.ImmutableMap<K, ? extends com.google.common.collect.ImmutableCollection<V>> map, int size)",com.google.common.collect.ImmutableMultimap,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4741,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,isPartialView(),isPartialView,com.google.common.collect.ImmutableMultimap,Returns true if this immutable multimap's implementation contains references to user-created objects that aren't accessible via this multimap's methods. This is generally used to determine whether copyOf implementations should make an explicit copy to avoid memory leaks.,FreeText,,0
4742,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4743,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,keySet(),keySet,com.google.common.collect.ImmutableMultimap,"Returns an immutable set of the distinct keys in this multimap, in the same order as they appear in this multimap.",FreeText,,0
4744,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4745,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4746,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4747,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4748,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4749,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,size(),size,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4750,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1)",of,com.google.common.collect.ImmutableMultimap,Returns an immutable multimap containing a single entry.,FreeText,,0
4751,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
4752,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.ImmutableMultimap,,FreeText,,0
4753,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,entries(),entries,com.google.common.collect.ImmutableMultimap,Returns an immutable collection of all key-value pairs in the multimap.,FreeText,,0
4754,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,builder(),builder,com.google.common.collect.ImmutableMultimap,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
4755,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,clear(),clear,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4756,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3, K k4, V v4, K k5, V v5)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
4757,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ImmutableMultimap,Guaranteed to throw an exception and leave the multimap unmodified.,FreeText,,0
4758,sbes-guava,com.google.common.collect.ImmutableMultimap_goal.json,"of(K k1, V v1, K k2, V v2, K k3, V v3)",of,com.google.common.collect.ImmutableMultimap,"Returns an immutable multimap containing the given entries, in the ""key-grouped"" insertion order described in the class documentation.",FreeText,,0
4759,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4760,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4761,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,getEntry(int index),getEntry,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4762,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4763,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4, E e5, E e6, E... others)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4764,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,of(),of,com.google.common.collect.ImmutableMultiset,Returns the empty immutable multiset.,FreeText,,0
4765,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,builder(),builder,com.google.common.collect.ImmutableMultiset,Returns a new builder. The generated builder is equivalent to the builder created by the Builder constructor.,FreeText,,0
4766,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4767,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4768,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,of(E element),of,com.google.common.collect.ImmutableMultiset,Returns an immutable multiset containing a single element.,FreeText,,0
4769,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,toString(),toString,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4770,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4771,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,copyFromEntries(java.util.Collection<? extends com.google.common.collect.Multiset$Entry<? extends E>> entries),copyFromEntries,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4772,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"copyIntoArray(java.lang.Object[] dst, int offset)",copyIntoArray,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4773,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,com.google.common.collect.ImmutableMultiset(),com.google.common.collect.ImmutableMultiset,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4774,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in order.",FreeText,,0
4775,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4776,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,iterator(),iterator,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4777,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,writeReplace(),writeReplace,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4778,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,contains(java.lang.Object object),contains,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4779,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(E[] elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4780,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(java.lang.Iterable<? extends E> elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4781,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,copyOf(java.util.Iterator<? extends E> elements),copyOf,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4782,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"of(E e1, E e2, E e3, E e4, E e5)",of,com.google.common.collect.ImmutableMultiset,"Returns an immutable multiset containing the given elements, in the ""grouped iteration order"" described in the class documentation.",FreeText,,0
4783,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.ImmutableMultiset,Guaranteed to throw an exception and leave the collection unmodified.,FreeText,,0
4784,sbes-guava,com.google.common.collect.ImmutableMultiset_goal.json,hashCode(),hashCode,com.google.common.collect.ImmutableMultiset,,FreeText,,0
4785,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.LinkedHashMultimap,{@inheritDoc} Creates an empty LinkedHashSet for a collection of values for one key.,FreeText,,0
4786,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,values(),values,com.google.common.collect.LinkedHashMultimap,"Returns a collection of all values in the multimap. Changes to the returned collection will update the underlying multimap, and vice versa. The iterator generated by the returned collection traverses the values in the order they were added to the multimap.",FreeText,,0
4787,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.LinkedHashMultimap,"{@inheritDoc} If values is not empty and the multimap already contains a mapping for key, the keySet() ordering is unchanged. However, the provided values always come last in the #entries() and #values() iteration orderings.",FreeText,,0
4788,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,valueIterator(),valueIterator,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
4789,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,entries(),entries,com.google.common.collect.LinkedHashMultimap,"Returns a set of all key-value pairs. Changes to the returned set will update the underlying multimap, and vice versa. The entries set does not support the add or addAll operations. The iterator generated by the returned set traverses the entries in the order they were added to the multimap. Each entry is an immutable snapshot of a key-value mapping in the multimap, taken at the time the entry is returned by a method call to the collection or its iterator.",FreeText,,0
4790,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,clear(),clear,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
4791,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,create(),create,com.google.common.collect.LinkedHashMultimap,"Creates a new, empty LinkedHashMultimap with the default initial capacities.",FreeText,,0
4792,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,"create(int expectedKeys, int expectedValuesPerKey)",create,com.google.common.collect.LinkedHashMultimap,Constructs an empty LinkedHashMultimap with enough capacity to hold the specified numbers of keys and values without rehashing.,FreeText,,0
4793,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.LinkedHashMultimap,{@inheritDoc} Creates a decorated insertion-ordered set that also keeps track of the order in which key-value pairs are added to the multimap.,FreeText,,0
4794,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.LinkedHashMultimap,"Constructs a LinkedHashMultimap with the same mappings as the specified multimap. If a key-value mapping appears multiple times in the input multimap, it only appears once in the constructed multimap. The new multimap has the same Multimap#entries() iteration order as the input multimap, except for excluding duplicate mappings.",FreeText,methodResultID.equals(receiverObjectID.entries()),1
4795,sbes-guava,com.google.common.collect.LinkedHashMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.LinkedHashMultimap,,FreeText,,0
4796,sbes-guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(int distinctElements),create,com.google.common.collect.LinkedHashMultiset,"Creates a new, empty LinkedHashMultiset with the specified expected number of distinct elements.",FreeText,,0
4797,sbes-guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.LinkedHashMultiset,Creates a new LinkedHashMultiset containing the specified elements. This implementation is highly efficient when elements is itself a Multiset.,FreeText,,0
4798,sbes-guava,com.google.common.collect.LinkedHashMultiset_goal.json,create(),create,com.google.common.collect.LinkedHashMultiset,"Creates a new, empty LinkedHashMultiset using the default initial capacity.",FreeText,,0
4799,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,entryIterator(),entryIterator,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4800,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,size(),size,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4801,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4802,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.LinkedListMultimap,{@inheritDoc} The returned list is immutable and implements java.util.RandomAccess.,FreeText,,0
4803,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,create(int expectedKeys),create,com.google.common.collect.LinkedListMultimap,Constructs an empty LinkedListMultimap with enough capacity to hold the specified number of keys without rehashing.,FreeText,,0
4804,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,create(),create,com.google.common.collect.LinkedListMultimap,"Creates a new, empty LinkedListMultimap with the default initial capacity.",FreeText,,0
4805,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.LinkedListMultimap,Constructs a LinkedListMultimap with the same mappings as the specified Multimap. The new multimap has the same Multimap#entries() iteration order as the input multimap.,FreeText,methodResultID.equals(receiverObjectID.entries()),1
4806,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} If any entries for the specified key already exist in the multimap, their values are changed in-place without affecting the iteration order. The returned list is immutable and implements java.util.RandomAccess.",FreeText,,0
4807,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,values(),values,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the values in the order they were added to the multimap. Because the values may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the ListMultimap interface.",FreeText,,0
4808,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4809,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4810,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4811,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,createValues(),createValues,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4812,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,createEntries(),createEntries,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4813,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4814,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,clear(),clear,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4815,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,get(K key),get,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} If the multimap is modified while an iteration over the list is in progress (except through the iterator's own add, set or remove operations) the results of the iteration are undefined. The returned list is not serializable and does not have random access.",FreeText,,0
4816,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,"put(K key, V value)",put,com.google.common.collect.LinkedListMultimap,Stores a key-value pair in the multimap.,FreeText,,0
4817,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,com.google.common.collect.LinkedListMultimap(),com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap,,FreeText,,0
4818,sbes-guava,com.google.common.collect.LinkedListMultimap_goal.json,entries(),entries,com.google.common.collect.LinkedListMultimap,"{@inheritDoc} The iterator generated by the returned collection traverses the entries in the order they were added to the multimap. Because the entries may have duplicates and follow the insertion ordering, this method returns a List, instead of the Collection specified in the ListMultimap interface. An entry's Entry#getKey method always returns the same key, regardless of what happens subsequently. As long as the corresponding key-value mapping is not removed from the multimap, Entry#getValue returns the value from the multimap, which may change over time, and Entry#setValue modifies that value. Removing the mapping from the multimap does not alter the value returned by getValue(), though a subsequent setValue() call won't update the multimap but will lead to a revised value being returned by getValue().",FreeText,methodResultID.equals(receiverObjectID.keys()),1
4819,sbes-guava,com.google.common.collect.ListMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4820,sbes-guava,com.google.common.collect.ListMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4821,sbes-guava,com.google.common.collect.ListMultimap_goal.json,asMap(),asMap,com.google.common.collect.ListMultimap,"{@inheritDoc} Note: The returned map's values are guaranteed to be of type List. To obtain this map with the more specific generic type Map<K, List<V>>, call Multimaps#asMap(ListMultimap) instead.",FreeText,,0
4822,sbes-guava,com.google.common.collect.ListMultimap_goal.json,get(K key),get,com.google.common.collect.ListMultimap,"{@inheritDoc} Because the values for a given key may have duplicates and follow the insertion ordering, this method returns a List, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4823,sbes-guava,com.google.common.collect.ListMultimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.ListMultimap,"Compares the specified object to this multimap for equality. Two ListMultimap instances are equal if, for each key, they contain the same values in the same order. If the value orderings disagree, the multimaps will not be considered equal. An empty ListMultimap is equal to any other empty Multimap, including an empty SetMultimap.",FreeText,,0
4824,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayList(),newArrayList,com.google.common.collect.Lists,"Creates a mutable, empty ArrayList instance (for Java 6 and earlier). Note: if mutability is not required, use ImmutableList#of() instead. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the ArrayList ArrayList#ArrayList() constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
4825,sbes-guava,com.google.common.collect.Lists_goal.json,charactersOf(java.lang.CharSequence sequence),charactersOf,com.google.common.collect.Lists,"Returns a view of the specified CharSequence as a List<Character>, viewing sequence as a sequence of Unicode code units. The view does not support any modification operations, but reflects any changes to the underlying character sequence.",FreeText,,0
4826,sbes-guava,com.google.common.collect.Lists_goal.json,"indexOfImpl(java.util.List<?> list, java.lang.Object element)",indexOfImpl,com.google.common.collect.Lists,An implementation of List#indexOf(Object).,FreeText,,0
4827,sbes-guava,com.google.common.collect.Lists_goal.json,newCopyOnWriteArrayList(java.lang.Iterable<? extends E> elements),newCopyOnWriteArrayList,com.google.common.collect.Lists,Creates a CopyOnWriteArrayList instance containing the given elements.,FreeText,,0
4828,sbes-guava,com.google.common.collect.Lists_goal.json,"asList(E first, E second, E[] rest)",asList,com.google.common.collect.Lists,"Returns an unmodifiable list containing the specified first and second element, and backed by the specified array of additional elements. Changes to the rest array will be reflected in the returned list. Unlike Arrays#asList, the returned list is unmodifiable. This is useful when a varargs method needs to use a signature such as (Foo firstFoo, Foo secondFoo, Foo... moreFoos), in order to avoid overload ambiguity or to enforce a minimum argument count. The returned list is serializable and implements RandomAccess.",FreeText,,0
4829,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayList(E... elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements. Note: essentially the only reason to use this method is when you will need to add or remove elements later. Otherwise, for non-null elements use ImmutableList#of() (for varargs) or ImmutableList#copyOf(Object[]) (for an array) instead. If any elements might be null, or you need support for List#set(int, Object), use Arrays#asList. Note that even when you do need the ability to add or remove, this method provides only a tiny bit of syntactic sugar for newArrayList(}Arrays#asList asList{@code (...)), or for creating an empty list then calling Collections#addAll. This method is not actually very useful and will likely be deprecated in the future.",FreeText,,0
4830,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayList(java.lang.Iterable<? extends E> elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toList().) Note for Java 7 and later: if elements is a Collection, you don't need this method. Use the ArrayList ArrayList#ArrayList(Collection) constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
4831,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayList(java.util.Iterator<? extends E> elements),newArrayList,com.google.common.collect.Lists,"Creates a mutable ArrayList instance containing the given elements; a very thin shortcut for creating an empty list and then calling Iterators#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterator) instead.",FreeText,,0
4832,sbes-guava,com.google.common.collect.Lists_goal.json,"addAllImpl(java.util.List<E> list, int index, java.lang.Iterable<? extends E> elements)",addAllImpl,com.google.common.collect.Lists,"An implementation of List#addAll(int, Collection).",FreeText,,0
4833,sbes-guava,com.google.common.collect.Lists_goal.json,computeArrayListCapacity(int arraySize),computeArrayListCapacity,com.google.common.collect.Lists,,FreeText,,0
4834,sbes-guava,com.google.common.collect.Lists_goal.json,newLinkedList(java.lang.Iterable<? extends E> elements),newLinkedList,com.google.common.collect.Lists,"Creates a mutable LinkedList instance containing the given elements; a very thin shortcut for creating an empty list then calling Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableList#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toList().) Performance note: ArrayList and java.util.ArrayDeque consistently outperform LinkedList except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead. Note for Java 7 and later: if elements is a Collection, you don't need this method. Use the LinkedList LinkedList#LinkedList(Collection) constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
4835,sbes-guava,com.google.common.collect.Lists_goal.json,"asList(E first, E[] rest)",asList,com.google.common.collect.Lists,"Returns an unmodifiable list containing the specified first element and backed by the specified array of additional elements. Changes to the rest array will be reflected in the returned list. Unlike Arrays#asList, the returned list is unmodifiable. This is useful when a varargs method needs to use a signature such as (Foo firstFoo, Foo... moreFoos), in order to avoid overload ambiguity or to enforce a minimum argument count. The returned list is serializable and implements RandomAccess.",FreeText,,0
4836,sbes-guava,com.google.common.collect.Lists_goal.json,charactersOf(java.lang.String string),charactersOf,com.google.common.collect.Lists,Returns a view of the specified string as an immutable list of Character values.,FreeText,,0
4837,sbes-guava,com.google.common.collect.Lists_goal.json,"lastIndexOfImpl(java.util.List<?> list, java.lang.Object element)",lastIndexOfImpl,com.google.common.collect.Lists,An implementation of List#lastIndexOf(Object).,FreeText,,0
4838,sbes-guava,com.google.common.collect.Lists_goal.json,newCopyOnWriteArrayList(),newCopyOnWriteArrayList,com.google.common.collect.Lists,"Creates an empty CopyOnWriteArrayList instance. Note: if you need an immutable empty List, use Collections#emptyList instead.",FreeText,,0
4839,sbes-guava,com.google.common.collect.Lists_goal.json,reverse(java.util.List<T> list),reverse,com.google.common.collect.Lists,"Returns a reversed view of the specified list. For example, Lists.reverse(Arrays.asList(1, 2, 3)) returns a list containing 3, 2, 1. The returned list is backed by this list, so changes in the returned list are reflected in this list, and vice-versa. The returned list supports all of the optional list operations supported by this list. The returned list is random-access if the specified list is random access.",FreeText,,0
4840,sbes-guava,com.google.common.collect.Lists_goal.json,newLinkedList(),newLinkedList,com.google.common.collect.Lists,"Creates a mutable, empty LinkedList instance (for Java 6 and earlier). Note: if you won't be adding any elements to the list, use ImmutableList#of() instead. Performance note: ArrayList and java.util.ArrayDeque consistently outperform LinkedList except in certain rare and specific situations. Unless you have spent a lot of time benchmarking your specific needs, use one of those instead. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the LinkedList LinkedList#LinkedList() constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
4841,sbes-guava,com.google.common.collect.Lists_goal.json,hashCodeImpl(java.util.List<?> list),hashCodeImpl,com.google.common.collect.Lists,An implementation of List#hashCode().,FreeText,,0
4842,sbes-guava,com.google.common.collect.Lists_goal.json,cast(java.lang.Iterable<T> iterable),cast,com.google.common.collect.Lists,Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557,FreeText,,0
4843,sbes-guava,com.google.common.collect.Lists_goal.json,"subListImpl(java.util.List<E> list, int fromIndex, int toIndex)",subListImpl,com.google.common.collect.Lists,"An implementation of List#subList(int, int).",FreeText,,0
4844,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayListWithExpectedSize(int estimatedSize),newArrayListWithExpectedSize,com.google.common.collect.Lists,"Creates an ArrayList instance to hold estimatedSize elements, plus an unspecified amount of padding; you almost certainly mean to call #newArrayListWithCapacity (see that method for further advice on usage). Note: This method will soon be deprecated. Even in the rare case that you do want some amount of padding, it's best if you choose your desired amount explicitly.",FreeText,,0
4845,sbes-guava,com.google.common.collect.Lists_goal.json,"partition(java.util.List<T> list, int size)",partition,com.google.common.collect.Lists,"Returns consecutive List#subList(int, int) sublists of a list, each of the same size (the final list may be smaller). For example, partitioning a list containing [a, b, c, d, e] with a partition size of 3 yields [[a, b, c], [d, e]] -- an outer list containing two inner lists of three and two elements, all in the original order. The outer list is unmodifiable, but reflects the latest state of the source list. The inner lists are sublist views of the original list, produced on demand using List#subList(int, int), and are subject to all the usual caveats about modification as explained in that API.",FreeText,,0
4846,sbes-guava,com.google.common.collect.Lists_goal.json,"listIteratorImpl(java.util.List<E> list, int index)",listIteratorImpl,com.google.common.collect.Lists,Returns an implementation of List#listIterator(int).,FreeText,,0
4847,sbes-guava,com.google.common.collect.Lists_goal.json,newArrayListWithCapacity(int initialArraySize),newArrayListWithCapacity,com.google.common.collect.Lists,"Creates an ArrayList instance backed by an array with the specified initial size; simply delegates to ArrayList#ArrayList(int). Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use new }ArrayList#ArrayList(int) ArrayList{@code <>(int) directly, taking advantage of the new ""diamond"" syntax. (Unlike here, there is no risk of overload ambiguity, since the ArrayList constructors very wisely did not accept varargs.)",FreeText,,0
4848,sbes-guava,com.google.common.collect.Lists_goal.json,cartesianProduct(java.util.List<? extends java.util.List<? extends B>> lists),cartesianProduct,com.google.common.collect.Lists,"Returns every possible list that can be formed by choosing one element from each of the given lists in order; the ""n-ary Cartesian product"" of the lists. For example:  Lists.cartesianProduct(ImmutableList.of( ImmutableList.of(1, 2), ImmutableList.of(""A"", ""B"", ""C""))) returns a list containing six lists in the following order:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : lists.get(0)) { for (B b1 : lists.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input list is empty, the Cartesian product will also be empty. If no lists at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of lists of size m, n, p is a list of size m x n x p, its actual memory consumption is much smaller. When the cartesian product is constructed, the input lists are merely copied. Only as the resulting list is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
4849,sbes-guava,com.google.common.collect.Lists_goal.json,cartesianProduct(java.util.List<? extends B>... lists),cartesianProduct,com.google.common.collect.Lists,"Returns every possible list that can be formed by choosing one element from each of the given lists in order; the ""n-ary Cartesian product"" of the lists. For example:  Lists.cartesianProduct(ImmutableList.of( ImmutableList.of(1, 2), ImmutableList.of(""A"", ""B"", ""C""))) returns a list containing six lists in the following order:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : lists.get(0)) { for (B b1 : lists.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input list is empty, the Cartesian product will also be empty. If no lists at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of lists of size m, n, p is a list of size m x n x p, its actual memory consumption is much smaller. When the cartesian product is constructed, the input lists are merely copied. Only as the resulting list is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
4850,sbes-guava,com.google.common.collect.Lists_goal.json,"equalsImpl(java.util.List<?> thisList, java.lang.Object other)",equalsImpl,com.google.common.collect.Lists,An implementation of List#equals(Object).,FreeText,,0
4851,sbes-guava,com.google.common.collect.Lists_goal.json,"transform(java.util.List<F> fromList, com.google.common.base.Function<? super F, ? extends T> function)",transform,com.google.common.collect.Lists,"Returns a list that applies function to each element of fromList. The returned list is a transformed view of fromList; changes to fromList will be reflected in the returned list and vice versa. Since functions are not reversible, the transform is one-way and new items cannot be stored in the returned list. The add, addAll and set methods are unsupported in the returned list. The function is applied lazily, invoked when needed. This is necessary for the returned list to be a view, but it means that the function will be applied many times for bulk operations like List#contains and List#hashCode. For this to perform well, function should be fast. To avoid lazy evaluation when the returned list doesn't need to be a view, copy the returned list into a new list of your choosing. If fromList implements RandomAccess, so will the returned list. The returned list is threadsafe if the supplied list and function are. If only a Collection or Iterable input is available, use Collections2#transform or Iterables#transform. Note: serializing the returned list is implemented by serializing fromList, its contents, and function -- not by serializing the transformed values. This can lead to surprising behavior, so serializing the returned list is not recommended. Instead, copy the list using ImmutableList#copyOf(Collection) (for example), then serialize the copy. Other methods similar to this do not implement serialization at all for this reason.",FreeText,,0
4852,sbes-guava,com.google.common.collect.Maps_goal.json,keyFunction(),keyFunction,com.google.common.collect.Maps,,FreeText,,0
4853,sbes-guava,com.google.common.collect.Maps_goal.json,"valueOrNull(java.util.Map$Entry<?, V> entry)",valueOrNull,com.google.common.collect.Maps,,FreeText,,0
4854,sbes-guava,com.google.common.collect.Maps_goal.json,"containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>> c, java.lang.Object o)",containsEntryImpl,com.google.common.collect.Maps,"Implements Collection.contains safely for forwarding collections of map entries. If o is an instance of Map.Entry, it is wrapped using #unmodifiableEntry to protect against a possible nefarious equals method. Note that c is the backing (delegate) collection, rather than the forwarding collection.",FreeText,,0
4855,sbes-guava,com.google.common.collect.Maps_goal.json,"asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, V1, V2> transformer, K key)",asValueToValueFunction,com.google.common.collect.Maps,,FreeText,,0
4856,sbes-guava,com.google.common.collect.Maps_goal.json,"uniqueIndex(java.lang.Iterable<V> values, com.google.common.base.Function<? super V, K> keyFunction)",uniqueIndex,com.google.common.collect.Maps,"Returns a map with the given values, indexed by keys derived from those values. In other words, each input value produces an entry in the map whose key is the result of applying keyFunction to that value. These entries appear in the same order as the input values. Example usage:  Color red = new Color(""red"", 255, 0, 0); ... ImmutableSet<Color> allColors = ImmutableSet.of(red, green, blue); Map<String, Color> colorForName = uniqueIndex(allColors, toStringFunction()); assertThat(colorForName).containsEntry(""red"", red); If your index may associate multiple values with each key, use Multimaps#index(Iterable, Function) Multimaps.index.",FreeText,,0
4857,sbes-guava,com.google.common.collect.Maps_goal.json,"uniqueIndex(java.util.Iterator<V> values, com.google.common.base.Function<? super V, K> keyFunction)",uniqueIndex,com.google.common.collect.Maps,"Returns a map with the given values, indexed by keys derived from those values. In other words, each input value produces an entry in the map whose key is the result of applying keyFunction to that value. These entries appear in the same order as the input values. Example usage:  Color red = new Color(""red"", 255, 0, 0); ... Iterator<Color> allColors = ImmutableSet.of(red, green, blue).iterator(); Map<String, Color> colorForName = uniqueIndex(allColors, toStringFunction()); assertThat(colorForName).containsEntry(""red"", red); If your index may associate multiple values with each key, use Multimaps#index(Iterator, Function) Multimaps.index.",FreeText,,0
4858,sbes-guava,com.google.common.collect.Maps_goal.json,"keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",keyIterator,com.google.common.collect.Maps,,FreeText,,0
4859,sbes-guava,com.google.common.collect.Maps_goal.json,valueFunction(),valueFunction,com.google.common.collect.Maps,,FreeText,,0
4860,sbes-guava,com.google.common.collect.Maps_goal.json,"immutableEnumMap(java.util.Map<K, ? extends V> map)",immutableEnumMap,com.google.common.collect.Maps,"Returns an immutable map instance containing the given entries. Internally, the returned map will be backed by an EnumMap. The iteration order of the returned map follows the enum's iteration order, not the order in which the elements appear in the given map.",FreeText,,0
4861,sbes-guava,com.google.common.collect.Maps_goal.json,"asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",asEntryToValueFunction,com.google.common.collect.Maps,Views an entry transformer as a function from Entry to values.,FreeText,,0
4862,sbes-guava,com.google.common.collect.Maps_goal.json,"asConverter(com.google.common.collect.BiMap<A, B> bimap)",asConverter,com.google.common.collect.Maps,"Returns a Converter that converts values using BiMap#get bimap.get(), and whose inverse view converts values using BiMap#inverse bimap.inverse().get(). To use a plain Map as a Function, see com.google.common.base.Functions#forMap(Map) or com.google.common.base.Functions#forMap(Map, Object).",FreeText,,0
4863,sbes-guava,com.google.common.collect.Maps_goal.json,"difference(java.util.Map<? extends K, ? extends V> left, java.util.Map<? extends K, ? extends V> right)",difference,com.google.common.collect.Maps,"Computes the difference between two maps. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Since this method uses HashMap instances internally, the keys of the supplied maps must be well-behaved with respect to Object#equals and Object#hashCode. Note:If you only need to know whether two maps have the same mappings, call left.equals(right) instead of this method.",FreeText,,0
4864,sbes-guava,com.google.common.collect.Maps_goal.json,"difference(java.util.SortedMap<K, ? extends V> left, java.util.Map<? extends K, ? extends V> right)",difference,com.google.common.collect.Maps,"Computes the difference between two sorted maps, using the comparator of the left map, or Ordering.natural() if the left map uses the natural ordering of its elements. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Since this method uses TreeMap instances internally, the keys of the right map must all compare as distinct according to the comparator of the left map. Note:If you only need to know whether two sorted maps have the same mappings, call left.equals(right) instead of this method.",FreeText,,0
4865,sbes-guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.Set<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a live Map view whose keys are the contents of set and whose values are computed on demand using function. To get an immutable copy instead, use #toMap(Iterable, Function). Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
4866,sbes-guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.SortedSet<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a view of the sorted set as a map, mapping keys from the set according to the specified function. Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
4867,sbes-guava,com.google.common.collect.Maps_goal.json,"asMap(java.util.NavigableSet<K> set, com.google.common.base.Function<? super K, V> function)",asMap,com.google.common.collect.Maps,"Returns a view of the navigable set as a map, mapping keys from the set according to the specified function. Specifically, for each k in the backing set, the returned map has an entry mapping k to function.apply(k). The keySet, values, and entrySet views of the returned map iterate in the same order as the backing set. Modifications to the backing set are read through to the returned map. The returned map supports removal operations if the backing set does. Removal operations write through to the backing set. The returned map does not support put operations. Warning: If the function rejects null, caution is required to make sure the set does not contain null, because the view cannot stop null from being added to the set. Warning: This method assumes that for any instance k of key type K, k.equals(k2) implies that k2 is also of type K. Using a key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the resulting map view.",FreeText,,0
4868,sbes-guava,com.google.common.collect.Maps_goal.json,newTreeMap(java.util.Comparator<C> comparator),newTreeMap,com.google.common.collect.Maps,"Creates a mutable, empty TreeMap instance using the given comparator. Note: if mutability is not required, use ImmutableSortedMap.orderedBy(comparator).build() instead.",FreeText,,0
4869,sbes-guava,com.google.common.collect.Maps_goal.json,"newEnumMap(java.util.Map<K, ? extends V> map)",newEnumMap,com.google.common.collect.Maps,Creates an EnumMap with the same mappings as the specified map.,FreeText,,0
4870,sbes-guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntryIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",unmodifiableEntryIterator,com.google.common.collect.Maps,,FreeText,,0
4871,sbes-guava,com.google.common.collect.Maps_goal.json,"synchronizedBiMap(com.google.common.collect.BiMap<K, V> bimap)",synchronizedBiMap,com.google.common.collect.Maps,"Returns a synchronized (thread-safe) bimap backed by the specified bimap. In order to guarantee serial access, it is critical that all access to the backing bimap is accomplished through the returned bimap. It is imperative that the user manually synchronize on the returned map when accessing any of its collection views:  BiMap<Long, String> map = Maps.synchronizedBiMap( HashBiMap.<Long, String>create()); ... Set<Long> set = map.keySet(); // Needn't be in synchronized block ... synchronized (map) { // Synchronizing on map, not set! Iterator<Long> it = set.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned bimap will be serializable if the specified bimap is serializable.",FreeText,,0
4872,sbes-guava,com.google.common.collect.Maps_goal.json,"safeGet(java.util.Map<?, V> map, java.lang.Object key)",safeGet,com.google.common.collect.Maps,Delegates to Map#get. Returns null on ClassCastException and NullPointerException.,FreeText,,0
4873,sbes-guava,com.google.common.collect.Maps_goal.json,"toStringImpl(java.util.Map<?, ?> map)",toStringImpl,com.google.common.collect.Maps,An implementation of Map#toString.,FreeText,,0
4874,sbes-guava,com.google.common.collect.Maps_goal.json,newTreeMap(),newTreeMap,com.google.common.collect.Maps,"Creates a mutable, empty TreeMap instance using the natural ordering of its elements. Note: if mutability is not required, use ImmutableSortedMap#of() instead.",FreeText,,0
4875,sbes-guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>> entrySet)",unmodifiableEntrySet,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified set of entries. The Entry#setValue operation throws an UnsupportedOperationException, as do any operations that would modify the returned set.",FreeText,,0
4876,sbes-guava,com.google.common.collect.Maps_goal.json,"transformEntry(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer, java.util.Map$Entry<K, V1> entry)",transformEntry,com.google.common.collect.Maps,Returns a view of an entry transformed by the specified transformer.,FreeText,,0
4877,sbes-guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
4878,sbes-guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
4879,sbes-guava,com.google.common.collect.Maps_goal.json,"filterEntries(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered that satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key/value pair that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings that satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: entryPredicate must be consistent with equals, as documented at Predicate#apply.",FreeText,,0
4880,sbes-guava,com.google.common.collect.Maps_goal.json,"filterEntries(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterEntries,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered that satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a key/value pair that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have an Entry#setValue method that throws an IllegalArgumentException when the existing key and the provided value don't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every key/value mapping in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
4881,sbes-guava,com.google.common.collect.Maps_goal.json,keyPredicateOnEntries(com.google.common.base.Predicate<? super K> keyPredicate),keyPredicateOnEntries,com.google.common.collect.Maps,,FreeText,,0
4882,sbes-guava,com.google.common.collect.Maps_goal.json,"unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V> bimap)",unmodifiableBiMap,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified bimap. This method allows modules to provide users with ""read-only"" access to internal bimaps. Query operations on the returned bimap ""read through"" to the specified bimap, and attempts to modify the returned map, whether direct or via its collection views, result in an UnsupportedOperationException. The returned bimap will be serializable if the specified bimap is serializable.",FreeText,,0
4883,sbes-guava,com.google.common.collect.Maps_goal.json,indexMap(java.util.Collection<E> list),indexMap,com.google.common.collect.Maps,Returns a map from the ith element of list to i.,FreeText,,0
4884,sbes-guava,com.google.common.collect.Maps_goal.json,newLinkedHashMap(),newLinkedHashMap,com.google.common.collect.Maps,"Creates a mutable, empty, insertion-ordered LinkedHashMap instance. Note: if mutability is not required, use ImmutableMap#of() instead.",FreeText,,0
4885,sbes-guava,com.google.common.collect.Maps_goal.json,fromProperties(java.util.Properties properties),fromProperties,com.google.common.collect.Maps,"Creates an ImmutableMap<String, String> from a Properties instance. Properties normally derive from Map<Object, Object>, but they typically contain strings, which is awkward. This method lets you get a plain-old-Map out of a Properties.",FreeText,,0
4886,sbes-guava,com.google.common.collect.Maps_goal.json,newLinkedHashMapWithExpectedSize(int expectedSize),newLinkedHashMapWithExpectedSize,com.google.common.collect.Maps,"Creates a LinkedHashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned map.",FreeText,,0
4887,sbes-guava,com.google.common.collect.Maps_goal.json,"difference(java.util.Map<? extends K, ? extends V> left, java.util.Map<? extends K, ? extends V> right, com.google.common.base.Equivalence<? super V> valueEquivalence)",difference,com.google.common.collect.Maps,"Computes the difference between two maps. This difference is an immutable snapshot of the state of the maps at the time this method is called. It will never change, even if the maps change at a later time. Values are compared using a provided equivalence, in the case of equality, the value on the 'left' is returned in the difference. Since this method uses HashMap instances internally, the keys of the supplied maps must be well-behaved with respect to Object#equals and Object#hashCode.",FreeText,,0
4888,sbes-guava,com.google.common.collect.Maps_goal.json,"newTreeMap(java.util.SortedMap<K, ? extends V> map)",newTreeMap,com.google.common.collect.Maps,"Creates a mutable TreeMap instance with the same mappings as the specified map and using the same ordering as the specified map. Note: if mutability is not required, use ImmutableSortedMap#copyOfSorted(SortedMap) instead.",FreeText,,0
4889,sbes-guava,com.google.common.collect.Maps_goal.json,"equalsImpl(java.util.Map<?, ?> map, java.lang.Object object)",equalsImpl,com.google.common.collect.Maps,An implementation of Map#equals.,FreeText,,0
4890,sbes-guava,com.google.common.collect.Maps_goal.json,valuePredicateOnEntries(com.google.common.base.Predicate<? super V> valuePredicate),valuePredicateOnEntries,com.google.common.collect.Maps,,FreeText,,0
4891,sbes-guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.Map<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a map whose values are derived from the original map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  Map<String, Boolean> options = ImmutableMap.of(""verbose"", true, ""sort"", false); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : ""no"" + key;  }; Map<String, String> transformed = Maps.transformEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {verbose=verbose, sort=nosort}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
4892,sbes-guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.SortedMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a sorted map whose values are derived from the original sorted map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  Map<String, Boolean> options = ImmutableSortedMap.of(""verbose"", true, ""sort"", false); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : ""yes"" + key;  }; SortedMap<String, String> transformed = Maps.transformEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {sort=yessort, verbose=verbose}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
4893,sbes-guava,com.google.common.collect.Maps_goal.json,"transformEntries(java.util.NavigableMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntries,com.google.common.collect.Maps,"Returns a view of a navigable map whose values are derived from the original navigable map's entries. In contrast to #transformValues, this method's entry-transformation logic may depend on the key as well as the value. All other properties of the transformed map, such as iteration order, are left intact. For example, the code:  NavigableMap<String, Boolean> options = Maps.newTreeMap(); options.put(""verbose"", false); options.put(""sort"", true); EntryTransformer<String, Boolean, String> flagPrefixer = new EntryTransformer<String, Boolean, String>() { public String transformEntry(String key, Boolean value) { return value ? key : (""yes"" + key);  }; NavigableMap<String, String> transformed = LabsMaps.transformNavigableEntries(options, flagPrefixer); System.out.println(transformed);} ... prints {sort=yessort, verbose=verbose}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys and null values provided that the transformer is capable of accepting null inputs. The transformed map might contain null values if the transformer sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The transformer is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the transformer will be applied many times for bulk operations like Map#containsValue and Object#toString. For this to perform well, transformer should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing. Warning: This method assumes that for any instance k of EntryTransformer key type K, k.equals(k2) implies that k2 is also of type K. Using an EntryTransformer key type for which this may not hold, such as ArrayList, may risk a ClassCastException when calling methods on the transformed map.",FreeText,,0
4894,sbes-guava,com.google.common.collect.Maps_goal.json,"unmodifiableEntry(java.util.Map$Entry<? extends K, ? extends V> entry)",unmodifiableEntry,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified map entry. The Entry#setValue operation throws an UnsupportedOperationException. This also has the side-effect of redefining equals to comply with the Entry contract, to avoid a possible nefarious implementation of equals.",FreeText,,0
4895,sbes-guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4896,sbes-guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4897,sbes-guava,com.google.common.collect.Maps_goal.json,"filterValues(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a navigable map containing the mappings in unfiltered whose values satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a value that doesn't satisfy the predicate, the map's put(), putAll(), and Entry#setValue methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose values satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: valuePredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4898,sbes-guava,com.google.common.collect.Maps_goal.json,"filterValues(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super V> valuePredicate)",filterValues,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered whose values satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a value that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. Similarly, the map's entries have a Entry#setValue method that throws an IllegalArgumentException when the provided value doesn't satisfy the predicate. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every value in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
4899,sbes-guava,com.google.common.collect.Maps_goal.json,"unmodifiableNavigableMap(java.util.NavigableMap<K, V> map)",unmodifiableNavigableMap,com.google.common.collect.Maps,"Returns an unmodifiable view of the specified navigable map. Query operations on the returned map read through to the specified map, and attempts to modify the returned map, whether direct or via its views, result in an UnsupportedOperationException. The returned navigable map will be serializable if the specified navigable map is serializable.",FreeText,,0
4900,sbes-guava,com.google.common.collect.Maps_goal.json,"safeRemove(java.util.Map<?, V> map, java.lang.Object key)",safeRemove,com.google.common.collect.Maps,Delegates to Map#remove. Returns null on ClassCastException and NullPointerException.,FreeText,,0
4901,sbes-guava,com.google.common.collect.Maps_goal.json,newHashMap(),newHashMap,com.google.common.collect.Maps,"Creates a mutable, empty HashMap instance. Note: if mutability is not required, use ImmutableMap#of() instead. Note: if K is an enum type, use #newEnumMap instead.",FreeText,,0
4902,sbes-guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.Map<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4903,sbes-guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a sorted map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4904,sbes-guava,com.google.common.collect.Maps_goal.json,"filterKeys(java.util.NavigableMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a navigable map containing the mappings in unfiltered whose keys satisfy a predicate. The returned map is a live view of unfiltered; changes to one affect the other. The resulting map's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the map and its views. When given a key that doesn't satisfy the predicate, the map's put() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered map or its views, only mappings whose keys satisfy the filter will be removed from the underlying map. The returned map isn't threadsafe or serializable, even if unfiltered is. Many of the filtered map's methods, such as size(), iterate across every key/value mapping in the underlying map and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered map and use the copy. Warning: keyPredicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals.",FreeText,,0
4905,sbes-guava,com.google.common.collect.Maps_goal.json,"filterKeys(com.google.common.collect.BiMap<K, V> unfiltered, com.google.common.base.Predicate<? super K> keyPredicate)",filterKeys,com.google.common.collect.Maps,"Returns a bimap containing the mappings in unfiltered whose keys satisfy a predicate. The returned bimap is a live view of unfiltered; changes to one affect the other. The resulting bimap's keySet(), entrySet(), and values() views have iterators that don't support remove(), but all other methods are supported by the bimap and its views. When given a key that doesn't satisfy the predicate, the bimap's put(), forcePut() and putAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered bimap or its views, only mappings that satisfy the filter will be removed from the underlying bimap. The returned bimap isn't threadsafe or serializable, even if unfiltered is. Many of the filtered bimap's methods, such as size(), iterate across every key in the underlying bimap and determine which satisfy the filter. When a live view is not needed, it may be faster to copy the filtered bimap and use the copy. Warning: entryPredicate must be consistent with equals , as documented at Predicate#apply.",FreeText,,0
4906,sbes-guava,com.google.common.collect.Maps_goal.json,"newHashMap(java.util.Map<? extends K, ? extends V> map)",newHashMap,com.google.common.collect.Maps,"Creates a mutable HashMap instance with the same mappings as the specified map. Note: if mutability is not required, use ImmutableMap#copyOf(Map) instead. Note: if K is an Enum type, use #newEnumMap instead.",FreeText,,0
4907,sbes-guava,com.google.common.collect.Maps_goal.json,"removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>> c, java.lang.Object o)",removeEntryImpl,com.google.common.collect.Maps,"Implements Collection.remove safely for forwarding collections of map entries. If o is an instance of Map.Entry, it is wrapped using #unmodifiableEntry to protect against a possible nefarious equals method. Note that c is backing (delegate) collection, rather than the forwarding collection.",FreeText,,0
4908,sbes-guava,com.google.common.collect.Maps_goal.json,"valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>> entryIterator)",valueIterator,com.google.common.collect.Maps,,FreeText,,0
4909,sbes-guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.Map<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  Map<String, Integer> map = ImmutableMap.of(""a"", 4, ""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; Map<String, Double> transformed = Maps.transformValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
4910,sbes-guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.SortedMap<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a sorted map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  SortedMap<String, Integer> map = ImmutableSortedMap.of(""a"", 4, ""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; SortedMap<String, Double> transformed = Maps.transformValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
4911,sbes-guava,com.google.common.collect.Maps_goal.json,"transformValues(java.util.NavigableMap<K, V1> fromMap, com.google.common.base.Function<? super V1, V2> function)",transformValues,com.google.common.collect.Maps,"Returns a view of a navigable map where each value is transformed by a function. All other properties of the map, such as iteration order, are left intact. For example, the code:  NavigableMap<String, Integer> map = Maps.newTreeMap(); map.put(""a"", 4); map.put(""b"", 9); Function<Integer, Double> sqrt = new Function<Integer, Double>() { public Double apply(Integer in) { return Math.sqrt((int) in);  }; NavigableMap<String, Double> transformed = Maps.transformNavigableValues(map, sqrt); System.out.println(transformed);} ... prints {a=2.0, b=3.0}. Changes in the underlying map are reflected in this view. Conversely, this view supports removal operations, and these are reflected in the underlying map. It's acceptable for the underlying map to contain null keys, and even null values provided that the function is capable of accepting null input. The transformed map might contain null values, if the function sometimes gives a null result. The returned map is not thread-safe or serializable, even if the underlying map is. The function is applied lazily, invoked when needed. This is necessary for the returned map to be a view, but it means that the function will be applied many times for bulk operations like Map#containsValue and Map.toString(). For this to perform well, function should be fast. To avoid lazy evaluation when the returned map doesn't need to be a view, copy the returned map into a new map of your choosing.",FreeText,,0
4912,sbes-guava,com.google.common.collect.Maps_goal.json,capacity(int expectedSize),capacity,com.google.common.collect.Maps,Returns a capacity that is sufficient to keep the map from being resized as long as it grows no larger than expectedSize and the load factor is >= its default (0.75).,FreeText,,0
4913,sbes-guava,com.google.common.collect.Maps_goal.json,"asMapSortedIgnoreNavigable(java.util.SortedSet<K> set, com.google.common.base.Function<? super K, V> function)",asMapSortedIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
4914,sbes-guava,com.google.common.collect.Maps_goal.json,newEnumMap(java.lang.Class<K> type),newEnumMap,com.google.common.collect.Maps,Creates an EnumMap instance.,FreeText,,0
4915,sbes-guava,com.google.common.collect.Maps_goal.json,"toMap(java.lang.Iterable<K> keys, com.google.common.base.Function<? super K, V> valueFunction)",toMap,com.google.common.collect.Maps,"Returns an immutable map whose keys are the distinct elements of keys and whose value for each key was computed by valueFunction. The map's iteration order is the order of the first appearance of each key in keys. When there are multiple instances of a key in keys, it is unspecified whether valueFunction will be applied to more than one instance of that key and, if it is, which result will be mapped to that key in the returned map. If keys is a Set, a live view can be obtained instead of a copy using Maps#asMap(Set, Function).",FreeText,,0
4916,sbes-guava,com.google.common.collect.Maps_goal.json,"toMap(java.util.Iterator<K> keys, com.google.common.base.Function<? super K, V> valueFunction)",toMap,com.google.common.collect.Maps,"Returns an immutable map whose keys are the distinct elements of keys and whose value for each key was computed by valueFunction. The map's iteration order is the order of the first appearance of each key in keys. When there are multiple instances of a key in keys, it is unspecified whether valueFunction will be applied to more than one instance of that key and, if it is, which result will be mapped to that key in the returned map.",FreeText,,0
4917,sbes-guava,com.google.common.collect.Maps_goal.json,newConcurrentMap(),newConcurrentMap,com.google.common.collect.Maps,"Returns a general-purpose instance of ConcurrentMap, which supports all optional operations of the ConcurrentMap interface. It does not permit null keys or values. It is serializable. This is currently accomplished by calling MapMaker#makeMap(). It is preferable to use MapMaker directly (rather than through this method), as it presents numerous useful configuration options, such as the concurrency level, load factor, key/value reference types, and value computation.",FreeText,,0
4918,sbes-guava,com.google.common.collect.Maps_goal.json,"keyOrNull(java.util.Map$Entry<K, ?> entry)",keyOrNull,com.google.common.collect.Maps,,FreeText,,0
4919,sbes-guava,com.google.common.collect.Maps_goal.json,"safeContainsKey(java.util.Map<?, ?> map, java.lang.Object key)",safeContainsKey,com.google.common.collect.Maps,Delegates to Map#containsKey. Returns false on ClassCastException and NullPointerException.,FreeText,,0
4920,sbes-guava,com.google.common.collect.Maps_goal.json,"immutableEntry(K key, V value)",immutableEntry,com.google.common.collect.Maps,Returns an immutable map entry with the specified key and value. The Entry#setValue operation throws an UnsupportedOperationException. The returned entry is serializable.,FreeText,,0
4921,sbes-guava,com.google.common.collect.Maps_goal.json,"asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",asEntryToEntryFunction,com.google.common.collect.Maps,Views an entry transformer as a function from entries to entries.,FreeText,,0
4922,sbes-guava,com.google.common.collect.Maps_goal.json,"newLinkedHashMap(java.util.Map<? extends K, ? extends V> map)",newLinkedHashMap,com.google.common.collect.Maps,"Creates a mutable, insertion-ordered LinkedHashMap instance with the same mappings as the specified map. Note: if mutability is not required, use ImmutableMap#copyOf(Map) instead.",FreeText,,0
4923,sbes-guava,com.google.common.collect.Maps_goal.json,"transformEntriesIgnoreNavigable(java.util.SortedMap<K, V1> fromMap, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2> transformer)",transformEntriesIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
4924,sbes-guava,com.google.common.collect.Maps_goal.json,"containsValueImpl(java.util.Map<?, ?> map, java.lang.Object value)",containsValueImpl,com.google.common.collect.Maps,An implementation of Map#containsValue.,FreeText,,0
4925,sbes-guava,com.google.common.collect.Maps_goal.json,"synchronizedNavigableMap(java.util.NavigableMap<K, V> navigableMap)",synchronizedNavigableMap,com.google.common.collect.Maps,"Returns a synchronized (thread-safe) navigable map backed by the specified navigable map. In order to guarantee serial access, it is critical that all access to the backing navigable map is accomplished through the returned navigable map (or its views). It is imperative that the user manually synchronize on the returned navigable map when iterating over any of its collection views, or the collections views of any of its descendingMap, subMap, headMap or tailMap views.  NavigableMap<K, V> map = synchronizedNavigableMap(new TreeMap<K, V>()); // Needn't be in synchronized block NavigableSet<K> set = map.navigableKeySet(); synchronized (map) { // Synchronizing on map, not set! Iterator<K> it = set.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} or:  NavigableMap<K, V> map = synchronizedNavigableMap(new TreeMap<K, V>()); NavigableMap<K, V> map2 = map.subMap(foo, false, bar, true); // Needn't be in synchronized block NavigableSet<K> set2 = map2.descendingKeySet(); synchronized (map) { // Synchronizing on map, not map2 or set2! Iterator<K> it = set2.iterator(); // Must be in synchronized block while (it.hasNext()) { foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned navigable map will be serializable if the specified navigable map is serializable.",FreeText,,0
4926,sbes-guava,com.google.common.collect.Maps_goal.json,orNaturalOrder(java.util.Comparator<? super E> comparator),orNaturalOrder,com.google.common.collect.Maps,Returns the specified comparator if not null; otherwise returns Ordering.natural(). This method is an abomination of generics; the only purpose of this method is to contain the ugly type-casting in one place.,FreeText,,0
4927,sbes-guava,com.google.common.collect.Maps_goal.json,"asEntryTransformer(com.google.common.base.Function<? super V1, V2> function)",asEntryTransformer,com.google.common.collect.Maps,Views a function as an entry transformer that ignores the entry key.,FreeText,,0
4928,sbes-guava,com.google.common.collect.Maps_goal.json,newHashMapWithExpectedSize(int expectedSize),newHashMapWithExpectedSize,com.google.common.collect.Maps,"Creates a HashMap instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned map.",FreeText,,0
4929,sbes-guava,com.google.common.collect.Maps_goal.json,"containsKeyImpl(java.util.Map<?, ?> map, java.lang.Object key)",containsKeyImpl,com.google.common.collect.Maps,An admittedly inefficient implementation of Map#containsKey.,FreeText,,0
4930,sbes-guava,com.google.common.collect.Maps_goal.json,"filterSortedIgnoreNavigable(java.util.SortedMap<K, V> unfiltered, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>> entryPredicate)",filterSortedIgnoreNavigable,com.google.common.collect.Maps,,FreeText,,0
4931,sbes-guava,com.google.common.collect.Maps_goal.json,"asMapEntryIterator(java.util.Set<K> set, com.google.common.base.Function<? super K, V> function)",asMapEntryIterator,com.google.common.collect.Maps,,FreeText,,0
4932,sbes-guava,com.google.common.collect.Maps_goal.json,"putAllImpl(java.util.Map<K, V> self, java.util.Map<? extends K, ? extends V> map)",putAllImpl,com.google.common.collect.Maps,An implementation of Map#putAll.,FreeText,,0
4933,sbes-guava,com.google.common.collect.Maps_goal.json,newIdentityHashMap(),newIdentityHashMap,com.google.common.collect.Maps,Creates an IdentityHashMap instance.,FreeText,,0
4934,sbes-guava,com.google.common.collect.Multimap_goal.json,"put(K key, V value)",put,com.google.common.collect.Multimap,"Stores a key-value pair in this multimap. <p>Some multimap implementations allow duplicate key-value pairs, in which case put always adds a new key-value pair and increases the multimap size by 1. Other implementations prohibit duplicates, and storing a key-value pair that's already in the multimap has no effect.",FreeText,,0
4935,sbes-guava,com.google.common.collect.Multimap_goal.json,"remove(java.lang.Object key, java.lang.Object value)",remove,com.google.common.collect.Multimap,"Removes a single key-value pair with the key key and the value value from this multimap, if such exists. If multiple key-value pairs in the multimap fit this description, which one is removed is unspecified.",FreeText,,0
4936,sbes-guava,com.google.common.collect.Multimap_goal.json,entries(),entries,com.google.common.collect.Multimap,"Returns a view collection of all key-value pairs contained in this multimap, as Map.Entry instances. <p>Changes to the returned collection or the entries it contains will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
4937,sbes-guava,com.google.common.collect.Multimap_goal.json,values(),values,com.google.common.collect.Multimap,"Returns a view collection containing the value from each key-value pair contained in this multimap, without collapsing duplicates (so values().size() == size()). <p>Changes to the returned collection will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
4938,sbes-guava,com.google.common.collect.Multimap_goal.json,isEmpty(),isEmpty,com.google.common.collect.Multimap,"Returns true if this multimap contains no key-value pairs. Equivalent to size() == 0, but can in some cases be more efficient.",FreeText,methodResultID == (receiverObjectID.size() == 0),1
4939,sbes-guava,com.google.common.collect.Multimap_goal.json,size(),size,com.google.common.collect.Multimap,"Returns the number of key-value pairs in this multimap. <p>Note: this method does not return the number of distinct keys in the multimap, which is given by keySet().size() or asMap().size(). See the opening section of the Multimap class documentation for clarification.",FreeText,,0
4940,sbes-guava,com.google.common.collect.Multimap_goal.json,clear(),clear,com.google.common.collect.Multimap,"Removes all key-value pairs from the multimap, leaving it {@linkplain #isEmpty empty}.",FreeText,,0
4941,sbes-guava,com.google.common.collect.Multimap_goal.json,"putAll(K key, java.lang.Iterable<? extends V> values)",putAll,com.google.common.collect.Multimap,"Stores a key-value pair in this multimap for each of values, all using the same key, key. methodResultID==[ for (V value : args[1]) { receiverObjectID.put(args[0], value);} ] to (but expected to be more efficient than): for (V value : values) { put(key, value); } <p>In particular, this is a no-op if values is empty.",FreeText,"methodResultID==[ for (V value : args[1]) { receiverObjectID.put(args[0], value);} ]",1
4942,sbes-guava,com.google.common.collect.Multimap_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the value value.,FreeText,,0
4943,sbes-guava,com.google.common.collect.Multimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.Multimap,"Stores a collection of values with the same key, replacing any existing values for that key. <p>If values is empty, this is equivalent to removeAll(key).",FreeText,if(!args[1].iterator().hasNext()) {methodResultID.equals(receiverObjectID.removeAll(args[0]))},1
4944,sbes-guava,com.google.common.collect.Multimap_goal.json,get(K key),get,com.google.common.collect.Multimap,"Returns a view collection of the values associated with key in this multimap, if any. Note that when containsKey(key) is false, this returns an empty collection, not null. <p>Changes to the returned collection will update the underlying multimap, and vice versa.",FreeText,,0
4945,sbes-guava,com.google.common.collect.Multimap_goal.json,hashCode(),hashCode,com.google.common.collect.Multimap,"Returns the hash code for this multimap. <p>The hash code of a multimap is defined as the hash code of the map view, as returned by Multimap#asMap. <p>In general, two multimaps with identical key-value mappings may or may not have the same hash codes, depending on the implementation. For example, two SetMultimap instances with the same key-value mappings will have the same hashCode, but the hashCode of ListMultimap instances depends on the ordering of the values for each key.",FreeText,,0
4946,sbes-guava,com.google.common.collect.Multimap_goal.json,"putAll(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",putAll,com.google.common.collect.Multimap,"Stores all key-value pairs of multimap in this multimap, in the order returned by multimap.entries().",FreeText,,0
4947,sbes-guava,com.google.common.collect.Multimap_goal.json,containsKey(java.lang.Object key),containsKey,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the key key.,FreeText,,0
4948,sbes-guava,com.google.common.collect.Multimap_goal.json,asMap(),asMap,com.google.common.collect.Multimap,"Returns a view of this multimap as a Map from each distinct key to the nonempty collection of that key's associated values. Note that this.asMap().get(k) is equivalent to this.get(k) only when k is a key contained in the multimap; otherwise it returns null as opposed to an empty collection. <p>Changes to the returned map or the collections that serve as its values will update the underlying multimap, and vice versa. The map does not support put or putAll, nor do its entries support setValue.",FreeText,,0
4949,sbes-guava,com.google.common.collect.Multimap_goal.json,keySet(),keySet,com.google.common.collect.Multimap,"Returns a view collection of all distinct keys contained in this multimap. Note that the key set contains a key if and only if this multimap maps that key to at least one value. <p>Changes to the returned set will update the underlying multimap, and vice versa. However, adding to the returned set is not possible.",FreeText,,0
4950,sbes-guava,com.google.common.collect.Multimap_goal.json,keys(),keys,com.google.common.collect.Multimap,"Returns a view collection containing the key from each key-value pair in this multimap, without collapsing duplicates. This collection has the same size as this multimap, and keys().count(k) == get(k).size() for all k. <p>Changes to the returned multiset will update the underlying multimap, and vice versa. However, adding to the returned collection is not possible.",FreeText,,0
4951,sbes-guava,com.google.common.collect.Multimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.Multimap,"Compares the specified object with this multimap for equality. Two multimaps are equal when their map views, as returned by asMap, are also equal. <p>In general, two multimaps with identical key-value mappings may or may not be equal, depending on the implementation. For example, two SetMultimap instances with the same key-value mappings are equal, but equality of two ListMultimap instances depends on the ordering of the values for each key. <p>A non-empty SetMultimap cannot be equal to a non-empty ListMultimap, since their asMap views contain unequal collections as values. However, any two empty multimaps are equal, because they both have empty asMap views.",FreeText,,0
4952,sbes-guava,com.google.common.collect.Multimap_goal.json,"containsEntry(java.lang.Object key, java.lang.Object value)",containsEntry,com.google.common.collect.Multimap,Returns true if this multimap contains at least one key-value pair with the key key and the value value.,FreeText,,0
4953,sbes-guava,com.google.common.collect.Multimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.Multimap,"Removes all values associated with the key key. <p>Once this method returns, key will not be mapped to any values, so it will not appear in keySet(), asMap(), or any other views.",FreeText,,0
4954,sbes-guava,com.google.common.collect.Multiset_goal.json,add(E element),add,com.google.common.collect.Multiset,"Adds a single occurrence of the specified element to this multiset. <p>This method refines Collection#add, which only ensures the presence of the element, to further specify that a successful call must always increment the count of the element, and the overall size of the collection, by one. <p>To both add the element and obtain the previous count of that element, use int) add(element, 1) instead.",FreeText,,0
4955,sbes-guava,com.google.common.collect.Multiset_goal.json,iterator(),iterator,com.google.common.collect.Multiset,"{@inheritDoc} <p>Elements that occur multiple times in the multiset will appear multiple times in this iterator, though not necessarily sequentially.",FreeText,,0
4956,sbes-guava,com.google.common.collect.Multiset_goal.json,entrySet(),entrySet,com.google.common.collect.Multiset,"Returns a view of the contents of this multiset, grouped into Multiset.Entry instances, each providing an element of the multiset and the count of that element. This set contains exactly one entry for each distinct element in the multiset (thus it always has the same size as the elementSet). The order of the elements in the element set is unspecified. <p>The entry set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. However, multiset changes may or may not be reflected in any Entry instances already retrieved from the entry set (this is implementation-dependent). Furthermore, implementations are not required to support modifications to the entry set at all, and the Entry instances themselves don't even have methods for modification. See the specific implementation class for more details on how its entry set handles modifications.",FreeText,,0
4957,sbes-guava,com.google.common.collect.Multiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.Multiset,Adds or removes the necessary occurrences of an element such that the element attains the desired count.,FreeText,,0
4958,sbes-guava,com.google.common.collect.Multiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.Multiset,"Conditionally sets the count of an element to a new value, as described in int), provided that the element has the expected current count. If the current count is not oldCount, no change is made.",FreeText,,0
4959,sbes-guava,com.google.common.collect.Multiset_goal.json,equals(java.lang.Object object),equals,com.google.common.collect.Multiset,"Compares the specified object with this multiset for equality. Returns true if the given object is also a multiset and contains equal elements with equal counts, regardless of order.",FreeText,,0
4960,sbes-guava,com.google.common.collect.Multiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.Multiset,"Returns the number of occurrences of an element in this multiset (the count of the element). Note that for an Object#equals-based multiset, this gives the same result as Collections#frequency (which would presumably perform more poorly). <p>Note: the utility method Iterables#frequency generalizes this operation; it correctly delegates to this method when dealing with a multiset, but it can also accept any other iterable type.",FreeText,,0
4961,sbes-guava,com.google.common.collect.Multiset_goal.json,contains(java.lang.Object element),contains,com.google.common.collect.Multiset,Determines whether this multiset contains the specified element. <p>This method refines Collection#contains to further specify that it may not throw an exception in response to element being null or of the wrong type.,FreeText,,0
4962,sbes-guava,com.google.common.collect.Multiset_goal.json,retainAll(java.util.Collection<?> c),retainAll,com.google.common.collect.Multiset,"{@inheritDoc} <p>Note: This method ignores how often any element might appear in c, and only cares whether or not an element appears at all. If you wish to remove one occurrence in this multiset for every occurrence in c, see Multiset). <p>This method refines Collection#retainAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type. @see Multisets#retainOccurrences(Multiset, Multiset).",FreeText,,0
4963,sbes-guava,com.google.common.collect.Multiset_goal.json,elementSet(),elementSet,com.google.common.collect.Multiset,"Returns the set of distinct elements contained in this multiset. The element set is backed by the same data as the multiset, so any change to either is immediately reflected in the other. The order of the elements in the element set is unspecified. <p>If the element set supports any removal operations, these necessarily cause all occurrences of the removed element(s) to be removed from the multiset. Implementations are not expected to support the add operations, although this is possible. <p>A common use for the element set is to find the number of distinct elements in the multiset: elementSet().size().",FreeText,,0
4964,sbes-guava,com.google.common.collect.Multiset_goal.json,remove(java.lang.Object element),remove,com.google.common.collect.Multiset,"Removes a single occurrence of the specified element from this multiset, if present. <p>This method refines Collection#remove to further specify that it may not throw an exception in response to element being null or of the wrong type. <p>To both remove the element and obtain the previous count of that element, use int) remove(element, 1) instead.",FreeText,,0
4965,sbes-guava,com.google.common.collect.Multiset_goal.json,toString(),toString,com.google.common.collect.Multiset,"{@inheritDoc} <p>It is recommended, though not mandatory, that this method return the result of invoking toString on the entrySet, yielding a result such as [a x 3, c, d x 2, e].",FreeText,,0
4966,sbes-guava,com.google.common.collect.Multiset_goal.json,removeAll(java.util.Collection<?> c),removeAll,com.google.common.collect.Multiset,"{@inheritDoc} <p>Note: This method ignores how often any element might appear in c, and only cares whether or not an element appears at all. If you wish to remove one occurrence in this multiset for every occurrence in c, see Multiset). <p>This method refines Collection#removeAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type.",FreeText,,0
4967,sbes-guava,com.google.common.collect.Multiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.Multiset,"Adds a number of occurrences of an element to this multiset. Note that if occurrences == 1, this method has the identical effect to add(Object). This method is functionally equivalent (except in the case of overflow) to the call addAll(Collections.nCopies(element, occurrences)), which would presumably perform much more poorly.",FreeText,"if(args[1] == 1) {receiverObjectID.add(args[0]); receiverObjectClone.add(args[0],args[1]); assert(receiverObjectClone.equals(receiverObjectID));} && methodResultID==( receiverObjectID.addAll(java.util.Collections.nCopies( args[1],args[0])) )",1
4968,sbes-guava,com.google.common.collect.Multiset_goal.json,hashCode(),hashCode,com.google.common.collect.Multiset,Returns the hash code for this multiset. This is defined as the sum of ((element == null) ? 0 : element.hashCode()) ^ count(element) <p>over all distinct elements in the multiset. It follows that a multiset and its entry set always have the same hash code.,FreeText,,0
4969,sbes-guava,com.google.common.collect.Multiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.Multiset,"Removes a number of occurrences of the specified element from this multiset. If the multiset contains fewer than this number of occurrences to begin with, all occurrences will be removed. Note that if occurrences == 1, this is functionally equivalent to the call remove(element).",FreeText,"if(args[1] == 1) {receiverObjectID.remove(args[0]); receiverObjectClone.remove(args[0],args[1]); assert(receiverObjectClone.equals(receiverObjectID));}",1
4970,sbes-guava,com.google.common.collect.Multiset_goal.json,containsAll(java.util.Collection<?> elements),containsAll,com.google.common.collect.Multiset,"Returns true if this multiset contains at least one occurrence of each element in the specified collection. <p>This method refines Collection#containsAll to further specify that it may not throw an exception in response to any of elements being null or of the wrong type. <p>Note: this method does not take into account the occurrence count of an element in the two collections; it may still return true even if elements contains several occurrences of an element and this multiset contains only one. This is no different than any other collection type like List, but it may be unexpected to the user of a multiset.",FreeText,,0
4971,sbes-guava,com.google.common.collect.RowSortedTable_goal.json,rowMap(),rowMap,com.google.common.collect.RowSortedTable,"{@inheritDoc} This method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
4972,sbes-guava,com.google.common.collect.RowSortedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.RowSortedTable,"{@inheritDoc} This method returns a SortedSet, instead of the Set specified in the Table interface.",FreeText,,0
4973,sbes-guava,com.google.common.collect.SetMultimap_goal.json,asMap(),asMap,com.google.common.collect.SetMultimap,"{@inheritDoc} Note: The returned map's values are guaranteed to be of type Set. To obtain this map with the more specific generic type Map<K, Set<V>>, call Multimaps#asMap(SetMultimap) instead.",FreeText,,0
4974,sbes-guava,com.google.common.collect.SetMultimap_goal.json,entries(),entries,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4975,sbes-guava,com.google.common.collect.SetMultimap_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.SetMultimap,"Compares the specified object to this multimap for equality. Two SetMultimap instances are equal if, for each key, they contain the same values. Equality does not depend on the ordering of keys or values. An empty SetMultimap is equal to any other empty Multimap, including an empty ListMultimap.",FreeText,,0
4976,sbes-guava,com.google.common.collect.SetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4977,sbes-guava,com.google.common.collect.SetMultimap_goal.json,get(K key),get,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
4978,sbes-guava,com.google.common.collect.SetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.SetMultimap,"{@inheritDoc} Because a SetMultimap has unique values for a given key, this method returns a Set, instead of the java.util.Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
4979,sbes-guava,com.google.common.collect.Sets_goal.json,"union(java.util.Set<? extends E> set1, java.util.Set<? extends E> set2)",union,com.google.common.collect.Sets,"Returns an unmodifiable view of the union of two sets. The returned set contains all elements that are contained in either backing set. Iterating over the returned set iterates first over all the elements of set1, then over each element of set2, in order, that is not contained in set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the Map#keySet of an IdentityHashMap all are). Note: The returned view performs better when set1 is the smaller of the two sets. If you have reason to believe one of your sets will generally be smaller than the other, pass it first. Further, note that the current implementation is not suitable for nested union views, i.e. the following should be avoided when in a loop: union = Sets.union(union, anotherSet);, since iterating over the resulting set has a cubic complexity to the depth of the nesting.",FreeText,,0
4980,sbes-guava,com.google.common.collect.Sets_goal.json,newLinkedHashSet(),newLinkedHashSet,com.google.common.collect.Sets,"Creates a mutable, empty LinkedHashSet instance. Note: if mutability is not required, use ImmutableSet#of() instead.",FreeText,,0
4981,sbes-guava,com.google.common.collect.Sets_goal.json,synchronizedNavigableSet(java.util.NavigableSet<E> navigableSet),synchronizedNavigableSet,com.google.common.collect.Sets,"Returns a synchronized (thread-safe) navigable set backed by the specified navigable set. In order to guarantee serial access, it is critical that all access to the backing navigable set is accomplished through the returned navigable set (or its views). It is imperative that the user manually synchronize on the returned sorted set when iterating over it or any of its descendingSet, subSet, headSet, or tailSet views.  NavigableSet<E> set = synchronizedNavigableSet(new TreeSet<E>()); ... synchronized (set) { // Must be in the synchronized block Iterator<E> it = set.iterator(); while (it.hasNext()) { foo(it.next());  }} or:  NavigableSet<E> set = synchronizedNavigableSet(new TreeSet<E>()); NavigableSet<E> set2 = set.descendingSet().headSet(foo); ... synchronized (set) { // Note: set, not set2!!! // Must be in the synchronized block Iterator<E> it = set2.descendingIterator(); while (it.hasNext()) foo(it.next());  }} Failure to follow this advice may result in non-deterministic behavior. The returned navigable set will be serializable if the specified navigable set is serializable.",FreeText,,0
4982,sbes-guava,com.google.common.collect.Sets_goal.json,"intersection(java.util.Set<E> set1, java.util.Set<?> set2)",intersection,com.google.common.collect.Sets,"Returns an unmodifiable view of the intersection of two sets. The returned set contains all elements that are contained by both backing sets. The iteration order of the returned set matches that of set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are). Note: The returned view performs slightly better when set1 is the smaller of the two sets. If you have reason to believe one of your sets will generally be smaller than the other, pass it first. Unfortunately, since this method sets the generic type of the returned set based on the type of the first set passed, this could in rare cases force you to make a cast, for example:  Set<Object> aFewBadObjects = ... Set<String> manyBadStrings = ... // impossible for a non-String to be in the intersection SuppressWarnings(""unchecked"") Set<String> badStrings = (Set) Sets.intersection( aFewBadObjects, manyBadStrings); This is unfortunate, but should come up only very rarely.",FreeText,,0
4983,sbes-guava,com.google.common.collect.Sets_goal.json,"newSetFromMap(java.util.Map<E, java.lang.Boolean> map)",newSetFromMap,com.google.common.collect.Sets,"Returns a set backed by the specified map. The resulting set displays the same ordering, concurrency, and performance characteristics as the backing map. In essence, this factory method provides a Set implementation corresponding to any Map implementation. There is no need to use this method on a Map implementation that already has a corresponding Set implementation (such as java.util.HashMap or java.util.TreeMap). Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its keySet view, with one exception. The addAll method is implemented as a sequence of put invocations on the backing map. The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment:  Set<Object> identityHashSet = Sets.newSetFromMap( new IdentityHashMap<Object, Boolean>()); The returned set is serializable if the backing map is.",FreeText,,0
4984,sbes-guava,com.google.common.collect.Sets_goal.json,newTreeSet(),newTreeSet,com.google.common.collect.Sets,"Creates a mutable, empty TreeSet instance sorted by the natural sort ordering of its elements. Note: if mutability is not required, use ImmutableSortedSet#of() instead.",FreeText,,0
4985,sbes-guava,com.google.common.collect.Sets_goal.json,newLinkedHashSetWithExpectedSize(int expectedSize),newLinkedHashSetWithExpectedSize,com.google.common.collect.Sets,"Creates a LinkedHashSet instance, with a high enough ""initial capacity"" that it should hold expectedSize elements without growth. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.6. It also can't be guaranteed that the method isn't inadvertently oversizing the returned set.",FreeText,,0
4986,sbes-guava,com.google.common.collect.Sets_goal.json,newHashSet(),newHashSet,com.google.common.collect.Sets,"Creates a mutable, initially empty HashSet instance. Note: if mutability is not required, use ImmutableSet#of() instead. If E is an Enum type, use EnumSet#noneOf instead. Otherwise, strongly consider using a LinkedHashSet instead, at the cost of increased memory footprint, to get deterministic iteration behavior. Note for Java 7 and later: this method is now unnecessary and should be treated as deprecated. Instead, use the HashSet constructor directly, taking advantage of the new ""diamond"" syntax.",FreeText,,0
4987,sbes-guava,com.google.common.collect.Sets_goal.json,newConcurrentHashSet(java.lang.Iterable<? extends E> elements),newConcurrentHashSet,com.google.common.collect.Sets,"Creates a thread-safe set backed by a hash map and containing the given elements. The set is backed by a ConcurrentHashMap instance, and thus carries the same concurrency guarantees. Unlike HashSet, this class does NOT allow null to be used as an element. The set is serializable.",FreeText,,0
4988,sbes-guava,com.google.common.collect.Sets_goal.json,newTreeSet(java.lang.Iterable<? extends E> elements),newTreeSet,com.google.common.collect.Sets,"Creates a mutable TreeSet instance containing the given elements sorted by their natural ordering. Note: if mutability is not required, use ImmutableSortedSet#copyOf(Iterable) instead. Note: If elements is a SortedSet with an explicit comparator, this method has different behavior than TreeSet#TreeSet(SortedSet), which returns a TreeSet with that comparator.",FreeText,,0
4989,sbes-guava,com.google.common.collect.Sets_goal.json,newLinkedHashSet(java.lang.Iterable<? extends E> elements),newLinkedHashSet,com.google.common.collect.Sets,"Creates a mutable LinkedHashSet instance containing the given elements in order. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead.",FreeText,,0
4990,sbes-guava,com.google.common.collect.Sets_goal.json,powerSet(java.util.Set<E> set),powerSet,com.google.common.collect.Sets,"Returns the set of all possible subsets of set. For example, powerSet(ImmutableSet.of(1, 2)) returns the set {{, {1}, {2}, {1, 2}}}. Elements appear in these subsets in the same iteration order as they appeared in the input set. The order in which these subsets appear in the outer set is undefined. Note that the power set of the empty set is not the empty set, but a one-element set containing the empty set. The returned set and its constituent sets use equals to decide whether two elements are identical, even if the input set uses a different concept of equivalence. Performance notes: while the power set of a set with size n is of size 2^n, its memory usage is only O(n). When the power set is constructed, the input set is merely copied. Only as the power set is iterated are the individual subsets created, and these subsets themselves occupy only a small constant amount of memory.",FreeText,,0
4991,sbes-guava,com.google.common.collect.Sets_goal.json,"removeAllImpl(java.util.Set<?> set, java.util.Iterator<?> iterator)",removeAllImpl,com.google.common.collect.Sets,Remove each element in an iterable from a set.,FreeText,,0
4992,sbes-guava,com.google.common.collect.Sets_goal.json,newHashSet(E... elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance initially containing the given elements. Note: if elements are non-null and won't be added or removed after this point, use ImmutableSet#of() or ImmutableSet#copyOf(Object[]) instead. If E is an Enum type, use EnumSet#of(Enum, Enum[]) instead. Otherwise, strongly consider using a LinkedHashSet instead, at the cost of increased memory footprint, to get deterministic iteration behavior. This method is just a small convenience, either for newHashSet(}Arrays#asList asList{@code (...)), or for creating an empty set then calling Collections#addAll. This method is not actually very useful and will likely be deprecated in the future.",FreeText,,0
4993,sbes-guava,com.google.common.collect.Sets_goal.json,newHashSet(java.lang.Iterable<? extends E> elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance containing the given elements. A very thin convenience for creating an empty set then calling Collection#addAll or Iterables#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterable) instead. (Or, change elements to be a FluentIterable and call elements.toSet().) Note: if E is an Enum type, use #newEnumSet(Iterable, Class) instead. Note for Java 7 and later: if elements is a Collection, you don't need this method. Instead, use the HashSet constructor directly, taking advantage of the new ""diamond"" syntax. Overall, this method is not very useful and will likely be deprecated in the future.",FreeText,,0
4994,sbes-guava,com.google.common.collect.Sets_goal.json,newHashSet(java.util.Iterator<? extends E> elements),newHashSet,com.google.common.collect.Sets,"Creates a mutable HashSet instance containing the given elements. A very thin convenience for creating an empty set and then calling Iterators#addAll. Note: if mutability is not required and the elements are non-null, use ImmutableSet#copyOf(Iterator) instead. Note: if E is an Enum type, you should create an EnumSet instead. Overall, this method is not very useful and will likely be deprecated in the future.",FreeText,,0
4995,sbes-guava,com.google.common.collect.Sets_goal.json,"filter(java.util.Set<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of unfiltered that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
4996,sbes-guava,com.google.common.collect.Sets_goal.json,"filter(java.util.SortedSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of a SortedSet, unfiltered, that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
4997,sbes-guava,com.google.common.collect.Sets_goal.json,"filterSortedIgnoreNavigable(java.util.SortedSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filterSortedIgnoreNavigable,com.google.common.collect.Sets,,FreeText,,0
4998,sbes-guava,com.google.common.collect.Sets_goal.json,"filter(java.util.NavigableSet<E> unfiltered, com.google.common.base.Predicate<? super E> predicate)",filter,com.google.common.collect.Sets,"Returns the elements of a NavigableSet, unfiltered, that satisfy a predicate. The returned set is a live view of unfiltered; changes to one affect the other. The resulting set's iterator does not support remove(), but all other set methods are supported. When given an element that doesn't satisfy the predicate, the set's add() and addAll() methods throw an IllegalArgumentException. When methods such as removeAll() and clear() are called on the filtered set, only elements that satisfy the filter will be removed from the underlying set. The returned set isn't threadsafe or serializable, even if unfiltered is. Many of the filtered set's methods, such as size(), iterate across every element in the underlying set and determine which elements satisfy the filter. When a live view is not needed, it may be faster to copy Iterables.filter(unfiltered, predicate) and use the copy. Warning: predicate must be consistent with equals, as documented at Predicate#apply. Do not provide a predicate such as Predicates.instanceOf(ArrayList.class), which is inconsistent with equals. (See Iterables#filter(Iterable, Class) for related functionality.)",FreeText,,0
4999,sbes-guava,com.google.common.collect.Sets_goal.json,"immutableEnumSet(E anElement, E... otherElements)",immutableEnumSet,com.google.common.collect.Sets,"Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an EnumSet. The iteration order of the returned set follows the enum's iteration order, not the order in which the elements are provided to the method.",FreeText,,0
5000,sbes-guava,com.google.common.collect.Sets_goal.json,newIdentityHashSet(),newIdentityHashSet,com.google.common.collect.Sets,"Creates an empty Set that uses identity to determine equality. It compares object references, instead of calling equals, to determine whether a provided object matches an element in the set. For example, contains returns false when passed an object that equals a set member, but isn't the same instance. This behavior is similar to the way IdentityHashMap handles key lookups.",FreeText,,0
5001,sbes-guava,com.google.common.collect.Sets_goal.json,immutableEnumSet(java.lang.Iterable<E> elements),immutableEnumSet,com.google.common.collect.Sets,"Returns an immutable set instance containing the given enum elements. Internally, the returned set will be backed by an EnumSet. The iteration order of the returned set follows the enum's iteration order, not the order in which the elements appear in the given collection.",FreeText,,0
5002,sbes-guava,com.google.common.collect.Sets_goal.json,newCopyOnWriteArraySet(),newCopyOnWriteArraySet,com.google.common.collect.Sets,"Creates an empty CopyOnWriteArraySet instance. Note: if you need an immutable empty Set, use Collections#emptySet instead.",FreeText,,0
5003,sbes-guava,com.google.common.collect.Sets_goal.json,newCopyOnWriteArraySet(java.lang.Iterable<? extends E> elements),newCopyOnWriteArraySet,com.google.common.collect.Sets,Creates a CopyOnWriteArraySet instance containing the given elements.,FreeText,,0
5004,sbes-guava,com.google.common.collect.Sets_goal.json,"symmetricDifference(java.util.Set<? extends E> set1, java.util.Set<? extends E> set2)",symmetricDifference,com.google.common.collect.Sets,"Returns an unmodifiable view of the symmetric difference of two sets. The returned set contains all elements that are contained in either set1 or set2 but not in both. The iteration order of the returned set is undefined. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are).",FreeText,,0
5005,sbes-guava,com.google.common.collect.Sets_goal.json,"removeAllImpl(java.util.Set<?> set, java.util.Collection<?> collection)",removeAllImpl,com.google.common.collect.Sets,,FreeText,,0
5006,sbes-guava,com.google.common.collect.Sets_goal.json,complementOf(java.util.Collection<E> collection),complementOf,com.google.common.collect.Sets,"Creates an EnumSet consisting of all enum values that are not in the specified collection. If the collection is an EnumSet, this method has the same behavior as EnumSet#complementOf. Otherwise, the specified collection must contain at least one element, in order to determine the element type. If the collection could be empty, use #complementOf(Collection, Class) instead of this method.",FreeText,if(args[0] instanceof EnumSet) {methodResultID.equals(java.util.EnumSet.complementOf(args[0]))},1
5007,sbes-guava,com.google.common.collect.Sets_goal.json,cartesianProduct(java.util.List<? extends java.util.Set<? extends B>> sets),cartesianProduct,com.google.common.collect.Sets,"Returns every possible list that can be formed by choosing one element from each of the given sets in order; the ""n-ary Cartesian product"" of the sets. For example:  Sets.cartesianProduct(ImmutableList.of( ImmutableSet.of(1, 2), ImmutableSet.of(""A"", ""B"", ""C""))) returns a set containing six lists:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : sets.get(0)) { for (B b1 : sets.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input set is empty, the Cartesian product will also be empty. If no sets at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of sets of size m, n, p is a set of size m x n x p, its actual memory consumption is much smaller. When the cartesian set is constructed, the input sets are merely copied. Only as the resulting set is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
5008,sbes-guava,com.google.common.collect.Sets_goal.json,cartesianProduct(java.util.Set<? extends B>... sets),cartesianProduct,com.google.common.collect.Sets,"Returns every possible list that can be formed by choosing one element from each of the given sets in order; the ""n-ary Cartesian product"" of the sets. For example:  Sets.cartesianProduct( ImmutableSet.of(1, 2), ImmutableSet.of(""A"", ""B"", ""C"")) returns a set containing six lists:  <li>ImmutableList.of(1, ""A"") <li>ImmutableList.of(1, ""B"") <li>ImmutableList.of(1, ""C"") <li>ImmutableList.of(2, ""A"") <li>ImmutableList.of(2, ""B"") <li>ImmutableList.of(2, ""C"")  The result is guaranteed to be in the ""traditional"", lexicographical order for Cartesian products that you would get from nesting for loops:  for (B b0 : sets.get(0)) { for (B b1 : sets.get(1)) { ... ImmutableList<B> tuple = ImmutableList.of(b0, b1, ...); // operate on tuple  }} Note that if any input set is empty, the Cartesian product will also be empty. If no sets at all are provided (an empty list), the resulting Cartesian product has one element, an empty list (counter-intuitive, but mathematically consistent). Performance notes: while the cartesian product of sets of size m, n, p is a set of size m x n x p, its actual memory consumption is much smaller. When the cartesian set is constructed, the input sets are merely copied. Only as the resulting set is iterated are the individual lists created, and these are not retained after iteration.",FreeText,,0
5009,sbes-guava,com.google.common.collect.Sets_goal.json,"difference(java.util.Set<E> set1, java.util.Set<?> set2)",difference,com.google.common.collect.Sets,"Returns an unmodifiable view of the difference of two sets. The returned set contains all elements that are contained by set1 and not contained by set2. set2 may also contain elements not present in set1; these are simply ignored. The iteration order of the returned set matches that of set1. Results are undefined if set1 and set2 are sets based on different equivalence relations (as HashSet, TreeSet, and the keySet of an IdentityHashMap all are).",FreeText,,0
5010,sbes-guava,com.google.common.collect.Sets_goal.json,"equalsImpl(java.util.Set<?> s, java.lang.Object object)",equalsImpl,com.google.common.collect.Sets,An implementation for Set#equals(Object).,FreeText,,0
5011,sbes-guava,com.google.common.collect.Sets_goal.json,newTreeSet(java.util.Comparator<? super E> comparator),newTreeSet,com.google.common.collect.Sets,"Creates a mutable, empty TreeSet instance with the given comparator. Note: if mutability is not required, use ImmutableSortedSet.orderedBy(comparator).build() instead.",FreeText,,0
5012,sbes-guava,com.google.common.collect.Sets_goal.json,"newEnumSet(java.lang.Iterable<E> iterable, java.lang.Class<E> elementType)",newEnumSet,com.google.common.collect.Sets,"Returns a new, mutable EnumSet instance containing the given elements in their natural order. This method behaves identically to EnumSet#copyOf(Collection), but also accepts non-Collection iterables and empty iterables.",FreeText,,0
5013,sbes-guava,com.google.common.collect.Sets_goal.json,newConcurrentHashSet(),newConcurrentHashSet,com.google.common.collect.Sets,"Creates a thread-safe set backed by a hash map. The set is backed by a ConcurrentHashMap instance, and thus carries the same concurrency guarantees. Unlike HashSet, this class does NOT allow null to be used as an element. The set is serializable.",FreeText,,0
5014,sbes-guava,com.google.common.collect.Sets_goal.json,hashCodeImpl(java.util.Set<?> s),hashCodeImpl,com.google.common.collect.Sets,An implementation for Set#hashCode().,FreeText,,0
5015,sbes-guava,com.google.common.collect.Sets_goal.json,newHashSetWithExpectedSize(int expectedSize),newHashSetWithExpectedSize,com.google.common.collect.Sets,"Creates a HashSet instance, with a high enough initial table size that it should hold expectedSize elements without resizing. This behavior cannot be broadly guaranteed, but it is observed to be true for OpenJDK 1.7. It also can't be guaranteed that the method isn't inadvertently oversizing the returned set.",FreeText,,0
5016,sbes-guava,com.google.common.collect.Sets_goal.json,"complementOf(java.util.Collection<E> collection, java.lang.Class<E> type)",complementOf,com.google.common.collect.Sets,"Creates an EnumSet consisting of all enum values that are not in the specified collection. This is equivalent to EnumSet#complementOf, but can act on any input collection, as long as the elements are of enum type.",FreeText,if(args[0] instanceof EnumSet) {methodResultID.equals(java.util.EnumSet.complementOf(args[0]))},1
5017,sbes-guava,com.google.common.collect.Sets_goal.json,unmodifiableNavigableSet(java.util.NavigableSet<E> set),unmodifiableNavigableSet,com.google.common.collect.Sets,"Returns an unmodifiable view of the specified navigable set. This method allows modules to provide users with ""read-only"" access to internal navigable sets. Query operations on the returned set ""read through"" to the specified set, and attempts to modify the returned set, whether direct or via its collection views, result in an UnsupportedOperationException. The returned navigable set will be serializable if the specified navigable set is serializable.",FreeText,,0
5018,sbes-guava,com.google.common.collect.SortedIterable_goal.json,comparator(),comparator,com.google.common.collect.SortedIterable,"Returns the Comparator by which the elements of this iterable are ordered, or Ordering.natural() if the elements are ordered by their natural ordering.",FreeText,,0
5019,sbes-guava,com.google.common.collect.SortedIterable_goal.json,iterator(),iterator,com.google.common.collect.SortedIterable,Returns an iterator over elements of type T. The elements are returned in nondecreasing order according to the associated #comparator.,FreeText,,0
5020,sbes-guava,com.google.common.collect.SortedMultisetBridge_goal.json,elementSet(),elementSet,com.google.common.collect.SortedMultisetBridge,,FreeText,,0
5021,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,"headMultiset(E upperBound, com.google.common.collect.BoundType boundType)",headMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the elements less than upperBound, optionally including upperBound itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range.",FreeText,,0
5022,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,"tailMultiset(E lowerBound, com.google.common.collect.BoundType boundType)",tailMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the elements greater than lowerBound, optionally including lowerBound itself. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range.",FreeText,,0
5023,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,lastEntry(),lastEntry,com.google.common.collect.SortedMultiset,"Returns the entry of the last element in this multiset, or null if this multiset is empty.",FreeText,,0
5024,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,pollFirstEntry(),pollFirstEntry,com.google.common.collect.SortedMultiset,"Returns and removes the entry associated with the lowest element in this multiset, or returns null if this multiset is empty.",FreeText,,0
5025,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,firstEntry(),firstEntry,com.google.common.collect.SortedMultiset,"Returns the entry of the first element in this multiset, or null if this multiset is empty.",FreeText,,0
5026,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,pollLastEntry(),pollLastEntry,com.google.common.collect.SortedMultiset,"Returns and removes the entry associated with the greatest element in this multiset, or returns null if this multiset is empty.",FreeText,,0
5027,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,elementSet(),elementSet,com.google.common.collect.SortedMultiset,Returns a NavigableSet view of the distinct elements in this multiset.,FreeText,,0
5028,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,iterator(),iterator,com.google.common.collect.SortedMultiset,{@inheritDoc} <p>The iterator returns the elements in ascending order according to this multiset's comparator.,FreeText,,0
5029,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,descendingMultiset(),descendingMultiset,com.google.common.collect.SortedMultiset,Returns a descending view of this multiset. Modifications made to either map will be reflected in the other.,FreeText,,0
5030,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,"subMultiset(E lowerBound, com.google.common.collect.BoundType lowerBoundType, E upperBound, com.google.common.collect.BoundType upperBoundType)",subMultiset,com.google.common.collect.SortedMultiset,"Returns a view of this multiset restricted to the range between lowerBound and upperBound. The returned multiset is a view of this multiset, so changes to one will be reflected in the other. The returned multiset supports all operations that this multiset supports. <p>The returned multiset will throw an IllegalArgumentException on attempts to add elements outside its range. <p>This method is equivalent to tailMultiset(lowerBound, lowerBoundType).headMultiset(upperBound, upperBoundType).",FreeText,"methodResultID.equals(receiverObjectID.tailMultiset(args[0],args[1]).headMultiset(args[2],args[3]))",1
5031,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,entrySet(),entrySet,com.google.common.collect.SortedMultiset,{@inheritDoc} <p>The entrySet's iterator returns entries in ascending element order according to the this multiset's comparator.,FreeText,,0
5032,sbes-guava,com.google.common.collect.SortedMultiset_goal.json,comparator(),comparator,com.google.common.collect.SortedMultiset,"Returns the comparator that orders this multiset, or Ordering#natural() if the natural ordering of the elements is used.",FreeText,,0
5033,sbes-guava,com.google.common.collect.SortedSetMultimap_goal.json,asMap(),asMap,com.google.common.collect.SortedSetMultimap,"Returns a map view that associates each key with the corresponding values in the multimap. Changes to the returned map, such as element removal, will update the underlying multimap. The map does not support setValue() on its entries, put, or putAll. When passed a key that is present in the map, asMap().get(Object) has the same behavior as #get, returning a live collection. When passed a key that is not present, however, asMap().get(Object) returns null instead of an empty collection. Note: The returned map's values are guaranteed to be of type SortedSet. To obtain this map with the more specific generic type Map<K, SortedSet<V>>, call Multimaps#asMap(SortedSetMultimap) instead.",FreeText,,0
5034,sbes-guava,com.google.common.collect.SortedSetMultimap_goal.json,valueComparator(),valueComparator,com.google.common.collect.SortedSetMultimap,"Returns the comparator that orders the multimap values, with null indicating that natural ordering is used.",FreeText,,0
5035,sbes-guava,com.google.common.collect.SortedSetMultimap_goal.json,"replaceValues(K key, java.lang.Iterable<? extends V> values)",replaceValues,com.google.common.collect.SortedSetMultimap,"Stores a collection of values with the same key, replacing any existing values for that key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface. Any duplicates in values will be stored in the multimap once.",FreeText,,0
5036,sbes-guava,com.google.common.collect.SortedSetMultimap_goal.json,get(K key),get,com.google.common.collect.SortedSetMultimap,"Returns a collection view of all values associated with a key. If no mappings in the multimap have the provided key, an empty collection is returned. Changes to the returned collection will update the underlying multimap, and vice versa. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
5037,sbes-guava,com.google.common.collect.SortedSetMultimap_goal.json,removeAll(java.lang.Object key),removeAll,com.google.common.collect.SortedSetMultimap,"Removes all values associated with a given key. Because a SortedSetMultimap has unique sorted values for a given key, this method returns a SortedSet, instead of the java.util.Collection specified in the Multimap interface.",FreeText,,0
5038,sbes-guava,com.google.common.collect.StandardRowSortedTable_goal.json,"com.google.common.collect.StandardRowSortedTable(java.util.SortedMap<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",com.google.common.collect.StandardRowSortedTable,com.google.common.collect.StandardRowSortedTable,,FreeText,,0
5039,sbes-guava,com.google.common.collect.StandardRowSortedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.StandardRowSortedTable,"{@inheritDoc} This method returns a SortedSet, instead of the Set specified in the Table interface.",FreeText,,0
5040,sbes-guava,com.google.common.collect.StandardRowSortedTable_goal.json,createRowMap(),createRowMap,com.google.common.collect.StandardRowSortedTable,,FreeText,,0
5041,sbes-guava,com.google.common.collect.StandardRowSortedTable_goal.json,rowMap(),rowMap,com.google.common.collect.StandardRowSortedTable,"{@inheritDoc} This method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
5042,sbes-guava,com.google.common.collect.StandardTable_goal.json,size(),size,com.google.common.collect.StandardTable,,FreeText,,0
5043,sbes-guava,com.google.common.collect.StandardTable_goal.json,clear(),clear,com.google.common.collect.StandardTable,,FreeText,,0
5044,sbes-guava,com.google.common.collect.StandardTable_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.StandardTable,,FreeText,,0
5045,sbes-guava,com.google.common.collect.StandardTable_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.StandardTable,,FreeText,,0
5046,sbes-guava,com.google.common.collect.StandardTable_goal.json,rowMap(),rowMap,com.google.common.collect.StandardTable,,FreeText,,0
5047,sbes-guava,com.google.common.collect.StandardTable_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.StandardTable,,FreeText,,0
5048,sbes-guava,com.google.common.collect.StandardTable_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.StandardTable,,FreeText,,0
5049,sbes-guava,com.google.common.collect.StandardTable_goal.json,cellSet(),cellSet,com.google.common.collect.StandardTable,"{@inheritDoc} The set's iterator traverses the mappings for the first row, the mappings for the second row, and so on. Each cell is an immutable snapshot of a row key / column key / value mapping, taken at the time the cell is returned by a method call to the set or its iterator.",FreeText,,0
5050,sbes-guava,com.google.common.collect.StandardTable_goal.json,values(),values,com.google.common.collect.StandardTable,"{@inheritDoc} The collection's iterator traverses the values for the first row, the values for the second row, and so on.",FreeText,,0
5051,sbes-guava,com.google.common.collect.StandardTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.StandardTable,,FreeText,,0
5052,sbes-guava,com.google.common.collect.StandardTable_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.StandardTable,,FreeText,,0
5053,sbes-guava,com.google.common.collect.StandardTable_goal.json,isEmpty(),isEmpty,com.google.common.collect.StandardTable,,FreeText,,0
5054,sbes-guava,com.google.common.collect.StandardTable_goal.json,createRowMap(),createRowMap,com.google.common.collect.StandardTable,,FreeText,,0
5055,sbes-guava,com.google.common.collect.StandardTable_goal.json,createColumnKeyIterator(),createColumnKeyIterator,com.google.common.collect.StandardTable,Creates an iterator that returns each column value with duplicates omitted.,FreeText,,0
5056,sbes-guava,com.google.common.collect.StandardTable_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.StandardTable,,FreeText,,0
5057,sbes-guava,com.google.common.collect.StandardTable_goal.json,row(R rowKey),row,com.google.common.collect.StandardTable,,FreeText,,0
5058,sbes-guava,com.google.common.collect.StandardTable_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.StandardTable,,FreeText,,0
5059,sbes-guava,com.google.common.collect.StandardTable_goal.json,columnMap(),columnMap,com.google.common.collect.StandardTable,,FreeText,,0
5060,sbes-guava,com.google.common.collect.StandardTable_goal.json,column(C columnKey),column,com.google.common.collect.StandardTable,{@inheritDoc} The returned map's views have iterators that don't support remove().,FreeText,,0
5061,sbes-guava,com.google.common.collect.StandardTable_goal.json,cellIterator(),cellIterator,com.google.common.collect.StandardTable,,FreeText,,0
5062,sbes-guava,com.google.common.collect.StandardTable_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.StandardTable,"{@inheritDoc} The returned set has an iterator that does not support remove(). The set's iterator traverses the columns of the first row, the columns of the second row, etc., skipping any columns that have appeared previously.",FreeText,,0
5063,sbes-guava,com.google.common.collect.StandardTable_goal.json,"com.google.common.collect.StandardTable(java.util.Map<R, java.util.Map<C, V>> backingMap, com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory)",com.google.common.collect.StandardTable,com.google.common.collect.StandardTable,,FreeText,,0
5064,sbes-guava,com.google.common.collect.Table_goal.json,cellSet(),cellSet,com.google.common.collect.Table,"Returns a set of all row key / column key / value triplets. Changes to the returned set will update the underlying table, and vice versa. The cell set does not support the add or addAll methods.",FreeText,,0
5065,sbes-guava,com.google.common.collect.Table_goal.json,columnMap(),columnMap,com.google.common.collect.Table,"Returns a view that associates each column key with the corresponding map from row keys to values. Changes to the returned map will update this table. The returned map does not support put() or putAll(), or setValue() on its entries. In contrast, the maps returned by columnMap().get() have the same behavior as those returned by #column. Those maps may support setValue(), put(), and putAll().",FreeText,,0
5066,sbes-guava,com.google.common.collect.Table_goal.json,"putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V> table)",putAll,com.google.common.collect.Table,Copies all mappings from the specified table to this table. The effect is equivalent to calling #put with each row key / column key / value mapping in table.,FreeText,,0
5067,sbes-guava,com.google.common.collect.Table_goal.json,column(C columnKey),column,com.google.common.collect.Table,"Returns a view of all mappings that have the given column key. For each row key / column key / value mapping in the table with that column key, the returned map associates the row key with the value. If no mappings in the table have the provided column key, an empty map is returned. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
5068,sbes-guava,com.google.common.collect.Table_goal.json,clear(),clear,com.google.common.collect.Table,,FreeText,,0
5069,sbes-guava,com.google.common.collect.Table_goal.json,containsColumn(java.lang.Object columnKey),containsColumn,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified column.,FreeText,,0
5070,sbes-guava,com.google.common.collect.Table_goal.json,"remove(java.lang.Object rowKey, java.lang.Object columnKey)",remove,com.google.common.collect.Table,"Removes the mapping, if any, associated with the given keys.",FreeText,,0
5071,sbes-guava,com.google.common.collect.Table_goal.json,values(),values,com.google.common.collect.Table,"Returns a collection of all values, which may contain duplicates. Changes to the returned collection will update the underlying table, and vice versa.",FreeText,,0
5072,sbes-guava,com.google.common.collect.Table_goal.json,"contains(java.lang.Object rowKey, java.lang.Object columnKey)",contains,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified row and column keys.,FreeText,,0
5073,sbes-guava,com.google.common.collect.Table_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.Table,"Returns a set of row keys that have one or more values in the table. Changes to the set will update the underlying table, and vice versa.",FreeText,,0
5074,sbes-guava,com.google.common.collect.Table_goal.json,"put(R rowKey, C columnKey, V value)",put,com.google.common.collect.Table,"Associates the specified value with the specified keys. If the table already contained a mapping for those keys, the old value is replaced with the specified value.",FreeText,,0
5075,sbes-guava,com.google.common.collect.Table_goal.json,rowMap(),rowMap,com.google.common.collect.Table,"Returns a view that associates each row key with the corresponding map from column keys to values. Changes to the returned map will update this table. The returned map does not support put() or putAll(), or setValue() on its entries. In contrast, the maps returned by rowMap().get() have the same behavior as those returned by #row. Those maps may support setValue(), put(), and putAll().",FreeText,,0
5076,sbes-guava,com.google.common.collect.Table_goal.json,containsValue(java.lang.Object value),containsValue,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified value.,FreeText,,0
5077,sbes-guava,com.google.common.collect.Table_goal.json,"get(java.lang.Object rowKey, java.lang.Object columnKey)",get,com.google.common.collect.Table,"Returns the value corresponding to the given row and column keys, or null if no such mapping exists.",FreeText,,0
5078,sbes-guava,com.google.common.collect.Table_goal.json,columnKeySet(),columnKeySet,com.google.common.collect.Table,"Returns a set of column keys that have one or more values in the table. Changes to the set will update the underlying table, and vice versa.",FreeText,,0
5079,sbes-guava,com.google.common.collect.Table_goal.json,row(R rowKey),row,com.google.common.collect.Table,"Returns a view of all mappings that have the given row key. For each row key / column key / value mapping in the table with that row key, the returned map associates the column key with the value. If no mappings in the table have the provided row key, an empty map is returned. Changes to the returned map will update the underlying table, and vice versa.",FreeText,,0
5080,sbes-guava,com.google.common.collect.Table_goal.json,equals(java.lang.Object obj),equals,com.google.common.collect.Table,"Compares the specified object with this table for equality. Two tables are equal when their cell views, as returned by #cellSet, are equal.",FreeText,,0
5081,sbes-guava,com.google.common.collect.Table_goal.json,hashCode(),hashCode,com.google.common.collect.Table,"Returns the hash code for this table. The hash code of a table is defined as the hash code of its cell view, as returned by #cellSet.",FreeText,,0
5082,sbes-guava,com.google.common.collect.Table_goal.json,containsRow(java.lang.Object rowKey),containsRow,com.google.common.collect.Table,Returns true if the table contains a mapping with the specified row key.,FreeText,,0
5083,sbes-guava,com.google.common.collect.Table_goal.json,isEmpty(),isEmpty,com.google.common.collect.Table,,FreeText,,0
5084,sbes-guava,com.google.common.collect.Table_goal.json,size(),size,com.google.common.collect.Table,Returns the number of row key / column key / value mappings in the table.,FreeText,,0
5085,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,rowKeySet(),rowKeySet,com.google.common.collect.TreeBasedTable,,FreeText,,0
5086,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,columnComparator(),columnComparator,com.google.common.collect.TreeBasedTable,"Returns the comparator that orders the columns. With natural ordering, Ordering#natural() is returned.",FreeText,,0
5087,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,create(),create,com.google.common.collect.TreeBasedTable,"Creates an empty TreeBasedTable that uses the natural orderings of both row and column keys. The method signature specifies R extends Comparable with a raw Comparable, instead of R extends Comparable<? super R>, and the same for C. That's necessary to support classes defined without generics.",FreeText,,0
5088,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,rowComparator(),rowComparator,com.google.common.collect.TreeBasedTable,"Returns the comparator that orders the rows. With natural ordering, Ordering#natural() is returned.",FreeText,,0
5089,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,row(R rowKey),row,com.google.common.collect.TreeBasedTable,"{@inheritDoc} Because a TreeBasedTable has unique sorted values for a given row, this method returns a SortedMap, instead of the Map specified in the Table interface.",FreeText,,0
5090,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,rowMap(),rowMap,com.google.common.collect.TreeBasedTable,,FreeText,,0
5091,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,createColumnKeyIterator(),createColumnKeyIterator,com.google.common.collect.TreeBasedTable,Overridden column iterator to return columns values in globally sorted order.,FreeText,,0
5092,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,"com.google.common.collect.TreeBasedTable(java.util.Comparator<? super R> rowComparator, java.util.Comparator<? super C> columnComparator)",com.google.common.collect.TreeBasedTable,com.google.common.collect.TreeBasedTable,,FreeText,,0
5093,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,"create(java.util.Comparator<? super R> rowComparator, java.util.Comparator<? super C> columnComparator)",create,com.google.common.collect.TreeBasedTable,Creates an empty TreeBasedTable that is ordered by the specified comparators.,FreeText,,0
5094,sbes-guava,com.google.common.collect.TreeBasedTable_goal.json,"create(com.google.common.collect.TreeBasedTable<R, C, ? extends V> table)",create,com.google.common.collect.TreeBasedTable,Creates a TreeBasedTable with the same mappings and sort order as the specified TreeBasedTable.,FreeText,,0
5095,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,create(),create,com.google.common.collect.TreeMultimap,Creates an empty TreeMultimap ordered by the natural ordering of its keys and values.,FreeText,,0
5096,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,unmodifiableCollectionSubclass(java.util.Collection<V> collection),unmodifiableCollectionSubclass,com.google.common.collect.TreeMultimap,,FreeText,,0
5097,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,keyComparator(),keyComparator,com.google.common.collect.TreeMultimap,Returns the comparator that orders the multimap keys.,FreeText,,0
5098,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,"wrapCollection(K key, java.util.Collection<V> collection)",wrapCollection,com.google.common.collect.TreeMultimap,,FreeText,,0
5099,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,asMap(),asMap,com.google.common.collect.TreeMultimap,"{@inheritDoc} Because a TreeMultimap has unique sorted keys, this method returns a NavigableMap, instead of the java.util.Map specified in the Multimap interface.",FreeText,,0
5100,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,createKeySet(),createKeySet,com.google.common.collect.TreeMultimap,,FreeText,,0
5101,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,"create(com.google.common.collect.Multimap<? extends K, ? extends V> multimap)",create,com.google.common.collect.TreeMultimap,"Constructs a TreeMultimap, ordered by the natural ordering of its keys and values, with the same mappings as the specified multimap.",FreeText,,0
5102,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,valueComparator(),valueComparator,com.google.common.collect.TreeMultimap,,FreeText,,0
5103,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,"create(java.util.Comparator<? super K> keyComparator, java.util.Comparator<? super V> valueComparator)",create,com.google.common.collect.TreeMultimap,Creates an empty TreeMultimap instance using explicit comparators. Neither comparator may be null; use Ordering#natural() to specify natural order.,FreeText,,0
5104,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,"com.google.common.collect.TreeMultimap(java.util.Comparator<? super K> keyComparator, java.util.Comparator<? super V> valueComparator)",com.google.common.collect.TreeMultimap,com.google.common.collect.TreeMultimap,,FreeText,,0
5105,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,backingMap(),backingMap,com.google.common.collect.TreeMultimap,,FreeText,,0
5106,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,get(K key),get,com.google.common.collect.TreeMultimap,,FreeText,,0
5107,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,createAsMap(),createAsMap,com.google.common.collect.TreeMultimap,,FreeText,,0
5108,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,createCollection(),createCollection,com.google.common.collect.TreeMultimap,{@inheritDoc} Creates an empty TreeSet for a collection of values for one key.,FreeText,,0
5109,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,createCollection(K key),createCollection,com.google.common.collect.TreeMultimap,,FreeText,,0
5110,sbes-guava,com.google.common.collect.TreeMultimap_goal.json,keySet(),keySet,com.google.common.collect.TreeMultimap,"{@inheritDoc} Because a TreeMultimap has unique sorted keys, this method returns a NavigableSet, instead of the java.util.Set specified in the Multimap interface.",FreeText,,0
5111,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,count(java.lang.Object element),count,com.google.common.collect.TreeMultiset,,FreeText,,0
5112,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,com.google.common.collect.TreeMultiset(java.util.Comparator<? super E> comparator),com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
5113,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"setCount(E element, int oldCount, int newCount)",setCount,com.google.common.collect.TreeMultiset,,FreeText,,0
5114,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,size(),size,com.google.common.collect.TreeMultiset,,FreeText,,0
5115,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"remove(java.lang.Object element, int occurrences)",remove,com.google.common.collect.TreeMultiset,,FreeText,,0
5116,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"tailMultiset(E lowerBound, com.google.common.collect.BoundType boundType)",tailMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
5117,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,distinctElements(),distinctElements,com.google.common.collect.TreeMultiset,,FreeText,,0
5118,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"headMultiset(E upperBound, com.google.common.collect.BoundType boundType)",headMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
5119,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"setCount(E element, int count)",setCount,com.google.common.collect.TreeMultiset,,FreeText,,0
5120,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"add(E element, int occurrences)",add,com.google.common.collect.TreeMultiset,,FreeText,,0
5121,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,create(java.util.Comparator<? super E> comparator),create,com.google.common.collect.TreeMultiset,"Creates a new, empty multiset, sorted according to the specified comparator. All elements inserted into the multiset must be mutually comparable by the specified comparator: comparator.compare(e1, e2) must not throw a ClassCastException for any elements e1 and e2 in the multiset. If the user attempts to add an element to the multiset that violates this constraint, the add(Object) call will throw a ClassCastException.",FreeText,,0
5122,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,entryIterator(),entryIterator,com.google.common.collect.TreeMultiset,,FreeText,,0
5123,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,create(java.lang.Iterable<? extends E> elements),create,com.google.common.collect.TreeMultiset,"Creates an empty multiset containing the given initial elements, sorted according to the elements' natural order. This implementation is highly efficient when elements is itself a Multiset. The type specification is <E extends Comparable>, instead of the more specific <E extends Comparable<? super E>>, to support classes defined without generics.",FreeText,,0
5124,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,descendingEntryIterator(),descendingEntryIterator,com.google.common.collect.TreeMultiset,,FreeText,,0
5125,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,"com.google.common.collect.TreeMultiset(com.google.common.collect.TreeMultiset$Reference<com.google.common.collect.TreeMultiset$AvlNode<E>> rootReference, com.google.common.collect.GeneralRange<E> range, com.google.common.collect.TreeMultiset$AvlNode<E> endLink)",com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset,,FreeText,,0
5126,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,create(),create,com.google.common.collect.TreeMultiset,"Creates a new, empty multiset, sorted according to the elements' natural order. All elements inserted into the multiset must implement the Comparable interface. Furthermore, all such elements must be mutually comparable: e1.compareTo(e2) must not throw a ClassCastException for any elements e1 and e2 in the multiset. If the user attempts to add an element to the multiset that violates this constraint (for example, the user attempts to add a string element to a set whose elements are integers), the add(Object) call will throw a ClassCastException. The type specification is <E extends Comparable>, instead of the more specific <E extends Comparable<? super E>>, to support classes defined without generics.",FreeText,,0
5127,sbes-guava,com.google.common.collect.TreeMultiset_goal.json,distinctElements(com.google.common.collect.TreeMultiset$AvlNode<?> node),distinctElements,com.google.common.collect.TreeMultiset,,FreeText,,0
5128,weka,weka.associations.Apriori_goal.json,weka.associations.Apriori(),weka.associations.Apriori,weka.associations.Apriori,Constructor that allows to sets default values for the minimum confidence and the maximum number of rules the minimum confidence.,FreeText,,0
5129,weka,weka.associations.Apriori_goal.json,globalInfo(),globalInfo,weka.associations.Apriori,Returns a string describing this associator,FreeText,,0
5130,weka,weka.associations.Apriori_goal.json,getTechnicalInformation(),getTechnicalInformation,weka.associations.Apriori,"Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, e.g., paper reference or book this class is based on.",FreeText,,0
5131,weka,weka.associations.Apriori_goal.json,resetOptions(),resetOptions,weka.associations.Apriori,Resets the options to the default values.,FreeText,,0
5132,weka,weka.associations.Apriori_goal.json,removeMissingColumns(weka.core.Instances instances),removeMissingColumns,weka.associations.Apriori,Removes columns that are all missing from the data,FreeText,,0
5133,weka,weka.associations.Apriori_goal.json,getCapabilities(),getCapabilities,weka.associations.Apriori,Returns default capabilities of the classifier.,FreeText,,0
5134,weka,weka.associations.Apriori_goal.json,buildAssociations(weka.core.Instances instances),buildAssociations,weka.associations.Apriori,"Method that generates all large itemsets with a minimum support, and from these all association rules with a minimum confidence.",FreeText,,0
5135,weka,weka.associations.Apriori_goal.json,mineCARs(weka.core.Instances data),mineCARs,weka.associations.Apriori,Method that mines all class association rules with minimum support and with a minimum confidence.,FreeText,,0
5136,weka,weka.associations.Apriori_goal.json,getInstancesNoClass(),getInstancesNoClass,weka.associations.Apriori,Gets the instances without the class atrribute.,FreeText,,0
5137,weka,weka.associations.Apriori_goal.json,getInstancesOnlyClass(),getInstancesOnlyClass,weka.associations.Apriori,Gets only the class attribute of the instances.,FreeText,,0
5138,weka,weka.associations.Apriori_goal.json,listOptions(),listOptions,weka.associations.Apriori,Returns an enumeration describing the available options.,FreeText,,0
5139,weka,weka.associations.Apriori_goal.json,setOptions(java.lang.String[] options),setOptions,weka.associations.Apriori,"Parses a given list of options.   -N <required number of rules output> The required number of rules. (default = 10)   -T <0=confidence | 1=lift | 2=leverage | 3=Conviction> The metric type by which to rank rules. (default = confidence)   -C <minimum metric score of a rule> The minimum confidence of a rule. (default = 0.9)   -D <delta for minimum support> The delta by which the minimum support is decreased in each iteration. (default = 0.05)   -U <upper bound for minimum support> Upper bound for minimum support. (default = 1.0)   -M <lower bound for minimum support> The lower bound for the minimum support. (default = 0.1)   -S <significance level> If used, rules are tested for significance at the given level. Slower. (default = no significance testing)   -I If set the itemsets found are also output. (default = no)   -R Remove columns that contain all missing values (default = no)   -V Report progress iteratively. (default = no)   -A If set class association rules are mined. (default = no)   -Z Treat zero (i.e. first value of nominal attributes) as missing   -B <toString delimiters> If used, two characters to use as rule delimiters in the result of toString: the first to delimit fields, the second to delimit items within fields. (default = traditional toString result)   -c <the class index> The class index. (default = last)  <!-- options-end -->",FreeText,,0
5140,weka,weka.associations.Apriori_goal.json,getOptions(),getOptions,weka.associations.Apriori,Gets the current settings of the Apriori object.,FreeText,,0
5141,weka,weka.associations.Apriori_goal.json,toString(),toString,weka.associations.Apriori,Outputs the size of all the generated sets of itemsets and the rules.,FreeText,,0
5142,weka,weka.associations.Apriori_goal.json,metricString(),metricString,weka.associations.Apriori,Returns the metric string for the chosen metric type,FreeText,,0
5143,weka,weka.associations.Apriori_goal.json,removeAllMissingColsTipText(),removeAllMissingColsTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5144,weka,weka.associations.Apriori_goal.json,setRemoveAllMissingCols(boolean r),setRemoveAllMissingCols,weka.associations.Apriori,Remove columns containing all missing values.,FreeText,,0
5145,weka,weka.associations.Apriori_goal.json,getRemoveAllMissingCols(),getRemoveAllMissingCols,weka.associations.Apriori,Returns whether columns containing all missing values are to be removed,FreeText,,0
5146,weka,weka.associations.Apriori_goal.json,upperBoundMinSupportTipText(),upperBoundMinSupportTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5147,weka,weka.associations.Apriori_goal.json,getUpperBoundMinSupport(),getUpperBoundMinSupport,weka.associations.Apriori,Get the value of upperBoundMinSupport.,FreeText,,0
5148,weka,weka.associations.Apriori_goal.json,setUpperBoundMinSupport(double v),setUpperBoundMinSupport,weka.associations.Apriori,Set the value of upperBoundMinSupport.,FreeText,,0
5149,weka,weka.associations.Apriori_goal.json,setClassIndex(int index),setClassIndex,weka.associations.Apriori,Sets the class index,FreeText,,0
5150,weka,weka.associations.Apriori_goal.json,getClassIndex(),getClassIndex,weka.associations.Apriori,Gets the class index,FreeText,,0
5151,weka,weka.associations.Apriori_goal.json,classIndexTipText(),classIndexTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5152,weka,weka.associations.Apriori_goal.json,setCar(boolean flag),setCar,weka.associations.Apriori,Sets class association rule mining,FreeText,,0
5153,weka,weka.associations.Apriori_goal.json,getCar(),getCar,weka.associations.Apriori,Gets whether class association ruels are mined,FreeText,,0
5154,weka,weka.associations.Apriori_goal.json,carTipText(),carTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5155,weka,weka.associations.Apriori_goal.json,lowerBoundMinSupportTipText(),lowerBoundMinSupportTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5156,weka,weka.associations.Apriori_goal.json,getLowerBoundMinSupport(),getLowerBoundMinSupport,weka.associations.Apriori,Get the value of lowerBoundMinSupport.,FreeText,,0
5157,weka,weka.associations.Apriori_goal.json,setLowerBoundMinSupport(double v),setLowerBoundMinSupport,weka.associations.Apriori,Set the value of lowerBoundMinSupport.,FreeText,,0
5158,weka,weka.associations.Apriori_goal.json,getMetricType(),getMetricType,weka.associations.Apriori,Get the metric type,FreeText,,0
5159,weka,weka.associations.Apriori_goal.json,metricTypeTipText(),metricTypeTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5160,weka,weka.associations.Apriori_goal.json,setMetricType(weka.core.SelectedTag d),setMetricType,weka.associations.Apriori,Set the metric type for ranking rules,FreeText,,0
5161,weka,weka.associations.Apriori_goal.json,minMetricTipText(),minMetricTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5162,weka,weka.associations.Apriori_goal.json,getMinMetric(),getMinMetric,weka.associations.Apriori,Get the value of minConfidence.,FreeText,,0
5163,weka,weka.associations.Apriori_goal.json,setMinMetric(double v),setMinMetric,weka.associations.Apriori,Set the value of minConfidence.,FreeText,,0
5164,weka,weka.associations.Apriori_goal.json,numRulesTipText(),numRulesTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5165,weka,weka.associations.Apriori_goal.json,getNumRules(),getNumRules,weka.associations.Apriori,Get the value of numRules.,FreeText,,0
5166,weka,weka.associations.Apriori_goal.json,setNumRules(int v),setNumRules,weka.associations.Apriori,Set the value of numRules.,FreeText,,0
5167,weka,weka.associations.Apriori_goal.json,deltaTipText(),deltaTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5168,weka,weka.associations.Apriori_goal.json,getDelta(),getDelta,weka.associations.Apriori,Get the value of delta.,FreeText,,0
5169,weka,weka.associations.Apriori_goal.json,setDelta(double v),setDelta,weka.associations.Apriori,Set the value of delta.,FreeText,,0
5170,weka,weka.associations.Apriori_goal.json,significanceLevelTipText(),significanceLevelTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5171,weka,weka.associations.Apriori_goal.json,getSignificanceLevel(),getSignificanceLevel,weka.associations.Apriori,Get the value of significanceLevel.,FreeText,,0
5172,weka,weka.associations.Apriori_goal.json,setSignificanceLevel(double v),setSignificanceLevel,weka.associations.Apriori,Set the value of significanceLevel.,FreeText,,0
5173,weka,weka.associations.Apriori_goal.json,setOutputItemSets(boolean flag),setOutputItemSets,weka.associations.Apriori,Sets whether itemsets are output as well,FreeText,,0
5174,weka,weka.associations.Apriori_goal.json,getOutputItemSets(),getOutputItemSets,weka.associations.Apriori,Gets whether itemsets are output as well,FreeText,,0
5175,weka,weka.associations.Apriori_goal.json,outputItemSetsTipText(),outputItemSetsTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5176,weka,weka.associations.Apriori_goal.json,setVerbose(boolean flag),setVerbose,weka.associations.Apriori,Sets verbose mode,FreeText,,0
5177,weka,weka.associations.Apriori_goal.json,getVerbose(),getVerbose,weka.associations.Apriori,Gets whether algorithm is run in verbose mode,FreeText,,0
5178,weka,weka.associations.Apriori_goal.json,verboseTipText(),verboseTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5179,weka,weka.associations.Apriori_goal.json,treatZeroAsMissingTipText(),treatZeroAsMissingTipText,weka.associations.Apriori,Returns the tip text for this property,FreeText,,0
5180,weka,weka.associations.Apriori_goal.json,setTreatZeroAsMissing(boolean z),setTreatZeroAsMissing,weka.associations.Apriori,Sets whether zeros (i.e. the first value of a nominal attribute) should be treated as missing values.,FreeText,,0
5181,weka,weka.associations.Apriori_goal.json,getTreatZeroAsMissing(),getTreatZeroAsMissing,weka.associations.Apriori,Gets whether zeros (i.e. the first value of a nominal attribute) is to be treated int he same way as missing values.,FreeText,,0
5182,weka,weka.associations.Apriori_goal.json,getAllTheRules(),getAllTheRules,weka.associations.Apriori,returns all the rules,FreeText,,0
5183,weka,weka.associations.Apriori_goal.json,getAssociationRules(),getAssociationRules,weka.associations.Apriori,,FreeText,,0
5184,weka,weka.associations.Apriori_goal.json,getRuleMetricNames(),getRuleMetricNames,weka.associations.Apriori,Gets a list of the names of the metrics output for each rule. This list should be the same (in terms of the names and order thereof) as that produced by AssociationRule.getMetricNamesForRule().,FreeText,,0
5185,weka,weka.associations.Apriori_goal.json,canProduceRules(),canProduceRules,weka.associations.Apriori,"Returns true if this AssociationRulesProducer can actually produce rules. Most implementing classes will always return true from this method (obviously :-)). However, an implementing class that actually acts as a wrapper around things that may or may not implement AssociationRulesProducer will want to return false if the thing they wrap can't produce rules.",FreeText,,0
5186,weka,weka.associations.Apriori_goal.json,getRevision(),getRevision,weka.associations.Apriori,Returns the revision string.,FreeText,,0
5187,weka,weka.associations.Apriori_goal.json,main(java.lang.String[] args),main,weka.associations.Apriori,Main method.,FreeText,,0
5188,weka,weka.associations.AssociationRulesProducer_goal.json,getAssociationRules(),getAssociationRules,weka.associations.AssociationRulesProducer,Gets the list of mined association rules.,FreeText,,0
5189,weka,weka.associations.AssociationRulesProducer_goal.json,getRuleMetricNames(),getRuleMetricNames,weka.associations.AssociationRulesProducer,Gets a list of the names of the metrics output for each rule. This list should be the same (in terms of the names and order thereof) as that produced by AssociationRule.getMetricNamesForRule().,FreeText,,0
5190,weka,weka.associations.AssociationRulesProducer_goal.json,canProduceRules(),canProduceRules,weka.associations.AssociationRulesProducer,"Returns true if this AssociationRulesProducer can actually produce rules. Most implementing classes will always return true from this method (obviously :-)). However, an implementing class that actually acts as a wrapper around things that may or may not implement AssociationRulesProducer will want to return false if the thing they wrap can't produce rules.",FreeText,,0
5191,weka,weka.associations.FilteredAssociator_goal.json,weka.associations.FilteredAssociator(),weka.associations.FilteredAssociator,weka.associations.FilteredAssociator,Default constructor.,FreeText,,0
5192,weka,weka.associations.FilteredAssociator_goal.json,globalInfo(),globalInfo,weka.associations.FilteredAssociator,Returns a string describing this Associator,FreeText,,0
5193,weka,weka.associations.FilteredAssociator_goal.json,defaultAssociatorString(),defaultAssociatorString,weka.associations.FilteredAssociator,String describing default associator.,FreeText,,0
5194,weka,weka.associations.FilteredAssociator_goal.json,listOptions(),listOptions,weka.associations.FilteredAssociator,Returns an enumeration describing the available options.,FreeText,,0
5195,weka,weka.associations.FilteredAssociator_goal.json,setOptions(java.lang.String[] options),setOptions,weka.associations.FilteredAssociator,"Parses a given list of options.   -F <filter specification> Full class name of filter to use, followed by filter options. eg: ""weka.filters.unsupervised.attribute.Remove -V -R 1,2"" (default: weka.filters.MultiFilter with weka.filters.unsupervised.attribute.ReplaceMissingValues)   -c <the class index> The class index. (default: -1, i.e. unset)   -W Full name of base associator. (default: weka.associations.Apriori)   Options specific to associator weka.associations.Apriori:   -N <required number of rules output> The required number of rules. (default = 10)   -T <0=confidence | 1=lift | 2=leverage | 3=Conviction> The metric type by which to rank rules. (default = confidence)   -C <minimum metric score of a rule> The minimum confidence of a rule. (default = 0.9)   -D <delta for minimum support> The delta by which the minimum support is decreased in each iteration. (default = 0.05)   -U <upper bound for minimum support> Upper bound for minimum support. (default = 1.0)   -M <lower bound for minimum support> The lower bound for the minimum support. (default = 0.1)   -S <significance level> If used, rules are tested for significance at the given level. Slower. (default = no significance testing)   -I If set the itemsets found are also output. (default = no)   -R Remove columns that contain all missing values (default = no)   -V Report progress iteratively. (default = no)   -A If set class association rules are mined. (default = no)   -c <the class index> The class index. (default = last)  <!-- options-end -->",FreeText,,0
5196,weka,weka.associations.FilteredAssociator_goal.json,getOptions(),getOptions,weka.associations.FilteredAssociator,Gets the current settings of the Associator.,FreeText,,0
5197,weka,weka.associations.FilteredAssociator_goal.json,filterTipText(),filterTipText,weka.associations.FilteredAssociator,Returns the tip text for this property,FreeText,,0
5198,weka,weka.associations.FilteredAssociator_goal.json,setFilter(weka.filters.Filter value),setFilter,weka.associations.FilteredAssociator,Sets the filter,FreeText,,0
5199,weka,weka.associations.FilteredAssociator_goal.json,getFilter(),getFilter,weka.associations.FilteredAssociator,Gets the filter used.,FreeText,,0
5200,weka,weka.associations.FilteredAssociator_goal.json,classIndexTipText(),classIndexTipText,weka.associations.FilteredAssociator,Returns the tip text for this property,FreeText,,0
5201,weka,weka.associations.FilteredAssociator_goal.json,setClassIndex(int value),setClassIndex,weka.associations.FilteredAssociator,Sets the class index,FreeText,,0
5202,weka,weka.associations.FilteredAssociator_goal.json,getClassIndex(),getClassIndex,weka.associations.FilteredAssociator,Gets the class index,FreeText,,0
5203,weka,weka.associations.FilteredAssociator_goal.json,getFilterSpec(),getFilterSpec,weka.associations.FilteredAssociator,"Gets the filter specification string, which contains the class name of the filter and any options to the filter",FreeText,,0
5204,weka,weka.associations.FilteredAssociator_goal.json,getCapabilities(),getCapabilities,weka.associations.FilteredAssociator,Returns default capabilities of the associator.,FreeText,,0
5205,weka,weka.associations.FilteredAssociator_goal.json,buildAssociations(weka.core.Instances data),buildAssociations,weka.associations.FilteredAssociator,Build the associator on the filtered data.,FreeText,,0
5206,weka,weka.associations.FilteredAssociator_goal.json,getAssociationRules(),getAssociationRules,weka.associations.FilteredAssociator,Gets the list of mined association rules.,FreeText,,0
5207,weka,weka.associations.FilteredAssociator_goal.json,getRuleMetricNames(),getRuleMetricNames,weka.associations.FilteredAssociator,Gets a list of the names of the metrics output for each rule. This list should be the same (in terms of the names and order thereof) as that produced by AssociationRule.getMetricNamesForRule().,FreeText,,0
5208,weka,weka.associations.FilteredAssociator_goal.json,canProduceRules(),canProduceRules,weka.associations.FilteredAssociator,"Returns true if this AssociationRulesProducer can actually produce rules. Most implementing classes will always return true from this method (obviously :-)). However, an implementing class that actually acts as a wrapper around things that may or may not implement AssociationRulesProducer will want to return false if the thing they wrap can't produce rules.",FreeText,,0
5209,weka,weka.associations.FilteredAssociator_goal.json,toString(),toString,weka.associations.FilteredAssociator,Output a representation of this associator,FreeText,,0
5210,weka,weka.associations.FilteredAssociator_goal.json,getRevision(),getRevision,weka.associations.FilteredAssociator,Returns the revision string.,FreeText,,0
5211,weka,weka.associations.FilteredAssociator_goal.json,main(java.lang.String[] args),main,weka.associations.FilteredAssociator,Main method for running this class.,FreeText,,0
5212,weka,weka.associations.FPGrowth_goal.json,weka.associations.FPGrowth(),weka.associations.FPGrowth,weka.associations.FPGrowth,Construct a new FPGrowth object.,FreeText,,0
5213,weka,weka.associations.FPGrowth_goal.json,"generateRulesBruteForce(weka.associations.FPGrowth$FrequentItemSets largeItemSets, weka.associations.DefaultAssociationRule$METRIC_TYPE metricToUse, double metricThreshold, int upperBoundMinSuppAsInstances, int lowerBoundMinSuppAsInstances, int totalTransactions)",generateRulesBruteForce,weka.associations.FPGrowth,"Generate all association rules, from the supplied frequet item sets, that meet a given minimum metric threshold. Uses a brute force approach.",FreeText,,0
5214,weka,weka.associations.FPGrowth_goal.json,"pruneRules(java.util.List<weka.associations.AssociationRule> rulesToPrune, java.util.ArrayList<weka.associations.Item> itemsToConsider, boolean useOr)",pruneRules,weka.associations.FPGrowth,,FreeText,,0
5215,weka,weka.associations.FPGrowth_goal.json,getCapabilities(),getCapabilities,weka.associations.FPGrowth,Returns default capabilities of the classifier.,FreeText,,0
5216,weka,weka.associations.FPGrowth_goal.json,globalInfo(),globalInfo,weka.associations.FPGrowth,Returns a string describing this associator,FreeText,,0
5217,weka,weka.associations.FPGrowth_goal.json,getTechnicalInformation(),getTechnicalInformation,weka.associations.FPGrowth,"Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, e.g., paper reference or book this class is based on.",FreeText,,0
5218,weka,weka.associations.FPGrowth_goal.json,getSingletons(java.lang.Object source),getSingletons,weka.associations.FPGrowth,Get the singleton items in the data,FreeText,,0
5219,weka,weka.associations.FPGrowth_goal.json,getSingletons(weka.core.Instances data),getSingletons,weka.associations.FPGrowth,Get the singleton items in the data,FreeText,,0
5220,weka,weka.associations.FPGrowth_goal.json,"buildFPTree(java.util.ArrayList<weka.associations.BinaryItem> singletons, java.lang.Object dataSource, int minSupport)",buildFPTree,weka.associations.FPGrowth,Construct the frequent pattern tree by inserting each transaction in the data into the tree. Only those items from each transaction that meet the minimum support threshold are inserted.,FreeText,,0
5221,weka,weka.associations.FPGrowth_goal.json,"mineTree(weka.associations.FPGrowth$FPTreeRoot tree, weka.associations.FPGrowth$FrequentItemSets largeItemSets, int recursionLevel, weka.associations.FPGrowth$FrequentBinaryItemSet conditionalItems, int minSupport)",mineTree,weka.associations.FPGrowth,Find large item sets in the FP-tree.,FreeText,,0
5222,weka,weka.associations.FPGrowth_goal.json,resetOptions(),resetOptions,weka.associations.FPGrowth,Reset all options to their default values.,FreeText,,0
5223,weka,weka.associations.FPGrowth_goal.json,positiveIndexTipText(),positiveIndexTipText,weka.associations.FPGrowth,Tip text for this property suitable for displaying in the GUI.,FreeText,,0
5224,weka,weka.associations.FPGrowth_goal.json,setPositiveIndex(int index),setPositiveIndex,weka.associations.FPGrowth,Set the index of the attribute value to consider as positive for binary attributes in normal dense instances. Index 1 is always used for sparse instances.,FreeText,,0
5225,weka,weka.associations.FPGrowth_goal.json,getPositiveIndex(),getPositiveIndex,weka.associations.FPGrowth,Get the index of the attribute value to consider as positive for binary attributes in normal dense instances. Index 1 is always used for sparse instances.,FreeText,,0
5226,weka,weka.associations.FPGrowth_goal.json,setNumRulesToFind(int numR),setNumRulesToFind,weka.associations.FPGrowth,Set the desired number of rules to find.,FreeText,,0
5227,weka,weka.associations.FPGrowth_goal.json,getNumRulesToFind(),getNumRulesToFind,weka.associations.FPGrowth,Get the number of rules to find.,FreeText,,0
5228,weka,weka.associations.FPGrowth_goal.json,numRulesToFindTipText(),numRulesToFindTipText,weka.associations.FPGrowth,Tip text for this property suitable for displaying in the GUI.,FreeText,,0
5229,weka,weka.associations.FPGrowth_goal.json,setMetricType(weka.core.SelectedTag d),setMetricType,weka.associations.FPGrowth,Set the metric type to use.,FreeText,,0
5230,weka,weka.associations.FPGrowth_goal.json,setMaxNumberOfItems(int max),setMaxNumberOfItems,weka.associations.FPGrowth,Set the maximum number of items to include in large items sets.,FreeText,,0
5231,weka,weka.associations.FPGrowth_goal.json,getMaxNumberOfItems(),getMaxNumberOfItems,weka.associations.FPGrowth,Gets the maximum number of items to be included in large item sets.,FreeText,,0
5232,weka,weka.associations.FPGrowth_goal.json,maxNumberOfItemsTipText(),maxNumberOfItemsTipText,weka.associations.FPGrowth,Tip text for this property suitable for displaying in the GUI.,FreeText,,0
5233,weka,weka.associations.FPGrowth_goal.json,getMetricType(),getMetricType,weka.associations.FPGrowth,Get the metric type to use.,FreeText,,0
5234,weka,weka.associations.FPGrowth_goal.json,metricTypeTipText(),metricTypeTipText,weka.associations.FPGrowth,Tip text for this property suitable for displaying in the GUI.,FreeText,,0
5235,weka,weka.associations.FPGrowth_goal.json,minMetricTipText(),minMetricTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5236,weka,weka.associations.FPGrowth_goal.json,getMinMetric(),getMinMetric,weka.associations.FPGrowth,Get the value of minConfidence.,FreeText,,0
5237,weka,weka.associations.FPGrowth_goal.json,setMinMetric(double v),setMinMetric,weka.associations.FPGrowth,Set the value of minConfidence.,FreeText,,0
5238,weka,weka.associations.FPGrowth_goal.json,transactionsMustContainTipText(),transactionsMustContainTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5239,weka,weka.associations.FPGrowth_goal.json,setTransactionsMustContain(java.lang.String list),setTransactionsMustContain,weka.associations.FPGrowth,Set the comma separated list of items that transactions must contain in order to be considered for large item sets and rules.,FreeText,,0
5240,weka,weka.associations.FPGrowth_goal.json,getTransactionsMustContain(),getTransactionsMustContain,weka.associations.FPGrowth,Gets the comma separated list of items that transactions must contain in order to be considered for large item sets and rules.,FreeText,,0
5241,weka,weka.associations.FPGrowth_goal.json,rulesMustContainTipText(),rulesMustContainTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5242,weka,weka.associations.FPGrowth_goal.json,setRulesMustContain(java.lang.String list),setRulesMustContain,weka.associations.FPGrowth,Set the comma separated list of items that rules must contain in order to be output.,FreeText,,0
5243,weka,weka.associations.FPGrowth_goal.json,getRulesMustContain(),getRulesMustContain,weka.associations.FPGrowth,Get the comma separated list of items that rules must contain in order to be output.,FreeText,,0
5244,weka,weka.associations.FPGrowth_goal.json,useORForMustContainListTipText(),useORForMustContainListTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5245,weka,weka.associations.FPGrowth_goal.json,setUseORForMustContainList(boolean b),setUseORForMustContainList,weka.associations.FPGrowth,Set whether to use OR rather than AND when considering must contain lists.,FreeText,,0
5246,weka,weka.associations.FPGrowth_goal.json,getUseORForMustContainList(),getUseORForMustContainList,weka.associations.FPGrowth,Gets whether OR is to be used rather than AND when considering must contain lists.,FreeText,,0
5247,weka,weka.associations.FPGrowth_goal.json,deltaTipText(),deltaTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5248,weka,weka.associations.FPGrowth_goal.json,getDelta(),getDelta,weka.associations.FPGrowth,Get the value of delta.,FreeText,,0
5249,weka,weka.associations.FPGrowth_goal.json,setDelta(double v),setDelta,weka.associations.FPGrowth,Set the value of delta.,FreeText,,0
5250,weka,weka.associations.FPGrowth_goal.json,lowerBoundMinSupportTipText(),lowerBoundMinSupportTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5251,weka,weka.associations.FPGrowth_goal.json,getLowerBoundMinSupport(),getLowerBoundMinSupport,weka.associations.FPGrowth,Get the value of lowerBoundMinSupport.,FreeText,,0
5252,weka,weka.associations.FPGrowth_goal.json,setLowerBoundMinSupport(double v),setLowerBoundMinSupport,weka.associations.FPGrowth,Set the value of lowerBoundMinSupport.,FreeText,,0
5253,weka,weka.associations.FPGrowth_goal.json,upperBoundMinSupportTipText(),upperBoundMinSupportTipText,weka.associations.FPGrowth,Returns the tip text for this property,FreeText,,0
5254,weka,weka.associations.FPGrowth_goal.json,getUpperBoundMinSupport(),getUpperBoundMinSupport,weka.associations.FPGrowth,Get the value of upperBoundMinSupport.,FreeText,,0
5255,weka,weka.associations.FPGrowth_goal.json,setUpperBoundMinSupport(double v),setUpperBoundMinSupport,weka.associations.FPGrowth,Set the value of upperBoundMinSupport.,FreeText,,0
5256,weka,weka.associations.FPGrowth_goal.json,findAllRulesForSupportLevelTipText(),findAllRulesForSupportLevelTipText,weka.associations.FPGrowth,Tip text for this property suitable for displaying in the GUI.,FreeText,,0
5257,weka,weka.associations.FPGrowth_goal.json,setFindAllRulesForSupportLevel(boolean s),setFindAllRulesForSupportLevel,weka.associations.FPGrowth,If true then turn off the iterative support reduction method of finding x rules that meet the minimum support and metric thresholds and just return all the rules that meet the lower bound on minimum support and the minimum metric.,FreeText,,0
5258,weka,weka.associations.FPGrowth_goal.json,getFindAllRulesForSupportLevel(),getFindAllRulesForSupportLevel,weka.associations.FPGrowth,Get whether all rules meeting the lower bound on min support and the minimum metric threshold are to be found.,FreeText,,0
5259,weka,weka.associations.FPGrowth_goal.json,setOffDiskReportingFrequency(int freq),setOffDiskReportingFrequency,weka.associations.FPGrowth,Set how often to report some progress when the data is being read incrementally off of the disk rather than loaded into memory.,FreeText,,0
5260,weka,weka.associations.FPGrowth_goal.json,getAssociationRules(),getAssociationRules,weka.associations.FPGrowth,Gets the list of mined association rules.,FreeText,,0
5261,weka,weka.associations.FPGrowth_goal.json,getRuleMetricNames(),getRuleMetricNames,weka.associations.FPGrowth,Gets a list of the names of the metrics output for each rule. This list should be the same (in terms of the names and order thereof) as that produced by AssociationRule.getMetricNamesForRule().,FreeText,,0
5262,weka,weka.associations.FPGrowth_goal.json,canProduceRules(),canProduceRules,weka.associations.FPGrowth,"Returns true if this AssociationRulesProducer can actually produce rules. Most implementing classes will always return true from this method (obviously :-)). However, an implementing class that actually acts as a wrapper around things that may or may not implement AssociationRulesProducer will want to return false if the thing they wrap can't produce rules.",FreeText,,0
5263,weka,weka.associations.FPGrowth_goal.json,listOptions(),listOptions,weka.associations.FPGrowth,Returns an enumeration describing the available options.,FreeText,,0
5264,weka,weka.associations.FPGrowth_goal.json,setOptions(java.lang.String[] options),setOptions,weka.associations.FPGrowth,"Parses a given list of options.   -P <attribute index of positive value> Set the index of the attribute value to consider as 'positive' for binary attributes in normal dense instances. Index 2 is always used for sparse instances. (default = 2)   -I <max items> The maximum number of items to include in large items sets (and rules). (default = -1, i.e. no limit.)   -N <require number of rules> The required number of rules. (default = 10)   -T <0=confidence | 1=lift | 2=leverage | 3=Conviction> The metric by which to rank rules. (default = confidence)   -C <minimum metric score of a rule> The minimum metric score of a rule. (default = 0.9)   -U <upper bound for minimum support> Upper bound for minimum support. (default = 1.0)   -M <lower bound for minimum support> The lower bound for the minimum support. (default = 0.1)   -D <delta for minimum support> The delta by which the minimum support is decreased in each iteration. (default = 0.05)   -S Find all rules that meet the lower bound on minimum support and the minimum metric constraint. Turning this mode on will disable the iterative support reduction procedure to find the specified number of rules.   -transactions <comma separated list of attribute names> Only consider transactions that contain these items (default = no restriction)   -rules <comma separated list of attribute names> Only print rules that contain these items. (default = no restriction)   -use-or Use OR instead of AND for must contain list(s). Use in conjunction with -transactions and/or -rules  <!-- options-end -->",FreeText,,0
5265,weka,weka.associations.FPGrowth_goal.json,getOptions(),getOptions,weka.associations.FPGrowth,Gets the current settings of the classifier.,FreeText,,0
5266,weka,weka.associations.FPGrowth_goal.json,buildAssociations(weka.core.Instances data),buildAssociations,weka.associations.FPGrowth,"Method that generates all large item sets with a minimum support, and from these all association rules with a minimum metric (i.e. confidence, lift etc.).",FreeText,,0
5267,weka,weka.associations.FPGrowth_goal.json,toString(),toString,weka.associations.FPGrowth,Output the association rules.,FreeText,,0
5268,weka,weka.associations.FPGrowth_goal.json,graph(weka.associations.FPGrowth$FPTreeRoot tree),graph,weka.associations.FPGrowth,Assemble a dot graph representation of the FP-tree.,FreeText,,0
5269,weka,weka.associations.FPGrowth_goal.json,getRevision(),getRevision,weka.associations.FPGrowth,Returns the revision string.,FreeText,,0
5270,weka,weka.associations.FPGrowth_goal.json,main(java.lang.String[] args),main,weka.associations.FPGrowth,Main method.,FreeText,,0
5271,weka,weka.classifiers.trees.j48.GainRatioSplitCrit_goal.json,splitCritValue(weka.classifiers.trees.j48.Distribution bags),splitCritValue,weka.classifiers.trees.j48.GainRatioSplitCrit,This method is a straightforward implementation of the gain ratio criterion for the given distribution.,FreeText,,0
5272,weka,weka.classifiers.trees.j48.GainRatioSplitCrit_goal.json,"splitCritValue(weka.classifiers.trees.j48.Distribution bags, double totalnoInst, double numerator)",splitCritValue,weka.classifiers.trees.j48.GainRatioSplitCrit,This method computes the gain ratio in the same way C4.5 does.,FreeText,,0
5273,weka,weka.classifiers.trees.j48.GainRatioSplitCrit_goal.json,getRevision(),getRevision,weka.classifiers.trees.j48.GainRatioSplitCrit,Returns the revision string.,FreeText,,0
5274,weka,weka.classifiers.trees.j48.InfoGainSplitCrit_goal.json,splitCritValue(weka.classifiers.trees.j48.Distribution bags),splitCritValue,weka.classifiers.trees.j48.InfoGainSplitCrit,This method is a straightforward implementation of the information gain criterion for the given distribution.,FreeText,,0
5275,weka,weka.classifiers.trees.j48.InfoGainSplitCrit_goal.json,"splitCritValue(weka.classifiers.trees.j48.Distribution bags, double totalNoInst)",splitCritValue,weka.classifiers.trees.j48.InfoGainSplitCrit,This method computes the information gain in the same way C4.5 does.,FreeText,,0
5276,weka,weka.classifiers.trees.j48.InfoGainSplitCrit_goal.json,"splitCritValue(weka.classifiers.trees.j48.Distribution bags, double totalNoInst, double oldEnt)",splitCritValue,weka.classifiers.trees.j48.InfoGainSplitCrit,This method computes the information gain in the same way C4.5 does.,FreeText,,0
5277,weka,weka.classifiers.trees.j48.InfoGainSplitCrit_goal.json,getRevision(),getRevision,weka.classifiers.trees.j48.InfoGainSplitCrit,Returns the revision string.,FreeText,,0
5278,weka,weka.core.BatchPredictor_goal.json,setBatchSize(java.lang.String size),setBatchSize,weka.core.BatchPredictor,Set the batch size to use. The implementer will prefer (but not necessarily expect) this many instances to be passed in to distributionsForInstances().,FreeText,,0
5279,weka,weka.core.BatchPredictor_goal.json,getBatchSize(),getBatchSize,weka.core.BatchPredictor,Get the batch size to use. The implementer will prefer (but not necessarily expect) this many instances to be passed in to distributionsForInstances(). Allows the preferred batch size to be encapsulated with the client.,FreeText,,0
5280,weka,weka.core.BatchPredictor_goal.json,distributionsForInstances(weka.core.Instances insts),distributionsForInstances,weka.core.BatchPredictor,Batch scoring method,FreeText,,0
5281,weka,weka.core.BatchPredictor_goal.json,implementsMoreEfficientBatchPrediction(),implementsMoreEfficientBatchPrediction,weka.core.BatchPredictor,Returns true if this BatchPredictor can generate batch predictions in an efficient manner.,FreeText,,0
5282,weka,weka.core.BinarySparseInstance_goal.json,weka.core.BinarySparseInstance(weka.core.Instance instance),weka.core.BinarySparseInstance,weka.core.BinarySparseInstance,Constructor that generates a sparse instance from the given instance. Reference to the dataset is set to null. (ie. the instance doesn't have access to information about the attribute types),FreeText,,0
5283,weka,weka.core.BinarySparseInstance_goal.json,weka.core.BinarySparseInstance(weka.core.SparseInstance instance),weka.core.BinarySparseInstance,weka.core.BinarySparseInstance,Constructor that copies the info from the given instance. Reference to the dataset is set to null. (ie. the instance doesn't have access to information about the attribute types),FreeText,,0
5284,weka,weka.core.BinarySparseInstance_goal.json,"weka.core.BinarySparseInstance(double weight, double[] attValues)",weka.core.BinarySparseInstance,weka.core.BinarySparseInstance,Constructor that generates a sparse instance from the given parameters. Reference to the dataset is set to null. (ie. the instance doesn't have access to information about the attribute types),FreeText,,0
5285,weka,weka.core.BinarySparseInstance_goal.json,"weka.core.BinarySparseInstance(double weight, int[] indices, int maxNumValues)",weka.core.BinarySparseInstance,weka.core.BinarySparseInstance,Constructor that inititalizes instance variable with given values. Reference to the dataset is set to null. (ie. the instance doesn't have access to information about the attribute types),FreeText,,0
5286,weka,weka.core.BinarySparseInstance_goal.json,weka.core.BinarySparseInstance(int numAttributes),weka.core.BinarySparseInstance,weka.core.BinarySparseInstance,"Constructor of an instance that sets weight to one, all values to 1, and the reference to the dataset to null. (ie. the instance doesn't have access to information about the attribute types)",FreeText,,0
5287,weka,weka.core.BinarySparseInstance_goal.json,copy(),copy,weka.core.BinarySparseInstance,"Produces a shallow copy of this instance. The copy has access to the same dataset. (if you want to make a copy that doesn't have access to the dataset, use new BinarySparseInstance(instance)",FreeText,,0
5288,weka,weka.core.BinarySparseInstance_goal.json,copy(double[] values),copy,weka.core.BinarySparseInstance,Copies the instance but fills up its values based on the given array of doubles. The copy has access to the same dataset.,FreeText,,0
5289,weka,weka.core.BinarySparseInstance_goal.json,mergeInstance(weka.core.Instance inst),mergeInstance,weka.core.BinarySparseInstance,Merges this instance with the given instance and returns the result. Dataset is set to null.,FreeText,,0
5290,weka,weka.core.BinarySparseInstance_goal.json,replaceMissingValues(double[] array),replaceMissingValues,weka.core.BinarySparseInstance,"Does nothing, since we don't support missing values.",FreeText,,0
5291,weka,weka.core.BinarySparseInstance_goal.json,"setValue(int attIndex, double value)",setValue,weka.core.BinarySparseInstance,Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set.,FreeText,,0
5292,weka,weka.core.BinarySparseInstance_goal.json,"setValueSparse(int indexOfIndex, double value)",setValueSparse,weka.core.BinarySparseInstance,Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set.,FreeText,,0
5293,weka,weka.core.BinarySparseInstance_goal.json,toDoubleArray(),toDoubleArray,weka.core.BinarySparseInstance,Returns the values of each attribute as an array of doubles.,FreeText,,0
5294,weka,weka.core.BinarySparseInstance_goal.json,toString(),toString,weka.core.BinarySparseInstance,"Returns the description of one instance in sparse format. If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters.",FreeText,,0
5295,weka,weka.core.BinarySparseInstance_goal.json,value(int attIndex),value,weka.core.BinarySparseInstance,Returns an instance's attribute value in internal format.,FreeText,,0
5296,weka,weka.core.BinarySparseInstance_goal.json,valueSparse(int indexOfIndex),valueSparse,weka.core.BinarySparseInstance,Returns an instance's attribute value in internal format. Does exactly the same thing as value() if applied to an Instance.,FreeText,methodResultID==receiverObjectID.value(args[0]),1
5297,weka,weka.core.BinarySparseInstance_goal.json,forceDeleteAttributeAt(int position),forceDeleteAttributeAt,weka.core.BinarySparseInstance,Deletes an attribute at the given position (0 to numAttributes() - 1).,FreeText,,0
5298,weka,weka.core.BinarySparseInstance_goal.json,forceInsertAttributeAt(int position),forceInsertAttributeAt,weka.core.BinarySparseInstance,Inserts an attribute at the given position (0 to numAttributes()) and sets its value to 1.,FreeText,,0
5299,weka,weka.core.BinarySparseInstance_goal.json,main(java.lang.String[] options),main,weka.core.BinarySparseInstance,Main method for testing this class.,FreeText,,0
5300,weka,weka.core.BinarySparseInstance_goal.json,getRevision(),getRevision,weka.core.BinarySparseInstance,Returns the revision string.,FreeText,,0
5301,weka,weka.core.Copyable_goal.json,copy(),copy,weka.core.Copyable,"This method produces a shallow copy of an object. It does the same as the clone() method in Object, which also produces a shallow copy.",FreeText,,0
5302,weka,weka.core.DenseInstance_goal.json,weka.core.DenseInstance(weka.core.Instance instance),weka.core.DenseInstance,weka.core.DenseInstance,,FreeText,,0
5303,weka,weka.core.DenseInstance_goal.json,"weka.core.DenseInstance(double weight, double[] attValues)",weka.core.DenseInstance,weka.core.DenseInstance,,FreeText,,0
5304,weka,weka.core.DenseInstance_goal.json,weka.core.DenseInstance(int numAttributes),weka.core.DenseInstance,weka.core.DenseInstance,,FreeText,,0
5305,weka,weka.core.DenseInstance_goal.json,copy(),copy,weka.core.DenseInstance,"Produces a shallow copy of this instance. The copy has access to the same dataset. (if you want to make a copy that doesn't have access to the dataset, use new DenseInstance(instance)",FreeText,,0
5306,weka,weka.core.DenseInstance_goal.json,copy(double[] values),copy,weka.core.DenseInstance,Copies the instance but fills up its values based on the given array of doubles. The copy has access to the same dataset.,FreeText,,0
5307,weka,weka.core.DenseInstance_goal.json,index(int position),index,weka.core.DenseInstance,Returns the index of the attribute stored at the given position. Just returns the given value.,FreeText,,0
5308,weka,weka.core.DenseInstance_goal.json,mergeInstance(weka.core.Instance inst),mergeInstance,weka.core.DenseInstance,Merges this instance with the given instance and returns the result. Dataset is set to null. The returned instance is of the same type as this instance.,FreeText,,0
5309,weka,weka.core.DenseInstance_goal.json,numAttributes(),numAttributes,weka.core.DenseInstance,Returns the number of attributes.,FreeText,,0
5310,weka,weka.core.DenseInstance_goal.json,numValues(),numValues,weka.core.DenseInstance,Returns the number of values present. Always the same as numAttributes().,FreeText,methodResultID==(receiverObjectClone.numAttributes()),1
5311,weka,weka.core.DenseInstance_goal.json,replaceMissingValues(double[] array),replaceMissingValues,weka.core.DenseInstance,Replaces all missing values in the instance with the values contained in the given array. A deep copy of the vector of attribute values is performed before the values are replaced.,FreeText,,0
5312,weka,weka.core.DenseInstance_goal.json,"setValue(int attIndex, double value)",setValue,weka.core.DenseInstance,Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set.,FreeText,,0
5313,weka,weka.core.DenseInstance_goal.json,"setValueSparse(int indexOfIndex, double value)",setValueSparse,weka.core.DenseInstance,Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set. Does exactly the same thing as setValue().,FreeText,,0
5314,weka,weka.core.DenseInstance_goal.json,toDoubleArray(),toDoubleArray,weka.core.DenseInstance,Returns the values of each attribute as an array of doubles.,FreeText,,0
5315,weka,weka.core.DenseInstance_goal.json,toStringNoWeight(),toStringNoWeight,weka.core.DenseInstance,"Returns the description of one instance (without weight appended). If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters. This method is used by getRandomNumberGenerator() in Instances.java in order to maintain backwards compatibility with weka 3.4.",FreeText,,0
5316,weka,weka.core.DenseInstance_goal.json,toStringNoWeight(int afterDecimalPoint),toStringNoWeight,weka.core.DenseInstance,"Returns the description of one instance (without weight appended). If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters. This method is used by getRandomNumberGenerator() in Instances.java in order to maintain backwards compatibility with weka 3.4.",FreeText,,0
5317,weka,weka.core.DenseInstance_goal.json,value(int attIndex),value,weka.core.DenseInstance,Returns an instance's attribute value in internal format.,FreeText,,0
5318,weka,weka.core.DenseInstance_goal.json,forceDeleteAttributeAt(int position),forceDeleteAttributeAt,weka.core.DenseInstance,Deletes an attribute at the given position (0 to numAttributes() - 1).,FreeText,,0
5319,weka,weka.core.DenseInstance_goal.json,forceInsertAttributeAt(int position),forceInsertAttributeAt,weka.core.DenseInstance,Inserts an attribute at the given position (0 to numAttributes()) and sets its value to be missing.,FreeText,,0
5320,weka,weka.core.DenseInstance_goal.json,main(java.lang.String[] options),main,weka.core.DenseInstance,Main method for testing this class.,FreeText,,0
5321,weka,weka.core.DenseInstance_goal.json,getRevision(),getRevision,weka.core.DenseInstance,Returns the revision string.,FreeText,,0
5322,weka,weka.core.Instances_goal.json,weka.core.Instances(java.io.Reader reader),weka.core.Instances,weka.core.Instances,"Reads an ARFF file from a reader, and assigns a weight of one to each instance. Lets the index of the class attribute be undefined (negative).",FreeText,,0
5323,weka,weka.core.Instances_goal.json,"weka.core.Instances(java.io.Reader reader, int capacity)",weka.core.Instances,weka.core.Instances,,FreeText,,0
5324,weka,weka.core.Instances_goal.json,weka.core.Instances(weka.core.Instances dataset),weka.core.Instances,weka.core.Instances,Constructor copying all instances and references to the header information from the given set of instances.,FreeText,,0
5325,weka,weka.core.Instances_goal.json,"weka.core.Instances(weka.core.Instances dataset, int capacity)",weka.core.Instances,weka.core.Instances,Constructor creating an empty set of instances. Copies references to the header information from the given set of instances. Sets the capacity of the set of instances to 0 if its negative.,FreeText,,0
5326,weka,weka.core.Instances_goal.json,"weka.core.Instances(weka.core.Instances source, int first, int toCopy)",weka.core.Instances,weka.core.Instances,,FreeText,,0
5327,weka,weka.core.Instances_goal.json,"weka.core.Instances(java.lang.String name, java.util.ArrayList<weka.core.Attribute> attInfo, int capacity)",weka.core.Instances,weka.core.Instances,Creates an empty set of instances. Uses the given attribute information. Sets the capacity of the set of instances to 0 if its negative. Given attribute information must not be changed after this constructor has been used.,FreeText,,0
5328,weka,weka.core.Instances_goal.json,"initialize(weka.core.Instances dataset, int capacity)",initialize,weka.core.Instances,initializes with the header information of the given dataset and sets the capacity of the set of instances.,FreeText,,0
5329,weka,weka.core.Instances_goal.json,stringFreeStructure(),stringFreeStructure,weka.core.Instances,"Create a copy of the structure. If the data has string or relational attributes, theses are replaced by empty copies. Other attributes are left unmodified, but the underlying list structure holding references to the attributes is shallow-copied, so that other Instances objects with a reference to this list are not affected.",FreeText,,0
5330,weka,weka.core.Instances_goal.json,add(weka.core.Instance instance),add,weka.core.Instances,Adds one instance to the end of the set. Shallow copies instance before it is added. Increases the size of the dataset if it is not large enough. Does not check if the instance is compatible with the dataset. Note: String or relational values are not transferred.,FreeText,,0
5331,weka,weka.core.Instances_goal.json,"add(int index, weka.core.Instance instance)",add,weka.core.Instances,Adds one instance at the given position in the list. Shallow copies instance before it is added. Increases the size of the dataset if it is not large enough. Does not check if the instance is compatible with the dataset. Note: String or relational values are not transferred.,FreeText,,0
5332,weka,weka.core.Instances_goal.json,attribute(int index),attribute,weka.core.Instances,Returns an attribute.,FreeText,,0
5333,weka,weka.core.Instances_goal.json,attribute(java.lang.String name),attribute,weka.core.Instances,"Returns an attribute given its name. If there is more than one attribute with the same name, it returns the first one. Returns null if the attribute can't be found.",FreeText,,0
5334,weka,weka.core.Instances_goal.json,checkForAttributeType(int attType),checkForAttributeType,weka.core.Instances,Checks for attributes of the given type in the dataset,FreeText,,0
5335,weka,weka.core.Instances_goal.json,checkForStringAttributes(),checkForStringAttributes,weka.core.Instances,Checks for string attributes in the dataset,FreeText,,0
5336,weka,weka.core.Instances_goal.json,checkInstance(weka.core.Instance instance),checkInstance,weka.core.Instances,Checks if the given instance is compatible with this dataset. Only looks at the size of the instance and the ranges of the values for nominal and string attributes.,FreeText,,0
5337,weka,weka.core.Instances_goal.json,classAttribute(),classAttribute,weka.core.Instances,Returns the class attribute.,FreeText,,0
5338,weka,weka.core.Instances_goal.json,classIndex(),classIndex,weka.core.Instances,Returns the class attribute's index. Returns negative number if it's undefined.,FreeText,,0
5339,weka,weka.core.Instances_goal.json,compactify(),compactify,weka.core.Instances,Compactifies the set of instances. Decreases the capacity of the set so that it matches the number of instances in the set.,FreeText,,0
5340,weka,weka.core.Instances_goal.json,delete(),delete,weka.core.Instances,Removes all instances from the set.,FreeText,,0
5341,weka,weka.core.Instances_goal.json,delete(int index),delete,weka.core.Instances,Removes an instance at the given position from the set.,FreeText,,0
5342,weka,weka.core.Instances_goal.json,deleteAttributeAt(int position),deleteAttributeAt,weka.core.Instances,Deletes an attribute at the given position (0 to numAttributes() - 1). Attribute objects after the deletion point are copied so that their indices can be decremented. Creates a fresh list to hold the old and new attribute objects.,FreeText,,0
5343,weka,weka.core.Instances_goal.json,deleteAttributeType(int attType),deleteAttributeType,weka.core.Instances,Deletes all attributes of the given type in the dataset. A deep copy of the attribute information is performed before an attribute is deleted.,FreeText,,0
5344,weka,weka.core.Instances_goal.json,deleteStringAttributes(),deleteStringAttributes,weka.core.Instances,Deletes all string attributes in the dataset. A deep copy of the attribute information is performed before an attribute is deleted.,FreeText,,0
5345,weka,weka.core.Instances_goal.json,deleteWithMissing(int attIndex),deleteWithMissing,weka.core.Instances,Removes all instances with missing values for a particular attribute from the dataset.,FreeText,,0
5346,weka,weka.core.Instances_goal.json,deleteWithMissing(weka.core.Attribute att),deleteWithMissing,weka.core.Instances,Removes all instances with missing values for a particular attribute from the dataset.,FreeText,,0
5347,weka,weka.core.Instances_goal.json,deleteWithMissingClass(),deleteWithMissingClass,weka.core.Instances,Removes all instances with a missing class value from the dataset.,FreeText,,0
5348,weka,weka.core.Instances_goal.json,enumerateAttributes(),enumerateAttributes,weka.core.Instances,Returns an enumeration of all the attributes. The class attribute (if set) is skipped by this enumeration.,FreeText,,0
5349,weka,weka.core.Instances_goal.json,enumerateInstances(),enumerateInstances,weka.core.Instances,Returns an enumeration of all instances in the dataset.,FreeText,,0
5350,weka,weka.core.Instances_goal.json,equalHeadersMsg(weka.core.Instances dataset),equalHeadersMsg,weka.core.Instances,"Checks if two headers are equivalent. If not, then returns a message why they differ.",FreeText,,0
5351,weka,weka.core.Instances_goal.json,equalHeaders(weka.core.Instances dataset),equalHeaders,weka.core.Instances,Checks if two headers are equivalent.,FreeText,,0
5352,weka,weka.core.Instances_goal.json,firstInstance(),firstInstance,weka.core.Instances,Returns the first instance in the set.,FreeText,,0
5353,weka,weka.core.Instances_goal.json,getRandomNumberGenerator(long seed),getRandomNumberGenerator,weka.core.Instances,Returns a random number generator. The initial seed of the random number generator depends on the given seed and the hash code of a string representation of a instances chosen based on the given seed.,FreeText,,0
5354,weka,weka.core.Instances_goal.json,"insertAttributeAt(weka.core.Attribute att, int position)",insertAttributeAt,weka.core.Instances,Inserts an attribute at the given position (0 to numAttributes()) and sets all values to be missing. Shallow copies the attribute before it is inserted. Existing attribute objects at and after the insertion point are also copied so that their indices can be incremented. Creates a fresh list to hold the old and new attribute objects.,FreeText,,0
5355,weka,weka.core.Instances_goal.json,instance(int index),instance,weka.core.Instances,Returns the instance at the given position.,FreeText,,0
5356,weka,weka.core.Instances_goal.json,get(int index),get,weka.core.Instances,Returns the instance at the given position.,FreeText,,0
5357,weka,weka.core.Instances_goal.json,"kthSmallestValue(weka.core.Attribute att, int k)",kthSmallestValue,weka.core.Instances,Returns the kth-smallest attribute value of a numeric attribute.,FreeText,,0
5358,weka,weka.core.Instances_goal.json,"kthSmallestValue(int attIndex, int k)",kthSmallestValue,weka.core.Instances,"Returns the kth-smallest attribute value of a numeric attribute. NOTE CHANGE: Missing values (NaN values) are now treated as Double.MAX_VALUE. Also, the order of the instances in the data is no longer affected.",FreeText,,0
5359,weka,weka.core.Instances_goal.json,lastInstance(),lastInstance,weka.core.Instances,Returns the last instance in the set.,FreeText,,0
5360,weka,weka.core.Instances_goal.json,meanOrMode(int attIndex),meanOrMode,weka.core.Instances,Returns the mean (mode) for a numeric (nominal) attribute as a floating-point value. Returns 0 if the attribute is neither nominal nor numeric. If all values are missing it returns zero.,FreeText,,0
5361,weka,weka.core.Instances_goal.json,meanOrMode(weka.core.Attribute att),meanOrMode,weka.core.Instances,Returns the mean (mode) for a numeric (nominal) attribute as a floating-point value. Returns 0 if the attribute is neither nominal nor numeric. If all values are missing it returns zero.,FreeText,,0
5362,weka,weka.core.Instances_goal.json,numAttributes(),numAttributes,weka.core.Instances,Returns the number of attributes.,FreeText,,0
5363,weka,weka.core.Instances_goal.json,numClasses(),numClasses,weka.core.Instances,Returns the number of class labels.,FreeText,,0
5364,weka,weka.core.Instances_goal.json,numDistinctValues(int attIndex),numDistinctValues,weka.core.Instances,Returns the number of distinct values of a given attribute. The value 'missing' is not counted.,FreeText,,0
5365,weka,weka.core.Instances_goal.json,numDistinctValues(weka.core.Attribute att),numDistinctValues,weka.core.Instances,Returns the number of distinct values of a given attribute. The value 'missing' is not counted.,FreeText,,0
5366,weka,weka.core.Instances_goal.json,numInstances(),numInstances,weka.core.Instances,Returns the number of instances in the dataset.,FreeText,,0
5367,weka,weka.core.Instances_goal.json,size(),size,weka.core.Instances,Returns the number of instances in the dataset.,FreeText,,0
5368,weka,weka.core.Instances_goal.json,randomize(java.util.Random random),randomize,weka.core.Instances,Shuffles the instances in the set so that they are ordered randomly.,FreeText,,0
5369,weka,weka.core.Instances_goal.json,readInstance(java.io.Reader reader),readInstance,weka.core.Instances,Reads a single instance from the reader and appends it to the dataset. Automatically expands the dataset if it is not large enough to hold the instance. This method does not check for carriage return at the end of the line.,FreeText,,0
5370,weka,weka.core.Instances_goal.json,"replaceAttributeAt(weka.core.Attribute att, int position)",replaceAttributeAt,weka.core.Instances,Replaces the attribute at the given position (0 to numAttributes()) with the given attribute and sets all its values to be missing. Shallow copies the given attribute before it is inserted. Creates a fresh list to hold the old and new attribute objects.,FreeText,,0
5371,weka,weka.core.Instances_goal.json,relationName(),relationName,weka.core.Instances,Returns the relation's name.,FreeText,,0
5372,weka,weka.core.Instances_goal.json,remove(int index),remove,weka.core.Instances,Removes the instance at the given position.,FreeText,,0
5373,weka,weka.core.Instances_goal.json,"renameAttribute(int att, java.lang.String name)",renameAttribute,weka.core.Instances,Renames an attribute. This change only affects this dataset.,FreeText,,0
5374,weka,weka.core.Instances_goal.json,"renameAttribute(weka.core.Attribute att, java.lang.String name)",renameAttribute,weka.core.Instances,Renames an attribute. This change only affects this dataset.,FreeText,,0
5375,weka,weka.core.Instances_goal.json,"renameAttributeValue(int att, int val, java.lang.String name)",renameAttributeValue,weka.core.Instances,Renames the value of a nominal (or string) attribute value. This change only affects this dataset.,FreeText,,0
5376,weka,weka.core.Instances_goal.json,"renameAttributeValue(weka.core.Attribute att, java.lang.String val, java.lang.String name)",renameAttributeValue,weka.core.Instances,Renames the value of a nominal (or string) attribute value. This change only affects this dataset.,FreeText,,0
5377,weka,weka.core.Instances_goal.json,resample(java.util.Random random),resample,weka.core.Instances,Creates a new dataset of the same size using random sampling with replacement.,FreeText,,0
5378,weka,weka.core.Instances_goal.json,resampleWithWeights(java.util.Random random),resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the current instance weights. The weights of the instances in the new dataset are set to one. See also resampleWithWeights(Random, double[], boolean[]).",FreeText,,0
5379,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, boolean[] sampled)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the current instance weights. The weights of the instances in the new dataset are set to one. See also resampleWithWeights(Random, double[], boolean[]).",FreeText,,0
5380,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, boolean representUsingWeights)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the current instance weights. The weights of the instances in the new dataset are set to one. See also resampleWithWeights(Random, double[], boolean[]).",FreeText,,0
5381,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, boolean[] sampled, boolean representUsingWeights)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the current instance weights. The weights of the instances in the new dataset are set to one. See also resampleWithWeights(Random, double[], boolean[]).",FreeText,,0
5382,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, double[] weights)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the given weight vector. See also resampleWithWeights(Random, double[], boolean[]).",FreeText,,0
5383,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, double[] weights, boolean[] sampled)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the given weight vector. The weights of the instances in the new dataset are set to one. The length of the weight vector has to be the same as the number of instances in the dataset, and all weights have to be positive. Uses Walker's method, see pp. 232 of ""Stochastic Simulation"" by B.D. Ripley (1987).",FreeText,,0
5384,weka,weka.core.Instances_goal.json,"resampleWithWeights(java.util.Random random, double[] weights, boolean[] sampled, boolean representUsingWeights)",resampleWithWeights,weka.core.Instances,"Creates a new dataset of the same size using random sampling with replacement according to the given weight vector. The weights of the instances in the new dataset are set to one. The length of the weight vector has to be the same as the number of instances in the dataset, and all weights have to be positive. Uses Walker's method, see pp. 232 of ""Stochastic Simulation"" by B.D. Ripley (1987).",FreeText,,0
5385,weka,weka.core.Instances_goal.json,"set(int index, weka.core.Instance instance)",set,weka.core.Instances,Replaces the instance at the given position. Shallow copies instance before it is added. Does not check if the instance is compatible with the dataset. Note: String or relational values are not transferred.,FreeText,,0
5386,weka,weka.core.Instances_goal.json,setClass(weka.core.Attribute att),setClass,weka.core.Instances,Sets the class attribute.,FreeText,,0
5387,weka,weka.core.Instances_goal.json,setClassIndex(int classIndex),setClassIndex,weka.core.Instances,Sets the class index of the set. If the class index is negative there is assumed to be no class. (ie. it is undefined),FreeText,,0
5388,weka,weka.core.Instances_goal.json,setRelationName(java.lang.String newName),setRelationName,weka.core.Instances,Sets the relation's name.,FreeText,,0
5389,weka,weka.core.Instances_goal.json,sortBasedOnNominalAttribute(int attIndex),sortBasedOnNominalAttribute,weka.core.Instances,"Sorts a nominal attribute (stable, linear-time sort). Instances are sorted based on the attribute label ordering specified in the header.",FreeText,,0
5390,weka,weka.core.Instances_goal.json,sort(int attIndex),sort,weka.core.Instances,"Sorts the instances based on an attribute. For numeric attributes, instances are sorted in ascending order. For nominal attributes, instances are sorted based on the attribute label ordering specified in the header. Instances with missing values for the attribute are placed at the end of the dataset.",FreeText,,0
5391,weka,weka.core.Instances_goal.json,sort(weka.core.Attribute att),sort,weka.core.Instances,"Sorts the instances based on an attribute. For numeric attributes, instances are sorted into ascending order. For nominal attributes, instances are sorted based on the attribute label ordering specified in the header. Instances with missing values for the attribute are placed at the end of the dataset.",FreeText,,0
5392,weka,weka.core.Instances_goal.json,stableSort(int attIndex),stableSort,weka.core.Instances,"Sorts the instances based on an attribute, using a stable sort. For numeric attributes, instances are sorted in ascending order. For nominal attributes, instances are sorted based on the attribute label ordering specified in the header. Instances with missing values for the attribute are placed at the end of the dataset.",FreeText,,0
5393,weka,weka.core.Instances_goal.json,stableSort(weka.core.Attribute att),stableSort,weka.core.Instances,"Sorts the instances based on an attribute, using a stable sort. For numeric attributes, instances are sorted into ascending order. For nominal attributes, instances are sorted based on the attribute label ordering specified in the header. Instances with missing values for the attribute are placed at the end of the dataset.",FreeText,,0
5394,weka,weka.core.Instances_goal.json,stratify(int numFolds),stratify,weka.core.Instances,Stratifies a set of instances according to its class values if the class attribute is nominal (so that afterwards a stratified cross-validation can be performed).,FreeText,,0
5395,weka,weka.core.Instances_goal.json,sumOfWeights(),sumOfWeights,weka.core.Instances,Computes the sum of all the instances' weights.,FreeText,,0
5396,weka,weka.core.Instances_goal.json,"testCV(int numFolds, int numFold)",testCV,weka.core.Instances,Creates the test set for one fold of a cross-validation on the dataset.,FreeText,,0
5397,weka,weka.core.Instances_goal.json,toString(),toString,weka.core.Instances,"Returns the dataset as a string in ARFF format. Strings are quoted if they contain whitespace characters, or if they are a question mark.",FreeText,,0
5398,weka,weka.core.Instances_goal.json,stringWithoutHeader(),stringWithoutHeader,weka.core.Instances,"Returns the instances in the dataset as a string in ARFF format. Strings are quoted if they contain whitespace characters, or if they are a question mark.",FreeText,,0
5399,weka,weka.core.Instances_goal.json,"trainCV(int numFolds, int numFold)",trainCV,weka.core.Instances,Creates the training set for one fold of a cross-validation on the dataset.,FreeText,,0
5400,weka,weka.core.Instances_goal.json,"trainCV(int numFolds, int numFold, java.util.Random random)",trainCV,weka.core.Instances,Creates the training set for one fold of a cross-validation on the dataset. The data is subsequently randomized based on the given random number generator.,FreeText,,0
5401,weka,weka.core.Instances_goal.json,variances(),variances,weka.core.Instances,Computes the variance for all numeric attributes simultaneously. This is faster than calling variance() for each attribute. The resulting array has as many dimensions as there are attributes. Array elements corresponding to non-numeric attributes are set to 0.,FreeText,,0
5402,weka,weka.core.Instances_goal.json,variance(int attIndex),variance,weka.core.Instances,Computes the variance for a numeric attribute.,FreeText,,0
5403,weka,weka.core.Instances_goal.json,variance(weka.core.Attribute att),variance,weka.core.Instances,Computes the variance for a numeric attribute.,FreeText,,0
5404,weka,weka.core.Instances_goal.json,attributeStats(int index),attributeStats,weka.core.Instances,Calculates summary statistics on the values that appear in this set of instances for a specified attribute.,FreeText,,0
5405,weka,weka.core.Instances_goal.json,attributeToDoubleArray(int index),attributeToDoubleArray,weka.core.Instances,Gets the value of all instances in this dataset for a particular attribute. Useful in conjunction with Utils.sort to allow iterating through the dataset in sorted order for some attribute.,FreeText,,0
5406,weka,weka.core.Instances_goal.json,toSummaryString(),toSummaryString,weka.core.Instances,Generates a string summarizing the set of instances. Gives a breakdown for each attribute indicating the number of missing/discrete/unique values and other information.,FreeText,,0
5407,weka,weka.core.Instances_goal.json,"copyInstances(int from, weka.core.Instances dest, int num)",copyInstances,weka.core.Instances,Copies instances from one set to the end of another one.,FreeText,,0
5408,weka,weka.core.Instances_goal.json,instancesAndWeights(),instancesAndWeights,weka.core.Instances,"Returns string including all instances, their weights and their indices in the original dataset.",FreeText,,0
5409,weka,weka.core.Instances_goal.json,stratStep(int numFolds),stratStep,weka.core.Instances,Help function needed for stratification of set.,FreeText,,0
5410,weka,weka.core.Instances_goal.json,"swap(int i, int j)",swap,weka.core.Instances,Swaps two instances in the set.,FreeText,,0
5411,weka,weka.core.Instances_goal.json,"mergeInstances(weka.core.Instances first, weka.core.Instances second)",mergeInstances,weka.core.Instances,Merges two sets of Instances together. The resulting set will have all the attributes of the first set plus all the attributes of the second set. The number of instances in both sets must be the same.,FreeText,,0
5412,weka,weka.core.Instances_goal.json,test(java.lang.String[] argv),test,weka.core.Instances,Method for testing this class.,FreeText,,0
5413,weka,weka.core.Instances_goal.json,main(java.lang.String[] args),main,weka.core.Instances,Main method for this class. The following calls are possible:  <li> weka.core.Instances help<br/> prints a short list of possible commands.</li> <li> weka.core.Instances <filename><br/> prints a summary of a set of instances.</li> <li> weka.core.Instances merge <filename1> <filename2><br/> merges the two datasets (must have same number of instances) and outputs the results on stdout.</li> <li> weka.core.Instances append <filename1> <filename2> <br/> appends the second dataset to the first one (must have same headers) and outputs the results on stdout.</li> <li> weka.core.Instances headers <filename1> <filename2><br/> Compares the headers of the two datasets and prints whether they match or not.</li> <li> weka.core.Instances randomize <seed> <filename><br/> randomizes the dataset with the given seed and outputs the result on stdout.</li>,FreeText,,0
5414,weka,weka.core.Instances_goal.json,getRevision(),getRevision,weka.core.Instances,Returns the revision string.,FreeText,,0
5415,weka,weka.core.Instance_goal.json,attribute(int index),attribute,weka.core.Instance,Returns the attribute with the given index.,FreeText,,0
5416,weka,weka.core.Instance_goal.json,attributeSparse(int indexOfIndex),attributeSparse,weka.core.Instance,Returns the attribute with the given index in the sparse representation. Same as attribute(int) for a DenseInstance.,FreeText,if(receiverObjectID instanceof DenseInstance){methodResultID.equals(receiverObjectClone.attribute(args[0]))},1
5417,weka,weka.core.Instance_goal.json,classAttribute(),classAttribute,weka.core.Instance,Returns class attribute.,FreeText,,0
5418,weka,weka.core.Instance_goal.json,classIndex(),classIndex,weka.core.Instance,Returns the class attribute's index.,FreeText,,0
5419,weka,weka.core.Instance_goal.json,classIsMissing(),classIsMissing,weka.core.Instance,Tests if an instance's class is missing.,FreeText,,0
5420,weka,weka.core.Instance_goal.json,classValue(),classValue,weka.core.Instance,Returns an instance's class value as a floating-point number.,FreeText,,0
5421,weka,weka.core.Instance_goal.json,copy(double[] values),copy,weka.core.Instance,Copies the instance but fills up its values based on the given array of doubles. The copy has access to the same dataset.,FreeText,,0
5422,weka,weka.core.Instance_goal.json,dataset(),dataset,weka.core.Instance,Returns the dataset this instance has access to. (ie. obtains information about attribute types from) Null if the instance doesn't have access to a dataset.,FreeText,,0
5423,weka,weka.core.Instance_goal.json,deleteAttributeAt(int position),deleteAttributeAt,weka.core.Instance,Deletes an attribute at the given position (0 to numAttributes() - 1). Only succeeds if the instance does not have access to any dataset because otherwise inconsistencies could be introduced.,FreeText,,0
5424,weka,weka.core.Instance_goal.json,enumerateAttributes(),enumerateAttributes,weka.core.Instance,Returns an enumeration of all the attributes.,FreeText,,0
5425,weka,weka.core.Instance_goal.json,equalHeaders(weka.core.Instance inst),equalHeaders,weka.core.Instance,Tests if the headers of two instances are equivalent.,FreeText,,0
5426,weka,weka.core.Instance_goal.json,equalHeadersMsg(weka.core.Instance inst),equalHeadersMsg,weka.core.Instance,"Checks if the headers of two instances are equivalent. If not, then returns a message why they differ.",FreeText,,0
5427,weka,weka.core.Instance_goal.json,hasMissingValue(),hasMissingValue,weka.core.Instance,Tests whether an instance has a missing value. Skips the class attribute if set.,FreeText,,0
5428,weka,weka.core.Instance_goal.json,index(int position),index,weka.core.Instance,Returns the index of the attribute stored at the given position in the sparse representation. Identify function for an instance of type DenseInstance.,FreeText,,0
5429,weka,weka.core.Instance_goal.json,insertAttributeAt(int position),insertAttributeAt,weka.core.Instance,Inserts an attribute at the given position (0 to numAttributes()). Only succeeds if the instance does not have access to any dataset because otherwise inconsistencies could be introduced.,FreeText,,0
5430,weka,weka.core.Instance_goal.json,isMissing(int attIndex),isMissing,weka.core.Instance,"Tests if a specific value is ""missing"".",FreeText,,0
5431,weka,weka.core.Instance_goal.json,isMissingSparse(int indexOfIndex),isMissingSparse,weka.core.Instance,"Tests if a specific value is ""missing"" in the sparse representation. Samse as isMissing(int) for a DenseInstance.",FreeText,,0
5432,weka,weka.core.Instance_goal.json,isMissing(weka.core.Attribute att),isMissing,weka.core.Instance,"Tests if a specific value is ""missing"". The given attribute has to belong to a dataset.",FreeText,,0
5433,weka,weka.core.Instance_goal.json,mergeInstance(weka.core.Instance inst),mergeInstance,weka.core.Instance,Merges this instance with the given instance and returns the result. Dataset is set to null. The returned instance is of the same type as this instance.,FreeText,,0
5434,weka,weka.core.Instance_goal.json,numAttributes(),numAttributes,weka.core.Instance,Returns the number of attributes.,FreeText,,0
5435,weka,weka.core.Instance_goal.json,numClasses(),numClasses,weka.core.Instance,Returns the number of class labels.,FreeText,,0
5436,weka,weka.core.Instance_goal.json,numValues(),numValues,weka.core.Instance,Returns the number of values present in a sparse representation.,FreeText,,0
5437,weka,weka.core.Instance_goal.json,replaceMissingValues(double[] array),replaceMissingValues,weka.core.Instance,Replaces all missing values in the instance with the values contained in the given array. A deep copy of the vector of attribute values is performed before the values are replaced.,FreeText,,0
5438,weka,weka.core.Instance_goal.json,setClassMissing(),setClassMissing,weka.core.Instance,"Sets the class value of an instance to be ""missing"". A deep copy of the vector of attribute values is performed before the value is set to be missing.",FreeText,,0
5439,weka,weka.core.Instance_goal.json,setClassValue(double value),setClassValue,weka.core.Instance,Sets the class value of an instance to the given value (internal floating-point format). A deep copy of the vector of attribute values is performed before the value is set.,FreeText,,0
5440,weka,weka.core.Instance_goal.json,setClassValue(java.lang.String value),setClassValue,weka.core.Instance,Sets the class value of an instance to the given value. A deep copy of the vector of attribute values is performed before the value is set.,FreeText,,0
5441,weka,weka.core.Instance_goal.json,setDataset(weka.core.Instances instances),setDataset,weka.core.Instance,"Sets the reference to the dataset. Does not check if the instance is compatible with the dataset. Note: the dataset does not know about this instance. If the structure of the dataset's header gets changed, this instance will not be adjusted automatically.",FreeText,,0
5442,weka,weka.core.Instance_goal.json,setMissing(int attIndex),setMissing,weka.core.Instance,"Sets a specific value to be ""missing"". Performs a deep copy of the vector of attribute values before the value is set to be missing.",FreeText,,0
5443,weka,weka.core.Instance_goal.json,setMissing(weka.core.Attribute att),setMissing,weka.core.Instance,"Sets a specific value to be ""missing"". Performs a deep copy of the vector of attribute values before the value is set to be missing. The given attribute has to belong to a dataset.",FreeText,,0
5444,weka,weka.core.Instance_goal.json,"setValue(int attIndex, double value)",setValue,weka.core.Instance,Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set.,FreeText,,0
5445,weka,weka.core.Instance_goal.json,"setValueSparse(int indexOfIndex, double value)",setValueSparse,weka.core.Instance,"Sets a specific value in the instance to the given value (internal floating-point format), given an index into the sparse representation. Performs a deep copy of the vector of attribute values before the value is set. Same as setValue(int, double) for a DenseInstance.",FreeText,,0
5446,weka,weka.core.Instance_goal.json,"setValue(int attIndex, java.lang.String value)",setValue,weka.core.Instance,Sets a value of a nominal or string attribute to the given value. Performs a deep copy of the vector of attribute values before the value is set.,FreeText,,0
5447,weka,weka.core.Instance_goal.json,"setValue(weka.core.Attribute att, double value)",setValue,weka.core.Instance,"Sets a specific value in the instance to the given value (internal floating-point format). Performs a deep copy of the vector of attribute values before the value is set, so if you are planning on calling setValue many times it may be faster to create a new instance using toDoubleArray. The given attribute has to belong to a dataset.",FreeText,,0
5448,weka,weka.core.Instance_goal.json,"setValue(weka.core.Attribute att, java.lang.String value)",setValue,weka.core.Instance,"Sets a value of an nominal or string attribute to the given value. Performs a deep copy of the vector of attribute values before the value is set, so if you are planning on calling setValue many times it may be faster to create a new instance using toDoubleArray. The given attribute has to belong to a dataset.",FreeText,,0
5449,weka,weka.core.Instance_goal.json,setWeight(double weight),setWeight,weka.core.Instance,Sets the weight of an instance.,FreeText,,0
5450,weka,weka.core.Instance_goal.json,relationalValue(int attIndex),relationalValue,weka.core.Instance,Returns the relational value of a relational attribute.,FreeText,,0
5451,weka,weka.core.Instance_goal.json,relationalValue(weka.core.Attribute att),relationalValue,weka.core.Instance,Returns the relational value of a relational attribute.,FreeText,,0
5452,weka,weka.core.Instance_goal.json,stringValue(int attIndex),stringValue,weka.core.Instance,"Returns the value of a nominal, string, date, or relational attribute for the instance as a string.",FreeText,,0
5453,weka,weka.core.Instance_goal.json,stringValue(weka.core.Attribute att),stringValue,weka.core.Instance,"Returns the value of a nominal, string, date, or relational attribute for the instance as a string.",FreeText,,0
5454,weka,weka.core.Instance_goal.json,toDoubleArray(),toDoubleArray,weka.core.Instance,Returns the values of each attribute as an array of doubles.,FreeText,,0
5455,weka,weka.core.Instance_goal.json,toStringNoWeight(int afterDecimalPoint),toStringNoWeight,weka.core.Instance,"Returns the description of one instance (without weight appended). If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters. This method is used by getRandomNumberGenerator() in Instances.java in order to maintain backwards compatibility with weka 3.4.",FreeText,,0
5456,weka,weka.core.Instance_goal.json,toStringNoWeight(),toStringNoWeight,weka.core.Instance,"Returns the description of one instance (without weight appended). If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters. This method is used by getRandomNumberGenerator() in Instances.java in order to maintain backwards compatibility with weka 3.4.",FreeText,,0
5457,weka,weka.core.Instance_goal.json,toStringMaxDecimalDigits(int afterDecimalPoint),toStringMaxDecimalDigits,weka.core.Instance,"Returns the description of one instance with any numeric values printed at the supplied maximum number of decimal places. If the instance doesn't have access to a dataset, it returns the internal floating-point values. Quotes string values that contain whitespace characters.",FreeText,,0
5458,weka,weka.core.Instance_goal.json,"toString(int attIndex, int afterDecimalPoint)",toString,weka.core.Instance,"Returns the description of one value of the instance as a string. If the instance doesn't have access to a dataset, it returns the internal floating-point value. Quotes string values that contain whitespace characters, or if they are a question mark.",FreeText,,0
5459,weka,weka.core.Instance_goal.json,toString(int attIndex),toString,weka.core.Instance,"Returns the description of one value of the instance as a string. If the instance doesn't have access to a dataset, it returns the internal floating-point value. Quotes string values that contain whitespace characters, or if they are a question mark.",FreeText,,0
5460,weka,weka.core.Instance_goal.json,"toString(weka.core.Attribute att, int afterDecimalPoint)",toString,weka.core.Instance,"Returns the description of one value of the instance as a string. If the instance doesn't have access to a dataset it returns the internal floating-point value. Quotes string values that contain whitespace characters, or if they are a question mark. The given attribute has to belong to a dataset.",FreeText,,0
5461,weka,weka.core.Instance_goal.json,toString(weka.core.Attribute att),toString,weka.core.Instance,"Returns the description of one value of the instance as a string. If the instance doesn't have access to a dataset it returns the internal floating-point value. Quotes string values that contain whitespace characters, or if they are a question mark. The given attribute has to belong to a dataset.",FreeText,,0
5462,weka,weka.core.Instance_goal.json,value(int attIndex),value,weka.core.Instance,Returns an instance's attribute value in internal format.,FreeText,,0
5463,weka,weka.core.Instance_goal.json,valueSparse(int indexOfIndex),valueSparse,weka.core.Instance,"Returns an instance's attribute value in internal format, given an index in the sparse representation. Same as value(int) for a DenseInstance.",FreeText,if(receiverObjectID instanceof DenseInstance){methodResultID==(receiverObjectClone.value(args[0]));},1
5464,weka,weka.core.Instance_goal.json,value(weka.core.Attribute att),value,weka.core.Instance,Returns an instance's attribute value in internal format. The given attribute has to belong to a dataset.,FreeText,,0
5465,weka,weka.core.Instance_goal.json,weight(),weight,weka.core.Instance,Returns the instance's weight.,FreeText,,0
5466,weka,weka.core.matrix.Matrix_goal.json,"weka.core.matrix.Matrix(int m, int n)",weka.core.matrix.Matrix,weka.core.matrix.Matrix,Construct an m-by-n matrix of zeros.,FreeText,,0
5467,weka,weka.core.matrix.Matrix_goal.json,"weka.core.matrix.Matrix(int m, int n, double s)",weka.core.matrix.Matrix,weka.core.matrix.Matrix,Construct an m-by-n constant matrix.,FreeText,,0
5468,weka,weka.core.matrix.Matrix_goal.json,weka.core.matrix.Matrix(double[][] A),weka.core.matrix.Matrix,weka.core.matrix.Matrix,Construct a matrix from a 2-D array.,FreeText,,0
5469,weka,weka.core.matrix.Matrix_goal.json,"weka.core.matrix.Matrix(double[][] A, int m, int n)",weka.core.matrix.Matrix,weka.core.matrix.Matrix,Construct a matrix quickly without checking arguments.,FreeText,,0
5470,weka,weka.core.matrix.Matrix_goal.json,"weka.core.matrix.Matrix(double[] vals, int m)",weka.core.matrix.Matrix,weka.core.matrix.Matrix,Construct a matrix from a one-dimensional packed array,FreeText,,0
5471,weka,weka.core.matrix.Matrix_goal.json,weka.core.matrix.Matrix(java.io.Reader r),weka.core.matrix.Matrix,weka.core.matrix.Matrix,Reads a matrix from a reader. The first line in the file should contain the number of rows and columns. Subsequent lines contain elements of the matrix. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5472,weka,weka.core.matrix.Matrix_goal.json,constructWithCopy(double[][] A),constructWithCopy,weka.core.matrix.Matrix,Construct a matrix from a copy of a 2-D array.,FreeText,,0
5473,weka,weka.core.matrix.Matrix_goal.json,copy(),copy,weka.core.matrix.Matrix,Make a deep copy of a matrix,FreeText,,0
5474,weka,weka.core.matrix.Matrix_goal.json,clone(),clone,weka.core.matrix.Matrix,Clone the Matrix object.,FreeText,,0
5475,weka,weka.core.matrix.Matrix_goal.json,getArray(),getArray,weka.core.matrix.Matrix,Access the internal two-dimensional array.,FreeText,,0
5476,weka,weka.core.matrix.Matrix_goal.json,getArrayCopy(),getArrayCopy,weka.core.matrix.Matrix,Copy the internal two-dimensional array.,FreeText,,0
5477,weka,weka.core.matrix.Matrix_goal.json,getColumnPackedCopy(),getColumnPackedCopy,weka.core.matrix.Matrix,Make a one-dimensional column packed copy of the internal array.,FreeText,,0
5478,weka,weka.core.matrix.Matrix_goal.json,getRowPackedCopy(),getRowPackedCopy,weka.core.matrix.Matrix,Make a one-dimensional row packed copy of the internal array.,FreeText,,0
5479,weka,weka.core.matrix.Matrix_goal.json,getRowDimension(),getRowDimension,weka.core.matrix.Matrix,Get row dimension.,FreeText,,0
5480,weka,weka.core.matrix.Matrix_goal.json,getColumnDimension(),getColumnDimension,weka.core.matrix.Matrix,Get column dimension.,FreeText,,0
5481,weka,weka.core.matrix.Matrix_goal.json,"get(int i, int j)",get,weka.core.matrix.Matrix,Get a single element.,FreeText,,0
5482,weka,weka.core.matrix.Matrix_goal.json,"getMatrix(int i0, int i1, int j0, int j1)",getMatrix,weka.core.matrix.Matrix,Get a submatrix.,FreeText,,0
5483,weka,weka.core.matrix.Matrix_goal.json,"getMatrix(int[] r, int[] c)",getMatrix,weka.core.matrix.Matrix,Get a submatrix.,FreeText,,0
5484,weka,weka.core.matrix.Matrix_goal.json,"getMatrix(int i0, int i1, int[] c)",getMatrix,weka.core.matrix.Matrix,Get a submatrix.,FreeText,,0
5485,weka,weka.core.matrix.Matrix_goal.json,"getMatrix(int[] r, int j0, int j1)",getMatrix,weka.core.matrix.Matrix,Get a submatrix.,FreeText,,0
5486,weka,weka.core.matrix.Matrix_goal.json,"set(int i, int j, double s)",set,weka.core.matrix.Matrix,Set a single element.,FreeText,,0
5487,weka,weka.core.matrix.Matrix_goal.json,"setMatrix(int i0, int i1, int j0, int j1, weka.core.matrix.Matrix X)",setMatrix,weka.core.matrix.Matrix,Set a submatrix.,FreeText,,0
5488,weka,weka.core.matrix.Matrix_goal.json,"setMatrix(int[] r, int[] c, weka.core.matrix.Matrix X)",setMatrix,weka.core.matrix.Matrix,Set a submatrix.,FreeText,,0
5489,weka,weka.core.matrix.Matrix_goal.json,"setMatrix(int[] r, int j0, int j1, weka.core.matrix.Matrix X)",setMatrix,weka.core.matrix.Matrix,Set a submatrix.,FreeText,,0
5490,weka,weka.core.matrix.Matrix_goal.json,"setMatrix(int i0, int i1, int[] c, weka.core.matrix.Matrix X)",setMatrix,weka.core.matrix.Matrix,Set a submatrix.,FreeText,,0
5491,weka,weka.core.matrix.Matrix_goal.json,isSymmetric(),isSymmetric,weka.core.matrix.Matrix,Returns true if the matrix is symmetric. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5492,weka,weka.core.matrix.Matrix_goal.json,isSquare(),isSquare,weka.core.matrix.Matrix,returns whether the matrix is a square matrix or not.,FreeText,,0
5493,weka,weka.core.matrix.Matrix_goal.json,transpose(),transpose,weka.core.matrix.Matrix,Matrix transpose.,FreeText,,0
5494,weka,weka.core.matrix.Matrix_goal.json,norm1(),norm1,weka.core.matrix.Matrix,One norm,FreeText,,0
5495,weka,weka.core.matrix.Matrix_goal.json,norm2(),norm2,weka.core.matrix.Matrix,Two norm,FreeText,,0
5496,weka,weka.core.matrix.Matrix_goal.json,normInf(),normInf,weka.core.matrix.Matrix,Infinity norm,FreeText,,0
5497,weka,weka.core.matrix.Matrix_goal.json,normF(),normF,weka.core.matrix.Matrix,Frobenius norm,FreeText,,0
5498,weka,weka.core.matrix.Matrix_goal.json,uminus(),uminus,weka.core.matrix.Matrix,Unary minus,FreeText,,0
5499,weka,weka.core.matrix.Matrix_goal.json,plus(weka.core.matrix.Matrix B),plus,weka.core.matrix.Matrix,C = A + B,FreeText,,0
5500,weka,weka.core.matrix.Matrix_goal.json,plusEquals(weka.core.matrix.Matrix B),plusEquals,weka.core.matrix.Matrix,A = A + B,FreeText,,0
5501,weka,weka.core.matrix.Matrix_goal.json,minus(weka.core.matrix.Matrix B),minus,weka.core.matrix.Matrix,C = A - B,FreeText,,0
5502,weka,weka.core.matrix.Matrix_goal.json,minusEquals(weka.core.matrix.Matrix B),minusEquals,weka.core.matrix.Matrix,A = A - B,FreeText,,0
5503,weka,weka.core.matrix.Matrix_goal.json,arrayTimes(weka.core.matrix.Matrix B),arrayTimes,weka.core.matrix.Matrix,"Element-by-element multiplication, C = A.*B",FreeText,,0
5504,weka,weka.core.matrix.Matrix_goal.json,arrayTimesEquals(weka.core.matrix.Matrix B),arrayTimesEquals,weka.core.matrix.Matrix,"Element-by-element multiplication in place, A = A.*B",FreeText,,0
5505,weka,weka.core.matrix.Matrix_goal.json,arrayRightDivide(weka.core.matrix.Matrix B),arrayRightDivide,weka.core.matrix.Matrix,"Element-by-element right division, C = A./B",FreeText,,0
5506,weka,weka.core.matrix.Matrix_goal.json,arrayRightDivideEquals(weka.core.matrix.Matrix B),arrayRightDivideEquals,weka.core.matrix.Matrix,"Element-by-element right division in place, A = A./B",FreeText,,0
5507,weka,weka.core.matrix.Matrix_goal.json,arrayLeftDivide(weka.core.matrix.Matrix B),arrayLeftDivide,weka.core.matrix.Matrix,"Element-by-element left division, C = A.\B",FreeText,,0
5508,weka,weka.core.matrix.Matrix_goal.json,arrayLeftDivideEquals(weka.core.matrix.Matrix B),arrayLeftDivideEquals,weka.core.matrix.Matrix,"Element-by-element left division in place, A = A.\B",FreeText,,0
5509,weka,weka.core.matrix.Matrix_goal.json,times(double s),times,weka.core.matrix.Matrix,"Multiply a matrix by a scalar, C = s*A",FreeText,,0
5510,weka,weka.core.matrix.Matrix_goal.json,timesEquals(double s),timesEquals,weka.core.matrix.Matrix,"Multiply a matrix by a scalar in place, A = s*A",FreeText,,0
5511,weka,weka.core.matrix.Matrix_goal.json,times(weka.core.matrix.Matrix B),times,weka.core.matrix.Matrix,"Linear algebraic matrix multiplication, A * B",FreeText,,0
5512,weka,weka.core.matrix.Matrix_goal.json,lu(),lu,weka.core.matrix.Matrix,LU Decomposition,FreeText,,0
5513,weka,weka.core.matrix.Matrix_goal.json,qr(),qr,weka.core.matrix.Matrix,QR Decomposition,FreeText,,0
5514,weka,weka.core.matrix.Matrix_goal.json,chol(),chol,weka.core.matrix.Matrix,Cholesky Decomposition,FreeText,,0
5515,weka,weka.core.matrix.Matrix_goal.json,svd(),svd,weka.core.matrix.Matrix,Singular Value Decomposition,FreeText,,0
5516,weka,weka.core.matrix.Matrix_goal.json,eig(),eig,weka.core.matrix.Matrix,Eigenvalue Decomposition,FreeText,,0
5517,weka,weka.core.matrix.Matrix_goal.json,solve(weka.core.matrix.Matrix B),solve,weka.core.matrix.Matrix,Solve A*X = B,FreeText,,0
5518,weka,weka.core.matrix.Matrix_goal.json,solveTranspose(weka.core.matrix.Matrix B),solveTranspose,weka.core.matrix.Matrix,"Solve X*A = B, which is also A'*X' = B'",FreeText,,0
5519,weka,weka.core.matrix.Matrix_goal.json,inverse(),inverse,weka.core.matrix.Matrix,Matrix inverse or pseudoinverse,FreeText,,0
5520,weka,weka.core.matrix.Matrix_goal.json,sqrt(),sqrt,weka.core.matrix.Matrix,"returns the square root of the matrix, i.e., X from the equation X*X = A. Examples:  <li> <pre> X = 5 -4 1 0 0 -4 6 -4 1 0 1 -4 6 -4 1 0 1 -4 6 -4 0 0 1 -4 5 sqrt(X) = 2 -1 -0 -0 -0 -1 2 -1 0 -0 0 -1 2 -1 0 -0 0 -1 2 -1 -0 -0 -0 -1 2 Matrix m = new Matrix(new double[][]{{5,-4,1,0,0},{-4,6,-4,1,0},{1,-4,6,-4,1},{0,1,-4,6,-4},{0,0,1,-4,5}}); </pre> </li> <li> <pre> X = 7 10 15 22 sqrt(X) = 1.5667 1.7408 2.6112 4.1779 Matrix m = new Matrix(new double[][]{{7, 10},{15, 22}}); </pre> </li>",FreeText,,0
5521,weka,weka.core.matrix.Matrix_goal.json,"regression(weka.core.matrix.Matrix y, double ridge)",regression,weka.core.matrix.Matrix,Performs a (ridged) linear regression. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5522,weka,weka.core.matrix.Matrix_goal.json,"regression(weka.core.matrix.Matrix y, double[] w, double ridge)",regression,weka.core.matrix.Matrix,Performs a weighted (ridged) linear regression. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5523,weka,weka.core.matrix.Matrix_goal.json,det(),det,weka.core.matrix.Matrix,Matrix determinant,FreeText,,0
5524,weka,weka.core.matrix.Matrix_goal.json,rank(),rank,weka.core.matrix.Matrix,Matrix rank,FreeText,,0
5525,weka,weka.core.matrix.Matrix_goal.json,cond(),cond,weka.core.matrix.Matrix,Matrix condition (2 norm),FreeText,,0
5526,weka,weka.core.matrix.Matrix_goal.json,trace(),trace,weka.core.matrix.Matrix,Matrix trace.,FreeText,,0
5527,weka,weka.core.matrix.Matrix_goal.json,"random(int m, int n)",random,weka.core.matrix.Matrix,Generate matrix with random elements,FreeText,,0
5528,weka,weka.core.matrix.Matrix_goal.json,"identity(int m, int n)",identity,weka.core.matrix.Matrix,Generate identity matrix,FreeText,,0
5529,weka,weka.core.matrix.Matrix_goal.json,"print(int w, int d)",print,weka.core.matrix.Matrix,Print the matrix to stdout. Line the elements up in columns with a Fortran-like 'Fw.d' style format.,FreeText,,0
5530,weka,weka.core.matrix.Matrix_goal.json,"print(java.io.PrintWriter output, int w, int d)",print,weka.core.matrix.Matrix,Print the matrix to the output stream. Line the elements up in columns with a Fortran-like 'Fw.d' style format.,FreeText,,0
5531,weka,weka.core.matrix.Matrix_goal.json,"print(java.text.NumberFormat format, int width)",print,weka.core.matrix.Matrix,"Print the matrix to stdout. Line the elements up in columns. Use the format object, and right justify within columns of width characters. Note that is the matrix is to be read back in, you probably will want to use a NumberFormat that is set to US Locale.",FreeText,,0
5532,weka,weka.core.matrix.Matrix_goal.json,"print(java.io.PrintWriter output, java.text.NumberFormat format, int width)",print,weka.core.matrix.Matrix,"Print the matrix to the output stream. Line the elements up in columns. Use the format object, and right justify within columns of width characters. Note that is the matrix is to be read back in, you probably will want to use a NumberFormat that is set to US Locale.",FreeText,,0
5533,weka,weka.core.matrix.Matrix_goal.json,read(java.io.BufferedReader input),read,weka.core.matrix.Matrix,"Read a matrix from a stream. The format is the same the print method, so printed matrices can be read back in (provided they were printed using US Locale). Elements are separated by whitespace, all the elements for each row appear on a single line, the last row is followed by a blank line.  Note: This format differs from the one that can be read via the Matrix(Reader) constructor! For that format, the write(Writer) method is used (from the original weka.core.Matrix class).",FreeText,,0
5534,weka,weka.core.matrix.Matrix_goal.json,write(java.io.Writer w),write,weka.core.matrix.Matrix,Writes out a matrix. The format can be read via the Matrix(Reader) constructor. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5535,weka,weka.core.matrix.Matrix_goal.json,toString(),toString,weka.core.matrix.Matrix,Converts a matrix to a string. (FracPete: taken from old weka.core.Matrix class),FreeText,,0
5536,weka,weka.core.matrix.Matrix_goal.json,toMatlab(),toMatlab,weka.core.matrix.Matrix,"converts the Matrix into a single line Matlab string: matrix is enclosed by parentheses, rows are separated by semicolon and single cells by blanks, e.g., [1 2; 3 4].",FreeText,,0
5537,weka,weka.core.matrix.Matrix_goal.json,parseMatlab(java.lang.String matlab),parseMatlab,weka.core.matrix.Matrix,creates a matrix from the given Matlab string.,FreeText,,0
5538,weka,weka.core.matrix.Matrix_goal.json,getRevision(),getRevision,weka.core.matrix.Matrix,Returns the revision string.,FreeText,,0
5539,weka,weka.core.matrix.Matrix_goal.json,main(java.lang.String[] args),main,weka.core.matrix.Matrix,Main method for testing this class.,FreeText,,0
5540,weka,weka.core.neighboursearch.CoverTree_goal.json,weka.core.neighboursearch.CoverTree(),weka.core.neighboursearch.CoverTree,weka.core.neighboursearch.CoverTree,default constructor.,FreeText,,0
5541,weka,weka.core.neighboursearch.CoverTree_goal.json,globalInfo(),globalInfo,weka.core.neighboursearch.CoverTree,Returns a string describing this nearest neighbour search algorithm.,FreeText,,0
5542,weka,weka.core.neighboursearch.CoverTree_goal.json,getTechnicalInformation(),getTechnicalInformation,weka.core.neighboursearch.CoverTree,"Returns an instance of a TechnicalInformation object, containing detailed information about the technical background of this class, e.g., paper reference or book this class is based on.",FreeText,,0
5543,weka,weka.core.neighboursearch.CoverTree_goal.json,listOptions(),listOptions,weka.core.neighboursearch.CoverTree,Returns an enumeration describing the available options.,FreeText,,0
5544,weka,weka.core.neighboursearch.CoverTree_goal.json,setOptions(java.lang.String[] options),setOptions,weka.core.neighboursearch.CoverTree,Parses a given list of options.   -B <value> Set base of the expansion constant (default = 1.3).  <!-- options-end -->,FreeText,,0
5545,weka,weka.core.neighboursearch.CoverTree_goal.json,getOptions(),getOptions,weka.core.neighboursearch.CoverTree,Gets the current settings of KDtree.,FreeText,,0
5546,weka,weka.core.neighboursearch.CoverTree_goal.json,dist_of_scale(int s),dist_of_scale,weka.core.neighboursearch.CoverTree,Returns the distance/value of a given scale/level. I.e. the value of base^i (e.g. 2^i).,FreeText,,0
5547,weka,weka.core.neighboursearch.CoverTree_goal.json,get_scale(double d),get_scale,weka.core.neighboursearch.CoverTree,"Finds the scale/level of a given value. I.e. the ""i"" in base^i.",FreeText,,0
5548,weka,weka.core.neighboursearch.CoverTree_goal.json,new_node(java.lang.Integer idx),new_node,weka.core.neighboursearch.CoverTree,Creates a new internal node for a given Instance/point p.,FreeText,,0
5549,weka,weka.core.neighboursearch.CoverTree_goal.json,new_leaf(java.lang.Integer idx),new_leaf,weka.core.neighboursearch.CoverTree,Creates a new leaf node for a given Instance/point p.,FreeText,,0
5550,weka,weka.core.neighboursearch.CoverTree_goal.json,max_set(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> v),max_set,weka.core.neighboursearch.CoverTree,Returns the max distance of the reference point p in current node to it's children nodes.,FreeText,,0
5551,weka,weka.core.neighboursearch.CoverTree_goal.json,"split(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> point_set, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> far_set, int max_scale)",split,weka.core.neighboursearch.CoverTree,"Splits a given point_set into near and far based on the given scale/level. All points with distance > base^max_scale would be moved to far set. In other words, all those points that are not covered by the next child ball of a point p (ball made of the same point p but of smaller radius at the next lower level) are removed from the supplied current point_set and put into far_set.",FreeText,,0
5552,weka,weka.core.neighboursearch.CoverTree_goal.json,"dist_split(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> point_set, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> new_point_set, weka.core.neighboursearch.CoverTree$DistanceNode new_point, int max_scale)",dist_split,weka.core.neighboursearch.CoverTree,"Moves all the points in point_set covered by (the ball of) new_point into new_point_set, based on the given scale/level.",FreeText,,0
5553,weka,weka.core.neighboursearch.CoverTree_goal.json,"batch_insert(java.lang.Integer p, int max_scale, int top_scale, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> point_set, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$DistanceNode> consumed_set)",batch_insert,weka.core.neighboursearch.CoverTree,Creates a cover tree recursively using batch insert method.,FreeText,,0
5554,weka,weka.core.neighboursearch.CoverTree_goal.json,buildCoverTree(weka.core.Instances insts),buildCoverTree,weka.core.neighboursearch.CoverTree,Builds the tree on the given set of instances. P.S.: For internal use only. Outside classes should call setInstances().,FreeText,,0
5555,weka,weka.core.neighboursearch.CoverTree_goal.json,"setter(weka.core.neighboursearch.CoverTree$MyHeap heap, double upper_bound, int k)",setter,weka.core.neighboursearch.CoverTree,Initializes a heap with k values of the the given upper_bound.,FreeText,,0
5556,weka,weka.core.neighboursearch.CoverTree_goal.json,"update(weka.core.neighboursearch.CoverTree$MyHeap upper_bound, double new_bound)",update,weka.core.neighboursearch.CoverTree,Replaces the current top/max value in the heap with the new one. The new max value should be <= the old one.,FreeText,,0
5557,weka,weka.core.neighboursearch.CoverTree_goal.json,"getCoverSet(int idx, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> cover_sets)",getCoverSet,weka.core.neighboursearch.CoverTree,"Returns a cover set for a given level/scale. A cover set for a level consists of nodes whose Instances/centres are which are inside the query ball at that level. If no cover set exists for the given level (if it is the first time it is going to be used), than a new one is created.",FreeText,,0
5558,weka,weka.core.neighboursearch.CoverTree_goal.json,"copy_zero_set(weka.core.neighboursearch.CoverTree$CoverTreeNode query_chi, weka.core.neighboursearch.CoverTree$MyHeap new_upper_k, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> zero_set, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> new_zero_set)",copy_zero_set,weka.core.neighboursearch.CoverTree,Copies the contents of one zero set to the other. This is required if we are going to inspect child of some query node (if the queries are given in batch in the form of a cover tree). Only those nodes are copied to the new zero set that are inside the query ball of query_chi. P.S.: A zero set is a set of all leaf nodes that are found to be inside the query ball.,FreeText,,0
5559,weka,weka.core.neighboursearch.CoverTree_goal.json,"copy_cover_sets(weka.core.neighboursearch.CoverTree$CoverTreeNode query_chi, weka.core.neighboursearch.CoverTree$MyHeap new_upper_k, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> cover_sets, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> new_cover_sets, int current_scale, int max_scale)",copy_cover_sets,weka.core.neighboursearch.CoverTree,"Copies the contents of one set of cover sets to the other. It is required if we are going to inspect child of some query node (if the queries are given in batch in the form of a cover tree). For each level, only those nodes are copied to the new set which are inside the query ball of query_chi at that level.",FreeText,,0
5560,weka,weka.core.neighboursearch.CoverTree_goal.json,"print_cover_sets(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> cover_sets, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> zero_set, int current_scale, int max_scale)",print_cover_sets,weka.core.neighboursearch.CoverTree,Prints the given cover sets and zero set.,FreeText,,0
5561,weka,weka.core.neighboursearch.CoverTree_goal.json,"SWAP(int a, int b, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> cover_set)",SWAP,weka.core.neighboursearch.CoverTree,Swap two nodes in a cover set.,FreeText,,0
5562,weka,weka.core.neighboursearch.CoverTree_goal.json,"compare(int p1, int p2, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> cover_set)",compare,weka.core.neighboursearch.CoverTree,Returns the difference of two given nodes distance to the query. It is used in half-sorting a cover set.,FreeText,,0
5563,weka,weka.core.neighboursearch.CoverTree_goal.json,halfsort(weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> cover_set),halfsort,weka.core.neighboursearch.CoverTree,"Half-sorts a cover set, so that nodes nearer to the query are at the front.",FreeText,,0
5564,weka,weka.core.neighboursearch.CoverTree_goal.json,"shell(double parent_query_dist, double child_parent_dist, double upper_bound)",shell,weka.core.neighboursearch.CoverTree,"Function to check if a child node can be inside a query ball, without calculating the child node's distance to the query. This further avoids unnecessary distance calculation.",FreeText,,0
5565,weka,weka.core.neighboursearch.CoverTree_goal.json,"descend(weka.core.neighboursearch.CoverTree$CoverTreeNode query, weka.core.neighboursearch.CoverTree$MyHeap upper_k, int current_scale, int max_scale, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> cover_sets, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> zero_set)",descend,weka.core.neighboursearch.CoverTree,"This functions adds nodes for inspection at the next level during NN search. The internal nodes are added to one of the cover sets (at the level of the child node which is added) and leaf nodes are added to the zero set. An optimization to consider: Make all distance evaluations occur in descend. Instead of passing a cover_set, pass a stack of cover sets. The last element holds d_nodes with your distance. The next lower element holds a d_node with the distance to your query parent, next = query grand parent, etc.. Compute distances in the presence of the tighter upper bound.",FreeText,,0
5566,weka,weka.core.neighboursearch.CoverTree_goal.json,"brute_nearest(int k, weka.core.neighboursearch.CoverTree$CoverTreeNode query, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> zero_set, weka.core.neighboursearch.CoverTree$MyHeap upper_k, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.NearestNeighbourSearch$NeighborList> results)",brute_nearest,weka.core.neighboursearch.CoverTree,"Does a brute force NN search on the nodes in the given zero set. A zero set might have some nodes added to it that were not k-NNs, so need to do a brute-force to pick only the k-NNs (without calculating distances, as each node in the zero set already had its distance calculated to the query, which is stored with the node).",FreeText,,0
5567,weka,weka.core.neighboursearch.CoverTree_goal.json,"internal_batch_nearest_neighbor(int k, weka.core.neighboursearch.CoverTree$CoverTreeNode query_node, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node>> cover_sets, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.CoverTree$d_node> zero_set, int current_scale, int max_scale, weka.core.neighboursearch.CoverTree$MyHeap upper_k, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.NearestNeighbourSearch$NeighborList> results)",internal_batch_nearest_neighbor,weka.core.neighboursearch.CoverTree,Performs a recursive k-NN search for a given batch of queries provided in the form of a cover tree. P.S.: This function should not be called from outside. Outside classes should use kNearestNeighbours() instead.,FreeText,,0
5568,weka,weka.core.neighboursearch.CoverTree_goal.json,"batch_nearest_neighbor(int k, weka.core.neighboursearch.CoverTree$CoverTreeNode tree_root, weka.core.neighboursearch.CoverTree$CoverTreeNode query_root, weka.core.neighboursearch.covertrees.Stack<weka.core.neighboursearch.NearestNeighbourSearch$NeighborList> results)",batch_nearest_neighbor,weka.core.neighboursearch.CoverTree,Performs k-NN search for a batch of queries provided in the form of a cover tree. P.S.: Outside classes should call kNearestNeighbours().,FreeText,,0
5569,weka,weka.core.neighboursearch.CoverTree_goal.json,"findKNearest(weka.core.Instance target, int k)",findKNearest,weka.core.neighboursearch.CoverTree,Performs k-NN serach for a single given query/test Instance.,FreeText,,0
5570,weka,weka.core.neighboursearch.CoverTree_goal.json,"kNearestNeighbours(weka.core.Instance target, int k)",kNearestNeighbours,weka.core.neighboursearch.CoverTree,"Returns k-NNs of a given target instance, from among the previously supplied training instances (supplied through setInstances method) P.S.: May return more than k-NNs if more one instances have the same distance to the target as the kth NN.",FreeText,,0
5571,weka,weka.core.neighboursearch.CoverTree_goal.json,nearestNeighbour(weka.core.Instance target),nearestNeighbour,weka.core.neighboursearch.CoverTree,"Returns the NN instance of a given target instance, from among the previously supplied training instances.",FreeText,,0
5572,weka,weka.core.neighboursearch.CoverTree_goal.json,getDistances(),getDistances,weka.core.neighboursearch.CoverTree,Returns the distances of the (k)-NN(s) found earlier by kNearestNeighbours()/nearestNeighbour().,FreeText,,0
5573,weka,weka.core.neighboursearch.CoverTree_goal.json,checkMissing(weka.core.Instances instances),checkMissing,weka.core.neighboursearch.CoverTree,"Checks if there is any instance with missing values. Throws an exception if there is, as KDTree does not handle missing values.",FreeText,,0
5574,weka,weka.core.neighboursearch.CoverTree_goal.json,setInstances(weka.core.Instances instances),setInstances,weka.core.neighboursearch.CoverTree,Builds the Cover Tree on the given set of instances.,FreeText,,0
5575,weka,weka.core.neighboursearch.CoverTree_goal.json,update(weka.core.Instance ins),update,weka.core.neighboursearch.CoverTree,Adds an instance to the cover tree. P.S.: The current version doesn't allow addition of instances after batch construction.,FreeText,,0
5576,weka,weka.core.neighboursearch.CoverTree_goal.json,addInstanceInfo(weka.core.Instance ins),addInstanceInfo,weka.core.neighboursearch.CoverTree,Adds the given instance info. This implementation updates only the range datastructures of the EuclideanDistance. Nothing is required to be updated in the built Cover Tree.,FreeText,,0
5577,weka,weka.core.neighboursearch.CoverTree_goal.json,setDistanceFunction(weka.core.DistanceFunction df),setDistanceFunction,weka.core.neighboursearch.CoverTree,Sets the distance function to use for nearest neighbour search. Currently only EuclideanDistance is supported.,FreeText,,0
5578,weka,weka.core.neighboursearch.CoverTree_goal.json,baseTipText(),baseTipText,weka.core.neighboursearch.CoverTree,Returns the tip text for this property.,FreeText,,0
5579,weka,weka.core.neighboursearch.CoverTree_goal.json,getBase(),getBase,weka.core.neighboursearch.CoverTree,Returns the base in use for expansion constant.,FreeText,,0
5580,weka,weka.core.neighboursearch.CoverTree_goal.json,setBase(double b),setBase,weka.core.neighboursearch.CoverTree,Sets the base to use for expansion constant. The 2 in 2^i in the paper.,FreeText,,0
5581,weka,weka.core.neighboursearch.CoverTree_goal.json,measureTreeSize(),measureTreeSize,weka.core.neighboursearch.CoverTree,Returns the size of the tree. (number of internal nodes + number of leaves),FreeText,,0
5582,weka,weka.core.neighboursearch.CoverTree_goal.json,measureNumLeaves(),measureNumLeaves,weka.core.neighboursearch.CoverTree,Returns the number of leaves.,FreeText,,0
5583,weka,weka.core.neighboursearch.CoverTree_goal.json,measureMaxDepth(),measureMaxDepth,weka.core.neighboursearch.CoverTree,Returns the depth of the tree.,FreeText,,0
5584,weka,weka.core.neighboursearch.CoverTree_goal.json,enumerateMeasures(),enumerateMeasures,weka.core.neighboursearch.CoverTree,Returns an enumeration of the additional measure names.,FreeText,,0
5585,weka,weka.core.neighboursearch.CoverTree_goal.json,getMeasure(java.lang.String additionalMeasureName),getMeasure,weka.core.neighboursearch.CoverTree,Returns the value of the named measure.,FreeText,,0
5586,weka,weka.core.neighboursearch.CoverTree_goal.json,print(java.lang.String s),print,weka.core.neighboursearch.CoverTree,Prints a string to stdout.,FreeText,,0
5587,weka,weka.core.neighboursearch.CoverTree_goal.json,println(java.lang.String s),println,weka.core.neighboursearch.CoverTree,Prints a string to stdout followed by newline.,FreeText,,0
5588,weka,weka.core.neighboursearch.CoverTree_goal.json,print(java.lang.Object o),print,weka.core.neighboursearch.CoverTree,Prints an object to stdout.,FreeText,,0
5589,weka,weka.core.neighboursearch.CoverTree_goal.json,println(java.lang.Object o),println,weka.core.neighboursearch.CoverTree,Prints an object to stdout followed by newline.,FreeText,,0
5590,weka,weka.core.neighboursearch.CoverTree_goal.json,print_space(int s),print_space,weka.core.neighboursearch.CoverTree,Prints the specified number of spaces.,FreeText,,0
5591,weka,weka.core.neighboursearch.CoverTree_goal.json,"print(int depth, weka.core.neighboursearch.CoverTree$CoverTreeNode top_node)",print,weka.core.neighboursearch.CoverTree,Prints a cover tree starting from the given node.,FreeText,,0
5592,weka,weka.core.neighboursearch.CoverTree_goal.json,getRevision(),getRevision,weka.core.neighboursearch.CoverTree,Returns the revision string.,FreeText,,0
5593,weka,weka.core.neighboursearch.CoverTree_goal.json,main(java.lang.String[] args),main,weka.core.neighboursearch.CoverTree,Method for testing the class from command line.,FreeText,,0
5594,weka,weka.core.pmml.Apply_goal.json,"weka.core.pmml.Apply(org.w3c.dom.Element apply, weka.core.pmml.FieldMetaInfo$Optype opType, java.util.ArrayList<weka.core.Attribute> fieldDefs, weka.core.pmml.TransformationDictionary transDict)",weka.core.pmml.Apply,weka.core.pmml.Apply,Constructor. Reads the function name and argument Expressions for this Apply Expression.,FreeText,,0
5595,weka,weka.core.pmml.Apply_goal.json,setFieldDefs(java.util.ArrayList<weka.core.Attribute> fieldDefs),setFieldDefs,weka.core.pmml.Apply,,FreeText,,0
5596,weka,weka.core.pmml.Apply_goal.json,getResult(double[] incoming),getResult,weka.core.pmml.Apply,"Get the result of evaluating the expression. In the case of a continuous optype, a real number is returned; in the case of a categorical/ordinal optype, the index of the nominal value is returned as a double.",FreeText,,0
5597,weka,weka.core.pmml.Apply_goal.json,getResultCategorical(double[] incoming),getResultCategorical,weka.core.pmml.Apply,Get the result of evaluating the expression for continuous optype. Is the same as calling getResult() when the optype is continuous.,FreeText,,0
5598,weka,weka.core.pmml.Apply_goal.json,getOutputDef(),getOutputDef,weka.core.pmml.Apply,Return the structure of the result of applying this Expression as an Attribute.,FreeText,,0
5599,weka,weka.core.pmml.Apply_goal.json,toString(java.lang.String pad),toString,weka.core.pmml.Apply,,FreeText,,0
5600,weka,weka.core.pmml.Array_goal.json,weka.core.pmml.Array(org.w3c.dom.Element arrayE),weka.core.pmml.Array,weka.core.pmml.Array,Construct an array from an XML node,FreeText,,0
5601,weka,weka.core.pmml.Array_goal.json,"weka.core.pmml.Array(weka.core.pmml.Array$ArrayType type, java.util.List<java.lang.Object> values)",weka.core.pmml.Array,weka.core.pmml.Array,Construct an array from the given values.,FreeText,,0
5602,weka,weka.core.pmml.Array_goal.json,isArray(org.w3c.dom.Element arrayE),isArray,weka.core.pmml.Array,Utility method to check if an XML element is an array.,FreeText,,0
5603,weka,weka.core.pmml.Array_goal.json,"create(java.util.List<java.lang.Object> values, java.util.List<java.lang.Integer> indices)",create,weka.core.pmml.Array,,FreeText,,0
5604,weka,weka.core.pmml.Array_goal.json,create(org.w3c.dom.Element arrayE),create,weka.core.pmml.Array,Static factory method for creating non-sparse or sparse array types as needed.,FreeText,,0
5605,weka,weka.core.pmml.Array_goal.json,initialize(org.w3c.dom.Element arrayE),initialize,weka.core.pmml.Array,,FreeText,,0
5606,weka,weka.core.pmml.Array_goal.json,getType(),getType,weka.core.pmml.Array,Get the type of this array.,FreeText,,0
5607,weka,weka.core.pmml.Array_goal.json,isSparse(),isSparse,weka.core.pmml.Array,Is this array a SparseArray?,FreeText,,0
5608,weka,weka.core.pmml.Array_goal.json,numValues(),numValues,weka.core.pmml.Array,Get the number of values in this array.,FreeText,,0
5609,weka,weka.core.pmml.Array_goal.json,contains(java.lang.String value),contains,weka.core.pmml.Array,Returns true if the array contains this string value.,FreeText,,0
5610,weka,weka.core.pmml.Array_goal.json,contains(int value),contains,weka.core.pmml.Array,Returns true if the array contains this integer value.,FreeText,,0
5611,weka,weka.core.pmml.Array_goal.json,contains(double value),contains,weka.core.pmml.Array,Returns true if the array contains this real value.,FreeText,,0
5612,weka,weka.core.pmml.Array_goal.json,contains(float value),contains,weka.core.pmml.Array,Returns true if the array contains this real value.,FreeText,,0
5613,weka,weka.core.pmml.Array_goal.json,index(int position),index,weka.core.pmml.Array,Returns the index of the value stored at the given position,FreeText,,0
5614,weka,weka.core.pmml.Array_goal.json,value(int index),value,weka.core.pmml.Array,Gets the value at index from the array.,FreeText,,0
5615,weka,weka.core.pmml.Array_goal.json,actualValue(int index),actualValue,weka.core.pmml.Array,Gets the value at index from the array,FreeText,,0
5616,weka,weka.core.pmml.Array_goal.json,valueString(int index),valueString,weka.core.pmml.Array,Gets the value at index from the array as a String. Calls value().,FreeText,,0
5617,weka,weka.core.pmml.Array_goal.json,valueDouble(int index),valueDouble,weka.core.pmml.Array,Gets the value at index from the array as a double.,FreeText,,0
5618,weka,weka.core.pmml.Array_goal.json,valueFloat(int index),valueFloat,weka.core.pmml.Array,Gets the value at index from the array as a float.,FreeText,,0
5619,weka,weka.core.pmml.Array_goal.json,valueInt(int index),valueInt,weka.core.pmml.Array,Gets the value at index from the array as an int.,FreeText,,0
5620,weka,weka.core.pmml.Array_goal.json,valueSparse(int indexOfIndex),valueSparse,weka.core.pmml.Array,Gets the value at indexOfIndex from the array. Does the same as value() if this array is not sparse.,FreeText,,0
5621,weka,weka.core.pmml.Array_goal.json,valueSparseString(int indexOfIndex),valueSparseString,weka.core.pmml.Array,Gets the value at indexOfIndex from the array. Does the same as value() if this array is not sparse.,FreeText,,0
5622,weka,weka.core.pmml.Array_goal.json,valueSparseDouble(int indexOfIndex),valueSparseDouble,weka.core.pmml.Array,Gets the value at indexOfIndex from the array. Does the same as value() if this array is not sparse.,FreeText,,0
5623,weka,weka.core.pmml.Array_goal.json,valueSparseFloat(int indexOfIndex),valueSparseFloat,weka.core.pmml.Array,Gets the value at indexOfIndex from the array. Does the same as value() if this array is not sparse.,FreeText,,0
5624,weka,weka.core.pmml.Array_goal.json,valueSparseInt(int indexOfIndex),valueSparseInt,weka.core.pmml.Array,Gets the value at indexOfIndex from the array. Does the same as value() if this array is not sparse.,FreeText,,0
5625,weka,weka.core.pmml.Array_goal.json,toString(),toString,weka.core.pmml.Array,,FreeText,,0
5626,weka,weka.core.pmml.Expression_goal.json,"weka.core.pmml.Expression(weka.core.pmml.FieldMetaInfo$Optype opType, java.util.ArrayList<weka.core.Attribute> fieldDefs)",weka.core.pmml.Expression,weka.core.pmml.Expression,,FreeText,,0
5627,weka,weka.core.pmml.Expression_goal.json,setFieldDefs(java.util.ArrayList<weka.core.Attribute> fieldDefs),setFieldDefs,weka.core.pmml.Expression,Set the field definitions for this Expression to use,FreeText,,0
5628,weka,weka.core.pmml.Expression_goal.json,getResult(double[] incoming),getResult,weka.core.pmml.Expression,"Get the result of evaluating the expression. In the case of a continuous optype, a real number is returned; in the case of a categorical/ordinal optype, the index of the nominal value is returned as a double.",FreeText,,0
5629,weka,weka.core.pmml.Expression_goal.json,getResultContinuous(double[] incoming),getResultContinuous,weka.core.pmml.Expression,Get the result of evaluating the expression for continuous optype. Is the same as calling getResult() when the optype is continuous.,FreeText,,0
5630,weka,weka.core.pmml.Expression_goal.json,getResultCategorical(double[] incoming),getResultCategorical,weka.core.pmml.Expression,Gets the result of evaluating the expression when the optype is categorical or ordinal as the actual String value.,FreeText,,0
5631,weka,weka.core.pmml.Expression_goal.json,getOutputDef(),getOutputDef,weka.core.pmml.Expression,Return the structure of the result of applying this Expression as an Attribute.,FreeText,,0
5632,weka,weka.core.pmml.Expression_goal.json,"getExpression(org.w3c.dom.Node container, weka.core.pmml.FieldMetaInfo$Optype opType, java.util.ArrayList<weka.core.Attribute> fieldDefs, weka.core.pmml.TransformationDictionary transDict)",getExpression,weka.core.pmml.Expression,Static factory method that returns a subclass of Expression that encapsulates the type of expression contained in the Element supplied. Assumes that there is just one expression contained in the supplied Element.,FreeText,,0
5633,weka,weka.core.pmml.Expression_goal.json,"getExpression(java.lang.String name, org.w3c.dom.Node expression, weka.core.pmml.FieldMetaInfo$Optype opType, java.util.ArrayList<weka.core.Attribute> fieldDefs, weka.core.pmml.TransformationDictionary transDict)",getExpression,weka.core.pmml.Expression,Static factory method that returns a subclass of Expression that encapsulates the type of expression supplied as an argument.,FreeText,,0
5634,weka,weka.core.pmml.Expression_goal.json,getFieldDef(java.lang.String attName),getFieldDef,weka.core.pmml.Expression,Return the named attribute from the list of reference fields.,FreeText,,0
5635,weka,weka.core.pmml.Expression_goal.json,getFieldDefIndex(java.lang.String attName),getFieldDefIndex,weka.core.pmml.Expression,,FreeText,,0
5636,weka,weka.core.pmml.Expression_goal.json,getOptype(),getOptype,weka.core.pmml.Expression,Get the optype of the result of applying this Expression.,FreeText,,0
5637,weka,weka.core.pmml.Expression_goal.json,toString(),toString,weka.core.pmml.Expression,,FreeText,,0
5638,weka,weka.core.pmml.Expression_goal.json,toString(java.lang.String pad),toString,weka.core.pmml.Expression,,FreeText,,0
5639,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,weka.core.xml.XMLSerializationMethodHandler(java.lang.Object owner),weka.core.xml.XMLSerializationMethodHandler,weka.core.xml.XMLSerializationMethodHandler,"initializes the method handling, executes also clear(), which adds initial methods automatically.",FreeText,,0
5640,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,"addMethods(weka.core.xml.MethodHandler handler, java.lang.reflect.Method template, java.lang.reflect.Method[] methods)",addMethods,weka.core.xml.XMLSerializationMethodHandler,adds all methods that are like template to the method list,FreeText,,0
5641,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,addMethods(),addMethods,weka.core.xml.XMLSerializationMethodHandler,"automatically adds all fitting methods to the custom read/write lists, it excludes only the generic ones. it is automatically called in clear() It only work with methods that apply to the naming rule ""read"" + property name (same for ""write"")",FreeText,,0
5642,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,"findReadMethod(java.lang.Object o, java.lang.String name)",findReadMethod,weka.core.xml.XMLSerializationMethodHandler,returns the method with the given name that has the same signature as readFromXML() of the XMLSerialiation class. simplifies the adding of custom methods.,FreeText,,0
5643,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,"findWriteMethod(java.lang.Object o, java.lang.String name)",findWriteMethod,weka.core.xml.XMLSerializationMethodHandler,returns the method with the given name that has the same signature as writeToXML() of the XMLSerialiation class. simplifies the adding of custom methods.,FreeText,,0
5644,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,clear(),clear,weka.core.xml.XMLSerializationMethodHandler,removes all current methods and adds the methods according to the,FreeText,,0
5645,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,read(),read,weka.core.xml.XMLSerializationMethodHandler,returns the handler for read methods,FreeText,,0
5646,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,write(),write,weka.core.xml.XMLSerializationMethodHandler,returns the handler for write methods,FreeText,,0
5647,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,"register(java.lang.Object handler, java.lang.Class<?> cls, java.lang.String name)",register,weka.core.xml.XMLSerializationMethodHandler,"adds read and write methods for the given class, i.e., read&;lt;name> and write<name> (""name"" is prefixed by read and write)",FreeText,,0
5648,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,toString(),toString,weka.core.xml.XMLSerializationMethodHandler,returns the read and write method handlers as string,FreeText,,0
5649,weka,weka.core.xml.XMLSerializationMethodHandler_goal.json,getRevision(),getRevision,weka.core.xml.XMLSerializationMethodHandler,Returns the revision string.,FreeText,,0
5650,weka,weka.experiment.Stats_goal.json,add(double value),add,weka.experiment.Stats,"Adds a value to the observed values It's equivalent to add(value, 1)",FreeText,"receiverObjectClone.add(args[0],1);
receiverObjectClone.equals(receiverObjectID)",1
5651,weka,weka.experiment.Stats_goal.json,"add(double value, double weight)",add,weka.experiment.Stats,Adds a weighted value to the observed values,FreeText,,0
5652,weka,weka.experiment.Stats_goal.json,subtract(double value),subtract,weka.experiment.Stats,"Removes a value to the observed values (no checking is done that the value being removed was actually added). It's equivalent to subtract(value, 1)",FreeText,"receiverObjectClone.subtract(args[0],1);
receiverObjectClone.equals(receiverObjectID)",1
5653,weka,weka.experiment.Stats_goal.json,"subtract(double value, double weight)",subtract,weka.experiment.Stats,Subtracts a weighted value from the observed values,FreeText,,0
5654,weka,weka.experiment.Stats_goal.json,calculateDerived(),calculateDerived,weka.experiment.Stats,Tells the object to calculate any statistics that don't have their values automatically updated during add. Currently updates the mean and standard deviation.,FreeText,,0
5655,weka,weka.experiment.Stats_goal.json,toString(),toString,weka.experiment.Stats,Returns a string summarising the stats so far.,FreeText,,0
5656,weka,weka.experiment.Stats_goal.json,getRevision(),getRevision,weka.experiment.Stats,Returns the revision string.,FreeText,,0
5657,weka,weka.experiment.Stats_goal.json,main(java.lang.String[] args),main,weka.experiment.Stats,"Tests the paired stats object from the command line. reads line from stdin, expecting two values per line.",FreeText,,0
