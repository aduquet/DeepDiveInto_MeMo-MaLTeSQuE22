,library,jsonFileName,signature,name,targetClass,equivalence.comment,equivalence.kind,equivalence.condition
0,elastic,org.elasticsearch.cluster.routing.ShardShuffler_goal.json,shuffle(java.util.List<org.elasticsearch.cluster.routing.ShardRouting> shards),shuffle,org.elasticsearch.cluster.routing.ShardShuffler,"Equivalent to calling shuffle(shards, nextSeed()).",FreeText,"methodResultID.equals(args[0], nextSeed())"
1,elastic,org.elasticsearch.common.geo.GeoUtils_goal.json,"planeDistance(double lat1, double lon1, double lat2, double lon2)",planeDistance,org.elasticsearch.common.geo.GeoUtils,"Return the distance (in meters) between 2 lat,lon geo points using a simple tangential plane this provides a faster alternative to GeoUtils#arcDistance but is inaccurate for distances greater than 4 decimal degrees",FreeText,"methodResultID==(org.elasticsearch.common.geo.GeoUtils.arcDistance(args[0],args[1],args[2],args[3]))"
2,elastic,org.elasticsearch.common.io.UTF8StreamWriter_goal.json,setOutputStream(java.io.OutputStream out),setOutputStream,org.elasticsearch.common.io.UTF8StreamWriter,@deprecated Replaced by #setOutput(OutputStream),FreeText,methodResultID.equals(receiverObjectID.equalssetOutput(args[0]))
3,elastic,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor_goal.json,getTasks(),getTasks,org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor,Returns a stream of all pending tasks. This is similar to #getQueue() but will expose the originally submitted Runnable instances rather than potentially wrapped ones.,FreeText,methodResultID.equals(receiverObjectClone.getQueue())
4,elastic,org.elasticsearch.common.util.concurrent.ThreadContext_goal.json,newStoredContext(boolean preserveResponseHeaders),newStoredContext,org.elasticsearch.common.util.concurrent.ThreadContext,Just like #stashContext() but no default context is set.,FreeText,methodResultID.equals(receiverObjectClone.stashContext())
5,elastic,org.elasticsearch.rest.RestRequest_goal.json,hasContentOrSourceParam(),hasContentOrSourceParam,org.elasticsearch.rest.RestRequest,Does this request have content or a source parameter? Use this instead of #hasContent() if this RestHandler treats the source parameter like the body content.,FreeText,methodResultID==(receiverObjectClone.hasContent())
6,elastic,org.elasticsearch.rest.RestRequest_goal.json,header(java.lang.String name),header,org.elasticsearch.rest.RestRequest,Get the value of the header or null if not found. This method only retrieves the first header value if multiple values are sent. Use of #getAllHeaderValues(String) should be preferred,FreeText,methodResultID.equals(receiverObjectClone.getAllHeaderValues(args[0]))
7,elastic,org.elasticsearch.rest.RestUtils_goal.json,decodeComponent(java.lang.String s),decodeComponent,org.elasticsearch.rest.RestUtils,"Decodes a bit of an URL encoded by a browser.  This is equivalent to calling #decodeComponent(String, Charset) with the UTF-8 charset (recommended to comply with RFC 3986, Section 2).",FreeText,"methodResultID.equals(receiverObjectID.decodeComponent(args[0], java.nio.charset.Charset.UTF_8))"
8,elastic,org.elasticsearch.rest.RestUtils_goal.json,"decodeComponent(java.lang.String s, java.nio.charset.Charset charset)",decodeComponent,org.elasticsearch.rest.RestUtils,"Decodes a bit of an URL encoded by a browser.  The string is expected to be encoded as per RFC 3986, Section 2. This is the encoding used by JavaScript functions encodeURI and encodeURIComponent, but not escape. For example in this encoding, &eacute; (in Unicode U+00E9 or in UTF-8 0xC3 0xA9}) is encoded as {@code %C3%A9 or %c3%a9.  This is essentially equivalent to calling java.net.URLDecoder URLDecoder.java.net.URLDecoder#decode(String, String) except that it's over 2x faster and generates less garbage for the GC. Actually this function doesn't allocate any memory if there's nothing to decode, the argument itself is returned.",FreeText,"methodResultID.equals(java.net.URLDecoder#decode(args[0], ""StandardCharsets.UTF_8""))"
9,elastic,org.elasticsearch.search.aggregations.bucket.BucketsAggregator_goal.json,"collectExistingBucket(org.elasticsearch.search.aggregations.LeafBucketCollector subCollector, int doc, long bucketOrd)",collectExistingBucket,org.elasticsearch.search.aggregations.bucket.BucketsAggregator,"Same as #collectBucket(LeafBucketCollector, int, long), but doesn't check if the docCounts needs to be re-sized.",FreeText,"receiverObjectClone.collectBucket(args[0],args[1],args[2]); receiverObjectClone.equals(receiverObjectID)"
10,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"prefix(java.lang.String prefix, org.elasticsearch.search.suggest.completion.FuzzyOptions fuzzyOptions)",prefix,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #prefix(String) with full fuzzy options see FuzzyOptions.Builder,FreeText,methodResultID.equals(receiverObjectClone.prefix(args[0]))
11,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"regex(java.lang.String regex, org.elasticsearch.search.suggest.completion.RegexOptions regexOptions)",regex,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #regex(String) with full regular expression options see RegexOptions.Builder,FreeText,methodResultID.equals(receiverObjectClone.regex(args[0]))
12,elastic,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder_goal.json,"prefix(java.lang.String prefix, org.elasticsearch.common.unit.Fuzziness fuzziness)",prefix,org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder,Same as #prefix(String) with fuzziness of fuzziness,FreeText,methodResultID.equals(receiverObjectClone.prefix(args[0]))
13,elastic,org.elasticsearch.search.suggest.SuggestionBuilder_goal.json,text(java.lang.String text),text,org.elasticsearch.search.suggest.SuggestionBuilder,"Same as in SuggestBuilder#setGlobalText(String), but in the suggestion scope.",FreeText,methodResultID.equals(setGlobalText(args[0]))
