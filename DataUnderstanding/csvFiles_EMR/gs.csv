,library,jsonFileName,signature,name,targetClass,equivalence.comment,equivalence.kind,equivalence.condition
0,gs,org.graphstream.graph.Edge_goal.json,getNode1(),getNode1,org.graphstream.graph.Edge,"Second node of the edge.  This is equivalent to the #getTargetNode() method, but may be clearer in the source code if the graph you are using is not directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getNode1(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode0() @see #getTargetNode()",FreeText,methodResultID.equals(receiverObjectClone.getTargetNode())
1,gs,org.graphstream.graph.Edge_goal.json,getSourceNode(),getSourceNode,org.graphstream.graph.Edge,"Start node.  When the edge is directed this is the source node, in this case you can get the opposite node using #getTargetNode(). This is equivalent to the #getNode0() method but may be clearer in the source code if the graph you are using is directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getSourceNode(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode0() @see #getTargetNode()",FreeText,methodResultID.equals(receiverObjectClone.getNode0())
2,gs,org.graphstream.graph.Edge_goal.json,getTargetNode(),getTargetNode,org.graphstream.graph.Edge,"End node.  When the edge is directed this is the target node, in this case you can get the opposite node using #getSourceNode(). This is equivalent to the #getNode1() method but may be clearer in the source code if the graph you are using is directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getTargetNode(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode1() @see #getSourceNode()",FreeText,methodResultID.equals(receiverObjectClone.getNode1())
3,gs,org.graphstream.graph.Edge_goal.json,getNode0(),getNode0,org.graphstream.graph.Edge,"First node of the edge.  This is equivalent to the #getSourceNode() method, but may be clearer in the source code if the graph you are using is not directed.   This method is implicitly generic and return something which extends Node. The return type is the one of the left part of the assignment. For example, in the following call : <pre> ExtendedNode n = edge.getNode0(); </pre> the method will return an ExtendedNode. If no left part exists, method will just return a Node.  @see #getNode1() @see #getSourceNode()",FreeText,methodResultID.equals(receiverObjectClone.getSourceNode())
4,gs,org.graphstream.graph.Element_goal.json,"setAttribute(java.lang.String attribute, java.lang.Object... values)",setAttribute,org.graphstream.graph.Element,"Like #addAttribute(String, Object...) but for consistency.",FreeText,"receiverObjectClone.addAttribute(args[0],args[1]); receiverObjectClone.equals(receiverObjectID)"
5,gs,org.graphstream.graph.Element_goal.json,"getFirstAttributeOf(java.lang.Class<T> clazz, java.lang.String... keys)",getFirstAttributeOf,org.graphstream.graph.Element,"Like #getAttribute(String, Class), but returns the first existing attribute in a list of keys, instead of only one key. The key list order matters.",FreeText,"methodResultID.equals(receiverObjectClone.getAttribute(args[1][0], args[0]))"
6,gs,org.graphstream.graph.Element_goal.json,getFirstAttributeOf(java.lang.String... keys),getFirstAttributeOf,org.graphstream.graph.Element,"Like #getAttribute(String), but returns the first existing attribute in a list of keys, instead of only one key. The key list order matters.",FreeText,methodResultID.equals(receiverObjectClone.getAttribute(args[0][0]))
7,gs,org.graphstream.graph.Element_goal.json,"changeAttribute(java.lang.String attribute, java.lang.Object... values)",changeAttribute,org.graphstream.graph.Element,"Like #addAttribute(String, Object...) but for consistency.",FreeText,"receiverObjectClone.addAttribute(args[0],args[1]); receiverObjectClone.equals(receiverObjectID)"
8,gs,org.graphstream.graph.Path_goal.json,getNodeCount(),getNodeCount,org.graphstream.graph.Path,Returns the size of the path. Identical to #size().,FreeText,methodResultID==(receiverObjectClone.size())
9,gs,org.graphstream.graph.Path_goal.json,"push(org.graphstream.graph.Node from, org.graphstream.graph.Edge edge)",push,org.graphstream.graph.Path,A synonym for #add(Edge).,FreeText,receiverObjectClone.add(args[1]);receiverObjectClone.equals(receiverObjectID)
10,gs,org.graphstream.graph.Path_goal.json,push(org.graphstream.graph.Edge edge),push,org.graphstream.graph.Path,A synonym for #add(Edge).,FreeText,receiverObjectClone.add(args[0]);receiverObjectClone.equals(receiverObjectID)
